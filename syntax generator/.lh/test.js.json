{
    "sourceFile": "test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1755949675579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1755949675579,
            "name": "Commit-0",
            "content": "\r\n//for tooltip to look good\r\nvar tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\nvar tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n  return new bootstrap.Tooltip(tooltipTriggerEl)\r\n  \r\n})\r\n\r\n\r\n\r\nlet editor;\r\n\r\nrequire.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\nrequire([\"vs/editor/editor.main\"], function () {\r\n  editor = monaco.editor.create(document.getElementsByClassName(\"generatedCode\")[0], {\r\n    value: `{\r\n    \"type\": \"strategy_order\",\r\n    \"exit_on_opposite\": false,\r\n    \"is_tgt\": false,\r\n    \"is_sl\": false,\r\n    \"is_trail_set\": false,\r\n    \"position_size\": \"{{strategy.position_size}}\",\r\n    \"transaction_type\": \"{{strategy.order.action}}\"\r\n}`,\r\n    language: \"json\",\r\n    theme: \"vs-dark\",\r\n    automaticLayout: true,\r\n    suggestOnTriggerCharacters: false,\r\n    quickSuggestions: false,\r\n    wordBasedSuggestions: false,\r\n    parameterHints: { enabled: false },\r\n    inlineSuggest: { enabled: false },\r\n    fontSize: 18,\r\n    minimap: { enabled: false },\r\n    wordWrap: \"on\",\r\n    scrollbar: {\r\n      vertical: \"hidden\",\r\n      horizontal: \"hidden\",\r\n      handleMouseWheel: false\r\n    },\r\n  });\r\n});\r\n\r\nfunction resetIfHidden(container) {\r\n  if (container && container.style.display === \"none\") {\r\n    container.querySelectorAll(\"input, select, textarea\").forEach(el => {\r\n      if (el.type === \"checkbox\" || el.type === \"radio\") {\r\n        el.checked = false;\r\n      } else {\r\n        el.value = \"\";\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\nlet strategyOrder = document.getElementById(\"strategyOrder\");\r\nlet limitOrder = document.getElementById(\"limitOrder\");\r\nlet slOrder = document.getElementById(\"slOrder\");\r\nlet sqaureOf = document.getElementById(\"sqaureOf\");\r\nlet cancelOrder = document.getElementById(\"cancelOrder\");\r\n\r\nfunction setActive(obj) {\r\n  document.querySelectorAll('.syntax_generator').forEach(button => button.classList.remove('active'));\r\n  obj.classList.add('active');\r\n}\r\n\r\nfunction showStrategyOrder() {\r\n  document.getElementsByClassName(\"card1\")[0].style.display = \"block\";\r\n\r\n}\r\n\r\nlet dropdown1 = document.getElementById(\"dropdown1\");\r\n\r\ndropdown1.addEventListener(\"change\", () => {\r\n\r\n  document.getElementById(\"EQOption2\").innerHTML=\"\";\r\n  document.getElementById(\"showNumberBox\").innerHTML=\"\";\r\n  document.getElementById(\"quantityEnterShow\").style.display=\"none\";\r\n  \r\n  \r\n\r\n  if (dropdown1.value == \"EQ\") {\r\n    document.getElementsByClassName(\"textPlusDropdown3\")[0].style.display = \"none\";\r\n    document.getElementsByClassName(\"textPlusDropdown2\")[0].style.display = \"block\";\r\n      document.getElementById(\"search\").value=\"\";\r\n      document.getElementById(\"EQOption2\").style.display=\"block\"\r\n      document.getElementsByClassName(\"timeline\")[0].style.display=\"none\";\r\n      document.getElementById(\"search\").value=\"\";\r\n      document.getElementById(\"rolloverSwitch\").style.display=\"none\"\r\n    document.getElementById(\"targetDropdownCtn\").style.display=\"none\";\r\n    document.getElementById(\"target_value\").style.display=\"none\";\r\n    document.getElementById(\"stoploss_value\").style.display=\"none\";\r\n    document.getElementById(\"stoplossDropdownCtn\").style.display=\"none\";\r\n    document.getElementById(\"trailingDropdownCtn\").style.display=\"none\";\r\n    document.getElementById(\"trailingtrigger_value\").style.display=\"none\";\r\n    document.getElementById(\"trailinggap_value\").style.display=\"none\";\r\n    document.getElementById(\"trailingpoint_value\").style.display=\"none\";\r\n    document.getElementById(\"rollover_value\").style.display=\"none\";\r\n    document.getElementById(\"rollover_time\").style.display=\"none\";\r\n    document.getElementById(\"productType\").style.display=\"none\";\r\n    document.getElementById(\"productOnselect\").style.display=\"none\";\r\n    document.getElementsByClassName(\"expiryGap\")[0].style.display=\"none\";\r\n    equitySelection();\r\n\r\n\r\n  }\r\n\r\n  else if (dropdown1.value == \"FUT\") {\r\n    document.getElementsByClassName(\"textPlusDropdown3\")[0].style.display = \"none\";\r\n    document.getElementsByClassName(\"textPlusDropdown2\")[0].style.display = \"block\";\r\n      document.getElementById(\"search\").value=\"\";\r\n    document.getElementById(\"EQOption2\").style.display=\"none\"\r\n    document.getElementById(\"targetDropdownCtn\").style.display=\"none\";\r\n    document.getElementById(\"target_value\").style.display=\"none\";\r\n    document.getElementById(\"stoploss_value\").style.display=\"none\";\r\n    document.getElementById(\"stoplossDropdownCtn\").style.display=\"none\";\r\n    document.getElementById(\"trailingDropdownCtn\").style.display=\"none\";\r\n    document.getElementById(\"trailingtrigger_value\").style.display=\"none\";\r\n    document.getElementById(\"trailinggap_value\").style.display=\"none\";\r\n    document.getElementById(\"trailingpoint_value\").style.display=\"none\";\r\n    document.getElementById(\"productType\").style.display=\"none\";\r\n    document.getElementById(\"productOnselect\").style.display=\"none\";\r\n    document.getElementsByClassName(\"expiryGap\")[0].style.display=\"none\";\r\n    futureSelection();\r\n\r\n\r\n  }\r\n\r\n  else if (dropdown1.value == \"CE\") {\r\n    document.getElementsByClassName(\"textPlusDropdown2\")[0].style.display = \"none\";\r\n    document.getElementsByClassName(\"textPlusDropdown3\")[0].style.display = \"block\";\r\n    document.getElementById(\"targetDropdownCtn\").style.display=\"none\";\r\n    document.getElementById(\"target_value\").style.display=\"none\";\r\n    document.getElementById(\"stoploss_value\").style.display=\"none\";\r\n    document.getElementById(\"stoplossDropdownCtn\").style.display=\"none\";\r\n    document.getElementById(\"trailingDropdownCtn\").style.display=\"none\";\r\n    document.getElementById(\"trailingtrigger_value\").style.display=\"none\";\r\n    document.getElementById(\"trailinggap_value\").style.display=\"none\";\r\n    document.getElementById(\"trailingpoint_value\").style.display=\"none\";\r\n\r\n    CEselection();\r\n\r\n  }\r\n  else if (dropdown1.value == \"PE\") {\r\n    document.getElementsByClassName(\"textPlusDropdown2\")[0].style.display = \"none\";\r\n    document.getElementsByClassName(\"textPlusDropdown3\")[0].style.display = \"block\";\r\n    document.getElementById(\"targetDropdownCtn\").style.display=\"none\"\r\n    document.getElementById(\"stoplossDropdownCtn\").style.display=\"none\";\r\n    document.getElementById(\"target_value\").style.display=\"none\";\r\n    document.getElementById(\"stoploss_value\").style.display=\"none\";\r\n    document.getElementById(\"trailingDropdownCtn\").style.display=\"none\";\r\n    document.getElementById(\"trailingtrigger_value\").style.display=\"none\";\r\n    document.getElementById(\"trailinggap_value\").style.display=\"none\";\r\n    document.getElementById(\"trailingpoint_value\").style.display=\"none\";\r\n\r\n  }\r\n\r\n})\r\n\r\n\r\n//adding to script type code snippet \r\ndropdown1.addEventListener(\"change\", function () {\r\n  const selectedValue = this.value;\r\n  if (!selectedValue || !editor) return;\r\n\r\n  let currentValue = editor.getValue();\r\n  //chaecks by regex that value already exist then just replace and on change removes any value afterwards\r\n if (/\"script_type\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n    currentValue = currentValue.replace(\r\n      /(\"script_type\"\\s*:\\s*\").*?(\")/,\r\n      `$1${selectedValue}$2`\r\n    );\r\n    //makes isrollover false\r\n    currentValue = currentValue.replace(/(\"is_rollover\"\\s*:\\s*false).*[\\s\\S]*?\\}/, `$1\\n}`);\r\n\r\n\r\n  } else {\r\n  // Remove the last closing brace\r\n  currentValue = currentValue.trim();\r\n  if (currentValue.endsWith(\"}\")) {\r\n    currentValue = currentValue.slice(0, -1);\r\n  }\r\n\r\n  // Add new line with snippet and closing brace\r\n   currentValue += \",\\n  \\t\" + `\"script_type\":\"${selectedValue}\"` + \",\\n \\t\" + `\"is_rollover\":${false}  \\n }` ;\r\n  }\r\n  editor.setValue(currentValue);\r\n\r\n});\r\n\r\n\r\n//adding code to snipper when script type is CE or PE\r\nlet dropdown2 = document.getElementById(\"atmdropdown\");\r\ndropdown2.addEventListener(\"change\", function () {\r\n  document.getElementsByClassName(\"textPlusDropdown2\")[0].style.display = \"block\";\r\n  let selectedValue = this.value;\r\n  if (!selectedValue || !editor) return;\r\n\r\n  let currentValue = editor.getValue();\r\n  if (/\"Option_Selection\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n    currentValue = currentValue.replace(\r\n      /(\"Option_Selection\"\\s*:\\s*\").*?(\")/,\r\n      `$1${selectedValue}$2`\r\n    );\r\n  } else {\r\n\r\n    // Remove the last closing brace\r\n    currentValue = currentValue.trim();\r\n    if (currentValue.endsWith(\"}\")) {\r\n      currentValue = currentValue.slice(0, -1);\r\n    }\r\n\r\n    // Add new line with snippet and closing brace\r\n     currentValue += \",\\n  \\t\" + `\"Option_Selection\":\"${selectedValue}\"  \\n }`;\r\n  }\r\n  editor.setValue(currentValue);\r\n});\r\n\r\n\r\nfunction equitySelection(){\r\nconst token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTU5MzA2MjUsImV4cCI6MTc1NjAxNzAyNX0.MF1IqBX8BjCOyOZ-_yoQNxOOhp8uoM2ZSrj7ITOa_SU\";\r\nconst searchInput = document.getElementById('search');\r\nconst dropdown = document.getElementById('dropdown');\r\ndocument.addEventListener('click', (e) => {\r\n  // Check if click is outside the input and dropdown\r\n  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n    dropdown.style.display = 'none';\r\n  }\r\n});\r\n\r\n// Simple debounce function\r\nfunction debounce(func, delay) {\r\n  let timer;\r\n  return function (...args) {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => func.apply(this, args), delay);\r\n  };\r\n}\r\n\r\n// Fetch API suggestions\r\nasync function fetchSuggestions(query) {\r\n  if (!query) {\r\n    dropdown.style.display = 'none';\r\n    dropdown.innerHTML = '';\r\n    return;\r\n  }\r\n\r\n  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n  try {\r\n    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": token\r\n      },\r\n      body: JSON.stringify({\r\n        script: query,\r\n        type: scriptType\r\n      })\r\n    });\r\n\r\n    const data = await res.json();\r\n    const suggestions = data.data;\r\n\r\n\r\n    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n\r\n  }\r\n  catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n// Add click selection\r\ndropdown?.addEventListener('click', e => {\r\n  if (e.target.tagName === 'LI') {\r\n    let selectedText = e.target.textContent;\r\n    searchInput.value = selectedText;\r\n    // remove everything after \"(\"\r\n    if (selectedText.includes(\"(\")) {\r\n      selectedText = selectedText.split(\"(\")[0];\r\n    }\r\n\r\n    dropdown.style.display = 'none';\r\n\r\n  //document.getElementById(\"EQOption2\")?.innerHTML=\"\";\r\n  document.getElementById(\"showNumberBox\").innerHTML=\"\";\r\n  let currentValue = editor.getValue().trim();\r\n\r\n// If \"script\" already exists → replace only\r\n    if (/\"script\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n      currentValue = currentValue.replace(\r\n        /(\"script\"\\s*:\\s*\").*?(\")[\\s\\S]*$/,\r\n        `$1${selectedText}$2\\n}`\r\n      );\r\n\r\n\r\n    } \r\n\r\n    else {\r\n      // Remove last } if present\r\n      if (currentValue.endsWith(\"}\")) {\r\n        currentValue = currentValue.slice(0, -1).trim();\r\n      }\r\n\r\n      // Remove trailing comma if any\r\n      currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n\r\n      // Append cleanly\r\n      currentValue = currentValue + `,\\n\\t\"script\":\"${selectedText}\"\\n}`;\r\n    }\r\n\r\n    editor.setValue(currentValue);\r\n  }\r\n});\r\n\r\nsearchInput.addEventListener('input', debounce(e => {\r\n  fetchSuggestions(e.target.value);\r\n}, 300));\r\n\r\n\r\n//this is script option the one with dropdown and API onchange of that shows one dropdown\r\nsearchInput.addEventListener(\"change\",function(){\r\n  let showDropdown=document.getElementById(\"EQOption2\");\r\n  showDropdown.innerHTML =\r\n  `<b >Product <span class=\"text-muted\">*</span></b>\r\n  <div class=\"mt-2\">\r\n  <select id=\"productDropdown\">\r\n  <option selected hidden disabled>Select Product</option>\r\n    <option value=\"INTRADAY\">INTRADAY</option>\r\n    <Option value=\"CARRYFORWARD\">CARRYFORWARD</Option>\r\n    <Option value=\"DELIVERY\">DELIVERY</Option>\r\n    <Option value=\"MARGIN\">MARGIN</Option>\r\n  </select>\r\n  </div>`\r\n  \r\n  //if productdropdown changes value this will run\r\n    let productDropdown=document.getElementById(\"productDropdown\");\r\n    productDropdown?.addEventListener(\"change\",function(){\r\n          \r\n          let selectedValue = this.value;\r\n          if (!selectedValue || !editor) return;\r\n\r\n          //this will add or replace in code snippet\r\n          let currentValue = editor.getValue();\r\n          if (/\"product\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n            currentValue = currentValue.replace(\r\n              /(\"product\"\\s*:\\s*\").*?(\")/,\r\n              `$1${selectedValue}$2`\r\n            );\r\n          } \r\n            else {\r\n            // Remove the last closing brace\r\n            currentValue = currentValue.trim();\r\n            if (currentValue.endsWith(\"}\")) {\r\n              currentValue = currentValue.slice(0, -1);\r\n            }\r\n            currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n\r\n                // Append new script value\r\n                currentValue+= `,\\n \\t\"product\":\"${selectedValue}\" \\n}`;\r\n            }\r\n           \r\n            editor.setValue(currentValue);\r\n       \r\n            let numberbox = document.getElementById(\"showNumberBox\");\r\n            numberbox.innerHTML = `\r\n              <b class=\"mt-\">Quantity <span class=\"text-muted\">*</span></b>\r\n              <div>\r\n                <input type=\"number\" id=\"quantityBox\" class=\"mt-2\" placeholder=\"Enter Quantity\">\r\n                <small id=\"quantityError\" style=\"color:red; display:none;\">Quantity must be greater than 0.</small>\r\n              </div>`;\r\n\r\n                let quantityNumber = document.getElementById(\"quantityBox\");\r\n                let quantityError = document.getElementById(\"quantityError\");\r\n\r\n                \r\n          quantityNumber?.addEventListener(\"input\", function () {\r\n\r\n            \r\n            //for error message\r\n            if (quantityNumber.value <= 0) {\r\n                quantityError.style.display = \"block\"; // just show error\r\n                document.getElementById(\"quantityEnterShow\").style.display=\"none\";\r\n                document.getElementById(\"target_value\").style.display=\"none\";\r\n                document.getElementById(\"stoploss_value\").style.display=\"none\";\r\n                document.getElementById(\"stoplossDropdownCtn\").style.display=\"none\";\r\n                document.getElementById(\"targetDropdownCtn\").style.display=\"none\";\r\n                document.getElementById(\"trailingDropdownCtn\").style.display=\"none\";\r\n                document.getElementById(\"trailingtrigger_value\").style.display=\"none\";\r\n                document.getElementById(\"trailingpoint_value\").style.display=\"none\";\r\n                document.getElementById(\"trailinggap_value\").style.display=\"none\";\r\n                \r\n              } \r\n              \r\n              //if valid value then show switches and switch's functioning\r\n              else {\r\n                quantityError.style.display = \"none\";  // hide error\r\n                document.getElementById(\"quantityEnterShow\").style.display=\"block\"\r\n\r\n               \r\n                        //buy sell button color switch\r\n                          let buy=document.getElementsByClassName(\"buyBtn\")[0];\r\n                          let sell=document.getElementsByClassName(\"sellBtn\")[0];\r\n                        \r\n                          buy.addEventListener(\"click\",function(){\r\n                            buy.style.background=\"green\";\r\n                            sell.style.background=\"\";\r\n                            let code = editor.getValue();\r\n                              if (/\"transaction_type\"\\s*:\\s*\".*?\"/.test(code)) {\r\n                                  code = code.replace(/(\"transaction_type\"\\s*:\\s*\").*?\"/, `$1BUY\"`);\r\n                              } else {\r\n                                  // If not present, you can optionally add it\r\n                                  code = code.replace(/(\\{)/, `$1\\n  \"transaction_type\":\"BUY\",`);\r\n                              }\r\n                              editor.setValue(code);\r\n                          });\r\n\r\n                          sell.addEventListener(\"click\",function(){\r\n                            \r\n                            sell.style.background=\"red\";\r\n                            buy.style.background=\"\";\r\n                            let code = editor.getValue();\r\n                              if (/\"transaction_type\"\\s*:\\s*\".*?\"/.test(code)) {\r\n                                  code = code.replace(/(\"transaction_type\"\\s*:\\s*\").*?\"/, `$1SELL\"`);\r\n                              } else {\r\n                                  // If not present, you can optionally add it\r\n                                  code = code.replace(/(\\{)/, `$1\\n  \"transaction_type\":\"SELL\",`);\r\n                              }\r\n                              editor.setValue(code);\r\n                          })\r\n              \r\n\r\n              //exit on purpose switch toggle\r\n                const exitOnPurposeSwitch = document.getElementById('flexSwitchCheck1');\r\n                \r\n                function toggleExitOnOpposite() {\r\n                    let code = editor.getValue();\r\n                    code = code.replace(\r\n                        /(\"exit_on_opposite\"\\s*:\\s*)(true|false)/,\r\n                        `$1${exitOnPurposeSwitch.checked}`\r\n                    );\r\n                    \r\n                    editor.setValue(code);\r\n                }\r\n                exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n\r\n                //target switch toggle\r\n                const   targetSwitch = document.getElementById('flexSwitchCheck2');\r\n                function toggleIsTgt() {\r\n                    let code = editor.getValue();\r\n\r\n                    // Toggle exit_on_opposite in the JSON string\r\n                     code = code.replace(\r\n                        /(\"is_tgt\"\\s*:\\s*)(true|false)/,\r\n                        `$1${targetSwitch.checked}`\r\n                    );\r\n                    editor.setValue(code);\r\n                    if(!(targetSwitch.checked)){\r\n                      document.getElementById(\"targetdropdown\").selectedIndex=0;\r\n                      document.getElementById(\"target_value\").value=\"\";\r\n                    }\r\n                }\r\n\r\n                //onchange toggles the switch, call the function and also shows dropdown\r\n                let dropdownofTarget=document.getElementById(\"targetDropdownCtn\");\r\n                \r\n                function targerSwitchReflect(){\r\n                  dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n                  if(dropdownofTarget.style.display===\"block\"){\r\n                            document.getElementById(\"targetdropdown\")?.addEventListener(\"change\",function(){\r\n\r\n                                         let selectedtargetValue = this.value;\r\n                                            if (!selectedtargetValue || !editor) return;\r\n\r\n                                            //this will add or replace in code snippet\r\n                                            let currentValue = editor.getValue();\r\n                                            if (/\"tgt_type\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n                                              currentValue = currentValue.replace(\r\n                                                /(\"tgt_type\"\\s*:\\s*\").*?(\")/,\r\n                                                `$1${selectedtargetValue}$2`\r\n                                              );\r\n                                            } \r\n                                              else {\r\n                                              // Remove the last closing brace\r\n                                              currentValue = currentValue.trim();\r\n                                              if (currentValue.endsWith(\"}\")) {\r\n                                                currentValue = currentValue.slice(0, -1);\r\n                                              }\r\n                                              currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n\r\n                                                  // Append new script value\r\n                                                  currentValue+= `,\\n \\t\"tgt_type\":\"${selectedtargetValue}\" \\n}`;\r\n                                              }\r\n                                            \r\n                                            editor.setValue(currentValue);\r\n\r\n\r\n                              document.getElementById(\"target_value\").style.display=\"block\";\r\n\r\n                                          var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n                                           tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n                                            return new bootstrap.Tooltip(tooltipTriggerEl)\r\n                                            \r\n                                          })\r\n\r\n                                           let targetValBox = document.getElementById(\"targetValbox\");\r\n                                           let targetErr = document.getElementById(\"targetError\");\r\n\r\n\r\n                                            targetValBox?.addEventListener(\"input\", function () {\r\n                                              let targetValue=this.value.trim();\r\n                                              let currentValue=editor.getValue().trim();\r\n\r\n                                                if(targetValue<0){\r\n                                                  targetErr.style.display=\"block\";\r\n                                                }\r\n                                                else{\r\n                                                  targetErr.style.display=\"none\";\r\n                                                }\r\n\r\n                                              if(!targetValue){\r\n                                                currentValue = currentValue.replace(/,?\\s*\"tgt_value\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n                                                // Also clean up trailing commas before }\r\n                                                currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n                                                editor.setValue(currentValue);\r\n                                                return;\r\n                                              }\r\n\r\n                                              if(/\\\"tgt_value\\\"\\s*:\\s*\\d*/.test(currentValue)){\r\n                                                currentValue = currentValue.replace(\r\n                                                /(\"tgt_value\"\\s*:\\s*)\\d*/,\r\n                                                `$1${targetValue}`\r\n                                                ); \r\n                                              }\r\n                                              else{\r\n                                                if (currentValue.endsWith(\"}\")) {\r\n                                                        currentValue = currentValue.slice(0, -1).trim();\r\n                                                      }\r\n                                                      currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n                                                      currentValue = currentValue + `,\\n\\t\"tgt_value\":${targetValue}\\n}`;\r\n                                                }\r\n\r\n                                              editor.setValue(currentValue);\r\n\r\n                                                \r\n                                            });\r\n      \r\n                                 \r\n                                      });\r\n                  }\r\n                  else{\r\n                    document.getElementById(\"target_value\").style.display=\"none\";\r\n                    let code = editor.getValue();\r\n                        code = code.replace(/,\\s*\"tgt_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n                        code = code.replace(/,\\s*\"tgt_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n                        editor.setValue(code);\r\n                  }\r\n\r\n                };\r\n                targetSwitch.addEventListener(\"change\",function(){\r\n                  toggleIsTgt();\r\n                  targerSwitchReflect();\r\n                })\r\n\r\n\r\n\r\n                //check the val true or false and shows box according\r\n\r\n                //stoploss switch\r\n                const   stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n                function toggleIsSl() {\r\n                    let code = editor.getValue();\r\n\r\n                    // Toggle stoploss in the JSON string\r\n                              code = code.replace(\r\n                              /(\"is_sl\"\\s*:\\s*)(true|false)/,\r\n                              `$1${stoplossSwitch.checked}`\r\n                              );\r\n                          editor.setValue(code);\r\n                          if(!(stoplossSwitch.checked)){\r\n                            document.getElementById(\"stoplossdropdown\").selectedIndex=0;\r\n                            document.getElementById(\"stoploss_value\").value=\"\";\r\n                          }\r\n\r\n                }\r\n\r\n                //onchange toggles the switch, call the function and also shows dropdown\r\n                function stoplossSwitchReflect(){\r\n                  let dropdownOfStoploss=document.getElementById(\"stoplossDropdownCtn\");\r\n                  dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n\r\n                  if(dropdownOfStoploss.style.display===\"block\"){\r\n                            document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\",function(){\r\n\r\n                                         let selectedstoplossValue = this.value;\r\n                                            if (!selectedstoplossValue || !editor) return;\r\n\r\n                                            //this will add or replace in code snippet\r\n                                            let currentValue = editor.getValue();\r\n                                            if (/\"sl_type\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n                                              currentValue = currentValue.replace(\r\n                                                /(\"sl_type\"\\s*:\\s*\").*?(\")/,\r\n                                                `$1${selectedstoplossValue}$2`\r\n                                              );\r\n                                            } \r\n                                              else {\r\n                                              // Remove the last closing brace\r\n                                              currentValue = currentValue.trim();\r\n                                              if (currentValue.endsWith(\"}\")) {\r\n                                                currentValue = currentValue.slice(0, -1);\r\n                                              }\r\n                                              currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n\r\n                                                  // Append new script value\r\n                                                  currentValue+= `,\\n \\t\"sl_type\":\"${selectedstoplossValue}\" \\n}`;\r\n                                              }\r\n                                            \r\n                                            editor.setValue(currentValue);\r\n\r\n\r\n                              document.getElementById(\"stoploss_value\").style.display=\"block\";\r\n                                           let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n                                           let stoplossErr = document.getElementById(\"stoplossError\");\r\n\r\n\r\n                                            stoplossValbox?.addEventListener(\"input\", function () {\r\n                                              let stoplossValue=this.value.trim();\r\n                                              let currentValue=editor.getValue().trim();\r\n\r\n                                                if(stoplossValue<0){\r\n                                                  stoplossErr.style.display=\"block\";\r\n                                                }\r\n                                                else{\r\n                                                  stoplossErr.style.display=\"none\";\r\n                                                }\r\n\r\n                                              if(!stoplossValue){\r\n                                                currentValue = currentValue.replace(/,?\\s*\"sl_value\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n                                                // Also clean up trailing commas before }\r\n                                                currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n                                                editor.setValue(currentValue);\r\n                                                return;\r\n                                              }\r\n\r\n                                              if(/\\\"sl_value\\\"\\s*:\\s*\\d*/.test(currentValue)){\r\n                                                currentValue = currentValue.replace(\r\n                                                /(\"sl_value\"\\s*:\\s*)\\d*/,\r\n                                                `$1${stoplossValue}`\r\n                                                ); \r\n                                              }\r\n                                              else{\r\n                                                if (currentValue.endsWith(\"}\")) {\r\n                                                        currentValue = currentValue.slice(0, -1).trim();\r\n                                                      }\r\n                                                      currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n                                                      currentValue = currentValue + `,\\n\\t\"sl_value\":${stoplossValue}\\n}`;\r\n                                                }\r\n\r\n                                              editor.setValue(currentValue);\r\n\r\n                                                \r\n                                            });\r\n      \r\n                                 \r\n                                      });\r\n                  }\r\n                  else{\r\n                    document.getElementById(\"stoploss_value\").style.display=\"none\";\r\n                    let code = editor.getValue();\r\n\r\n                        code = code.replace(/,\\s*\"sl_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n                        code = code.replace(/,\\s*\"sl_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n                        editor.setValue(code);\r\n                  }\r\n\r\n\r\n                };\r\n\r\n                stoplossSwitch.addEventListener(\"change\",function(){\r\n                  toggleIsSl();\r\n                  stoplossSwitchReflect();\r\n                  \r\n                })\r\n\r\n                //trailing switch\r\n                const   trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n                \r\n                function toggleIsTrailSet() {\r\n                    let code = editor.getValue();\r\n                      code = code.replace(\r\n                      /(\"is_trail_set\"\\s*:\\s*)(true|false)/,\r\n                      `$1${trailingSwitch.checked}`\r\n                      );\r\n\r\n                    editor.setValue(code);\r\n\r\n                    if(!(trailingSwitch.checked)){\r\n                    document.getElementById(\"trailingdropdown\").selectedIndex=0;\r\n                    document.getElementById(\"trailingtrigger_value\").value=\"\";\r\n                    document.getElementById(\"trailinggap_value\").value=\"\";\r\n                    document.getElementById(\"trailingpoint_value\").value=\"\";\r\n                    }\r\n                }\r\n                function trailswitchReflect(){\r\n                  let dropdownOfTrailing=document.getElementById(\"trailingDropdownCtn\");\r\n                  dropdownOfTrailing.style.display = trailingSwitch.checked ? 'block' : 'none';\r\n\r\n                      if(dropdownOfTrailing.style.display===\"block\"){\r\n\r\n                                document.getElementById(\"trailingdropdown\")?.addEventListener(\"change\",function(){\r\n\r\n                                            let selectedtrailingValue = this.value;\r\n                                                if (!selectedtrailingValue || !editor) return;\r\n\r\n                                                //this will add or replace in code snippet\r\n                                                let currentValue = editor.getValue();\r\n                                                if (/\"trail_type\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n                                                  currentValue = currentValue.replace(\r\n                                                    /(\"trail_type\"\\s*:\\s*\").*?(\")/,\r\n                                                    `$1${selectedtrailingValue}$2`\r\n                                                  );\r\n                                                } \r\n                                                  else {\r\n                                                  // Remove the last closing brace\r\n                                                  currentValue = currentValue.trim();\r\n                                                  if (currentValue.endsWith(\"}\")) {\r\n                                                    currentValue = currentValue.slice(0, -1);\r\n                                                  }\r\n                                                  currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n\r\n                                                      // Append new script value\r\n                                                      currentValue+= `,\\n \\t\"trail_type\":\"${selectedtrailingValue}\" \\n}`;\r\n                                                  }\r\n                                                \r\n                                                editor.setValue(currentValue);\r\n\r\n\r\n                                              document.getElementById(\"trailingtrigger_value\").style.display=\"block\";\r\n                                              let  trailtriggerValbox= document.getElementById(\"trailtriggerValbox\");\r\n                                              let trailTriggerError = document.getElementById(\"trailTriggerError\");\r\n\r\n\r\n                                                trailtriggerValbox?.addEventListener(\"input\", function () {\r\n\r\n                                                  let trailTriggerValue=this.value.trim();\r\n                                                  let currentValue=editor.getValue().trim();\r\n\r\n                                                    if(trailTriggerValue<0){\r\n                                                      trailTriggerError.style.display=\"block\";\r\n\r\n                                                      document.getElementById(\"trailinggap_value\").style.display=\"none\";\r\n\r\n                                                    }\r\n                                                    else{\r\n                                                      trailTriggerError.style.display=\"none\";\r\n                                                      document.getElementById(\"trailinggap_value\").style.display=\"block\";\r\n                                                    }\r\n\r\n                                                  if(!trailTriggerValue){\r\n                                                    currentValue = currentValue.replace(/,?\\s*\"trail_trigger\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n                                                    // Also clean up trailing commas before }\r\n                                                    currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n                                                    editor.setValue(currentValue);\r\n                                                    return;\r\n                                                  }\r\n\r\n                                                  if(/\\\"trail_trigger\\\"\\s*:\\s*\\d*/.test(currentValue)){\r\n                                                    currentValue = currentValue.replace(\r\n                                                    /(\"trail_trigger\"\\s*:\\s*)\\d*/,\r\n                                                    `$1${trailTriggerValue}`\r\n                                                    ); \r\n                                                  }\r\n                                                  else{\r\n                                                    if (currentValue.endsWith(\"}\")) {\r\n                                                            currentValue = currentValue.slice(0, -1).trim();\r\n                                                          }\r\n                                                          currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n                                                          currentValue = currentValue + `,\\n\\t\"trail_trigger\":${trailTriggerValue}\\n}`;\r\n                                                    }\r\n\r\n                                                  editor.setValue(currentValue);\r\n                                                 \r\n                                                 \r\n                                                  //trail gap number box show\r\n                                                document.getElementById(\"trailGapValbox\")?.addEventListener(\"input\",function(){\r\n                                                  let trailgapError=document.getElementById(\"trailGapError\");\r\n                                                  let trailGapValue=this.value.trim();\r\n                                                  let currentValue=editor.getValue().trim();\r\n\r\n                                                    if(trailGapValue<0){\r\n                                                      trailgapError.style.display=\"block\";\r\n                                                      document.getElementById(\"trailingpoint_value\").style.display=\"none\";\r\n\r\n                                                    }\r\n                                                    else{\r\n                                                      trailgapError.style.display=\"none\";\r\n                                                      document.getElementById(\"trailingpoint_value\").style.display=\"block\";\r\n                                                    }\r\n\r\n                                                  if(!trailGapValue){\r\n                                                    currentValue = currentValue.replace(/,?\\s*\"trail_gap\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n                                                    // Also clean up trailing commas before }\r\n                                                    currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n                                                    editor.setValue(currentValue);\r\n                                                    return;\r\n                                                  }\r\n\r\n                                                  if(/\\\"trail_gap\\\"\\s*:\\s*\\d*/.test(currentValue)){\r\n                                                    currentValue = currentValue.replace(\r\n                                                    /(\"trail_gap\"\\s*:\\s*)\\d*/,\r\n                                                    `$1${trailGapValue}`\r\n                                                    ); \r\n                                                  }\r\n                                                  else{\r\n                                                    if (currentValue.endsWith(\"}\")) {\r\n                                                            currentValue = currentValue.slice(0, -1).trim();\r\n                                                          }\r\n                                                          currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n                                                          currentValue = currentValue + `,\\n\\t\"trail_gap\":${trailGapValue}\\n}`;\r\n                                                    }\r\n\r\n                                                  editor.setValue(currentValue);\r\n                                                  })   \r\n\r\n                                                  //document.getElementById(\"trailingpoint_value\").style.display=\"block\"\r\n\r\n                                                  //trail point input box\r\n                                                  document.getElementById(\"trailPointValbox\")?.addEventListener(\"input\",function(){\r\n                                                  let trailpointError=document.getElementById(\"trailPointError\");\r\n                                                  let trailpointVal=this.value.trim();\r\n                                                  let currentValue=editor.getValue().trim();\r\n\r\n                                                    if(trailpointVal<0){\r\n                                                      trailpointError.style.display=\"block\";\r\n\r\n                                                    }\r\n                                                    else{\r\n                                                      trailpointError.style.display=\"none\";\r\n                                                      }\r\n\r\n                                                  if(!trailpointVal){\r\n                                                    currentValue = currentValue.replace(/,?\\s*\"trail_point\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n                                                    // Also clean up trailing commas before }\r\n                                                    currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n                                                    editor.setValue(currentValue);\r\n                                                    return;\r\n                                                  }\r\n\r\n                                                  if(/\\\"trail_point\\\"\\s*:\\s*\\d*/.test(currentValue)){\r\n                                                    currentValue = currentValue.replace(\r\n                                                    /(\"trail_point\"\\s*:\\s*)\\d*/,\r\n                                                    `$1${trailpointVal}`\r\n                                                    ); \r\n                                                  }\r\n                                                  else{\r\n                                                    if (currentValue.endsWith(\"}\")) {\r\n                                                            currentValue = currentValue.slice(0, -1).trim();\r\n                                                          }\r\n                                                          currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n                                                          currentValue = currentValue + `,\\n\\t\"trail_point\":${trailpointVal}\\n}`;\r\n                                                    }\r\n\r\n                                                  editor.setValue(currentValue);\r\n                                                  })   \r\n\r\n\r\n                                                  \r\n                                                });\r\n                                        });\r\n\r\n\r\n                      }\r\n                      else{\r\n                        document.getElementById(\"trailingtrigger_value\").style.display=\"none\";\r\n                        document.getElementById(\"trailinggap_value\").style.display=\"none\";\r\n                        document.getElementById(\"trailingpoint_value\").style.display=\"none\";\r\n                        let code = editor.getValue();\r\n\r\n                            code = code.replace(/,\\s*\"trail_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n                            code = code.replace(/,\\s*\"trail_trigger\"\\s*:\\s*[^,}]+/g, \"\");\r\n                            code = code.replace(/,\\s*\"trail_gap\"\\s*:\\s*[^,}]+/g, \"\");\r\n                            code = code.replace(/,\\s*\"trail_point\"\\s*:\\s*[^,}]+/g, \"\");\r\n\r\n                            editor.setValue(code);\r\n                      }\r\n                }\r\n                trailingSwitch.addEventListener(\"change\",function(){\r\n                  toggleIsTrailSet();\r\n                  trailswitchReflect();\r\n                })\r\n              } \r\n\r\n              //it adds and modifyes in code snippet\r\n            let quantityValue = this.value.trim();\r\n            let currentValue = editor.getValue().trim();\r\n            if (!quantityValue) {\r\n              currentValue = currentValue.replace(/,?\\s*\"quantity\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n              // Also clean up trailing commas before }\r\n              currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n              editor.setValue(currentValue);\r\n              return;\r\n            }\r\n\r\n            if (/\\\"quantity\\\"\\s*:\\s*\\d*/.test(currentValue)) {\r\n              // If already present => replace value only\r\n              currentValue = currentValue.replace(\r\n                /(\"quantity\"\\s*:\\s*)\\d*/,\r\n                `$1${quantityValue}`\r\n              );\r\n            } \r\n            else {\r\n              // If not present then add it at the end\r\n              if (currentValue.endsWith(\"}\")) {\r\n                currentValue = currentValue.slice(0, -1).trim();\r\n              }\r\n              currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n              currentValue = currentValue + `,\\n\\t\"quantity\":${quantityValue}\\n}`;\r\n            }\r\n\r\n           \r\n\r\n            document.querySelectorAll('input[type=\"checkbox\"]').forEach(toggleBtn => {\r\n              toggleBtn.checked = false; // turn off all switches\r\n              document.getElementById(\"targetdropdown\").selectedIndex=0;\r\n              document.getElementById(\"stoplossdropdown\").selectedIndex=0;\r\n              document.getElementById(\"trailingdropdown\").selectedIndex=0;\r\n              document.getElementById(\"target_value\").value=\"\";\r\n              document.getElementById(\"stoploss_value\").value=\"\";\r\n              document.getElementById(\"trailingtrigger_value\").value=\"\";\r\n              document.getElementById(\"trailinggap_value\").value=\"\";\r\n              document.getElementById(\"trailingpoint_value\").value=\"\";\r\n               targerSwitchReflect();\r\n               stoplossSwitchReflect();\r\n               trailswitchReflect();\r\n\r\n            });\r\n\r\n            document.getElementById(\"targetdropdown\").style.selectedValue=\"Select Target Type\";\r\n              \r\n\r\n            // Remove related switch values from JSON\r\n            currentValue = currentValue\r\n              .replace(/\"exit_on_opposite\"\\s*:\\s*(true|false),?/g, '\"exit_on_opposite\": false,')\r\n              .replace(/\"is_tgt\"\\s*:\\s*(true|false),?/g, '\"is_tgt\": false,')\r\n              .replace(/\"tgt_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n              .replace(/\"tgt_value\"\\s*:\\s*\\d*/, \"\")\r\n              .replace(/\"is_sl\"\\s*:\\s*(true|false),?/g, '\"is_sl\": false,')\r\n              .replace(/\"sl_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n              .replace(/\"sl_value\"\\s*:\\s*\\d*/, \"\")\r\n              .replace(/\"is_trail_set\"\\s*:\\s*(true|false),?/g, '\"is_trail_set\": false,')\r\n              .replace(/\"trail_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n              .replace(/\"trail_trigger\"\\s*:\\s*\\d*/, \"\")\r\n              .replace(/\"trail_gap\"\\s*:\\s*\\d*/, \"\")\r\n              .replace(/\"trail_point\"\\s*:\\s*\\d*/, \"\");\r\n                        \r\n               editor.setValue(currentValue);\r\n               \r\n          });\r\n    });\r\n});\r\n}\r\n\r\n\r\n\r\nfunction futureSelection(){\r\n  console.log(\"future\")\r\n  const token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTU5MzA2MjUsImV4cCI6MTc1NjAxNzAyNX0.MF1IqBX8BjCOyOZ-_yoQNxOOhp8uoM2ZSrj7ITOa_SU\";\r\n  const searchInput = document.getElementById('search');\r\n  const dropdown = document.getElementById('dropdown');\r\n  document.addEventListener('click', (e) => {\r\n    // Check if click is outside the input and dropdown\r\n    if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n      dropdown.style.display = 'none';\r\n    }\r\n  });\r\n\r\n  // Simple debounce function\r\n  function debounce(func, delay) {\r\n    let timer;\r\n    return function (...args) {\r\n      clearTimeout(timer);\r\n      timer = setTimeout(() => func.apply(this, args), delay);\r\n    };\r\n  }\r\n\r\n  // Fetch API suggestions\r\n  async function fetchSuggestions(query) {\r\n    if (!query) {\r\n      dropdown.style.display = 'none';\r\n      dropdown.innerHTML = '';\r\n      return;\r\n    }\r\n\r\n    let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n    try {\r\n      const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": token\r\n        },\r\n        body: JSON.stringify({\r\n          script: query,\r\n          type: scriptType\r\n        })\r\n      });\r\n\r\n      const data = await res.json();\r\n      const suggestions = data.data;\r\n\r\n\r\n      dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n      dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  // Add click selection\r\n  dropdown?.addEventListener('click', e => {\r\n    if (e.target.tagName === 'LI') {\r\n      let selectedText = e.target.textContent;\r\n      searchInput.value = selectedText;\r\n      // remove everything after \"(\"\r\n      if (selectedText.includes(\"(\")) {\r\n        selectedText = selectedText.split(\"(\")[0];\r\n      }\r\n\r\n      dropdown.style.display = 'none';\r\n\r\n    //document.getElementById(\"EQOption2\")?.innerHTML=\"\";\r\n    //document.getElementById(\"showNumberBox\").innerHTML=\"\";\r\n    let currentValue = editor.getValue().trim();\r\n\r\n// If \"script\" already exists → replace only\r\n    if (/\"script\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n      currentValue = currentValue.replace(\r\n        /(\"script\"\\s*:\\s*\").*?(\")[\\s\\S]*$/,\r\n        `$1${selectedText}$2\\n}`\r\n      );\r\n\r\n\r\n    } \r\n\r\n    else {\r\n      // Remove last } if present\r\n      if (currentValue.endsWith(\"}\")) {\r\n        currentValue = currentValue.slice(0, -1).trim();\r\n      }\r\n\r\n      // Remove trailing comma if any\r\n      currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n\r\n      // Append cleanly\r\n      currentValue = currentValue + `,\\n\\t\"script\":\"${selectedText}\"\\n}`;\r\n    }\r\n\r\n    editor.setValue(currentValue);\r\n  }\r\n});\r\n\r\nsearchInput.addEventListener('input', debounce(e => {\r\n  fetchSuggestions(e.target.value);\r\n}, 300));\r\n\r\n\r\n               \r\n    let scriptBox=document.getElementById(\"search\");\r\n    scriptBox.addEventListener(\"change\",function(){\r\n      document.getElementsByClassName(\"expiryGap\")[0].style.display=\"block\";\r\n      document.getElementById(\"futExpiryGap\").addEventListener(\"input\",function(){\r\n        document.getElementsByClassName(\"timeline\")[0].style.display=\"block\";\r\n      document.getElementById(\"timelineDropdown\").value = \"monthly\";\r\n      document.getElementById(\"timelineDropdown\").disabled = true;\r\n\r\n\r\n      let futExpiryGapError=document.getElementById(\"futExpiryGapError\");\r\n      let futExpiryGapVal=this.value.trim();\r\n      let currentValue=editor.getValue().trim();\r\n\r\n      if(futExpiryGapVal<0){\r\n      futExpiryGapError.style.display=\"block\";\r\n\r\n      }\r\n    else{\r\n     futExpiryGapError.style.display=\"none\";\r\n    }\r\n\r\n    if(!futExpiryGapVal){\r\n    currentValue = currentValue.replace(/,?\\s*\"expiry_gap\"\\s*:\\s*\\d+\\s*/g, \"\")\r\n                                .replace(/\"expiry_time\"\\s*:\\s*\".*?\",?/g, \"\");\r\n       // Also clean up trailing commas before }\r\n     currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n     editor.setValue(currentValue);\r\n     document.getElementsByClassName(\"timeline\")[0].style.display=\"none\";\r\n      return;\r\n    }\r\n    if(/\\\"expiry_gap\\\"\\s*:\\s*\\d*/.test(currentValue)){\r\n    currentValue = currentValue.replace(\r\n     /(\"expiry_gap\"\\s*:\\s*)\\d*/,\r\n    `$1${futExpiryGapVal}`\r\n     ); \r\n    }\r\n    else{\r\n    if (currentValue.endsWith(\"}\")) {\r\n    currentValue = currentValue.slice(0, -1).trim();\r\n    }\r\n    currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n    currentValue = currentValue + `,\\n\\t\"expiry_gap\":${futExpiryGapVal}` +\",\\n \\t\" + `\"expiry_time\":\"monthly\"  \\n }`;\r\n    }\r\n\r\n    editor.setValue(currentValue);\r\n    });   \r\n\r\n\r\n      document.getElementById(\"productType\").style.display=\"block\"\r\n\r\n       document.getElementById(\"productType\").innerHTML= `<b >Product <span class=\"text-muted\">*</span></b>\r\n        <div class=\"mt-2\">\r\n        <select id=\"futproductDropdown\">\r\n        <option selected hidden disabled>Select Product</option>\r\n          <option value=\"INTRADAY\">INTRADAY</option>\r\n          <Option value=\"CARRYFORWARD\">CARRYFORWARD</Option>\r\n          <Option value=\"DELIVERY\">DELIVERY</Option>\r\n          <Option value=\"MARGIN\">MARGIN</Option>\r\n        </select>\r\n        </div>`\r\n\r\n\r\n        let futproductDropdown=document.getElementById(\"futproductDropdown\");\r\n        futproductDropdown?.addEventListener(\"change\",function(){\r\n          console.log(\"okkk\")\r\n\r\n          let selectedValue = this.value;\r\n          console.log(selectedValue)\r\n          if (!selectedValue || !editor) return;\r\n\r\n          //this will add or replace in code snippet\r\n          let currentValue = editor.getValue();\r\n          console.log(currentValue)\r\n          if (/\"product\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n            currentValue = currentValue.replace(\r\n              /(\"product\"\\s*:\\s*\").*?(\")/,\r\n              `$1${selectedValue}$2`\r\n            );\r\n          } \r\n            else {\r\n            // Remove the last closing brace\r\n            currentValue = currentValue.trim();\r\n            if (currentValue.endsWith(\"}\")) {\r\n              currentValue = currentValue.slice(0, -1);\r\n            }\r\n            currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n\r\n                // Append new script value\r\n                currentValue+= `,\\n \\t\"product\":\"${selectedValue}\" \\n}`;\r\n            }\r\n           \r\n            editor.setValue(currentValue);\r\n       \r\n            let numberbox = document.getElementById(\"productOnselect\");\r\n            numberbox.style.display=\"block\";\r\n            console.log(\"okkk\")\r\n            numberbox.innerHTML = `\r\n              <b class=\"mt-\">Quantity <span class=\"text-muted\">*</span></b>\r\n              <div>\r\n                <input type=\"number\" id=\"quantityBox\" class=\"mt-2\" placeholder=\"Enter Quantity\">\r\n                <small id=\"quantityError\" style=\"color:red; display:none;\">Quantity must be greater than 0.</small>\r\n              </div>`;\r\n\r\n                let quantityNumber = document.getElementById(\"quantityBox\");\r\n                let quantityError = document.getElementById(\"quantityError\");\r\n\r\n            quantityNumber?.addEventListener(\"input\", function () {\r\n            //for error message\r\n            if (quantityNumber.value <= 0) {\r\n                quantityError.style.display = \"block\"; // just show error\r\n                document.getElementById(\"quantityEnterShow\").style.display=\"none\";\r\n                document.getElementById(\"target_value\").style.display=\"none\";\r\n                document.getElementById(\"stoploss_value\").style.display=\"none\";\r\n                document.getElementById(\"stoplossDropdownCtn\").style.display=\"none\";\r\n                document.getElementById(\"targetDropdownCtn\").style.display=\"none\";\r\n                document.getElementById(\"trailingDropdownCtn\").style.display=\"none\";\r\n                document.getElementById(\"trailingtrigger_value\").style.display=\"none\";\r\n                document.getElementById(\"trailingpoint_value\").style.display=\"none\";\r\n                document.getElementById(\"trailinggap_value\").style.display=\"none\";\r\n                \r\n              } \r\n              \r\n              //if valid value then show switches and switch's functioning\r\n              else {\r\n                quantityError.style.display = \"none\";  // hide error\r\n\r\n              let quantityDiv= document.getElementById(\"quantityEnterShow\");\r\n              document.getElementById(\"futbuySell\").appendChild(quantityDiv);\r\n              document.getElementById(\"quantityEnterShow\").style.display=\"block\";\r\n              document.getElementById(\"rolloverSwitch\").style.display=\"block\";\r\n\r\n                \r\n                        //buy sell button color switch\r\n                          let buy=document.getElementsByClassName(\"buyBtn\")[0];\r\n                          let sell=document.getElementsByClassName(\"sellBtn\")[0];\r\n                        \r\n                          buy.addEventListener(\"click\",function(){\r\n                            buy.style.background=\"green\";\r\n                            sell.style.background=\"\";\r\n                            let code = editor.getValue();\r\n                              if (/\"transaction_type\"\\s*:\\s*\".*?\"/.test(code)) {\r\n                                  code = code.replace(/(\"transaction_type\"\\s*:\\s*\").*?\"/, `$1BUY\"`);\r\n                              } else {\r\n                                  // If not present, you can optionally add it\r\n                                  code = code.replace(/(\\{)/, `$1\\n  \"transaction_type\":\"BUY\",`);\r\n                              }\r\n                              editor.setValue(code);\r\n                          });\r\n\r\n                          sell.addEventListener(\"click\",function(){\r\n                            \r\n                            sell.style.background=\"red\";\r\n                            buy.style.background=\"\";\r\n                            let code = editor.getValue();\r\n                              if (/\"transaction_type\"\\s*:\\s*\".*?\"/.test(code)) {\r\n                                  code = code.replace(/(\"transaction_type\"\\s*:\\s*\").*?\"/, `$1SELL\"`);\r\n                              } else {\r\n                                  // If not present, you can optionally add it\r\n                                  code = code.replace(/(\\{)/, `$1\\n  \"transaction_type\":\"SELL\",`);\r\n                              }\r\n                              editor.setValue(code);\r\n                          })\r\n              }\r\n      \r\n            \r\n\r\n\r\n    \r\n            \r\n    //exit on purpose switch toggle\r\n                const exitOnPurposeSwitch = document.getElementById('flexSwitchCheck1');\r\n                \r\n                function toggleExitOnOpposite() {\r\n                    let code = editor.getValue();\r\n                    code = code.replace(\r\n                        /(\"exit_on_opposite\"\\s*:\\s*)(true|false)/,\r\n                        `$1${exitOnPurposeSwitch.checked}`\r\n                    );\r\n                    \r\n                    editor.setValue(code);\r\n                }\r\n                exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n\r\n                //target switch toggle\r\n                const   targetSwitch = document.getElementById('flexSwitchCheck2');\r\n                function toggleIsTgt() {\r\n                    let code = editor.getValue();\r\n\r\n                    // Toggle exit_on_opposite in the JSON string\r\n                     code = code.replace(\r\n                        /(\"is_tgt\"\\s*:\\s*)(true|false)/,\r\n                        `$1${targetSwitch.checked}`\r\n                    );\r\n                    editor.setValue(code);\r\n                     if(!(targetSwitch.checked)){\r\n                      document.getElementById(\"targetdropdown\").selectedIndex=0;\r\n                      document.getElementById(\"target_value\").value=\"\";\r\n                    }\r\n\r\n                }\r\n\r\n                //onchange toggles the switch, call the function and also shows dropdown\r\n                let dropdownofTarget=document.getElementById(\"targetDropdownCtn\");\r\n                document.getElementById(\"futSwitchshowCtn\").appendChild(dropdownofTarget);\r\n\r\n                \r\n                function targerSwitchReflect(){\r\n                  dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n                  \r\n                  if(dropdownofTarget.style.display===\"block\"){\r\n                            document.getElementById(\"targetdropdown\")?.addEventListener(\"change\",function(){\r\n\r\n                                         let selectedtargetValue = this.value;\r\n                                            if (!selectedtargetValue || !editor) return;\r\n\r\n                                            //this will add or replace in code snippet\r\n                                            let currentValue = editor.getValue();\r\n                                            if (/\"tgt_type\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n                                              currentValue = currentValue.replace(\r\n                                                /(\"tgt_type\"\\s*:\\s*\").*?(\")/,\r\n                                                `$1${selectedtargetValue}$2`\r\n                                              );\r\n                                            } \r\n                                              else {\r\n                                              // Remove the last closing brace\r\n                                              currentValue = currentValue.trim();\r\n                                              if (currentValue.endsWith(\"}\")) {\r\n                                                currentValue = currentValue.slice(0, -1);\r\n                                              }\r\n                                              currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n\r\n                                                  // Append new script value\r\n                                                  currentValue+= `,\\n \\t\"tgt_type\":\"${selectedtargetValue}\" \\n}`;\r\n                                              }\r\n                                            \r\n                                            editor.setValue(currentValue);\r\n\r\n                              let targetswDiv= document.getElementById(\"target_value\");\r\n                              document.getElementById(\"futSwitchshowCtn\").appendChild(targetswDiv);\r\n                              document.getElementById(\"target_value\").style.display=\"block\";\r\n\r\n                                           let targetValBox = document.getElementById(\"targetValbox\");\r\n                                           let targetErr = document.getElementById(\"targetError\");\r\n\r\n\r\n                                            targetValBox?.addEventListener(\"input\", function () {\r\n                                              let targetValue=this.value.trim();\r\n                                              let currentValue=editor.getValue().trim();\r\n\r\n                                                if(targetValue<0){\r\n                                                  targetErr.style.display=\"block\";\r\n                                                }\r\n                                                else{\r\n                                                  targetErr.style.display=\"none\";\r\n                                                }\r\n\r\n                                              if(!targetValue){\r\n                                                currentValue = currentValue.replace(/,?\\s*\"tgt_value\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n                                                // Also clean up trailing commas before }\r\n                                                currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n                                                editor.setValue(currentValue);\r\n                                                return;\r\n                                              }\r\n\r\n                                              if(/\\\"tgt_value\\\"\\s*:\\s*\\d*/.test(currentValue)){\r\n                                                currentValue = currentValue.replace(\r\n                                                /(\"tgt_value\"\\s*:\\s*)\\d*/,\r\n                                                `$1${targetValue}`\r\n                                                ); \r\n                                              }\r\n                                              else{\r\n                                                if (currentValue.endsWith(\"}\")) {\r\n                                                        currentValue = currentValue.slice(0, -1).trim();\r\n                                                      }\r\n                                                      currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n                                                      currentValue = currentValue + `,\\n\\t\"tgt_value\":${targetValue}\\n}`;\r\n                                                }\r\n\r\n                                              editor.setValue(currentValue);\r\n\r\n                                                \r\n                                            });\r\n      \r\n                                 \r\n                                      });\r\n                  }\r\n                  else{\r\n                    document.getElementById(\"target_value\").style.display=\"none\";\r\n                    let code = editor.getValue();\r\n                        code = code.replace(/,\\s*\"tgt_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n                        code = code.replace(/,\\s*\"tgt_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n                        editor.setValue(code);\r\n                  }\r\n\r\n                };\r\n                targetSwitch.addEventListener(\"change\",function(){\r\n                  toggleIsTgt();\r\n                  targerSwitchReflect();\r\n                })\r\n\r\n                const rolloverswitch = document.getElementById(\"flexSwitchCheck5\");\r\n\r\nfunction toggleIsRollover() {\r\n    let code = editor.getValue();\r\n\r\n    // Toggle \"is_rollover\" in JSON\r\n    code = code.replace(\r\n        /(\"is_rollover\"\\s*:\\s*)(true|false)/,\r\n        `$1${rolloverswitch.checked}`\r\n    );\r\n    editor.setValue(code);\r\n\r\n    if (!rolloverswitch.checked) {\r\n        document.getElementById(\"rollovervalbox\").value = \"\";\r\n        document.getElementById(\"timeBox\").value = \"00:00:00\";\r\n    }\r\n}\r\nlet rolloverCtn=document.getElementById(\"rollover_value\");\r\n  document.getElementById(\"futSwitchshowCtn\").appendChild(rolloverCtn);\r\n\r\nfunction rolloverSwitchReflect() {\r\n    rolloverCtn.style.display = rolloverswitch.checked ? \"block\" : \"none\";\r\n\r\n    if (rolloverCtn.style.display === \"block\") {\r\n        document.getElementById(\"rollovervalbox\")?.addEventListener(\"input\", function () {\r\n            let rolloverswdiv = document.getElementById(\"rollover_time\");\r\n            document.getElementById(\"futSwitchshowCtn\").appendChild(rolloverswdiv);\r\n            rolloverswdiv.style.display = \"block\";\r\n\r\n            // Create time input box dynamically\r\n          \r\n\r\n            // --- Handle rollover_gap ---\r\n            let rolloverErr = document.getElementById(\"rolloverError\");\r\n            let rolloverValue = this.value.trim();\r\n            let currentValue = editor.getValue().trim();\r\n\r\n            if (rolloverValue < 0) {\r\n                rolloverErr.style.display = \"block\";\r\n            } else {\r\n                rolloverErr.style.display = \"none\";\r\n            }\r\n\r\n            if (!rolloverValue) {\r\n                currentValue = currentValue.replace(/,?\\s*\"rollover_gap\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n                currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n                editor.setValue(currentValue);\r\n                return;\r\n            }\r\n\r\n            if (/\\\"rollover_gap\\\"\\s*:\\s*\\d*/.test(currentValue)) {\r\n                currentValue = currentValue.replace(\r\n                    /(\"rollover_gap\"\\s*:\\s*)\\d*/,\r\n                    `$1${rolloverValue}`\r\n                );\r\n            } else {\r\n                if (currentValue.endsWith(\"}\")) {\r\n                    currentValue = currentValue.slice(0, -1).trim();\r\n                }\r\n                currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n                currentValue = currentValue + `,\\n\\t\"rollover_gap\":${rolloverValue}\\n}`;\r\n            }\r\n            editor.setValue(currentValue);\r\n\r\n            // --- Handle rollover_time ---\r\n            const timeBox = document.getElementById(\"timeBox\");\r\n            timeBox.addEventListener(\"change\", function () {\r\n                let timeValue = this.value.trim();\r\n                let currentCode = editor.getValue().trim();\r\n\r\n                if (!timeValue) {\r\n                    // Remove if empty\r\n                    currentCode = currentCode.replace(/,?\\s*\"rollover_time\"\\s*:\\s*\".*?\"/g, \"\");\r\n                    editor.setValue(currentCode);\r\n                    return;\r\n                }\r\n\r\n                if (/\\\"rollover_time\\\"\\s*:\\s*\".*?\"/.test(currentCode)) {\r\n                    currentCode = currentCode.replace(\r\n                        /(\"rollover_time\"\\s*:\\s*\").*?(\")/,\r\n                        `$1${timeValue}$2`\r\n                    );\r\n                } else {\r\n                    if (currentCode.endsWith(\"}\")) {\r\n                        currentCode = currentCode.slice(0, -1).trim();\r\n                    }\r\n                    currentCode = currentCode.replace(/,(\\s*})/, \"$1\");\r\n                    currentCode = currentCode + `,\\n\\t\"rollover_time\":\"${timeValue}\"\\n}`;\r\n                }\r\n\r\n                editor.setValue(currentCode);\r\n            });\r\n        });\r\n          }\r\n           else {\r\n              document.getElementById(\"target_value\").style.display = \"none\";\r\n              let code = editor.getValue();\r\n              code = code.replace(/,\\s*\"rollover_gap\"\\s*:\\s*\\d+/g, \"\");\r\n              code = code.replace(/,\\s*\"rollover_time\"\\s*:\\s*\".*?\"/g, \"\");\r\n              editor.setValue(code);\r\n          }\r\n}\r\n\r\nrolloverswitch.addEventListener(\"change\", function () {\r\n    toggleIsRollover();\r\n    rolloverSwitchReflect();\r\n});\r\n\r\n\r\n\r\n                //check the val true or false and shows box according\r\n\r\n                //stoploss switch\r\n                const   stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n                function toggleIsSl() {\r\n                    let code = editor.getValue();\r\n\r\n                    // Toggle exit_on_opposite in the JSON string\r\n                              code = code.replace(\r\n                              /(\"is_sl\"\\s*:\\s*)(true|false)/,\r\n                              `$1${stoplossSwitch.checked}`\r\n                              );\r\n                          editor.setValue(code);\r\n                          if(!(stoplossSwitch.checked)){\r\n                            document.getElementById(\"stoplossdropdown\").selectedIndex=0;\r\n                            document.getElementById(\"stoploss_value\").value=\"\";\r\n                          }\r\n                }\r\n\r\n                //onchange toggles the switch, call the function and also shows dropdown\r\n                function stoplossSwitchReflect(){\r\n                  let dropdownOfStoploss=document.getElementById(\"stoplossDropdownCtn\");\r\n                  document.getElementById(\"futSwitchshowCtn\").appendChild(dropdownOfStoploss);\r\n                  dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n\r\n                  if(dropdownOfStoploss.style.display===\"block\"){\r\n                            document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\",function(){\r\n\r\n                                         let selectedstoplossValue = this.value;\r\n                                            if (!selectedstoplossValue || !editor) return;\r\n\r\n                                            //this will add or replace in code snippet\r\n                                            let currentValue = editor.getValue();\r\n                                            if (/\"sl_type\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n                                              currentValue = currentValue.replace(\r\n                                                /(\"sl_type\"\\s*:\\s*\").*?(\")/,\r\n                                                `$1${selectedstoplossValue}$2`\r\n                                              );\r\n                                            } \r\n                                              else {\r\n                                              // Remove the last closing brace\r\n                                              currentValue = currentValue.trim();\r\n                                              if (currentValue.endsWith(\"}\")) {\r\n                                                currentValue = currentValue.slice(0, -1);\r\n                                              }\r\n                                              currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n\r\n                                                  // Append new script value\r\n                                                  currentValue+= `,\\n \\t\"sl_type\":\"${selectedstoplossValue}\" \\n}`;\r\n                                              }\r\n                                            \r\n                                            editor.setValue(currentValue);\r\n\r\n\r\n                              let slvalbox=document.getElementById(\"stoploss_value\");\r\n                              document.getElementById(\"futSwitchshowCtn\").appendChild(slvalbox);              \r\n                              document.getElementById(\"stoploss_value\").style.display=\"block\";\r\n                                           let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n                                           let stoplossErr = document.getElementById(\"stoplossError\");\r\n\r\n\r\n                                            stoplossValbox?.addEventListener(\"input\", function () {\r\n                                              let stoplossValue=this.value.trim();\r\n                                              let currentValue=editor.getValue().trim();\r\n\r\n                                                if(stoplossValue<0){\r\n                                                  stoplossErr.style.display=\"block\";\r\n                                                }\r\n                                                else{\r\n                                                  stoplossErr.style.display=\"none\";\r\n                                                }\r\n\r\n                                              if(!stoplossValue){\r\n                                                currentValue = currentValue.replace(/,?\\s*\"sl_value\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n                                                // Also clean up trailing commas before }\r\n                                                currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n                                                editor.setValue(currentValue);\r\n                                                return;\r\n                                              }\r\n\r\n                                              if(/\\\"sl_value\\\"\\s*:\\s*\\d*/.test(currentValue)){\r\n                                                currentValue = currentValue.replace(\r\n                                                /(\"sl_value\"\\s*:\\s*)\\d*/,\r\n                                                `$1${stoplossValue}`\r\n                                                ); \r\n                                              }\r\n                                              else{\r\n                                                if (currentValue.endsWith(\"}\")) {\r\n                                                        currentValue = currentValue.slice(0, -1).trim();\r\n                                                      }\r\n                                                      currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n                                                      currentValue = currentValue + `,\\n\\t\"sl_value\":${stoplossValue}\\n}`;\r\n                                                }\r\n\r\n                                              editor.setValue(currentValue);\r\n\r\n                                                \r\n                                            });\r\n      \r\n                                 \r\n                                      });\r\n                  }\r\n                  else{\r\n                    document.getElementById(\"stoploss_value\").style.display=\"none\";\r\n                    let code = editor.getValue();\r\n\r\n                        code = code.replace(/,\\s*\"sl_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n                        code = code.replace(/,\\s*\"sl_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n                        editor.setValue(code);\r\n                  }\r\n\r\n\r\n                };\r\n\r\n                stoplossSwitch.addEventListener(\"change\",function(){\r\n                  toggleIsSl();\r\n                  stoplossSwitchReflect();\r\n                  \r\n                })\r\n\r\n                //trailing switch\r\n                const   trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n                function toggleIsTrailSet() {\r\n                    let code = editor.getValue();\r\n                      code = code.replace(\r\n                      /(\"is_trail_set\"\\s*:\\s*)(true|false)/,\r\n                      `$1${trailingSwitch.checked}`\r\n                      );\r\n\r\n                    editor.setValue(code);\r\n                    if(!(trailingSwitch.checked)){\r\n                    document.getElementById(\"trailingdropdown\").selectedIndex=0;\r\n                    document.getElementById(\"trailingtrigger_value\").value=\"\";\r\n                    document.getElementById(\"trailinggap_value\").value=\"\";\r\n                    document.getElementById(\"trailingpoint_value\").value=\"\";\r\n                    }\r\n                }\r\n                function trailswitchReflect(){\r\n                  let dropdownOfTrailing=document.getElementById(\"trailingDropdownCtn\");\r\n                  document.getElementById(\"futSwitchshowCtn\").appendChild(dropdownOfTrailing)\r\n                  dropdownOfTrailing.style.display = trailingSwitch.checked ? 'block' : 'none';\r\n\r\n                      if(dropdownOfTrailing.style.display===\"block\"){\r\n\r\n                                document.getElementById(\"trailingdropdown\")?.addEventListener(\"change\",function(){\r\n\r\n                                            let selectedtrailingValue = this.value;\r\n                                                if (!selectedtrailingValue || !editor) return;\r\n\r\n                                                //this will add or replace in code snippet\r\n                                                let currentValue = editor.getValue();\r\n                                                if (/\"trail_type\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n                                                  currentValue = currentValue.replace(\r\n                                                    /(\"trail_type\"\\s*:\\s*\").*?(\")/,\r\n                                                    `$1${selectedtrailingValue}$2`\r\n                                                  );\r\n                                                } \r\n                                                  else {\r\n                                                  // Remove the last closing brace\r\n                                                  currentValue = currentValue.trim();\r\n                                                  if (currentValue.endsWith(\"}\")) {\r\n                                                    currentValue = currentValue.slice(0, -1);\r\n                                                  }\r\n                                                  currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n\r\n                                                      // Append new script value\r\n                                                      currentValue+= `,\\n \\t\"trail_type\":\"${selectedtrailingValue}\" \\n}`;\r\n                                                  }\r\n                                                \r\n                                                editor.setValue(currentValue);\r\n\r\n\r\n                                              let trailtriggerval=document.getElementById(\"trailingtrigger_value\");  \r\n                                              document.getElementById(\"futSwitchshowCtn\").appendChild(trailtriggerval)    \r\n                                              document.getElementById(\"trailingtrigger_value\").style.display=\"block\";\r\n                                              let  trailtriggerValbox= document.getElementById(\"trailtriggerValbox\");\r\n                                              let trailTriggerError = document.getElementById(\"trailTriggerError\");\r\n\r\n\r\n                                                trailtriggerValbox?.addEventListener(\"input\", function () {\r\n\r\n                                                  let trailTriggerValue=this.value.trim();\r\n                                                  let currentValue=editor.getValue().trim();\r\n\r\n                                                    if(trailTriggerValue<0){\r\n                                                      \r\n                                                  let trailgap=document.getElementById(\"trailinggap_value\");\r\n                                                  document.getElementById(\"futSwitchshowCtn\").appendChild(trailgap);\r\n                                                      trailTriggerError.style.display=\"block\";\r\n                                                      document.getElementById(\"trailinggap_value\").style.display=\"none\";\r\n\r\n                                                    }\r\n                                                    else{\r\n                                                      \r\n                                                  let trailgap=document.getElementById(\"trailinggap_value\");\r\n                                                  document.getElementById(\"futSwitchshowCtn\").appendChild(trailgap);\r\n                                                      trailTriggerError.style.display=\"none\";\r\n                                                      document.getElementById(\"trailinggap_value\").style.display=\"block\";\r\n                                                    }\r\n\r\n                                                  if(!trailTriggerValue){\r\n                                                    currentValue = currentValue.replace(/,?\\s*\"trail_trigger\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n                                                    // Also clean up trailing commas before }\r\n                                                    currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n                                                    editor.setValue(currentValue);\r\n                                                    return;\r\n                                                  }\r\n\r\n                                                  if(/\\\"trail_trigger\\\"\\s*:\\s*\\d*/.test(currentValue)){\r\n                                                    currentValue = currentValue.replace(\r\n                                                    /(\"trail_trigger\"\\s*:\\s*)\\d*/,\r\n                                                    `$1${trailTriggerValue}`\r\n                                                    ); \r\n                                                  }\r\n                                                  else{\r\n                                                    if (currentValue.endsWith(\"}\")) {\r\n                                                            currentValue = currentValue.slice(0, -1).trim();\r\n                                                          }\r\n                                                          currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n                                                          currentValue = currentValue + `,\\n\\t\"trail_trigger\":${trailTriggerValue}\\n}`;\r\n                                                    }\r\n\r\n                                                  editor.setValue(currentValue);\r\n                                                 \r\n                                                 \r\n                                                  //trail gap number box show\r\n                                                document.getElementById(\"trailGapValbox\")?.addEventListener(\"input\",function(){\r\n                                                  let trailgapError=document.getElementById(\"trailGapError\");\r\n                                                  let trailGapValue=this.value.trim();\r\n                                                  let currentValue=editor.getValue().trim();\r\n\r\n                                                    if(trailGapValue<0){\r\n                                                      trailgapError.style.display=\"block\";\r\n                                                      \r\n                                                  let trailpoint=document.getElementById(\"trailingpoint_value\");\r\n                                                  document.getElementById(\"futSwitchshowCtn\").appendChild(trailpoint);\r\n                                                      document.getElementById(\"trailingpoint_value\").style.display=\"none\";\r\n\r\n                                                    }\r\n                                                    else{\r\n                                                      trailgapError.style.display=\"none\";\r\n                                                      \r\n                                                  let trailpoint=document.getElementById(\"trailingpoint_value\");\r\n                                                  document.getElementById(\"futSwitchshowCtn\").appendChild(trailpoint);\r\n                                                      document.getElementById(\"trailingpoint_value\").style.display=\"block\";\r\n                                                    }\r\n\r\n                                                  if(!trailGapValue){\r\n                                                    currentValue = currentValue.replace(/,?\\s*\"trail_gap\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n                                                    // Also clean up trailing commas before }\r\n                                                    currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n                                                    editor.setValue(currentValue);\r\n                                                    return;\r\n                                                  }\r\n\r\n                                                  if(/\\\"trail_gap\\\"\\s*:\\s*\\d*/.test(currentValue)){\r\n                                                    currentValue = currentValue.replace(\r\n                                                    /(\"trail_gap\"\\s*:\\s*)\\d*/,\r\n                                                    `$1${trailGapValue}`\r\n                                                    ); \r\n                                                  }\r\n                                                  else{\r\n                                                    if (currentValue.endsWith(\"}\")) {\r\n                                                            currentValue = currentValue.slice(0, -1).trim();\r\n                                                          }\r\n                                                          currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n                                                          currentValue = currentValue + `,\\n\\t\"trail_gap\":${trailGapValue}\\n}`;\r\n                                                    }\r\n\r\n                                                  editor.setValue(currentValue);\r\n                                                  })   \r\n\r\n                                                  //document.getElementById(\"trailingpoint_value\").style.display=\"block\"\r\n\r\n                                                  //trail point input box\r\n                                                  document.getElementById(\"trailPointValbox\")?.addEventListener(\"input\",function(){\r\n                                                  let trailpointError=document.getElementById(\"trailPointError\");\r\n                                                  let trailpointVal=this.value.trim();\r\n                                                  let currentValue=editor.getValue().trim();\r\n\r\n                                                    if(trailpointVal<0){\r\n\r\n                                                      trailpointError.style.display=\"block\";\r\n\r\n                                                    }\r\n                                                    else{\r\n                                                      trailpointError.style.display=\"none\";\r\n                                                      }\r\n\r\n                                                  if(!trailpointVal){\r\n                                                    currentValue = currentValue.replace(/,?\\s*\"trail_point\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n                                                    // Also clean up trailing commas before }\r\n                                                    currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n                                                    editor.setValue(currentValue);\r\n                                                    return;\r\n                                                  }\r\n\r\n                                                  if(/\\\"trail_point\\\"\\s*:\\s*\\d*/.test(currentValue)){\r\n                                                    currentValue = currentValue.replace(\r\n                                                    /(\"trail_point\"\\s*:\\s*)\\d*/,\r\n                                                    `$1${trailpointVal}`\r\n                                                    ); \r\n                                                  }\r\n                                                  else{\r\n                                                    if (currentValue.endsWith(\"}\")) {\r\n                                                            currentValue = currentValue.slice(0, -1).trim();\r\n                                                          }\r\n                                                          currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n                                                          currentValue = currentValue + `,\\n\\t\"trail_point\":${trailpointVal}\\n}`;\r\n                                                    }\r\n\r\n                                                  editor.setValue(currentValue);\r\n                                                  })   \r\n\r\n\r\n                                                  \r\n                                                });\r\n                                        });\r\n\r\n\r\n                      }\r\n                      else{\r\n                        document.getElementById(\"trailingtrigger_value\").style.display=\"none\";\r\n                        document.getElementById(\"trailinggap_value\").style.display=\"none\";\r\n                        document.getElementById(\"trailingpoint_value\").style.display=\"none\";\r\n                        let code = editor.getValue();\r\n\r\n                            code = code.replace(/,\\s*\"trail_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n                            code = code.replace(/,\\s*\"trail_trigger\"\\s*:\\s*[^,}]+/g, \"\");\r\n                            code = code.replace(/,\\s*\"trail_gap\"\\s*:\\s*[^,}]+/g, \"\");\r\n                            code = code.replace(/,\\s*\"trail_point\"\\s*:\\s*[^,}]+/g, \"\");\r\n\r\n                            editor.setValue(code);\r\n                      }\r\n                }\r\n                trailingSwitch.addEventListener(\"change\",function(){\r\n                  toggleIsTrailSet();\r\n                  trailswitchReflect();\r\n                })\r\n              \r\n            let quantityValue = this.value.trim();\r\n            if (!quantityValue) {\r\n              currentValue = currentValue.replace(/,?\\s*\"quantity\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n              // Also clean up trailing commas before }\r\n              currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n              editor.setValue(currentValue);\r\n              return;\r\n            }\r\n\r\n            if (/\\\"quantity\\\"\\s*:\\s*\\d*/.test(currentValue)) {\r\n              // If already present => replace value only\r\n              currentValue = currentValue.replace(\r\n                /(\"quantity\"\\s*:\\s*)\\d*/,\r\n                `$1${quantityValue}`\r\n              );\r\n            } \r\n            else {\r\n              // If not present then add it at the end\r\n              if (currentValue.endsWith(\"}\")) {\r\n                currentValue = currentValue.slice(0, -1).trim();\r\n              }\r\n              currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n              currentValue = currentValue + `,\\n\\t\"quantity\":${quantityValue}\\n}`;\r\n            }\r\n\r\n           \r\n\r\n            document.querySelectorAll('input[type=\"checkbox\"]').forEach(toggleBtn => {\r\n              toggleBtn.checked = false; // turn off all switches\r\n              document.getElementById(\"targetdropdown\").selectedIndex=0;\r\n              document.getElementById(\"stoplossdropdown\").selectedIndex=0;\r\n              document.getElementById(\"trailingdropdown\").selectedIndex=0;\r\n              document.getElementById(\"target_value\").value=\"\";\r\n              document.getElementById(\"stoploss_value\").value=\"\";\r\n              document.getElementById(\"trailingtrigger_value\").value=\"\";\r\n              document.getElementById(\"trailinggap_value\").value=\"\";\r\n              document.getElementById(\"trailingpoint_value\").value=\"\";\r\n              document.getElementById(\"rollover_value\").value=\"\";\r\n              document.getElementById(\"rollover_time\").value=\"00:00\"\r\n\r\n\r\n               targerSwitchReflect();\r\n               stoplossSwitchReflect();\r\n               trailswitchReflect();\r\n\r\n            });\r\n              \r\n\r\n            // Remove related switch values from JSON\r\n            currentValue = currentValue\r\n              .replace(/\"exit_on_opposite\"\\s*:\\s*(true|false),?/g, '\"exit_on_opposite\": false,')\r\n              .replace(/\"is_tgt\"\\s*:\\s*(true|false),?/g, '\"is_tgt\": false,')\r\n              .replace(/\"tgt_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n              .replace(/\"tgt_value\"\\s*:\\s*\\d*/, \"\")\r\n              .replace(/\"is_sl\"\\s*:\\s*(true|false),?/g, '\"is_sl\": false,')\r\n              .replace(/\"sl_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n              .replace(/\"sl_value\"\\s*:\\s*\\d*/, \"\")\r\n              .replace(/\"is_trail_set\"\\s*:\\s*(true|false),?/g, '\"is_trail_set\": false,')\r\n              .replace(/\"trail_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n              .replace(/\"trail_trigger\"\\s*:\\s*\\d*/, \"\")\r\n              .replace(/\"trail_gap\"\\s*:\\s*\\d*/, \"\")\r\n              .replace(/\"trail_point\"\\s*:\\s*\\d*/, \"\");\r\n                        \r\n               editor.setValue(currentValue);\r\n            \r\n\r\n    \r\n\r\n          \r\n          });\r\n        });\r\n    });\r\n        \r\n }                      \r\n \r\nfunction CEselection(){\r\n    const token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTU5MzA2MjUsImV4cCI6MTc1NjAxNzAyNX0.MF1IqBX8BjCOyOZ-_yoQNxOOhp8uoM2ZSrj7ITOa_SU\";\r\n    const searchInput = document.getElementById('search');\r\n    const dropdown = document.getElementById('dropdown');\r\n\r\n    document.addEventListener('click', (e) => {\r\n      // Check if click is outside the input and dropdown\r\n      if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n        dropdown.style.display = 'none';\r\n      }\r\n    });\r\n\r\n    // Simple debounce function\r\n    function debounce(func, delay) {\r\n      let timer;\r\n      return function (...args) {\r\n        clearTimeout(timer);\r\n        timer = setTimeout(() => func.apply(this, args), delay);\r\n      };\r\n    }\r\n\r\n    // Fetch API suggestions\r\n    async function fetchSuggestions(query) {\r\n      if (!query) {\r\n        dropdown.style.display = 'none';\r\n        dropdown.innerHTML = '';\r\n        return;\r\n      }\r\n\r\n      let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n      let optionSelection=document.getElementById(\"atmdropdown\")?.value;\r\n      try {\r\n        const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": token\r\n          },\r\n          body: JSON.stringify({\r\n            option_selection:optionSelection,\r\n            script: query,\r\n            type: scriptType\r\n          })\r\n        });\r\n\r\n        const data = await res.json();\r\n        const suggestions = data.data;\r\n\r\n\r\n        dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n        dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n\r\n      }\r\n      catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n    // Add click selection\r\n    dropdown?.addEventListener('click', e => {\r\n      if (e.target.tagName === 'LI') {\r\n        let selectedText = e.target.textContent;\r\n        searchInput.value = selectedText;\r\n        // remove everything after \"(\"\r\n        if (selectedText.includes(\"(\")) {\r\n          selectedText = selectedText.split(\"(\")[0];\r\n        }\r\n\r\n        dropdown.style.display = 'none';\r\n\r\n      //document.getElementById(\"EQOption2\")?.innerHTML=\"\";\r\n      document.getElementById(\"showNumberBox\").innerHTML=\"\";\r\n      let currentValue = editor.getValue().trim();\r\n\r\n    // If \"script\" already exists → replace only\r\n        if (/\"script\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n          currentValue = currentValue.replace(\r\n            /(\"script\"\\s*:\\s*\").*?(\")[\\s\\S]*$/,\r\n            `$1${selectedText}$2\\n}`\r\n          );\r\n\r\n\r\n        } \r\n\r\n        else {\r\n          // Remove last } if present\r\n          if (currentValue.endsWith(\"}\")) {\r\n            currentValue = currentValue.slice(0, -1).trim();\r\n          }\r\n\r\n          // Remove trailing comma if any\r\n          currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n\r\n          // Append cleanly\r\n          currentValue = currentValue + `,\\n\\t\"script\":\"${selectedText}\"\\n}`;\r\n        }\r\n\r\n        editor.setValue(currentValue);\r\n      }\r\n    });\r\n\r\n    searchInput.addEventListener('input', debounce(e => {\r\n      fetchSuggestions(e.target.value);\r\n    }, 300));\r\n\r\n    let CEscriptbox=document.getElementById(\"search\");\r\n    CEscriptbox.addEventListener(\"change\",function(){\r\n      document.getElementById(\"CEpremium\").style.display=\"block\";\r\n      \r\n    })\r\n\r\n\r\n\r\n}\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// let switchContainer = document.getElementsByClassName(\"toggleSwitchGroup\")[0];\r\n\r\n//               let newSwitch = document.createElement(\"div\");\r\n//               newSwitch.className = \"form-check form-switch\";\r\n//               newSwitch.innerHTML = `\r\n//                                     <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheck5\">\r\n//                                     <label class=\"form-check-label\" for=\"flexSwitchCheck\">rollover </label>\r\n//                                     <span class=\"details\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n//                                         title=\"Enable this to automatically exit the position when opposite signal generated.\">\r\n//                                         <img src=\"images/info-circle.svg\" class=\"m-2\">\r\n//                                     </span>\r\n//               `;\r\n\r\n//               switchContainer?.appendChild(newSwitch);\r\n\r\n\r\n   \r\n// productDropdown?.addEventListener(\"change\",function(){\r\n//   let numberbox=document.getElementById(\"showNumberBox\");\r\n//   numberbox.innerHTML = `<b class=\"m-2 \">Quantity <span class=\"text-muted\">*</span></b>\r\n//   <div>\r\n//   <input type='number' id=\"quantityBox\" placeholder=\"Enter Quantity\" ></div>`;\r\n\r\n//   let quantityNumber=document.getElementById(\"quantityBox\");\r\n//   quantityNumber?.addEventListener(\"input\",function(){\r\n//       if(quantityNumber.value <= 0){\r\n//         console.log(\"checked\")\r\n//         let numberbox=document.getElementById(\"showNumberBox\");\r\n//         numberbox.innerHTML += `<small>Quantity must be greater than 0.</small>`\r\n//       }\r\n//       else{\r\n//       console.log(\"else block\")\r\n//         numberbox.innerHTML= numberbox.innerHTML = `<b class=\"m-2 \">Quantity <span class=\"text-muted\">*</span></b>\r\n//          <div>\r\n//          <input type='number' id=\"quantityBox\" placeholder=\"Enter Quantity\" ></div>`\r\n//       }\r\n//   });\r\n\r\n// });\r\n  \r\n// });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// document.addEventListener(\"DOMContentLoaded\",function(){\r\n// let showDropdown=document.getElementById(\"productDropdown\");\r\n// showDropdown?.addEventListener(\"change\",function(){\r\n//    console.log(\"Raw value:\", this.value);\r\n//   console.log(\"SelectedValue:\", this.value || \"EMPTY\");\r\n//   let selectedValue = this.value;\r\n//   console.log(selectedValue)\r\n//   if (!selectedValue || !editor) return;\r\n\r\n//   let currentValue = editor.getValue();\r\n//   if (/\"Option_Selection\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n//     currentValue = currentValue.replace(\r\n//       /(\"Option_Selection\"\\s*:\\s*\").*?(\")/,\r\n//       `$1${selectedValue}$2`\r\n//     );\r\n//   } else {\r\n//     // Remove the last closing brace\r\n//     currentValue = currentValue.trim();\r\n//     if (currentValue.endsWith(\"}\")) {\r\n//       currentValue = currentValue.slice(0, -1);\r\n//     }\r\n\r\n//     // Add new line with snippet and closing brace\r\n//      currentValue += \",\\n  \\t\" + `\"product\":\"${selectedValue}\"`  +\"}\";\r\n//   }\r\n//   editor.setValue(currentValue);\r\n// })\r\n\r\n\r\n// showDropdown?.addEventListener(\"change\",function(){\r\n//   let numberbox=document.getElementById(\"showNumberBox\");\r\n//   numberbox.innerHTML = `<b class=\"m-2 \">Quantity <span class=\"text-muted\">*</span></b>\r\n//   <div>\r\n//   <input type='number' id=\"quantityBox\" placeholder=\"Enter Quantity\" ></div>`\r\n\r\n// });\r\n  \r\n// });\r\n\r\n\r\n\r\n// let quantityNumber=document.getElementById(\"quantityBox\");\r\n// quantityNumber?.addEventListener(\"input\",function(){\r\n//   if(quantityNumber.value <= 0){\r\n//     console.log(\"checked\")\r\n//     let numberbox=document.getElementById(\"showNumberBox\");\r\n//     numberbox.innerHTML=`<small>Quantity must be greater than 0.</small>`\r\n//   }\r\n// });\r\n\r\n\r\n\r\n\r\n// const searchBox = document.getElementById(\"searchBox\");\r\n// //const dropdown = document.getElementById(\"dropdown2\");\r\n// const dropdownEl = document.getElementById(\"dropdown2\");\r\n// let timeout;\r\n\r\n\r\n// // searchBox?.addEventListener(\"input\",()=>{\r\n// //     console.log(searchBox?.value)\r\n// // })\r\n// function debounce(fn, delay) {\r\n\r\n//     return (...args) => {\r\n//         clearTimeout(timeout);\r\n//         timeout = setTimeout(() => fn(...args), delay);\r\n//     };\r\n// }\r\n\r\n// const token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTU2NjMwNzksImV4cCI6MTc1NTc0OTQ3OX0.kSCPiQ4dWtAx-sgxVRDyHXsKYCsbuuvZRtTH0MCO4Wk\"\r\n// async function fetchResults(query) {\r\n//     let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n//     console.log(\"Calling API with:\", { query, scriptType });\r\n//     try {\r\n//         const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n//             method: \"POST\",\r\n//             headers: {\r\n//                 \"Content-Type\": \"application/json\",\r\n//                 \"Authorization\": token\r\n//             },\r\n//             body: JSON.stringify({\r\n//                 script: query,\r\n//                 type: scriptType\r\n//             })\r\n//         });\r\n\r\n//         const data = await res.json();\r\n//         console.log(\"API Response:\", data); // debug check\r\n\r\n//         dropdownEl.innerHTML = \"\";\r\n//         if (data.results && data.results.length > 0) {\r\n//             dropdownEl.style.display = \"block\";\r\n//             data.results.forEach(item => {\r\n//                 const div = document.createElement(\"div\");\r\n//                 div.textContent = item.name;\r\n//                 div.style.padding = \"6px 10px\";\r\n//                 div.style.cursor = \"pointer\";\r\n//                 div.onclick = () => {\r\n//                     searchBox.value = item.name;\r\n//                     dropdownEl.style.display = \"none\";\r\n\r\n//                     // also update Monaco default value\r\n//                     let current = editor.getValue();\r\n//                     try {\r\n//                         let obj = JSON.parse(current);\r\n//                         obj.script = { name: item.name, type: scriptType };\r\n//                         editor.setValue(JSON.stringify(obj, null, 2));\r\n//                     } catch (e) {\r\n//                         console.error(\"Editor JSON invalid:\", e);\r\n//                     }\r\n//                 };\r\n//                 dropdownEl.appendChild(div);\r\n//             });\r\n//         } else {\r\n//             dropdownEl.style.display = \"none\";\r\n//         }\r\n//     } catch (err) {\r\n//         console.error(\"Fetch error:\", err);\r\n//     }\r\n// }\r\n\r\n// searchBox?.addEventListener(\"input\", debounce((e) => {\r\n//     let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n\r\n//     const query = e.target.value.trim();\r\n//     if (query.length > 1) {\r\n//         console.log(\"Payload:\", { search: query, type: scriptType });\r\n\r\n//         fetchResults(query);\r\n//     } else {\r\n//         dropdown.style.display = \"none\";\r\n//     }\r\n// }, 500));\r\n\r\n\r\n\r\n\r\n// async function fetchResults(query) {\r\n// let scriptType=dropdownEl?.value;\r\n//     try {\r\n//         const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n//             method: \"POST\",\r\n//             headers: {\r\n//                 \"Content-Type\": \"application/json\",\r\n//                 \"Authorization\": token\r\n//             },\r\n//             body: JSON.stringify({ script: query ,type:scriptType })\r\n//         });\r\n\r\n//         const data = await res.json();\r\n//         dropdown.innerHTML = \"\";\r\n//         if (data.results && data.results.length > 0) {\r\n//             dropdown.style.display = \"block\";\r\n//             console.log(dropdown?.value)\r\n//             data.results.forEach(item => {\r\n//                 const div = document.createElement(\"div\");\r\n//                 div.textContent = item.name;\r\n//                 div.onclick = () => {\r\n//                     searchBox.value = item.name;\r\n//                     dropdown.style.display = \"none\";\r\n//                 };\r\n//                 dropdown.appendChild(div);\r\n//             });\r\n//         } else {\r\n//             dropdown.style.display = \"none\";\r\n//         }\r\n//     } catch (err) {\r\n//         console.error(err);\r\n//     }\r\n// }\r\n\r\n// searchBox?.addEventListener(\"input\", debounce((e) => {\r\n//     const query = e.target.value.trim();\r\n//     if (query.length > 1) {\r\n//         fetchResults(query);\r\n//     } else {\r\n//         dropdown.style.display = \"none\";\r\n//     }\r\n// }, 500));\r\n\r\n\r\n\r\n// fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\")\r\n//   .then(res => res.json())\r\n//   .then(data => console.log(data))\r\n//   .catch(err => console.error(err));"
        }
    ]
}