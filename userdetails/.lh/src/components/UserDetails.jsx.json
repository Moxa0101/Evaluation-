{
    "sourceFile": "src/components/UserDetails.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 20,
            "patches": [
                {
                    "date": 1757586112531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757586125904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n \r\n     return (\r\n         <>\r\n             <div className=\"d-flex justify-content-end m-3\">\r\n-                <button className=\"btn btn-primary\" style={{margin:\"5px\"}} onClick={}><i className=\"bi bi-card-text\"></i></button>\r\n+                <button className=\"btn btn-primary\" style={{margin:\"5px\"}} ><i className=\"bi bi-card-text\"></i></button>\r\n                 <button className=\"btn btn-primary\" style={{margin:\"5px\"}}><i className=\"bi bi-table\"></i></button>\r\n \r\n             </div>\r\n             <div className=\"container\">\r\n"
                },
                {
                    "date": 1757586269157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,119 @@\n+import { useState, useEffect } from \"react\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n+import Card from \"react-bootstrap/Card\";\r\n+import Button from \"react-bootstrap/Button\";\r\n+import Dropdown from \"react-bootstrap/Dropdown\";\r\n+import { Table } from \"react-bootstrap/Table\";\r\n+\r\n+export default function CardList() {\r\n+    const [data, setData] = useState([]);\r\n+    const [search, setSearch] = useState('');\r\n+    const navigate = useNavigate();\r\n+    const [sortKey, setSortKey] = useState(null);\r\n+    const [sortDirection, setSortDirection] = useState('asc');\r\n+    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n+\r\n+    useEffect(() => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n+            .then(res => res.json())\r\n+            .then(data => setData(data))\r\n+    }, [])\r\n+\r\n+    const toggleSort = (key) => {\r\n+        if (sortKey === key) {\r\n+            setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\r\n+        } else {\r\n+            setSortKey(key);\r\n+            setSortDirection(\"asc\");\r\n+        }\r\n+    };\r\n+\r\n+    const filteredData = data.filter(item =>\r\n+        item.name.toLowerCase().includes(search.toLowerCase())\r\n+    );\r\n+\r\n+    const sortedData = [...filteredData].sort((a, b) => {\r\n+        const aValue = a[sortKey];\r\n+        const bValue = b[sortKey];\r\n+        if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\r\n+        if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n+        return 0;\r\n+    });\r\n+\r\n+    const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\" : \"⬆️\")\r\n+\r\n+    return (\r\n+        <>\r\n+            <div className=\"d-flex justify-content-end m-3\">\r\n+                <button className=\"btn btn-primary\" style={{ margin: \"5px\" }} ><i className=\"bi bi-card-text\"></i></button>\r\n+                <button className=\"btn btn-primary\" style={{ margin: \"5px\" }}><i className=\"bi bi-table\"></i></button>\r\n+\r\n+            </div>\r\n+            {/* <div className=\"container\">\r\n+                <div className=\"d-flex justify-content-between\">\r\n+                <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)} className=\"m-3\">\r\n+                    <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n+                        Sort Options\r\n+                    </Dropdown.Toggle>\r\n+                    <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n+                        {[\"name\", \"email\"].map((key) => (\r\n+                            <Dropdown.Item\r\n+                                as=\"div\"   // prevent automatic close\r\n+                                key={key}\r\n+                                className=\"d-flex justify-content-between align-items-center\"\r\n+                            >\r\n+                                <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n+                                <Button\r\n+                                    size=\"sm\"\r\n+                                    variant=\"outline-primary\"\r\n+                                    onClick={(e) => {\r\n+                                        e.stopPropagation();   // prevent closing dropdown\r\n+                                        toggleSort(key);\r\n+                                    }}\r\n+                                >\r\n+                                    {getArrow(key)}\r\n+                                </Button>\r\n+                            </Dropdown.Item>\r\n+                        ))}\r\n+                    </Dropdown.Menu>\r\n+                </Dropdown >\r\n+                <span className=\"d-flex justify-content-end m-3\">\r\n+                    <label className=\"m-2\">Search:</label>\r\n+                    <input type=\"text\"\r\n+                        value={search}\r\n+                        placeholder=\"Search By Name\"\r\n+                        onChange={(e) => setSearch(e.target.value)} />\r\n+                </span>\r\n+                </div>\r\n+\r\n+                {/* <select>\r\n+                <option hidden selected>Select Sorting Option</option>\r\n+                <option onClick={() => handleSort('name')}>Name</option>\r\n+                <option onClick={() => handleSort('email')}>Email</option>\r\n+            </select> */}\r\n+\r\n+            {/* < div className=\"d-flex flex-row flex-wrap justify-content-center\" >\r\n+                    {\r\n+                        sortedData.map((user) => (\r\n+                            <Card key={user.id} style={{\r\n+                                width: \"18rem\",\r\n+                                margin: \"15px\",\r\n+                                padding: \"10px\"\r\n+                            }}>\r\n+                                <Card.Body>\r\n+                                    <Card.Title>{user.id}</Card.Title>\r\n+                                    <Card.Text>\r\n+                                        <b>Name:</b>{user.name}<br />\r\n+                                        <b>Email:</b>{user.email}<br />\r\n+                                        <b>Company:</b>{user.company.name}\r\n+                                    </Card.Text>\r\n+                                </Card.Body>\r\n+                                <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n+                            </Card>\r\n+                        ))\r\n+                    }\r\n+                </div > \r\n+        </div > */}\r\n+        </>\r\n+    )\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757586320585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n     const navigate = useNavigate();\r\n     const [sortKey, setSortKey] = useState(null);\r\n     const [sortDirection, setSortDirection] = useState('asc');\r\n     const [dropdownOpen, setDropdownOpen] = useState(false);\r\n+    const[view,setView]=useState(\"card\")\r\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n             .then(res => res.json())\r\n@@ -113,126 +114,20 @@\n                         ))\r\n                     }\r\n                 </div > \r\n         </div > */}\r\n-        </>\r\n-    )\r\n-}\n-import { useState, useEffect } from \"react\";\r\n-import { useNavigate } from \"react-router-dom\";\r\n-import Card from \"react-bootstrap/Card\";\r\n-import Button from \"react-bootstrap/Button\";\r\n-import Dropdown from \"react-bootstrap/Dropdown\";\r\n-import { Table } from \"react-bootstrap/Table\";\r\n \r\n-export default function CardList() {\r\n-    const [data, setData] = useState([]);\r\n-    const [search, setSearch] = useState('');\r\n-    const navigate = useNavigate();\r\n-    const [sortKey, setSortKey] = useState(null);\r\n-    const [sortDirection, setSortDirection] = useState('asc');\r\n-    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n+            {view === \"card\" ? (\r\n+                <CardView data={sortedData} navigate={navigate} />\r\n+            ) : (\r\n+                <TableView\r\n+                    data={sortedData}\r\n+                    sortKey={sortKey}\r\n+                    sortDirection={sortDirection}\r\n+                    toggleSort={toggleSort}\r\n+                    navigate={navigate}\r\n+                />\r\n+            )}\r\n \r\n-    useEffect(() => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n-            .then(res => res.json())\r\n-            .then(data => setData(data))\r\n-    }, [])\r\n-\r\n-    const toggleSort = (key) => {\r\n-        if (sortKey === key) {\r\n-            setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\r\n-        } else {\r\n-            setSortKey(key);\r\n-            setSortDirection(\"asc\");\r\n-        }\r\n-    };\r\n-\r\n-    const filteredData = data.filter(item =>\r\n-        item.name.toLowerCase().includes(search.toLowerCase())\r\n-    );\r\n-\r\n-    const sortedData = [...filteredData].sort((a, b) => {\r\n-        const aValue = a[sortKey];\r\n-        const bValue = b[sortKey];\r\n-        if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\r\n-        if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n-        return 0;\r\n-    });\r\n-\r\n-    const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\" : \"⬆️\")\r\n-\r\n-    return (\r\n-        <>\r\n-            <div className=\"d-flex justify-content-end m-3\">\r\n-                <button className=\"btn btn-primary\" style={{margin:\"5px\"}} ><i className=\"bi bi-card-text\"></i></button>\r\n-                <button className=\"btn btn-primary\" style={{margin:\"5px\"}}><i className=\"bi bi-table\"></i></button>\r\n-\r\n-            </div>\r\n-            <div className=\"container\">\r\n-                <div className=\"d-flex justify-content-between\">\r\n-                <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)} className=\"m-3\">\r\n-                    <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n-                        Sort Options\r\n-                    </Dropdown.Toggle>\r\n-                    <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n-                        {[\"name\", \"email\"].map((key) => (\r\n-                            <Dropdown.Item\r\n-                                as=\"div\"   // prevent automatic close\r\n-                                key={key}\r\n-                                className=\"d-flex justify-content-between align-items-center\"\r\n-                            >\r\n-                                <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n-                                <Button\r\n-                                    size=\"sm\"\r\n-                                    variant=\"outline-primary\"\r\n-                                    onClick={(e) => {\r\n-                                        e.stopPropagation();   // prevent closing dropdown\r\n-                                        toggleSort(key);\r\n-                                    }}\r\n-                                >\r\n-                                    {getArrow(key)}\r\n-                                </Button>\r\n-                            </Dropdown.Item>\r\n-                        ))}\r\n-                    </Dropdown.Menu>\r\n-                </Dropdown >\r\n-                <span className=\"d-flex justify-content-end m-3\">\r\n-                    <label className=\"m-2\">Search:</label>\r\n-                    <input type=\"text\"\r\n-                        value={search}\r\n-                        placeholder=\"Search By Name\"\r\n-                        onChange={(e) => setSearch(e.target.value)} />\r\n-                </span>\r\n-                </div>\r\n-\r\n-                {/* <select>\r\n-                <option hidden selected>Select Sorting Option</option>\r\n-                <option onClick={() => handleSort('name')}>Name</option>\r\n-                <option onClick={() => handleSort('email')}>Email</option>\r\n-            </select> */}\r\n-\r\n-                < div className=\"d-flex flex-row flex-wrap justify-content-center\" >\r\n-                    {\r\n-                        sortedData.map((user) => (\r\n-                            <Card key={user.id} style={{\r\n-                                width: \"18rem\",\r\n-                                margin: \"15px\",\r\n-                                padding: \"10px\"\r\n-                            }}>\r\n-                                <Card.Body>\r\n-                                    <Card.Title>{user.id}</Card.Title>\r\n-                                    <Card.Text>\r\n-                                        <b>Name:</b>{user.name}<br />\r\n-                                        <b>Email:</b>{user.email}<br />\r\n-                                        <b>Company:</b>{user.company.name}\r\n-                                    </Card.Text>\r\n-                                </Card.Body>\r\n-                                <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n-                            </Card>\r\n-                        ))\r\n-                    }\r\n-                </div >\r\n-            </div >\r\n         </>\r\n     )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757586971749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     const navigate = useNavigate();\r\n     const [sortKey, setSortKey] = useState(null);\r\n     const [sortDirection, setSortDirection] = useState('asc');\r\n     const [dropdownOpen, setDropdownOpen] = useState(false);\r\n-    const[view,setView]=useState(\"card\")\r\n+    const [view, setView] = useState(\"card\")\r\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n             .then(res => res.json())\r\n@@ -33,15 +33,19 @@\n         item.name.toLowerCase().includes(search.toLowerCase())\r\n     );\r\n \r\n     const sortedData = [...filteredData].sort((a, b) => {\r\n-        const aValue = a[sortKey];\r\n-        const bValue = b[sortKey];\r\n+        if (!sortKey) return 0;\r\n+\r\n+        const aValue = String(a[sortKey] ?? \"\");\r\n+        const bValue = String(b[sortKey] ?? \"\");\r\n+\r\n         if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\r\n         if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n         return 0;\r\n     });\r\n \r\n+\r\n     const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\" : \"⬆️\")\r\n \r\n     return (\r\n         <>\r\n"
                },
                {
                    "date": 1757587011946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,19 +33,15 @@\n         item.name.toLowerCase().includes(search.toLowerCase())\r\n     );\r\n \r\n     const sortedData = [...filteredData].sort((a, b) => {\r\n-        if (!sortKey) return 0;\r\n-\r\n-        const aValue = String(a[sortKey] ?? \"\");\r\n-        const bValue = String(b[sortKey] ?? \"\");\r\n-\r\n+        const aValue = a[sortKey];\r\n+        const bValue = b[sortKey];\r\n         if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\r\n         if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n         return 0;\r\n     });\r\n \r\n-\r\n     const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\" : \"⬆️\")\r\n \r\n     return (\r\n         <>\r\n"
                },
                {
                    "date": 1757587232888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,16 +32,28 @@\n     const filteredData = data.filter(item =>\r\n         item.name.toLowerCase().includes(search.toLowerCase())\r\n     );\r\n \r\n+    // const sortedData = [...filteredData].sort((a, b) => {\r\n+    //     const aValue = a[sortKey];\r\n+    //     const bValue = b[sortKey];\r\n+    //     if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\r\n+    //     if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n+    //     return 0;\r\n+    // });\r\n+\r\n     const sortedData = [...filteredData].sort((a, b) => {\r\n-        const aValue = a[sortKey];\r\n-        const bValue = b[sortKey];\r\n-        if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\r\n-        if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n-        return 0;\r\n-    });\r\n+    if (!sortKey) return 0;\r\n \r\n+    const aValue = String(a[sortKey as keyof typeof a] ?? \"\");\r\n+    const bValue = String(b[sortKey as keyof typeof b] ?? \"\");\r\n+\r\n+    return sortDirection === \"asc\"\r\n+        ? aValue.localeCompare(bValue)\r\n+        : bValue.localeCompare(aValue);\r\n+});\r\n+\r\n+\r\n     const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\" : \"⬆️\")\r\n \r\n     return (\r\n         <>\r\n"
                },
                {
                    "date": 1757587302839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,145 @@\n+import { useState, useEffect } from \"react\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n+import Card from \"react-bootstrap/Card\";\r\n+import Button from \"react-bootstrap/Button\";\r\n+import Dropdown from \"react-bootstrap/Dropdown\";\r\n+import { Table } from \"react-bootstrap/Table\";\r\n+\r\n+export default function CardList() {\r\n+    const [data, setData] = useState([]);\r\n+    const [search, setSearch] = useState('');\r\n+    const navigate = useNavigate();\r\n+    const [sortKey, setSortKey] = useState(null);\r\n+    const [sortDirection, setSortDirection] = useState('asc');\r\n+    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n+    const [view, setView] = useState(\"card\")\r\n+\r\n+    useEffect(() => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n+            .then(res => res.json())\r\n+            .then(data => setData(data))\r\n+    }, [])\r\n+\r\n+    const toggleSort = (key) => {\r\n+        if (sortKey === key) {\r\n+            setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\r\n+        } else {\r\n+            setSortKey(key);\r\n+            setSortDirection(\"asc\");\r\n+        }\r\n+    };\r\n+\r\n+    const filteredData = data.filter(item =>\r\n+        item.name.toLowerCase().includes(search.toLowerCase())\r\n+    );\r\n+\r\n+    // const sortedData = [...filteredData].sort((a, b) => {\r\n+    //     const aValue = a[sortKey];\r\n+    //     const bValue = b[sortKey];\r\n+    //     if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\r\n+    //     if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n+    //     return 0;\r\n+    // });\r\n+\r\n+    const sortedData = [...filteredData].sort((a, b) => {\r\n+    if (!sortKey) return 0;\r\n+\r\n+    const aValue = String(a[sortKey] ?? \"\");\r\n+    const bValue = String(b[sortKey] ?? \"\");\r\n+\r\n+    return sortDirection === \"asc\"\r\n+        ? aValue.localeCompare(bValue)\r\n+        : bValue.localeCompare(aValue);\r\n+});\r\n+\r\n+\r\n+    const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\" : \"⬆️\")\r\n+\r\n+    return (\r\n+        <>\r\n+            <div className=\"d-flex justify-content-end m-3\">\r\n+                <button className=\"btn btn-primary\" style={{ margin: \"5px\" }} ><i className=\"bi bi-card-text\"></i></button>\r\n+                <button className=\"btn btn-primary\" style={{ margin: \"5px\" }}><i className=\"bi bi-table\"></i></button>\r\n+\r\n+            </div>\r\n+            {/* <div className=\"container\">\r\n+                <div className=\"d-flex justify-content-between\">\r\n+                <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)} className=\"m-3\">\r\n+                    <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n+                        Sort Options\r\n+                    </Dropdown.Toggle>\r\n+                    <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n+                        {[\"name\", \"email\"].map((key) => (\r\n+                            <Dropdown.Item\r\n+                                as=\"div\"   // prevent automatic close\r\n+                                key={key}\r\n+                                className=\"d-flex justify-content-between align-items-center\"\r\n+                            >\r\n+                                <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n+                                <Button\r\n+                                    size=\"sm\"\r\n+                                    variant=\"outline-primary\"\r\n+                                    onClick={(e) => {\r\n+                                        e.stopPropagation();   // prevent closing dropdown\r\n+                                        toggleSort(key);\r\n+                                    }}\r\n+                                >\r\n+                                    {getArrow(key)}\r\n+                                </Button>\r\n+                            </Dropdown.Item>\r\n+                        ))}\r\n+                    </Dropdown.Menu>\r\n+                </Dropdown >\r\n+                <span className=\"d-flex justify-content-end m-3\">\r\n+                    <label className=\"m-2\">Search:</label>\r\n+                    <input type=\"text\"\r\n+                        value={search}\r\n+                        placeholder=\"Search By Name\"\r\n+                        onChange={(e) => setSearch(e.target.value)} />\r\n+                </span>\r\n+                </div>\r\n+\r\n+                {/* <select>\r\n+                <option hidden selected>Select Sorting Option</option>\r\n+                <option onClick={() => handleSort('name')}>Name</option>\r\n+                <option onClick={() => handleSort('email')}>Email</option>\r\n+            </select> */}\r\n+\r\n+            {/* < div className=\"d-flex flex-row flex-wrap justify-content-center\" >\r\n+                    {\r\n+                        sortedData.map((user) => (\r\n+                            <Card key={user.id} style={{\r\n+                                width: \"18rem\",\r\n+                                margin: \"15px\",\r\n+                                padding: \"10px\"\r\n+                            }}>\r\n+                                <Card.Body>\r\n+                                    <Card.Title>{user.id}</Card.Title>\r\n+                                    <Card.Text>\r\n+                                        <b>Name:</b>{user.name}<br />\r\n+                                        <b>Email:</b>{user.email}<br />\r\n+                                        <b>Company:</b>{user.company.name}\r\n+                                    </Card.Text>\r\n+                                </Card.Body>\r\n+                                <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n+                            </Card>\r\n+                        ))\r\n+                    }\r\n+                </div > \r\n+        </div > */}\r\n+\r\n+            {view === \"card\" ? (\r\n+                <CardView data={sortedData} navigate={navigate} />\r\n+            ) : (\r\n+                <TableView\r\n+                    data={sortedData}\r\n+                    sortKey={sortKey}\r\n+                    sortDirection={sortDirection}\r\n+                    toggleSort={toggleSort}\r\n+                    navigate={navigate}\r\n+                />\r\n+            )}\r\n+\r\n+        </>\r\n+    )\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757587327288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,8 @@\n import { useNavigate } from \"react-router-dom\";\r\n import Card from \"react-bootstrap/Card\";\r\n import Button from \"react-bootstrap/Button\";\r\n import Dropdown from \"react-bootstrap/Dropdown\";\r\n-import { Table } from \"react-bootstrap/Table\";\r\n \r\n export default function CardList() {\r\n     const [data, setData] = useState([]);\r\n     const [search, setSearch] = useState('');\r\n@@ -141,150 +140,5 @@\n             )}\r\n \r\n         </>\r\n     )\r\n-}\n-import { useState, useEffect } from \"react\";\r\n-import { useNavigate } from \"react-router-dom\";\r\n-import Card from \"react-bootstrap/Card\";\r\n-import Button from \"react-bootstrap/Button\";\r\n-import Dropdown from \"react-bootstrap/Dropdown\";\r\n-import { Table } from \"react-bootstrap/Table\";\r\n-\r\n-export default function CardList() {\r\n-    const [data, setData] = useState([]);\r\n-    const [search, setSearch] = useState('');\r\n-    const navigate = useNavigate();\r\n-    const [sortKey, setSortKey] = useState(null);\r\n-    const [sortDirection, setSortDirection] = useState('asc');\r\n-    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n-    const [view, setView] = useState(\"card\")\r\n-\r\n-    useEffect(() => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n-            .then(res => res.json())\r\n-            .then(data => setData(data))\r\n-    }, [])\r\n-\r\n-    const toggleSort = (key) => {\r\n-        if (sortKey === key) {\r\n-            setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\r\n-        } else {\r\n-            setSortKey(key);\r\n-            setSortDirection(\"asc\");\r\n-        }\r\n-    };\r\n-\r\n-    const filteredData = data.filter(item =>\r\n-        item.name.toLowerCase().includes(search.toLowerCase())\r\n-    );\r\n-\r\n-    // const sortedData = [...filteredData].sort((a, b) => {\r\n-    //     const aValue = a[sortKey];\r\n-    //     const bValue = b[sortKey];\r\n-    //     if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\r\n-    //     if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n-    //     return 0;\r\n-    // });\r\n-\r\n-    const sortedData = [...filteredData].sort((a, b) => {\r\n-    if (!sortKey) return 0;\r\n-\r\n-    const aValue = String(a[sortKey as keyof typeof a] ?? \"\");\r\n-    const bValue = String(b[sortKey as keyof typeof b] ?? \"\");\r\n-\r\n-    return sortDirection === \"asc\"\r\n-        ? aValue.localeCompare(bValue)\r\n-        : bValue.localeCompare(aValue);\r\n-});\r\n-\r\n-\r\n-    const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\" : \"⬆️\")\r\n-\r\n-    return (\r\n-        <>\r\n-            <div className=\"d-flex justify-content-end m-3\">\r\n-                <button className=\"btn btn-primary\" style={{ margin: \"5px\" }} ><i className=\"bi bi-card-text\"></i></button>\r\n-                <button className=\"btn btn-primary\" style={{ margin: \"5px\" }}><i className=\"bi bi-table\"></i></button>\r\n-\r\n-            </div>\r\n-            {/* <div className=\"container\">\r\n-                <div className=\"d-flex justify-content-between\">\r\n-                <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)} className=\"m-3\">\r\n-                    <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n-                        Sort Options\r\n-                    </Dropdown.Toggle>\r\n-                    <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n-                        {[\"name\", \"email\"].map((key) => (\r\n-                            <Dropdown.Item\r\n-                                as=\"div\"   // prevent automatic close\r\n-                                key={key}\r\n-                                className=\"d-flex justify-content-between align-items-center\"\r\n-                            >\r\n-                                <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n-                                <Button\r\n-                                    size=\"sm\"\r\n-                                    variant=\"outline-primary\"\r\n-                                    onClick={(e) => {\r\n-                                        e.stopPropagation();   // prevent closing dropdown\r\n-                                        toggleSort(key);\r\n-                                    }}\r\n-                                >\r\n-                                    {getArrow(key)}\r\n-                                </Button>\r\n-                            </Dropdown.Item>\r\n-                        ))}\r\n-                    </Dropdown.Menu>\r\n-                </Dropdown >\r\n-                <span className=\"d-flex justify-content-end m-3\">\r\n-                    <label className=\"m-2\">Search:</label>\r\n-                    <input type=\"text\"\r\n-                        value={search}\r\n-                        placeholder=\"Search By Name\"\r\n-                        onChange={(e) => setSearch(e.target.value)} />\r\n-                </span>\r\n-                </div>\r\n-\r\n-                {/* <select>\r\n-                <option hidden selected>Select Sorting Option</option>\r\n-                <option onClick={() => handleSort('name')}>Name</option>\r\n-                <option onClick={() => handleSort('email')}>Email</option>\r\n-            </select> */}\r\n-\r\n-            {/* < div className=\"d-flex flex-row flex-wrap justify-content-center\" >\r\n-                    {\r\n-                        sortedData.map((user) => (\r\n-                            <Card key={user.id} style={{\r\n-                                width: \"18rem\",\r\n-                                margin: \"15px\",\r\n-                                padding: \"10px\"\r\n-                            }}>\r\n-                                <Card.Body>\r\n-                                    <Card.Title>{user.id}</Card.Title>\r\n-                                    <Card.Text>\r\n-                                        <b>Name:</b>{user.name}<br />\r\n-                                        <b>Email:</b>{user.email}<br />\r\n-                                        <b>Company:</b>{user.company.name}\r\n-                                    </Card.Text>\r\n-                                </Card.Body>\r\n-                                <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n-                            </Card>\r\n-                        ))\r\n-                    }\r\n-                </div > \r\n-        </div > */}\r\n-\r\n-            {view === \"card\" ? (\r\n-                <CardView data={sortedData} navigate={navigate} />\r\n-            ) : (\r\n-                <TableView\r\n-                    data={sortedData}\r\n-                    sortKey={sortKey}\r\n-                    sortDirection={sortDirection}\r\n-                    toggleSort={toggleSort}\r\n-                    navigate={navigate}\r\n-                />\r\n-            )}\r\n-\r\n-        </>\r\n-    )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757587443459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,10 @@\n import { useNavigate } from \"react-router-dom\";\r\n import Card from \"react-bootstrap/Card\";\r\n import Button from \"react-bootstrap/Button\";\r\n import Dropdown from \"react-bootstrap/Dropdown\";\r\n+import CardView from \"./Card\";\r\n+import TableView from \"./Table.jsx\";\r\n \r\n export default function CardList() {\r\n     const [data, setData] = useState([]);\r\n     const [search, setSearch] = useState('');\r\n"
                },
                {
                    "date": 1757587626990,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import Card from \"react-bootstrap/Card\";\r\n import Button from \"react-bootstrap/Button\";\r\n import Dropdown from \"react-bootstrap/Dropdown\";\r\n import CardView from \"./Card\";\r\n-import TableView from \"./Table.jsx\";\r\n+import TableView from \"./Table\";\r\n \r\n export default function CardList() {\r\n     const [data, setData] = useState([]);\r\n     const [search, setSearch] = useState('');\r\n@@ -53,9 +53,9 @@\n         : bValue.localeCompare(aValue);\r\n });\r\n \r\n \r\n-    const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\" : \"⬆️\")\r\n+    //const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\" : \"⬆️\")\r\n \r\n     return (\r\n         <>\r\n             <div className=\"d-flex justify-content-end m-3\">\r\n"
                },
                {
                    "date": 1757587677303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,10 +2,10 @@\n import { useNavigate } from \"react-router-dom\";\r\n import Card from \"react-bootstrap/Card\";\r\n import Button from \"react-bootstrap/Button\";\r\n import Dropdown from \"react-bootstrap/Dropdown\";\r\n-import CardView from \"./Card\";\r\n-import TableView from \"./Table\";\r\n+import CardView from \"./CardView\";\r\n+import TableView from \"./TableView\";\r\n \r\n export default function CardList() {\r\n     const [data, setData] = useState([]);\r\n     const [search, setSearch] = useState('');\r\n"
                },
                {
                    "date": 1757587965488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n                 <button className=\"btn btn-primary\" style={{ margin: \"5px\" }} ><i className=\"bi bi-card-text\"></i></button>\r\n                 <button className=\"btn btn-primary\" style={{ margin: \"5px\" }}><i className=\"bi bi-table\"></i></button>\r\n \r\n             </div>\r\n-            {/* <div className=\"container\">\r\n+            <div className=\"container\">\r\n                 <div className=\"d-flex justify-content-between\">\r\n                 <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)} className=\"m-3\">\r\n                     <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n                         Sort Options\r\n@@ -126,9 +126,9 @@\n                             </Card>\r\n                         ))\r\n                     }\r\n                 </div > \r\n-        </div > */}\r\n+        </div >\r\n \r\n             {view === \"card\" ? (\r\n                 <CardView data={sortedData} navigate={navigate} />\r\n             ) : (\r\n"
                },
                {
                    "date": 1757587977591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,146 @@\n+import { useState, useEffect } from \"react\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n+import Card from \"react-bootstrap/Card\";\r\n+import Button from \"react-bootstrap/Button\";\r\n+import Dropdown from \"react-bootstrap/Dropdown\";\r\n+import CardView from \"./CardView\";\r\n+import TableView from \"./TableView\";\r\n+\r\n+export default function CardList() {\r\n+    const [data, setData] = useState([]);\r\n+    const [search, setSearch] = useState('');\r\n+    const navigate = useNavigate();\r\n+    const [sortKey, setSortKey] = useState(null);\r\n+    const [sortDirection, setSortDirection] = useState('asc');\r\n+    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n+    const [view, setView] = useState(\"card\")\r\n+\r\n+    useEffect(() => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n+            .then(res => res.json())\r\n+            .then(data => setData(data))\r\n+    }, [])\r\n+\r\n+    const toggleSort = (key) => {\r\n+        if (sortKey === key) {\r\n+            setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\r\n+        } else {\r\n+            setSortKey(key);\r\n+            setSortDirection(\"asc\");\r\n+        }\r\n+    };\r\n+\r\n+    const filteredData = data.filter(item =>\r\n+        item.name.toLowerCase().includes(search.toLowerCase())\r\n+    );\r\n+\r\n+    // const sortedData = [...filteredData].sort((a, b) => {\r\n+    //     const aValue = a[sortKey];\r\n+    //     const bValue = b[sortKey];\r\n+    //     if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\r\n+    //     if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n+    //     return 0;\r\n+    // });\r\n+\r\n+    const sortedData = [...filteredData].sort((a, b) => {\r\n+    if (!sortKey) return 0;\r\n+\r\n+    const aValue = String(a[sortKey] ?? \"\");\r\n+    const bValue = String(b[sortKey] ?? \"\");\r\n+\r\n+    return sortDirection === \"asc\"\r\n+        ? aValue.localeCompare(bValue)\r\n+        : bValue.localeCompare(aValue);\r\n+});\r\n+\r\n+\r\n+    //const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\" : \"⬆️\")\r\n+\r\n+    return (\r\n+        <>\r\n+            <div className=\"d-flex justify-content-end m-3\">\r\n+                <button className=\"btn btn-primary\" style={{ margin: \"5px\" }} ><i className=\"bi bi-card-text\"></i></button>\r\n+                <button className=\"btn btn-primary\" style={{ margin: \"5px\" }}><i className=\"bi bi-table\"></i></button>\r\n+\r\n+            </div>\r\n+            <div className=\"container\">\r\n+                <div className=\"d-flex justify-content-between\">\r\n+                <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)} className=\"m-3\">\r\n+                    <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n+                        Sort Options\r\n+                    </Dropdown.Toggle>\r\n+                    <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n+                        {[\"name\", \"email\"].map((key) => (\r\n+                            <Dropdown.Item\r\n+                                as=\"div\"   // prevent automatic close\r\n+                                key={key}\r\n+                                className=\"d-flex justify-content-between align-items-center\"\r\n+                            >\r\n+                                <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n+                                <Button\r\n+                                    size=\"sm\"\r\n+                                    variant=\"outline-primary\"\r\n+                                    onClick={(e) => {\r\n+                                        e.stopPropagation();   // prevent closing dropdown\r\n+                                        toggleSort(key);\r\n+                                    }}\r\n+                                >\r\n+                                    {getArrow(key)}\r\n+                                </Button>\r\n+                            </Dropdown.Item>\r\n+                        ))}\r\n+                    </Dropdown.Menu>\r\n+                </Dropdown >\r\n+                <span className=\"d-flex justify-content-end m-3\">\r\n+                    <label className=\"m-2\">Search:</label>\r\n+                    <input type=\"text\"\r\n+                        value={search}\r\n+                        placeholder=\"Search By Name\"\r\n+                        onChange={(e) => setSearch(e.target.value)} />\r\n+                </span>\r\n+                </div>\r\n+\r\n+                {/* <select>\r\n+                <option hidden selected>Select Sorting Option</option>\r\n+                <option onClick={() => handleSort('name')}>Name</option>\r\n+                <option onClick={() => handleSort('email')}>Email</option>\r\n+            </select> */}\r\n+\r\n+             < div className=\"d-flex flex-row flex-wrap justify-content-center\" >\r\n+                    {\r\n+                        sortedData.map((user) => (\r\n+                            <Card key={user.id} style={{\r\n+                                width: \"18rem\",\r\n+                                margin: \"15px\",\r\n+                                padding: \"10px\"\r\n+                            }}>\r\n+                                <Card.Body>\r\n+                                    <Card.Title>{user.id}</Card.Title>\r\n+                                    <Card.Text>\r\n+                                        <b>Name:</b>{user.name}<br />\r\n+                                        <b>Email:</b>{user.email}<br />\r\n+                                        <b>Company:</b>{user.company.name}\r\n+                                    </Card.Text>\r\n+                                </Card.Body>\r\n+                                <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n+                            </Card>\r\n+                        ))\r\n+                    }\r\n+                </div > \r\n+        </div >\r\n+\r\n+            {view === \"card\" ? (\r\n+                <CardView data={sortedData} navigate={navigate} />\r\n+            ) : (\r\n+                <TableView\r\n+                    data={sortedData}\r\n+                    sortKey={sortKey}\r\n+                    sortDirection={sortDirection}\r\n+                    toggleSort={toggleSort}\r\n+                    navigate={navigate}\r\n+                />\r\n+            )}\r\n+\r\n+        </>\r\n+    )\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757587996058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,20 +42,20 @@\n     //     return 0;\r\n     // });\r\n \r\n     const sortedData = [...filteredData].sort((a, b) => {\r\n-    if (!sortKey) return 0;\r\n+        if (!sortKey) return 0;\r\n \r\n-    const aValue = String(a[sortKey] ?? \"\");\r\n-    const bValue = String(b[sortKey] ?? \"\");\r\n+        const aValue = String(a[sortKey] ?? \"\");\r\n+        const bValue = String(b[sortKey] ?? \"\");\r\n \r\n-    return sortDirection === \"asc\"\r\n-        ? aValue.localeCompare(bValue)\r\n-        : bValue.localeCompare(aValue);\r\n-});\r\n+        return sortDirection === \"asc\"\r\n+            ? aValue.localeCompare(bValue)\r\n+            : bValue.localeCompare(aValue);\r\n+    });\r\n \r\n \r\n-    //const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\" : \"⬆️\")\r\n+    const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\" : \"⬆️\")\r\n \r\n     return (\r\n         <>\r\n             <div className=\"d-flex justify-content-end m-3\">\r\n@@ -64,50 +64,50 @@\n \r\n             </div>\r\n             <div className=\"container\">\r\n                 <div className=\"d-flex justify-content-between\">\r\n-                <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)} className=\"m-3\">\r\n-                    <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n-                        Sort Options\r\n-                    </Dropdown.Toggle>\r\n-                    <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n-                        {[\"name\", \"email\"].map((key) => (\r\n-                            <Dropdown.Item\r\n-                                as=\"div\"   // prevent automatic close\r\n-                                key={key}\r\n-                                className=\"d-flex justify-content-between align-items-center\"\r\n-                            >\r\n-                                <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n-                                <Button\r\n-                                    size=\"sm\"\r\n-                                    variant=\"outline-primary\"\r\n-                                    onClick={(e) => {\r\n-                                        e.stopPropagation();   // prevent closing dropdown\r\n-                                        toggleSort(key);\r\n-                                    }}\r\n+                    <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)} className=\"m-3\">\r\n+                        <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n+                            Sort Options\r\n+                        </Dropdown.Toggle>\r\n+                        <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n+                            {[\"name\", \"email\"].map((key) => (\r\n+                                <Dropdown.Item\r\n+                                    as=\"div\"   // prevent automatic close\r\n+                                    key={key}\r\n+                                    className=\"d-flex justify-content-between align-items-center\"\r\n                                 >\r\n-                                    {getArrow(key)}\r\n-                                </Button>\r\n-                            </Dropdown.Item>\r\n-                        ))}\r\n-                    </Dropdown.Menu>\r\n-                </Dropdown >\r\n-                <span className=\"d-flex justify-content-end m-3\">\r\n-                    <label className=\"m-2\">Search:</label>\r\n-                    <input type=\"text\"\r\n-                        value={search}\r\n-                        placeholder=\"Search By Name\"\r\n-                        onChange={(e) => setSearch(e.target.value)} />\r\n-                </span>\r\n+                                    <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n+                                    <Button\r\n+                                        size=\"sm\"\r\n+                                        variant=\"outline-primary\"\r\n+                                        onClick={(e) => {\r\n+                                            e.stopPropagation();   // prevent closing dropdown\r\n+                                            toggleSort(key);\r\n+                                        }}\r\n+                                    >\r\n+                                        {getArrow(key)}\r\n+                                    </Button>\r\n+                                </Dropdown.Item>\r\n+                            ))}\r\n+                        </Dropdown.Menu>\r\n+                    </Dropdown >\r\n+                    <span className=\"d-flex justify-content-end m-3\">\r\n+                        <label className=\"m-2\">Search:</label>\r\n+                        <input type=\"text\"\r\n+                            value={search}\r\n+                            placeholder=\"Search By Name\"\r\n+                            onChange={(e) => setSearch(e.target.value)} />\r\n+                    </span>\r\n                 </div>\r\n \r\n                 {/* <select>\r\n                 <option hidden selected>Select Sorting Option</option>\r\n                 <option onClick={() => handleSort('name')}>Name</option>\r\n                 <option onClick={() => handleSort('email')}>Email</option>\r\n             </select> */}\r\n \r\n-             < div className=\"d-flex flex-row flex-wrap justify-content-center\" >\r\n+                < div className=\"d-flex flex-row flex-wrap justify-content-center\" >\r\n                     {\r\n                         sortedData.map((user) => (\r\n                             <Card key={user.id} style={{\r\n                                 width: \"18rem\",\r\n@@ -125,10 +125,10 @@\n                                 <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n                             </Card>\r\n                         ))\r\n                     }\r\n-                </div > \r\n-        </div >\r\n+                </div >\r\n+            </div >\r\n \r\n             {view === \"card\" ? (\r\n                 <CardView data={sortedData} navigate={navigate} />\r\n             ) : (\r\n@@ -142,151 +142,5 @@\n             )}\r\n \r\n         </>\r\n     )\r\n-}\n-import { useState, useEffect } from \"react\";\r\n-import { useNavigate } from \"react-router-dom\";\r\n-import Card from \"react-bootstrap/Card\";\r\n-import Button from \"react-bootstrap/Button\";\r\n-import Dropdown from \"react-bootstrap/Dropdown\";\r\n-import CardView from \"./CardView\";\r\n-import TableView from \"./TableView\";\r\n-\r\n-export default function CardList() {\r\n-    const [data, setData] = useState([]);\r\n-    const [search, setSearch] = useState('');\r\n-    const navigate = useNavigate();\r\n-    const [sortKey, setSortKey] = useState(null);\r\n-    const [sortDirection, setSortDirection] = useState('asc');\r\n-    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n-    const [view, setView] = useState(\"card\")\r\n-\r\n-    useEffect(() => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n-            .then(res => res.json())\r\n-            .then(data => setData(data))\r\n-    }, [])\r\n-\r\n-    const toggleSort = (key) => {\r\n-        if (sortKey === key) {\r\n-            setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\r\n-        } else {\r\n-            setSortKey(key);\r\n-            setSortDirection(\"asc\");\r\n-        }\r\n-    };\r\n-\r\n-    const filteredData = data.filter(item =>\r\n-        item.name.toLowerCase().includes(search.toLowerCase())\r\n-    );\r\n-\r\n-    // const sortedData = [...filteredData].sort((a, b) => {\r\n-    //     const aValue = a[sortKey];\r\n-    //     const bValue = b[sortKey];\r\n-    //     if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\r\n-    //     if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n-    //     return 0;\r\n-    // });\r\n-\r\n-    const sortedData = [...filteredData].sort((a, b) => {\r\n-    if (!sortKey) return 0;\r\n-\r\n-    const aValue = String(a[sortKey] ?? \"\");\r\n-    const bValue = String(b[sortKey] ?? \"\");\r\n-\r\n-    return sortDirection === \"asc\"\r\n-        ? aValue.localeCompare(bValue)\r\n-        : bValue.localeCompare(aValue);\r\n-});\r\n-\r\n-\r\n-    //const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\" : \"⬆️\")\r\n-\r\n-    return (\r\n-        <>\r\n-            <div className=\"d-flex justify-content-end m-3\">\r\n-                <button className=\"btn btn-primary\" style={{ margin: \"5px\" }} ><i className=\"bi bi-card-text\"></i></button>\r\n-                <button className=\"btn btn-primary\" style={{ margin: \"5px\" }}><i className=\"bi bi-table\"></i></button>\r\n-\r\n-            </div>\r\n-            <div className=\"container\">\r\n-                <div className=\"d-flex justify-content-between\">\r\n-                <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)} className=\"m-3\">\r\n-                    <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n-                        Sort Options\r\n-                    </Dropdown.Toggle>\r\n-                    <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n-                        {[\"name\", \"email\"].map((key) => (\r\n-                            <Dropdown.Item\r\n-                                as=\"div\"   // prevent automatic close\r\n-                                key={key}\r\n-                                className=\"d-flex justify-content-between align-items-center\"\r\n-                            >\r\n-                                <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n-                                <Button\r\n-                                    size=\"sm\"\r\n-                                    variant=\"outline-primary\"\r\n-                                    onClick={(e) => {\r\n-                                        e.stopPropagation();   // prevent closing dropdown\r\n-                                        toggleSort(key);\r\n-                                    }}\r\n-                                >\r\n-                                    {getArrow(key)}\r\n-                                </Button>\r\n-                            </Dropdown.Item>\r\n-                        ))}\r\n-                    </Dropdown.Menu>\r\n-                </Dropdown >\r\n-                <span className=\"d-flex justify-content-end m-3\">\r\n-                    <label className=\"m-2\">Search:</label>\r\n-                    <input type=\"text\"\r\n-                        value={search}\r\n-                        placeholder=\"Search By Name\"\r\n-                        onChange={(e) => setSearch(e.target.value)} />\r\n-                </span>\r\n-                </div>\r\n-\r\n-                {/* <select>\r\n-                <option hidden selected>Select Sorting Option</option>\r\n-                <option onClick={() => handleSort('name')}>Name</option>\r\n-                <option onClick={() => handleSort('email')}>Email</option>\r\n-            </select> */}\r\n-\r\n-            {/* < div className=\"d-flex flex-row flex-wrap justify-content-center\" >\r\n-                    {\r\n-                        sortedData.map((user) => (\r\n-                            <Card key={user.id} style={{\r\n-                                width: \"18rem\",\r\n-                                margin: \"15px\",\r\n-                                padding: \"10px\"\r\n-                            }}>\r\n-                                <Card.Body>\r\n-                                    <Card.Title>{user.id}</Card.Title>\r\n-                                    <Card.Text>\r\n-                                        <b>Name:</b>{user.name}<br />\r\n-                                        <b>Email:</b>{user.email}<br />\r\n-                                        <b>Company:</b>{user.company.name}\r\n-                                    </Card.Text>\r\n-                                </Card.Body>\r\n-                                <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n-                            </Card>\r\n-                        ))\r\n-                    }\r\n-                </div > \r\n-        </div >\r\n-\r\n-            {view === \"card\" ? (\r\n-                <CardView data={sortedData} navigate={navigate} />\r\n-            ) : (\r\n-                <TableView\r\n-                    data={sortedData}\r\n-                    sortKey={sortKey}\r\n-                    sortDirection={sortDirection}\r\n-                    toggleSort={toggleSort}\r\n-                    navigate={navigate}\r\n-                />\r\n-            )}\r\n-\r\n-        </>\r\n-    )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757588020991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,9 +105,9 @@\n                 <option onClick={() => handleSort('name')}>Name</option>\r\n                 <option onClick={() => handleSort('email')}>Email</option>\r\n             </select> */}\r\n \r\n-                < div className=\"d-flex flex-row flex-wrap justify-content-center\" >\r\n+                {/* < div className=\"d-flex flex-row flex-wrap justify-content-center\" >\r\n                     {\r\n                         sortedData.map((user) => (\r\n                             <Card key={user.id} style={{\r\n                                 width: \"18rem\",\r\n@@ -125,9 +125,9 @@\n                                 <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n                             </Card>\r\n                         ))\r\n                     }\r\n-                </div >\r\n+                </div > */}\r\n             </div >\r\n \r\n             {view === \"card\" ? (\r\n                 <CardView data={sortedData} navigate={navigate} />\r\n"
                },
                {
                    "date": 1757588234130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,11 +58,14 @@\n \r\n     return (\r\n         <>\r\n             <div className=\"d-flex justify-content-end m-3\">\r\n-                <button className=\"btn btn-primary\" style={{ margin: \"5px\" }} ><i className=\"bi bi-card-text\"></i></button>\r\n-                <button className=\"btn btn-primary\" style={{ margin: \"5px\" }}><i className=\"bi bi-table\"></i></button>\r\n-\r\n+                <Button variant=\"primary\" className=\"me-2\" onClick={() => setView(\"card\")}>\r\n+                    <i className=\"bi bi-card-text\"></i>\r\n+                </Button>\r\n+                <Button variant=\"primary\" onClick={() => setView(\"table\")}>\r\n+                    <i className=\"bi bi-table\"></i>\r\n+                </Button>\r\n             </div>\r\n             <div className=\"container\">\r\n                 <div className=\"d-flex justify-content-between\">\r\n                     <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)} className=\"m-3\">\r\n"
                },
                {
                    "date": 1757588315455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,6 @@\n import { useState, useEffect } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n-import Card from \"react-bootstrap/Card\";\r\n import Button from \"react-bootstrap/Button\";\r\n import Dropdown from \"react-bootstrap/Dropdown\";\r\n import CardView from \"./CardView\";\r\n import TableView from \"./TableView\";\r\n"
                },
                {
                    "date": 1757588494918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,151 @@\n+import { useState, useEffect } from \"react\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n+import Button from \"react-bootstrap/Button\";\r\n+import Dropdown from \"react-bootstrap/Dropdown\";\r\n+import CardView from \"./CardView\";\r\n+import TableView from \"./TableView\";\r\n+\r\n+export default function CardList() {\r\n+    const [data, setData] = useState([]);\r\n+    const [search, setSearch] = useState('');\r\n+    const navigate = useNavigate();\r\n+    const [sortKey, setSortKey] = useState(null);\r\n+    const [sortDirection, setSortDirection] = useState('asc');\r\n+    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n+    const [view, setView] = useState(\"card\")\r\n+\r\n+    useEffect(() => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n+            .then(res => res.json())\r\n+            .then(data => setData(data))\r\n+    }, [])\r\n+\r\n+    const toggleSort = (key) => {\r\n+        if (sortKey === key) {\r\n+            setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\r\n+        } else {\r\n+            setSortKey(key);\r\n+            setSortDirection(\"asc\");\r\n+        }\r\n+    };\r\n+\r\n+    const filteredData = data.filter(item =>\r\n+        item.name.toLowerCase().includes(search.toLowerCase())\r\n+    );\r\n+\r\n+    // const sortedData = [...filteredData].sort((a, b) => {\r\n+    //     const aValue = a[sortKey];\r\n+    //     const bValue = b[sortKey];\r\n+    //     if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\r\n+    //     if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n+    //     return 0;\r\n+    // });\r\n+\r\n+    const sortedData = [...filteredData].sort((a, b) => {\r\n+        if (!sortKey) return 0;\r\n+\r\n+        const aValue = String(a[sortKey] ?? \"\");\r\n+        const bValue = String(b[sortKey] ?? \"\");\r\n+\r\n+        return sortDirection === \"asc\"\r\n+            ? aValue.localeCompare(bValue)\r\n+            : bValue.localeCompare(aValue);\r\n+    });\r\n+\r\n+\r\n+    const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\" : \"⬆️\")\r\n+\r\n+    return (\r\n+        <>\r\n+            <div className=\"d-flex justify-content-end m-3\">\r\n+                <Button variant=\"primary\" className=\"me-2\" onClick={() => setView(\"card\")}>\r\n+                    <i className=\"bi bi-card-text\"></i>\r\n+                </Button>\r\n+                <Button variant=\"primary\" onClick={() => setView(\"table\")}>\r\n+                    <i className=\"bi bi-table\"></i>\r\n+                </Button>\r\n+            </div>\r\n+            <div className=\"container\">\r\n+                <div className=\"d-flex justify-content-between\">\r\n+                    {view===\"card\" && (\r\n+                    <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)} className=\"m-3\">\r\n+                        <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n+                            Sort Options\r\n+                        </Dropdown.Toggle>\r\n+                        <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n+                            {[\"name\", \"email\"].map((key) => (\r\n+                                <Dropdown.Item\r\n+                                    as=\"div\"   // prevent automatic close\r\n+                                    key={key}\r\n+                                    className=\"d-flex justify-content-between align-items-center\"\r\n+                                >\r\n+                                    <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n+                                    <Button\r\n+                                        size=\"sm\"\r\n+                                        variant=\"outline-primary\"\r\n+                                        onClick={(e) => {\r\n+                                            e.stopPropagation();   // prevent closing dropdown\r\n+                                            toggleSort(key);\r\n+                                        }}\r\n+                                    >\r\n+                                        {getArrow(key)}\r\n+                                    </Button>\r\n+                                </Dropdown.Item>\r\n+                            ))}\r\n+                        </Dropdown.Menu>\r\n+                        \r\n+                    </Dropdown >\r\n+                    )}\r\n+                    <span className=\"d-flex justify-content-end m-3\">\r\n+                        <label className=\"m-2\">Search:</label>\r\n+                        <input type=\"text\"\r\n+                            value={search}\r\n+                            placeholder=\"Search By Name\"\r\n+                            onChange={(e) => setSearch(e.target.value)} />\r\n+                    </span>\r\n+                </div>\r\n+\r\n+                {/* <select>\r\n+                <option hidden selected>Select Sorting Option</option>\r\n+                <option onClick={() => handleSort('name')}>Name</option>\r\n+                <option onClick={() => handleSort('email')}>Email</option>\r\n+            </select> */}\r\n+\r\n+                {/* < div className=\"d-flex flex-row flex-wrap justify-content-center\" >\r\n+                    {\r\n+                        sortedData.map((user) => (\r\n+                            <Card key={user.id} style={{\r\n+                                width: \"18rem\",\r\n+                                margin: \"15px\",\r\n+                                padding: \"10px\"\r\n+                            }}>\r\n+                                <Card.Body>\r\n+                                    <Card.Title>{user.id}</Card.Title>\r\n+                                    <Card.Text>\r\n+                                        <b>Name:</b>{user.name}<br />\r\n+                                        <b>Email:</b>{user.email}<br />\r\n+                                        <b>Company:</b>{user.company.name}\r\n+                                    </Card.Text>\r\n+                                </Card.Body>\r\n+                                <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n+                            </Card>\r\n+                        ))\r\n+                    }\r\n+                </div > */}\r\n+            </div >\r\n+\r\n+            {view === \"card\" ? (\r\n+                <CardView data={sortedData} navigate={navigate} />\r\n+            ) : (\r\n+                <TableView\r\n+                    data={sortedData}\r\n+                    sortKey={sortKey}\r\n+                    sortDirection={sortDirection}\r\n+                    toggleSort={toggleSort}\r\n+                    navigate={navigate}\r\n+                />\r\n+            )}\r\n+\r\n+        </>\r\n+    )\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757589818061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n             <div className=\"container\">\r\n                 <div className=\"d-flex justify-content-between\">\r\n                     {view === \"card\" && (\r\n                         <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)} className=\"m-3\">\r\n-                            <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n+                            <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"primary\">\r\n                                 Sort Options\r\n                             </Dropdown.Toggle>\r\n                             <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n                                 {[\"name\", \"email\"].map((key) => (\r\n"
                },
                {
                    "date": 1757589879548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n                     <i className=\"bi bi-table\"></i>\r\n                 </Button>\r\n             </div>\r\n             <div className=\"container\">\r\n-                <div className=\"d-flex justify-content-between mb-8\">\r\n+                <div className=\"d-flex justify-content-between\" style={{marginBottom:\"10px\"}}>\r\n                     {view === \"card\" && (\r\n                         <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)} className=\"m-3\">\r\n                             <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"primary\">\r\n                                 Sort Options\r\n"
                }
            ],
            "date": 1757586112531,
            "name": "Commit-0",
            "content": "import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport { Table } from \"react-bootstrap/Table\";\r\n\r\nexport default function CardList() {\r\n    const [data, setData] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const navigate = useNavigate();\r\n    const [sortKey, setSortKey] = useState(null);\r\n    const [sortDirection, setSortDirection] = useState('asc');\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n            .then(res => res.json())\r\n            .then(data => setData(data))\r\n    }, [])\r\n\r\n    const toggleSort = (key) => {\r\n        if (sortKey === key) {\r\n            setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\r\n        } else {\r\n            setSortKey(key);\r\n            setSortDirection(\"asc\");\r\n        }\r\n    };\r\n\r\n    const filteredData = data.filter(item =>\r\n        item.name.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n\r\n    const sortedData = [...filteredData].sort((a, b) => {\r\n        const aValue = a[sortKey];\r\n        const bValue = b[sortKey];\r\n        if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\r\n        if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n        return 0;\r\n    });\r\n\r\n    const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\" : \"⬆️\")\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex justify-content-end m-3\">\r\n                <button className=\"btn btn-primary\" style={{margin:\"5px\"}} onClick={}><i className=\"bi bi-card-text\"></i></button>\r\n                <button className=\"btn btn-primary\" style={{margin:\"5px\"}}><i className=\"bi bi-table\"></i></button>\r\n\r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"d-flex justify-content-between\">\r\n                <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)} className=\"m-3\">\r\n                    <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n                        Sort Options\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n                        {[\"name\", \"email\"].map((key) => (\r\n                            <Dropdown.Item\r\n                                as=\"div\"   // prevent automatic close\r\n                                key={key}\r\n                                className=\"d-flex justify-content-between align-items-center\"\r\n                            >\r\n                                <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n                                <Button\r\n                                    size=\"sm\"\r\n                                    variant=\"outline-primary\"\r\n                                    onClick={(e) => {\r\n                                        e.stopPropagation();   // prevent closing dropdown\r\n                                        toggleSort(key);\r\n                                    }}\r\n                                >\r\n                                    {getArrow(key)}\r\n                                </Button>\r\n                            </Dropdown.Item>\r\n                        ))}\r\n                    </Dropdown.Menu>\r\n                </Dropdown >\r\n                <span className=\"d-flex justify-content-end m-3\">\r\n                    <label className=\"m-2\">Search:</label>\r\n                    <input type=\"text\"\r\n                        value={search}\r\n                        placeholder=\"Search By Name\"\r\n                        onChange={(e) => setSearch(e.target.value)} />\r\n                </span>\r\n                </div>\r\n\r\n                {/* <select>\r\n                <option hidden selected>Select Sorting Option</option>\r\n                <option onClick={() => handleSort('name')}>Name</option>\r\n                <option onClick={() => handleSort('email')}>Email</option>\r\n            </select> */}\r\n\r\n                < div className=\"d-flex flex-row flex-wrap justify-content-center\" >\r\n                    {\r\n                        sortedData.map((user) => (\r\n                            <Card key={user.id} style={{\r\n                                width: \"18rem\",\r\n                                margin: \"15px\",\r\n                                padding: \"10px\"\r\n                            }}>\r\n                                <Card.Body>\r\n                                    <Card.Title>{user.id}</Card.Title>\r\n                                    <Card.Text>\r\n                                        <b>Name:</b>{user.name}<br />\r\n                                        <b>Email:</b>{user.email}<br />\r\n                                        <b>Company:</b>{user.company.name}\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                                <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n                            </Card>\r\n                        ))\r\n                    }\r\n                </div >\r\n            </div >\r\n        </>\r\n    )\r\n}"
        }
    ]
}