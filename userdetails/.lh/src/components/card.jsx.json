{
    "sourceFile": "src/components/card.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 177,
            "patches": [
                {
                    "date": 1757571704041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757571759691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,37 +1,39 @@\n-import { useState, useEffect } from \"react\";\r\n-import { useNavigate } from \"react-router-dom\";\r\n-import Card from \"react-bootstrap/Card\";\r\n-import Button from \"react-bootstrap/Button\";\r\n+// import { useState, useEffect } from \"react\";\r\n+// import { useNavigate } from \"react-router-dom\";\r\n+// import Card from \"react-bootstrap/Card\";\r\n+// import Button from \"react-bootstrap/Button\";\r\n \r\n-function UsersList() {\r\n-  const [users, setUsers] = useState([]);\r\n-  const navigate = useNavigate();\r\n+// function UsersList() {\r\n+//   const [users, setUsers] = useState([]);\r\n+//   const navigate = useNavigate();\r\n \r\n-  useEffect(() => {\r\n-    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n-      .then((res) => res.json())\r\n-      .then((data) => setUsers(data));\r\n-  }, []);\r\n+//   useEffect(() => {\r\n+//     fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n+//       .then((res) => res.json())\r\n+//       .then((data) => setUsers(data));\r\n+//   }, []);\r\n \r\n-  return (\r\n-    <div className=\"d-flex flex-wrap\">\r\n-      {users.map((user) => (\r\n-        <Card key={user.id} className=\"p-3 m-2 shadow\" style={{ width: \"18rem\" }}>\r\n-          <Card.Title>{user.name}</Card.Title>\r\n-          <Card.Subtitle className=\"mb-2 text-muted\">\r\n-            {user.company?.name}\r\n-          </Card.Subtitle>\r\n-          <Card.Text>\r\n-            <b>Email:</b> {user.email}\r\n-          </Card.Text>\r\n+//   return (\r\n+//     <div className=\"d-flex flex-wrap\">\r\n+//       {users.map((user) => (\r\n+//         <Card key={user.id} className=\"p-3 m-2 shadow\" style={{ width: \"18rem\" }}>\r\n+//           <Card.Title>{user.name}</Card.Title>\r\n+//           <Card.Subtitle className=\"mb-2 text-muted\">\r\n+//             {user.company?.name}\r\n+//           </Card.Subtitle>\r\n+//           <Card.Text>\r\n+//             <b>Email:</b> {user.email}\r\n+//           </Card.Text>\r\n \r\n-          <Button variant=\"primary\" onClick={() => navigate(`/users/${user.id}`)}>\r\n-            View Details\r\n-          </Button>\r\n-        </Card>\r\n-      ))}\r\n-    </div>\r\n-  );\r\n-}\r\n+//           <Button variant=\"primary\" onClick={() => navigate(`/users/${user.id}`)}>\r\n+//             View Details\r\n+//           </Button>\r\n+//         </Card>\r\n+//       ))}\r\n+//     </div>\r\n+//   );\r\n+// }\r\n \r\n-export default UsersList;\r\n+// export default UsersList;\r\n+\r\n+import { useState,useEffect } from \"react\";\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757571848660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,5 +35,11 @@\n // }\r\n \r\n // export default UsersList;\r\n \r\n-import { useState,useEffect } from \"react\";\n\\ No newline at end of file\n+import { useState,useEffect } from \"react\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n+\r\n+export default function Card(){\r\n+    const [data,setData]=useState([]);\r\n+    const navigate=useNavigate();\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757571921849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,5 +41,9 @@\n \r\n export default function Card(){\r\n     const [data,setData]=useState([]);\r\n     const navigate=useNavigate();\r\n+    useEffect(()=>{\r\n+        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n+        .then(res=>res.json)\r\n+    })\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757571941146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,7 +43,8 @@\n     const [data,setData]=useState([]);\r\n     const navigate=useNavigate();\r\n     useEffect(()=>{\r\n         fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n-        .then(res=>res.json)\r\n+        .then(res=>res.json())\r\n+        .then(data=>setData(data))\r\n     })\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757571997985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,8 +37,10 @@\n // export default UsersList;\r\n \r\n import { useState,useEffect } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n+import Card from \"react-bootstrap/Card\";\r\n+import Button from \"react-bootstrap/Button\"\r\n \r\n export default function Card(){\r\n     const [data,setData]=useState([]);\r\n     const navigate=useNavigate();\r\n@@ -46,5 +48,10 @@\n         fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n         .then(res=>res.json())\r\n         .then(data=>setData(data))\r\n     })\r\n+\r\n+    return(\r\n+        <>\r\n+        </>\r\n+    )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757572011223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n import { useNavigate } from \"react-router-dom\";\r\n import Card from \"react-bootstrap/Card\";\r\n import Button from \"react-bootstrap/Button\"\r\n \r\n-export default function Card(){\r\n+export default function CardList(){\r\n     const [data,setData]=useState([]);\r\n     const navigate=useNavigate();\r\n     useEffect(()=>{\r\n         fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n"
                },
                {
                    "date": 1757572097778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,7 +51,10 @@\n     })\r\n \r\n     return(\r\n         <>\r\n+        {data.map(()=>{\r\n+        <div key={userEvent.id}\r\n+        })\r\n         </>\r\n     )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757572105608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,26 +35,27 @@\n // }\r\n \r\n // export default UsersList;\r\n \r\n-import { useState,useEffect } from \"react\";\r\n+import { useState, useEffect } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import Card from \"react-bootstrap/Card\";\r\n import Button from \"react-bootstrap/Button\"\r\n \r\n-export default function CardList(){\r\n-    const [data,setData]=useState([]);\r\n-    const navigate=useNavigate();\r\n-    useEffect(()=>{\r\n+export default function CardList() {\r\n+    const [data, setData] = useState([]);\r\n+    const navigate = useNavigate();\r\n+    useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n-        .then(res=>res.json())\r\n-        .then(data=>setData(data))\r\n+            .then(res => res.json())\r\n+            .then(data => setData(data))\r\n     })\r\n \r\n-    return(\r\n+    return (\r\n         <>\r\n-        {data.map(()=>{\r\n-        <div key={userEvent.id}\r\n-        })\r\n+            {data.map(() => {\r\n+                <div key={userEvent.id}></div>\r\n+            })\r\n+            }\r\n         </>\r\n     )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757572123341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,11 +50,11 @@\n             .then(data => setData(data))\r\n     })\r\n \r\n     return (\r\n-        <>\r\n-            {data.map(() => {\r\n-                <div key={userEvent.id}></div>\r\n+        <\r\n+            {data.map((user) => {\r\n+                <div key={user.id}></div>\r\n             })\r\n             }\r\n         </>\r\n     )\r\n"
                },
                {
                    "date": 1757572132456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n             .then(data => setData(data))\r\n     })\r\n \r\n     return (\r\n-        <\r\n+        < div\r\n             {data.map((user) => {\r\n                 <div key={user.id}></div>\r\n             })\r\n             }\r\n"
                },
                {
                    "date": 1757572144590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,12 +50,13 @@\n             .then(data => setData(data))\r\n     })\r\n \r\n     return (\r\n-        < div\r\n+        <>\r\n             {data.map((user) => {\r\n                 <div key={user.id}></div>\r\n             })\r\n             }\r\n+\r\n         </>\r\n     )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757572199683,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,12 @@\n \r\n     return (\r\n         <>\r\n             {data.map((user) => {\r\n-                <div key={user.id}></div>\r\n+                <div key={user.id}>\r\n+                    <div className=\"d-flex flex-wrap justify-content-center\">\r\n+                    </div>\r\n+                </div>\r\n             })\r\n             }\r\n \r\n         </>\r\n"
                },
                {
                    "date": 1757572317301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,8 +39,9 @@\n import { useState, useEffect } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import Card from \"react-bootstrap/Card\";\r\n import Button from \"react-bootstrap/Button\"\r\n+import { CardText, CardTitle } from \"react-bootstrap\";\r\n \r\n export default function CardList() {\r\n     const [data, setData] = useState([]);\r\n     const navigate = useNavigate();\r\n@@ -54,8 +55,16 @@\n         <>\r\n             {data.map((user) => {\r\n                 <div key={user.id}>\r\n                     <div className=\"d-flex flex-wrap justify-content-center\">\r\n+                        <Card>\r\n+                            <CardTitle>{user.id}</CardTitle>\r\n+                            <CardText>\r\n+                                <b>Name:</b>{user.name}<br/>\r\n+                                <b>Email</b>{user.email}<br/>\r\n+                                <b>Company</b>{user.company.name}\r\n+                            </CardText>\r\n+                        </Card>\r\n                     </div>\r\n                 </div>\r\n             })\r\n             }\r\n"
                },
                {
                    "date": 1757572349863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,8 +62,9 @@\n                                 <b>Name:</b>{user.name}<br/>\r\n                                 <b>Email</b>{user.email}<br/>\r\n                                 <b>Company</b>{user.company.name}\r\n                             </CardText>\r\n+                            <Button className=\"btn btn-primary\">View Details</Button>\r\n                         </Card>\r\n                     </div>\r\n                 </div>\r\n             })\r\n"
                },
                {
                    "date": 1757572360176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n                                 <b>Name:</b>{user.name}<br/>\r\n                                 <b>Email</b>{user.email}<br/>\r\n                                 <b>Company</b>{user.company.name}\r\n                             </CardText>\r\n-                            <Button className=\"btn btn-primary\">View Details</Button>\r\n+                            <Button className=\"btn btn-primary\" onClick={}>View Details</Button>\r\n                         </Card>\r\n                     </div>\r\n                 </div>\r\n             })\r\n"
                },
                {
                    "date": 1757572379054,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,75 @@\n+// import { useState, useEffect } from \"react\";\r\n+// import { useNavigate } from \"react-router-dom\";\r\n+// import Card from \"react-bootstrap/Card\";\r\n+// import Button from \"react-bootstrap/Button\";\r\n+\r\n+// function UsersList() {\r\n+//   const [users, setUsers] = useState([]);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//   useEffect(() => {\r\n+//     fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n+//       .then((res) => res.json())\r\n+//       .then((data) => setUsers(data));\r\n+//   }, []);\r\n+\r\n+//   return (\r\n+//     <div className=\"d-flex flex-wrap\">\r\n+//       {users.map((user) => (\r\n+//         <Card key={user.id} className=\"p-3 m-2 shadow\" style={{ width: \"18rem\" }}>\r\n+//           <Card.Title>{user.name}</Card.Title>\r\n+//           <Card.Subtitle className=\"mb-2 text-muted\">\r\n+//             {user.company?.name}\r\n+//           </Card.Subtitle>\r\n+//           <Card.Text>\r\n+//             <b>Email:</b> {user.email}\r\n+//           </Card.Text>\r\n+\r\n+//           <Button variant=\"primary\" onClick={() => navigate(`/users/${user.id}`)}>\r\n+//             View Details\r\n+//           </Button>\r\n+//         </Card>\r\n+//       ))}\r\n+//     </div>\r\n+//   );\r\n+// }\r\n+\r\n+// export default UsersList;\r\n+\r\n+import { useState, useEffect } from \"react\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n+import Card from \"react-bootstrap/Card\";\r\n+import Button from \"react-bootstrap/Button\"\r\n+import { CardText, CardTitle } from \"react-bootstrap\";\r\n+\r\n+export default function CardList() {\r\n+    const [data, setData] = useState([]);\r\n+    const navigate = useNavigate();\r\n+    useEffect(() => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n+            .then(res => res.json())\r\n+            .then(data => setData(data))\r\n+    })\r\n+\r\n+    return (\r\n+        <>\r\n+            {data.map((user) => {\r\n+                <div key={user.id}>\r\n+                    <div className=\"d-flex flex-wrap justify-content-center\">\r\n+                        <Card>\r\n+                            <CardTitle>{user.id}</CardTitle>\r\n+                            <CardText>\r\n+                                <b>Name:</b>{user.name}<br />\r\n+                                <b>Email</b>{user.email}<br />\r\n+                                <b>Company</b>{user.company.name}\r\n+                            </CardText>\r\n+                            <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n+                        </Card>\r\n+                    </div>\r\n+                </div>\r\n+            })\r\n+            }\r\n+\r\n+        </>\r\n+    )\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757573066822,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,99 +52,24 @@\n     })\r\n \r\n     return (\r\n         <>\r\n-            {data.map((user) => {\r\n+            {data.map((user) => (\r\n                 <div key={user.id}>\r\n                     <div className=\"d-flex flex-wrap justify-content-center\">\r\n                         <Card>\r\n-                            <CardTitle>{user.id}</CardTitle>\r\n-                            <CardText>\r\n+                            <Card.Title>{user.id}</Card.Title>\r\n+                            <Card.Text>\r\n                                 <b>Name:</b>{user.name}<br />\r\n                                 <b>Email</b>{user.email}<br />\r\n                                 <b>Company</b>{user.company.name}\r\n-                            </CardText>\r\n+                            </Card.Text>\r\n                             <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n                         </Card>\r\n                     </div>\r\n                 </div>\r\n-            })\r\n+            ))\r\n             }\r\n \r\n         </>\r\n     )\r\n-}\n-// import { useState, useEffect } from \"react\";\r\n-// import { useNavigate } from \"react-router-dom\";\r\n-// import Card from \"react-bootstrap/Card\";\r\n-// import Button from \"react-bootstrap/Button\";\r\n-\r\n-// function UsersList() {\r\n-//   const [users, setUsers] = useState([]);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//   useEffect(() => {\r\n-//     fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n-//       .then((res) => res.json())\r\n-//       .then((data) => setUsers(data));\r\n-//   }, []);\r\n-\r\n-//   return (\r\n-//     <div className=\"d-flex flex-wrap\">\r\n-//       {users.map((user) => (\r\n-//         <Card key={user.id} className=\"p-3 m-2 shadow\" style={{ width: \"18rem\" }}>\r\n-//           <Card.Title>{user.name}</Card.Title>\r\n-//           <Card.Subtitle className=\"mb-2 text-muted\">\r\n-//             {user.company?.name}\r\n-//           </Card.Subtitle>\r\n-//           <Card.Text>\r\n-//             <b>Email:</b> {user.email}\r\n-//           </Card.Text>\r\n-\r\n-//           <Button variant=\"primary\" onClick={() => navigate(`/users/${user.id}`)}>\r\n-//             View Details\r\n-//           </Button>\r\n-//         </Card>\r\n-//       ))}\r\n-//     </div>\r\n-//   );\r\n-// }\r\n-\r\n-// export default UsersList;\r\n-\r\n-import { useState, useEffect } from \"react\";\r\n-import { useNavigate } from \"react-router-dom\";\r\n-import Card from \"react-bootstrap/Card\";\r\n-import Button from \"react-bootstrap/Button\"\r\n-import { CardText, CardTitle } from \"react-bootstrap\";\r\n-\r\n-export default function CardList() {\r\n-    const [data, setData] = useState([]);\r\n-    const navigate = useNavigate();\r\n-    useEffect(() => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n-            .then(res => res.json())\r\n-            .then(data => setData(data))\r\n-    })\r\n-\r\n-    return (\r\n-        <>\r\n-            {data.map((user) => {\r\n-                <div key={user.id}>\r\n-                    <div className=\"d-flex flex-wrap justify-content-center\">\r\n-                        <Card>\r\n-                            <CardTitle>{user.id}</CardTitle>\r\n-                            <CardText>\r\n-                                <b>Name:</b>{user.name}<br/>\r\n-                                <b>Email</b>{user.email}<br/>\r\n-                                <b>Company</b>{user.company.name}\r\n-                            </CardText>\r\n-                            <Button className=\"btn btn-primary\" onClick={}>View Details</Button>\r\n-                        </Card>\r\n-                    </div>\r\n-                </div>\r\n-            })\r\n-            }\r\n-\r\n-        </>\r\n-    )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757573112303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n         <>\r\n             {data.map((user) => (\r\n                 <div key={user.id}>\r\n                     <div className=\"d-flex flex-wrap justify-content-center\">\r\n-                        <Card>\r\n+                        <Card style={{width:\"18rem\"}}>\r\n                             <Card.Title>{user.id}</Card.Title>\r\n                             <Card.Text>\r\n                                 <b>Name:</b>{user.name}<br />\r\n                                 <b>Email</b>{user.email}<br />\r\n"
                },
                {
                    "date": 1757573126952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,8 @@\n import { useState, useEffect } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import Card from \"react-bootstrap/Card\";\r\n import Button from \"react-bootstrap/Button\"\r\n-import { CardText, CardTitle } from \"react-bootstrap\";\r\n \r\n export default function CardList() {\r\n     const [data, setData] = useState([]);\r\n     const navigate = useNavigate();\r\n"
                },
                {
                    "date": 1757573167094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n     return (\r\n         <>\r\n             {data.map((user) => (\r\n                 <div key={user.id}>\r\n-                    <div className=\"d-flex flex-wrap justify-content-center\">\r\n+                    <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n                         <Card style={{width:\"18rem\"}}>\r\n                             <Card.Title>{user.id}</Card.Title>\r\n                             <Card.Text>\r\n                                 <b>Name:</b>{user.name}<br />\r\n"
                },
                {
                    "date": 1757573173444,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n     return (\r\n         <>\r\n             {data.map((user) => (\r\n                 <div key={user.id}>\r\n-                    <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n+                    <div className=\"d-flex  flex-wrap justify-content-center\">\r\n                         <Card style={{width:\"18rem\"}}>\r\n                             <Card.Title>{user.id}</Card.Title>\r\n                             <Card.Text>\r\n                                 <b>Name:</b>{user.name}<br />\r\n"
                },
                {
                    "date": 1757573241481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,74 @@\n+// import { useState, useEffect } from \"react\";\r\n+// import { useNavigate } from \"react-router-dom\";\r\n+// import Card from \"react-bootstrap/Card\";\r\n+// import Button from \"react-bootstrap/Button\";\r\n+\r\n+// function UsersList() {\r\n+//   const [users, setUsers] = useState([]);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//   useEffect(() => {\r\n+//     fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n+//       .then((res) => res.json())\r\n+//       .then((data) => setUsers(data));\r\n+//   }, []);\r\n+\r\n+//   return (\r\n+//     <div className=\"d-flex flex-wrap\">\r\n+//       {users.map((user) => (\r\n+//         <Card key={user.id} className=\"p-3 m-2 shadow\" style={{ width: \"18rem\" }}>\r\n+//           <Card.Title>{user.name}</Card.Title>\r\n+//           <Card.Subtitle className=\"mb-2 text-muted\">\r\n+//             {user.company?.name}\r\n+//           </Card.Subtitle>\r\n+//           <Card.Text>\r\n+//             <b>Email:</b> {user.email}\r\n+//           </Card.Text>\r\n+\r\n+//           <Button variant=\"primary\" onClick={() => navigate(`/users/${user.id}`)}>\r\n+//             View Details\r\n+//           </Button>\r\n+//         </Card>\r\n+//       ))}\r\n+//     </div>\r\n+//   );\r\n+// }\r\n+\r\n+// export default UsersList;\r\n+\r\n+import { useState, useEffect } from \"react\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n+import Card from \"react-bootstrap/Card\";\r\n+import Button from \"react-bootstrap/Button\"\r\n+\r\n+export default function CardList() {\r\n+    const [data, setData] = useState([]);\r\n+    const navigate = useNavigate();\r\n+    useEffect(() => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n+            .then(res => res.json())\r\n+            .then(data => setData(data))\r\n+    },[])\r\n+\r\n+    return (\r\n+        <>\r\n+            {data.map((user) => (\r\n+                <div key={user.id}>\r\n+                    <div className=\"d-flex  flex-wrap justify-content-center\">\r\n+                        <Card style={{width:\"18rem\"}}>\r\n+                            <Card.Title>{user.id}</Card.Title>\r\n+                            <Card.Text>\r\n+                                <b>Name:</b>{user.name}<br />\r\n+                                <b>Email</b>{user.email}<br />\r\n+                                <b>Company</b>{user.company.name}\r\n+                            </Card.Text>\r\n+                            <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n+                        </Card>\r\n+                    </div>\r\n+                </div>\r\n+            ))\r\n+            }\r\n+\r\n+        </>\r\n+    )\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757573317786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,95 +54,21 @@\n         <>\r\n             {data.map((user) => (\r\n                 <div key={user.id}>\r\n                     <div className=\"d-flex  flex-wrap justify-content-center\">\r\n-                        <Card style={{width:\"18rem\"}}>\r\n+                        {/* <Card style={{width:\"18rem\"}}> */}\r\n                             <Card.Title>{user.id}</Card.Title>\r\n                             <Card.Text>\r\n                                 <b>Name:</b>{user.name}<br />\r\n                                 <b>Email</b>{user.email}<br />\r\n                                 <b>Company</b>{user.company.name}\r\n                             </Card.Text>\r\n                             <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n-                        </Card>\r\n+                        \r\n                     </div>\r\n                 </div>\r\n             ))\r\n             }\r\n \r\n         </>\r\n     )\r\n-}\n-// import { useState, useEffect } from \"react\";\r\n-// import { useNavigate } from \"react-router-dom\";\r\n-// import Card from \"react-bootstrap/Card\";\r\n-// import Button from \"react-bootstrap/Button\";\r\n-\r\n-// function UsersList() {\r\n-//   const [users, setUsers] = useState([]);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//   useEffect(() => {\r\n-//     fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n-//       .then((res) => res.json())\r\n-//       .then((data) => setUsers(data));\r\n-//   }, []);\r\n-\r\n-//   return (\r\n-//     <div className=\"d-flex flex-wrap\">\r\n-//       {users.map((user) => (\r\n-//         <Card key={user.id} className=\"p-3 m-2 shadow\" style={{ width: \"18rem\" }}>\r\n-//           <Card.Title>{user.name}</Card.Title>\r\n-//           <Card.Subtitle className=\"mb-2 text-muted\">\r\n-//             {user.company?.name}\r\n-//           </Card.Subtitle>\r\n-//           <Card.Text>\r\n-//             <b>Email:</b> {user.email}\r\n-//           </Card.Text>\r\n-\r\n-//           <Button variant=\"primary\" onClick={() => navigate(`/users/${user.id}`)}>\r\n-//             View Details\r\n-//           </Button>\r\n-//         </Card>\r\n-//       ))}\r\n-//     </div>\r\n-//   );\r\n-// }\r\n-\r\n-// export default UsersList;\r\n-\r\n-import { useState, useEffect } from \"react\";\r\n-import { useNavigate } from \"react-router-dom\";\r\n-import Card from \"react-bootstrap/Card\";\r\n-import Button from \"react-bootstrap/Button\"\r\n-\r\n-export default function CardList() {\r\n-    const [data, setData] = useState([]);\r\n-    const navigate = useNavigate();\r\n-    useEffect(() => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n-            .then(res => res.json())\r\n-            .then(data => setData(data))\r\n-    })\r\n-\r\n-    return (\r\n-        <>\r\n-            {data.map((user) => (\r\n-                <div key={user.id}>\r\n-                    <div className=\"d-flex  flex-wrap justify-content-center\">\r\n-                        <Card style={{width:\"18rem\"}}>\r\n-                            <Card.Title>{user.id}</Card.Title>\r\n-                            <Card.Text>\r\n-                                <b>Name:</b>{user.name}<br />\r\n-                                <b>Email</b>{user.email}<br />\r\n-                                <b>Company</b>{user.company.name}\r\n-                            </Card.Text>\r\n-                            <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n-                        </Card>\r\n-                    </div>\r\n-                </div>\r\n-            ))\r\n-            }\r\n-\r\n-        </>\r\n-    )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757573323520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,17 +54,17 @@\n         <>\r\n             {data.map((user) => (\r\n                 <div key={user.id}>\r\n                     <div className=\"d-flex  flex-wrap justify-content-center\">\r\n-                        {/* <Card style={{width:\"18rem\"}}> */}\r\n+                        <Card style={{width:\"18rem\"}}>\r\n                             <Card.Title>{user.id}</Card.Title>\r\n                             <Card.Text>\r\n                                 <b>Name:</b>{user.name}<br />\r\n                                 <b>Email</b>{user.email}<br />\r\n                                 <b>Company</b>{user.company.name}\r\n                             </Card.Text>\r\n                             <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n-                        \r\n+                        </Card>\r\n                     </div>\r\n                 </div>\r\n             ))\r\n             }\r\n"
                },
                {
                    "date": 1757573386090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,13 +56,15 @@\n                 <div key={user.id}>\r\n                     <div className=\"d-flex  flex-wrap justify-content-center\">\r\n                         <Card style={{width:\"18rem\"}}>\r\n                             <Card.Title>{user.id}</Card.Title>\r\n+                            <Card.Body>\r\n                             <Card.Text>\r\n                                 <b>Name:</b>{user.name}<br />\r\n                                 <b>Email</b>{user.email}<br />\r\n                                 <b>Company</b>{user.company.name}\r\n                             </Card.Text>\r\n+                            </Card.Body>\r\n                             <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n                         </Card>\r\n                     </div>\r\n                 </div>\r\n"
                },
                {
                    "date": 1757573421816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,10 +55,11 @@\n             {data.map((user) => (\r\n                 <div key={user.id}>\r\n                     <div className=\"d-flex  flex-wrap justify-content-center\">\r\n                         <Card style={{width:\"18rem\"}}>\r\n+                            <Card.Body>\r\n                             <Card.Title>{user.id}</Card.Title>\r\n-                            <Card.Body>\r\n+                            \r\n                             <Card.Text>\r\n                                 <b>Name:</b>{user.name}<br />\r\n                                 <b>Email</b>{user.email}<br />\r\n                                 <b>Company</b>{user.company.name}\r\n"
                },
                {
                    "date": 1757573431743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,24 +47,23 @@\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n-    },[])\r\n+    }, [])\r\n \r\n     return (\r\n         <>\r\n             {data.map((user) => (\r\n                 <div key={user.id}>\r\n                     <div className=\"d-flex  flex-wrap justify-content-center\">\r\n-                        <Card style={{width:\"18rem\"}}>\r\n+                        <Card style={{ width: \"18rem\" }}>\r\n                             <Card.Body>\r\n-                            <Card.Title>{user.id}</Card.Title>\r\n-                            \r\n-                            <Card.Text>\r\n-                                <b>Name:</b>{user.name}<br />\r\n-                                <b>Email</b>{user.email}<br />\r\n-                                <b>Company</b>{user.company.name}\r\n-                            </Card.Text>\r\n+                                <Card.Title>{user.id}</Card.Title>\r\n+                                <Card.Text>\r\n+                                    <b>Name:</b>{user.name}<br />\r\n+                                    <b>Email</b>{user.email}<br />\r\n+                                    <b>Company</b>{user.company.name}\r\n+                                </Card.Text>\r\n                             </Card.Body>\r\n                             <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n                         </Card>\r\n                     </div>\r\n"
                },
                {
                    "date": 1757573489526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,76 +1,39 @@\n-// import { useState, useEffect } from \"react\";\r\n-// import { useNavigate } from \"react-router-dom\";\r\n-// import Card from \"react-bootstrap/Card\";\r\n-// import Button from \"react-bootstrap/Button\";\r\n-\r\n-// function UsersList() {\r\n-//   const [users, setUsers] = useState([]);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//   useEffect(() => {\r\n-//     fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n-//       .then((res) => res.json())\r\n-//       .then((data) => setUsers(data));\r\n-//   }, []);\r\n-\r\n-//   return (\r\n-//     <div className=\"d-flex flex-wrap\">\r\n-//       {users.map((user) => (\r\n-//         <Card key={user.id} className=\"p-3 m-2 shadow\" style={{ width: \"18rem\" }}>\r\n-//           <Card.Title>{user.name}</Card.Title>\r\n-//           <Card.Subtitle className=\"mb-2 text-muted\">\r\n-//             {user.company?.name}\r\n-//           </Card.Subtitle>\r\n-//           <Card.Text>\r\n-//             <b>Email:</b> {user.email}\r\n-//           </Card.Text>\r\n-\r\n-//           <Button variant=\"primary\" onClick={() => navigate(`/users/${user.id}`)}>\r\n-//             View Details\r\n-//           </Button>\r\n-//         </Card>\r\n-//       ))}\r\n-//     </div>\r\n-//   );\r\n-// }\r\n-\r\n-// export default UsersList;\r\n-\r\n import { useState, useEffect } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import Card from \"react-bootstrap/Card\";\r\n-import Button from \"react-bootstrap/Button\"\r\n+import Button from \"react-bootstrap/Button\";\r\n \r\n export default function CardList() {\r\n-    const [data, setData] = useState([]);\r\n-    const navigate = useNavigate();\r\n-    useEffect(() => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n-            .then(res => res.json())\r\n-            .then(data => setData(data))\r\n-    }, [])\r\n+  const [data, setData] = useState([]);\r\n+  const navigate = useNavigate();\r\n \r\n-    return (\r\n-        <>\r\n-            {data.map((user) => (\r\n-                <div key={user.id}>\r\n-                    <div className=\"d-flex  flex-wrap justify-content-center\">\r\n-                        <Card style={{ width: \"18rem\" }}>\r\n-                            <Card.Body>\r\n-                                <Card.Title>{user.id}</Card.Title>\r\n-                                <Card.Text>\r\n-                                    <b>Name:</b>{user.name}<br />\r\n-                                    <b>Email</b>{user.email}<br />\r\n-                                    <b>Company</b>{user.company.name}\r\n-                                </Card.Text>\r\n-                            </Card.Body>\r\n-                            <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n-                        </Card>\r\n-                    </div>\r\n-                </div>\r\n-            ))\r\n-            }\r\n+  useEffect(() => {\r\n\\ No newline at end of file\n+    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n+      .then((res) => res.json())\r\n+      .then((data) => setData(data));\r\n+  }, []);\r\n \r\n-        </>\r\n-    )\r\n-}\n+  return (\r\n+    <div className=\"d-flex flex-wrap justify-content-center\">\r\n+      {data.map((user) => (\r\n+        <Card key={user.id} className=\"m-2 shadow\" style={{ width: \"18rem\" }}>\r\n+          <Card.Body>\r\n+            <Card.Title>{user.name}</Card.Title>\r\n+            <Card.Subtitle className=\"mb-2 text-muted\">\r\n+              {user.company?.name}\r\n+            </Card.Subtitle>\r\n+            <Card.Text>\r\n+              <b>Email:</b> {user.email}\r\n+            </Card.Text>\r\n+            <Button\r\n+              variant=\"primary\"\r\n+              onClick={() => navigate(`/users/${user.id}`)}\r\n+            >\r\n+              View Details\r\n+            </Button>\r\n+          </Card.Body>\r\n+        </Card>\r\n+      ))}\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1757573499950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,39 +1,76 @@\n+// import { useState, useEffect } from \"react\";\r\n+// import { useNavigate } from \"react-router-dom\";\r\n+// import Card from \"react-bootstrap/Card\";\r\n+// import Button from \"react-bootstrap/Button\";\r\n+\r\n+// function UsersList() {\r\n+//   const [users, setUsers] = useState([]);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//   useEffect(() => {\r\n+//     fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n+//       .then((res) => res.json())\r\n+//       .then((data) => setUsers(data));\r\n+//   }, []);\r\n+\r\n+//   return (\r\n+//     <div className=\"d-flex flex-wrap\">\r\n+//       {users.map((user) => (\r\n+//         <Card key={user.id} className=\"p-3 m-2 shadow\" style={{ width: \"18rem\" }}>\r\n+//           <Card.Title>{user.name}</Card.Title>\r\n+//           <Card.Subtitle className=\"mb-2 text-muted\">\r\n+//             {user.company?.name}\r\n+//           </Card.Subtitle>\r\n+//           <Card.Text>\r\n+//             <b>Email:</b> {user.email}\r\n+//           </Card.Text>\r\n+\r\n+//           <Button variant=\"primary\" onClick={() => navigate(`/users/${user.id}`)}>\r\n+//             View Details\r\n+//           </Button>\r\n+//         </Card>\r\n+//       ))}\r\n+//     </div>\r\n+//   );\r\n+// }\r\n+\r\n+// export default UsersList;\r\n+\r\n import { useState, useEffect } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import Card from \"react-bootstrap/Card\";\r\n-import Button from \"react-bootstrap/Button\";\r\n+import Button from \"react-bootstrap/Button\"\r\n \r\n export default function CardList() {\r\n-  const [data, setData] = useState([]);\r\n-  const navigate = useNavigate();\r\n+    const [data, setData] = useState([]);\r\n+    const navigate = useNavigate();\r\n+    useEffect(() => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n+            .then(res => res.json())\r\n+            .then(data => setData(data))\r\n+    }, [])\r\n \r\n-  useEffect(() => {\r\n-    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n-      .then((res) => res.json())\r\n-      .then((data) => setData(data));\r\n-  }, []);\r\n+    return (\r\n+        <>\r\n+            {data.map((user) => (\r\n+                <div key={user.id}>\r\n+                    <div className=\"d-flex  flex-wrap justify-content-center\">\r\n+                        <Card style={{ width: \"18rem\" }}>\r\n+                            <Card.Body>\r\n+                                <Card.Title>{user.id}</Card.Title>\r\n+                                <Card.Text>\r\n+                                    <b>Name:</b>{user.name}<br />\r\n+                                    <b>Email</b>{user.email}<br />\r\n+                                    <b>Company</b>{user.company.name}\r\n+                                </Card.Text>\r\n+                            </Card.Body>\r\n+                            <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n+                        </Card>\r\n+                    </div>\r\n+                </div>\r\n+            ))\r\n+            }\r\n \r\n-  return (\r\n-    <div className=\"d-flex flex-wrap justify-content-center\">\r\n-      {data.map((user) => (\r\n-        <Card key={user.id} className=\"m-2 shadow\" style={{ width: \"18rem\" }}>\r\n-          <Card.Body>\r\n-            <Card.Title>{user.name}</Card.Title>\r\n-            <Card.Subtitle className=\"mb-2 text-muted\">\r\n-              {user.company?.name}\r\n-            </Card.Subtitle>\r\n-            <Card.Text>\r\n-              <b>Email:</b> {user.email}\r\n-            </Card.Text>\r\n-            <Button\r\n-              variant=\"primary\"\r\n-              onClick={() => navigate(`/users/${user.id}`)}\r\n-            >\r\n-              View Details\r\n-            </Button>\r\n-          </Card.Body>\r\n-        </Card>\r\n-      ))}\r\n-    </div>\r\n-  );\r\n+        </>\r\n+    )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757573509172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,10 +59,10 @@\n                             <Card.Body>\r\n                                 <Card.Title>{user.id}</Card.Title>\r\n                                 <Card.Text>\r\n                                     <b>Name:</b>{user.name}<br />\r\n-                                    <b>Email</b>{user.email}<br />\r\n-                                    <b>Company</b>{user.company.name}\r\n+                                    <b>Email:</b>{user.email}<br />\r\n+                                    <b>Company:</b>{user.company.name}\r\n                                 </Card.Text>\r\n                             </Card.Body>\r\n                             <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n                         </Card>\r\n"
                },
                {
                    "date": 1757573558345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n     return (\r\n         <>\r\n             {data.map((user) => (\r\n                 <div key={user.id}>\r\n-                    <div className=\"d-flex  flex-wrap justify-content-center\">\r\n+                    <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n                         <Card style={{ width: \"18rem\" }}>\r\n                             <Card.Body>\r\n                                 <Card.Title>{user.id}</Card.Title>\r\n                                 <Card.Text>\r\n"
                },
                {
                    "date": 1757573572715,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n     return (\r\n         <>\r\n             {data.map((user) => (\r\n                 <div key={user.id}>\r\n-                    <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n+                    <div className=\"d-flex flex-row flex-wrap \">\r\n                         <Card style={{ width: \"18rem\" }}>\r\n                             <Card.Body>\r\n                                 <Card.Title>{user.id}</Card.Title>\r\n                                 <Card.Text>\r\n"
                },
                {
                    "date": 1757573590309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n     return (\r\n         <>\r\n             {data.map((user) => (\r\n                 <div key={user.id}>\r\n-                    <div className=\"d-flex flex-row flex-wrap \">\r\n+                    <div className=\"d-flex flex-row\">\r\n                         <Card style={{ width: \"18rem\" }}>\r\n                             <Card.Body>\r\n                                 <Card.Title>{user.id}</Card.Title>\r\n                                 <Card.Text>\r\n"
                },
                {
                    "date": 1757573611842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,11 +51,12 @@\n     }, [])\r\n \r\n     return (\r\n         <>\r\n+         <div className=\"d-flex flex-row\">\r\n             {data.map((user) => (\r\n                 <div key={user.id}>\r\n-                    <div className=\"d-flex flex-row\">\r\n+                   \r\n                         <Card style={{ width: \"18rem\" }}>\r\n                             <Card.Body>\r\n                                 <Card.Title>{user.id}</Card.Title>\r\n                                 <Card.Text>\r\n@@ -66,11 +67,11 @@\n                             </Card.Body>\r\n                             <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n                         </Card>\r\n                     </div>\r\n-                </div>\r\n+\r\n             ))\r\n             }\r\n-\r\n+</div>\r\n         </>\r\n     )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757573620991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n     }, [])\r\n \r\n     return (\r\n         <>\r\n-         <div className=\"d-flex flex-row\">\r\n+         <div className=\"d-flex flex-row flex-wrap\">\r\n             {data.map((user) => (\r\n                 <div key={user.id}>\r\n                    \r\n                         <Card style={{ width: \"18rem\" }}>\r\n"
                },
                {
                    "date": 1757573637522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,11 @@\n          <div className=\"d-flex flex-row flex-wrap\">\r\n             {data.map((user) => (\r\n                 <div key={user.id}>\r\n                    \r\n-                        <Card style={{ width: \"18rem\" }}>\r\n+                        <Card style={{ width: \"18rem\" ,\r\n+                            gap:\"20px\"\r\n+                        }}>\r\n                             <Card.Body>\r\n                                 <Card.Title>{user.id}</Card.Title>\r\n                                 <Card.Text>\r\n                                     <b>Name:</b>{user.name}<br />\r\n"
                },
                {
                    "date": 1757573658979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n             {data.map((user) => (\r\n                 <div key={user.id}>\r\n                    \r\n                         <Card style={{ width: \"18rem\" ,\r\n-                            gap:\"20px\"\r\n+                            gap:\"50px\"\r\n                         }}>\r\n                             <Card.Body>\r\n                                 <Card.Title>{user.id}</Card.Title>\r\n                                 <Card.Text>\r\n"
                },
                {
                    "date": 1757573667629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,10 +55,9 @@\n          <div className=\"d-flex flex-row flex-wrap\">\r\n             {data.map((user) => (\r\n                 <div key={user.id}>\r\n                    \r\n-                        <Card style={{ width: \"18rem\" ,\r\n-                            gap:\"50px\"\r\n+                        <Card style={{ width: \"18rem\"\r\n                         }}>\r\n                             <Card.Body>\r\n                                 <Card.Title>{user.id}</Card.Title>\r\n                                 <Card.Text>\r\n"
                },
                {
                    "date": 1757573686046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,10 +54,10 @@\n         <>\r\n          <div className=\"d-flex flex-row flex-wrap\">\r\n             {data.map((user) => (\r\n                 <div key={user.id}>\r\n-                   \r\n-                        <Card style={{ width: \"18rem\"\r\n+                        <Card style={{ width: \"18rem\",\r\n+                        margin:\"20px\"\r\n                         }}>\r\n                             <Card.Body>\r\n                                 <Card.Title>{user.id}</Card.Title>\r\n                                 <Card.Text>\r\n"
                },
                {
                    "date": 1757573703015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n     }, [])\r\n \r\n     return (\r\n         <>\r\n-         <div className=\"d-flex flex-row flex-wrap\">\r\n+         <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n             {data.map((user) => (\r\n                 <div key={user.id}>\r\n                         <Card style={{ width: \"18rem\",\r\n                         margin:\"20px\"\r\n"
                },
                {
                    "date": 1757573716217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,10 @@\n          <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n             {data.map((user) => (\r\n                 <div key={user.id}>\r\n                         <Card style={{ width: \"18rem\",\r\n-                        margin:\"20px\"\r\n+                        margin:\"20px\",\r\n+                        padding:\"10px\"\r\n                         }}>\r\n                             <Card.Body>\r\n                                 <Card.Title>{user.id}</Card.Title>\r\n                                 <Card.Text>\r\n"
                },
                {
                    "date": 1757573731677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n          <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n             {data.map((user) => (\r\n                 <div key={user.id}>\r\n                         <Card style={{ width: \"18rem\",\r\n-                        margin:\"20px\",\r\n+                        margin:\"15px\",\r\n                         padding:\"10px\"\r\n                         }}>\r\n                             <Card.Body>\r\n                                 <Card.Title>{user.id}</Card.Title>\r\n"
                },
                {
                    "date": 1757574321139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,8 +52,10 @@\n \r\n     return (\r\n         <>\r\n          <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n+            <input\r\n+            type=\"text\"></input>\r\n             {data.map((user) => (\r\n                 <div key={user.id}>\r\n                         <Card style={{ width: \"18rem\",\r\n                         margin:\"15px\",\r\n"
                },
                {
                    "date": 1757574327784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n     return (\r\n         <>\r\n          <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n             <input\r\n-            type=\"text\"></input>\r\n+            type=\"text\">Search:</input>\r\n             {data.map((user) => (\r\n                 <div key={user.id}>\r\n                         <Card style={{ width: \"18rem\",\r\n                         margin:\"15px\",\r\n"
                },
                {
                    "date": 1757574370214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,16 +51,22 @@\n     }, [])\r\n \r\n     return (\r\n         <>\r\n-         <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n-            <input\r\n-            type=\"text\">Search:</input>\r\n-            {data.map((user) => (\r\n-                <div key={user.id}>\r\n-                        <Card style={{ width: \"18rem\",\r\n-                        margin:\"15px\",\r\n-                        padding:\"10px\"\r\n+            <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n+                <input type='text'\r\n+                    name='title'\r\n+                    placeholder='Enter title'\r\n+                    onChange={handleChange}\r\n+                    value={form.title}\r\n+                    className='form-control mb-2'\r\n+                    required />\r\n+                {data.map((user) => (\r\n+                    <div key={user.id}>\r\n+                        <Card style={{\r\n+                            width: \"18rem\",\r\n+                            margin: \"15px\",\r\n+                            padding: \"10px\"\r\n                         }}>\r\n                             <Card.Body>\r\n                                 <Card.Title>{user.id}</Card.Title>\r\n                                 <Card.Text>\r\n@@ -72,10 +78,10 @@\n                             <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n                         </Card>\r\n                     </div>\r\n \r\n-            ))\r\n-            }\r\n-</div>\r\n+                ))\r\n+                }\r\n+            </div>\r\n         </>\r\n     )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757574375943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,10 +55,8 @@\n             <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n                 <input type='text'\r\n                     name='title'\r\n                     placeholder='Enter title'\r\n-                    onChange={handleChange}\r\n-                    value={form.title}\r\n                     className='form-control mb-2'\r\n                     required />\r\n                 {data.map((user) => (\r\n                     <div key={user.id}>\r\n"
                },
                {
                    "date": 1757574384321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,8 @@\n         <>\r\n             <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n                 <input type='text'\r\n                     name='title'\r\n-                    placeholder='Enter title'\r\n                     className='form-control mb-2'\r\n                     required />\r\n                 {data.map((user) => (\r\n                     <div key={user.id}>\r\n"
                },
                {
                    "date": 1757574399834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n     return (\r\n         <>\r\n             <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n                 <input type='text'\r\n-                    name='title'\r\n+                    name='Search'\r\n                     className='form-control mb-2'\r\n                     required />\r\n                 {data.map((user) => (\r\n                     <div key={user.id}>\r\n"
                },
                {
                    "date": 1757574421426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,8 @@\n     return (\r\n         <>\r\n             <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n                 <input type='text'\r\n-                    name='Search'\r\n                     className='form-control mb-2'\r\n                     required />\r\n                 {data.map((user) => (\r\n                     <div key={user.id}>\r\n"
                },
                {
                    "date": 1757574504918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n         <>\r\n             <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n                 <input type='text'\r\n                     className='form-control mb-2'\r\n-                    required />\r\n+                     />\r\n                 {data.map((user) => (\r\n                     <div key={user.id}>\r\n                         <Card style={{\r\n                             width: \"18rem\",\r\n"
                },
                {
                    "date": 1757574516900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,10 +53,11 @@\n     return (\r\n         <>\r\n             <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n                 <input type='text'\r\n-                    className='form-control mb-2'\r\n-                     />\r\n+                    className='form-control mb-2'>\r\n+                        Search:\r\n+                    </input>\r\n                 {data.map((user) => (\r\n                     <div key={user.id}>\r\n                         <Card style={{\r\n                             width: \"18rem\",\r\n"
                },
                {
                    "date": 1757574553693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,12 +52,10 @@\n \r\n     return (\r\n         <>\r\n             <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n-                <input type='text'\r\n-                    className='form-control mb-2'>\r\n-                        Search:\r\n-                    </input>\r\n+                <input\r\n+                type:\"text\"/>\r\n                 {data.map((user) => (\r\n                     <div key={user.id}>\r\n                         <Card style={{\r\n                             width: \"18rem\",\r\n"
                },
                {
                    "date": 1757574566517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n     return (\r\n         <>\r\n             <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n                 <input\r\n-                type:\"text\"/>\r\n+                type=\"text\"/>\r\n                 {data.map((user) => (\r\n                     <div key={user.id}>\r\n                         <Card style={{\r\n                             width: \"18rem\",\r\n"
                },
                {
                    "date": 1757574578506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,11 +51,11 @@\n     }, [])\r\n \r\n     return (\r\n         <>\r\n+        <input\r\n+                type=\"text\"/>\r\n             <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n-                <input\r\n-                type=\"text\"/>\r\n                 {data.map((user) => (\r\n                     <div key={user.id}>\r\n                         <Card style={{\r\n                             width: \"18rem\",\r\n"
                },
                {
                    "date": 1757574605289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,10 +51,11 @@\n     }, [])\r\n \r\n     return (\r\n         <>\r\n+        Search:\r\n         <input\r\n-                type=\"text\"/>\r\n+            type=\"text\"/>\r\n             <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n                 {data.map((user) => (\r\n                     <div key={user.id}>\r\n                         <Card style={{\r\n"
                },
                {
                    "date": 1757574629426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,10 +52,9 @@\n \r\n     return (\r\n         <>\r\n         Search:\r\n-        <input\r\n-            type=\"text\"/>\r\n+        <input type=\"text\"/>\r\n             <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n                 {data.map((user) => (\r\n                     <div key={user.id}>\r\n                         <Card style={{\r\n"
                },
                {
                    "date": 1757574891657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,13 +52,14 @@\n \r\n     return (\r\n         <>\r\n         Search:\r\n-        <input type=\"text\"/>\r\n+        <input type=\"text\"\r\n+        onInput={handleSearch}/>\r\n             <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n                 {data.map((user) => (\r\n                     <div key={user.id}>\r\n-                        <Card style={{\r\n+                        <Card style={{  \r\n                             width: \"18rem\",\r\n                             margin: \"15px\",\r\n                             padding: \"10px\"\r\n                         }}>\r\n"
                },
                {
                    "date": 1757574915891,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,11 @@\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n     }, [])\r\n \r\n+    function handleSearch=()=>{\r\n+\r\n+    }\r\n     return (\r\n         <>\r\n         Search:\r\n         <input type=\"text\"\r\n"
                },
                {
                    "date": 1757574921645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n     }, [])\r\n \r\n-    function handleSearch=()=>{\r\n+    function handleSearch({\r\n \r\n     }\r\n     return (\r\n         <>\r\n"
                },
                {
                    "date": 1757575340440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,27 +42,29 @@\n import Button from \"react-bootstrap/Button\"\r\n \r\n export default function CardList() {\r\n     const [data, setData] = useState([]);\r\n+    const [search,setSearch]=useState('');\r\n     const navigate = useNavigate();\r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n     }, [])\r\n \r\n-    function handleSearch({\r\n+    function handleSearch() {\r\n \r\n     }\r\n     return (\r\n         <>\r\n-        Search:\r\n-        <input type=\"text\"\r\n-        onInput={handleSearch}/>\r\n+            Search:\r\n+            <input type=\"text\"\r\n+                value={search}\r\n+                onChange={(e) => setSearch(e.target.value)} />\r\n             <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n                 {data.map((user) => (\r\n                     <div key={user.id}>\r\n-                        <Card style={{  \r\n+                        <Card style={{\r\n                             width: \"18rem\",\r\n                             margin: \"15px\",\r\n                             padding: \"10px\"\r\n                         }}>\r\n"
                },
                {
                    "date": 1757575350691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,11 +50,9 @@\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n     }, [])\r\n \r\n-    function handleSearch() {\r\n-\r\n-    }\r\n+    \r\n     return (\r\n         <>\r\n             Search:\r\n             <input type=\"text\"\r\n"
                },
                {
                    "date": 1757575370237,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,17 +42,19 @@\n import Button from \"react-bootstrap/Button\"\r\n \r\n export default function CardList() {\r\n     const [data, setData] = useState([]);\r\n-    const [search,setSearch]=useState('');\r\n+    const [search, setSearch] = useState('');\r\n     const navigate = useNavigate();\r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n     }, [])\r\n \r\n-    \r\n+    const filteredData = data.filter(item =>\r\n+        item.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n+    );\r\n     return (\r\n         <>\r\n             Search:\r\n             <input type=\"text\"\r\n"
                },
                {
                    "date": 1757575497431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,18 +51,18 @@\n             .then(data => setData(data))\r\n     }, [])\r\n \r\n     const filteredData = data.filter(item =>\r\n-        item.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n+        item.name.toLowerCase().includes(search.toLowerCase())\r\n     );\r\n     return (\r\n         <>\r\n             Search:\r\n             <input type=\"text\"\r\n                 value={search}\r\n                 onChange={(e) => setSearch(e.target.value)} />\r\n             <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n-                {data.map((user) => (\r\n+                {filteredData.map((user) => (\r\n                     <div key={user.id}>\r\n                         <Card style={{\r\n                             width: \"18rem\",\r\n                             margin: \"15px\",\r\n"
                },
                {
                    "date": 1757576130883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,11 +59,10 @@\n             Search:\r\n             <input type=\"text\"\r\n                 value={search}\r\n                 onChange={(e) => setSearch(e.target.value)} />\r\n-            <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n                 {filteredData.map((user) => (\r\n-                    <div key={user.id}>\r\n+                     <div className=\"d-flex flex-row flex-wrap justify-content-center\" key={user.id}>\r\n                         <Card style={{\r\n                             width: \"18rem\",\r\n                             margin: \"15px\",\r\n                             padding: \"10px\"\r\n@@ -77,9 +76,8 @@\n                                 </Card.Text>\r\n                             </Card.Body>\r\n                             <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n                         </Card>\r\n-                    </div>\r\n \r\n                 ))\r\n                 }\r\n             </div>\r\n"
                },
                {
                    "date": 1757576136165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,11 +76,11 @@\n                                 </Card.Text>\r\n                             </Card.Body>\r\n                             <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n                         </Card>\r\n+                    </div>\r\n \r\n                 ))\r\n                 }\r\n-            </div>\r\n         </>\r\n     )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757576165433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,10 +60,9 @@\n             <input type=\"text\"\r\n                 value={search}\r\n                 onChange={(e) => setSearch(e.target.value)} />\r\n                 {filteredData.map((user) => (\r\n-                     <div className=\"d-flex flex-row flex-wrap justify-content-center\" key={user.id}>\r\n-                        <Card style={{\r\n+                        <Card key={user.id} style={{\r\n                             width: \"18rem\",\r\n                             margin: \"15px\",\r\n                             padding: \"10px\"\r\n                         }}>\r\n"
                },
                {
                    "date": 1757576183276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,8 +59,9 @@\n             Search:\r\n             <input type=\"text\"\r\n                 value={search}\r\n                 onChange={(e) => setSearch(e.target.value)} />\r\n+                <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n                 {filteredData.map((user) => (\r\n                         <Card key={user.id} style={{\r\n                             width: \"18rem\",\r\n                             margin: \"15px\",\r\n@@ -75,11 +76,11 @@\n                                 </Card.Text>\r\n                             </Card.Body>\r\n                             <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n                         </Card>\r\n-                    </div>\r\n \r\n                 ))\r\n                 }\r\n+                </div>\r\n         </>\r\n     )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757576254258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,42 +1,4 @@\n-// import { useState, useEffect } from \"react\";\r\n-// import { useNavigate } from \"react-router-dom\";\r\n-// import Card from \"react-bootstrap/Card\";\r\n-// import Button from \"react-bootstrap/Button\";\r\n-\r\n-// function UsersList() {\r\n-//   const [users, setUsers] = useState([]);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//   useEffect(() => {\r\n-//     fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n-//       .then((res) => res.json())\r\n-//       .then((data) => setUsers(data));\r\n-//   }, []);\r\n-\r\n-//   return (\r\n-//     <div className=\"d-flex flex-wrap\">\r\n-//       {users.map((user) => (\r\n-//         <Card key={user.id} className=\"p-3 m-2 shadow\" style={{ width: \"18rem\" }}>\r\n-//           <Card.Title>{user.name}</Card.Title>\r\n-//           <Card.Subtitle className=\"mb-2 text-muted\">\r\n-//             {user.company?.name}\r\n-//           </Card.Subtitle>\r\n-//           <Card.Text>\r\n-//             <b>Email:</b> {user.email}\r\n-//           </Card.Text>\r\n-\r\n-//           <Button variant=\"primary\" onClick={() => navigate(`/users/${user.id}`)}>\r\n-//             View Details\r\n-//           </Button>\r\n-//         </Card>\r\n-//       ))}\r\n-//     </div>\r\n-//   );\r\n-// }\r\n-\r\n-// export default UsersList;\r\n-\r\n import { useState, useEffect } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import Card from \"react-bootstrap/Card\";\r\n import Button from \"react-bootstrap/Button\"\r\n@@ -44,8 +6,9 @@\n export default function CardList() {\r\n     const [data, setData] = useState([]);\r\n     const [search, setSearch] = useState('');\r\n     const navigate = useNavigate();\r\n+\r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n"
                },
                {
                    "date": 1757576286905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n export default function CardList() {\r\n     const [data, setData] = useState([]);\r\n     const [search, setSearch] = useState('');\r\n     const navigate = useNavigate();\r\n+    const [sortDirection,setSortDirection]=useState('asc');\r\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n             .then(res => res.json())\r\n"
                },
                {
                    "date": 1757576689936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,15 +6,24 @@\n export default function CardList() {\r\n     const [data, setData] = useState([]);\r\n     const [search, setSearch] = useState('');\r\n     const navigate = useNavigate();\r\n-    const [sortDirection,setSortDirection]=useState('asc');\r\n+    const [sortKey,setSortKey]=useState(null);\r\n+    const [sortDirection, setSortDirection] = useState('asc');\r\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n     }, [])\r\n+    const handleSort = (key) => {\r\n+        if (sortKey === key) {\r\n+            setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n+        } else {\r\n+            setSortKey(key);\r\n+            setSortDirection('asc');\r\n+        }\r\n+    };\r\n \r\n     const filteredData = data.filter(item =>\r\n         item.name.toLowerCase().includes(search.toLowerCase())\r\n     );\r\n@@ -23,28 +32,28 @@\n             Search:\r\n             <input type=\"text\"\r\n                 value={search}\r\n                 onChange={(e) => setSearch(e.target.value)} />\r\n-                <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n+            <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n                 {filteredData.map((user) => (\r\n-                        <Card key={user.id} style={{\r\n-                            width: \"18rem\",\r\n-                            margin: \"15px\",\r\n-                            padding: \"10px\"\r\n-                        }}>\r\n-                            <Card.Body>\r\n-                                <Card.Title>{user.id}</Card.Title>\r\n-                                <Card.Text>\r\n-                                    <b>Name:</b>{user.name}<br />\r\n-                                    <b>Email:</b>{user.email}<br />\r\n-                                    <b>Company:</b>{user.company.name}\r\n-                                </Card.Text>\r\n-                            </Card.Body>\r\n-                            <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n-                        </Card>\r\n+                    <Card key={user.id} style={{\r\n+                        width: \"18rem\",\r\n+                        margin: \"15px\",\r\n+                        padding: \"10px\"\r\n+                    }}>\r\n+                        <Card.Body>\r\n+                            <Card.Title>{user.id}</Card.Title>\r\n+                            <Card.Text>\r\n+                                <b>Name:</b>{user.name}<br />\r\n+                                <b>Email:</b>{user.email}<br />\r\n+                                <b>Company:</b>{user.company.name}\r\n+                            </Card.Text>\r\n+                        </Card.Body>\r\n+                        <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n+                    </Card>\r\n \r\n                 ))\r\n                 }\r\n-                </div>\r\n+            </div>\r\n         </>\r\n     )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757576699952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n export default function CardList() {\r\n     const [data, setData] = useState([]);\r\n     const [search, setSearch] = useState('');\r\n     const navigate = useNavigate();\r\n-    const [sortKey,setSortKey]=useState(null);\r\n+    const [sortKey, setSortKey] = useState(null);\r\n     const [sortDirection, setSortDirection] = useState('asc');\r\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n@@ -26,8 +26,19 @@\n \r\n     const filteredData = data.filter(item =>\r\n         item.name.toLowerCase().includes(search.toLowerCase())\r\n     );\r\n+\r\n+    const sortedData = [...filteredData].sort((a, b) => {\r\n+        if (!sortKey) return 0;\r\n+\r\n+        const aValue = a[sortKey];\r\n+        const bValue = b[sortKey];\r\n+\r\n+        if (aValue < bValue) return sortDirection === 'asc' ? -1 : 1;\r\n+        if (aValue > bValue) return sortDirection === 'asc' ? 1 : -1;\r\n+        return 0;\r\n+    });\r\n     return (\r\n         <>\r\n             Search:\r\n             <input type=\"text\"\r\n"
                },
                {
                    "date": 1757576718206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n             <input type=\"text\"\r\n                 value={search}\r\n                 onChange={(e) => setSearch(e.target.value)} />\r\n             <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n-                {filteredData.map((user) => (\r\n+                {sortedData.map((user) => (\r\n                     <Card key={user.id} style={{\r\n                         width: \"18rem\",\r\n                         margin: \"15px\",\r\n                         padding: \"10px\"\r\n"
                },
                {
                    "date": 1757576837408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,8 +60,10 @@\n                             </Card.Text>\r\n                         </Card.Body>\r\n                         <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n                     </Card>\r\n+                     <th onClick={() => handleSort('name')}>Name</th>\r\n+            <th onClick={() => handleSort('age')}>Age</th>\r\n \r\n                 ))\r\n                 }\r\n             </div>\r\n"
                },
                {
                    "date": 1757576872610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import { useState, useEffect } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import Card from \"react-bootstrap/Card\";\r\n import Button from \"react-bootstrap/Button\"\r\n+import { Table } from \"react-bootstrap\";\r\n \r\n export default function CardList() {\r\n     const [data, setData] = useState([]);\r\n     const [search, setSearch] = useState('');\r\n@@ -60,12 +61,12 @@\n                             </Card.Text>\r\n                         </Card.Body>\r\n                         <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n                     </Card>\r\n-                     <th onClick={() => handleSort('name')}>Name</th>\r\n+                ))\r\n+                <Table>\r\n+                 <th onClick={() => handleSort('name')}>Name</th>\r\n             <th onClick={() => handleSort('age')}>Age</th>\r\n-\r\n-                ))\r\n                 }\r\n             </div>\r\n         </>\r\n     )\r\n"
                },
                {
                    "date": 1757576878986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,11 +62,11 @@\n                         </Card.Body>\r\n                         <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n                     </Card>\r\n                 ))\r\n-                <Table>\r\n+                <Table\r\n                  <th onClick={() => handleSort('name')}>Name</th>\r\n-            <th onClick={() => handleSort('age')}>Age</th>\r\n+            <th onClick={() => handleSort('age')}>Age</th>/></>\r\n                 }\r\n             </div>\r\n         </>\r\n     )\r\n"
                },
                {
                    "date": 1757576888295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,11 +62,8 @@\n                         </Card.Body>\r\n                         <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n                     </Card>\r\n                 ))\r\n-                <Table\r\n-                 <th onClick={() => handleSort('name')}>Name</th>\r\n-            <th onClick={() => handleSort('age')}>Age</th>/></>\r\n                 }\r\n             </div>\r\n         </>\r\n     )\r\n"
                },
                {
                    "date": 1757576954293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,8 +51,9 @@\n                         width: \"18rem\",\r\n                         margin: \"15px\",\r\n                         padding: \"10px\"\r\n                     }}>\r\n+                        <Button onClick={handleSort('name')}>Asc</Button>\r\n                         <Card.Body>\r\n                             <Card.Title>{user.id}</Card.Title>\r\n                             <Card.Text>\r\n                                 <b>Name:</b>{user.name}<br />\r\n"
                },
                {
                    "date": 1757576970083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n                         width: \"18rem\",\r\n                         margin: \"15px\",\r\n                         padding: \"10px\"\r\n                     }}>\r\n-                        <Button onClick={handleSort('name')}>Asc</Button>\r\n+                        <Button onClick={()=>handleSort('name')}>Asc</Button>\r\n                         <Card.Body>\r\n                             <Card.Title>{user.id}</Card.Title>\r\n                             <Card.Text>\r\n                                 <b>Name:</b>{user.name}<br />\r\n"
                },
                {
                    "date": 1757577015809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,10 @@\n                         width: \"18rem\",\r\n                         margin: \"15px\",\r\n                         padding: \"10px\"\r\n                     }}>\r\n-                        <Button onClick={()=>handleSort('name')}>Asc</Button>\r\n+                        <Button onClick={()=>handleSort('name')}>Name sorting</Button>\r\n+                        <Button onClick={()=>handleSort('email')}>Email sorting</Button>\r\n                         <Card.Body>\r\n                             <Card.Title>{user.id}</Card.Title>\r\n                             <Card.Text>\r\n                                 <b>Name:</b>{user.name}<br />\r\n"
                },
                {
                    "date": 1757577027315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n import { useState, useEffect } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import Card from \"react-bootstrap/Card\";\r\n import Button from \"react-bootstrap/Button\"\r\n-import { Table } from \"react-bootstrap\";\r\n \r\n export default function CardList() {\r\n     const [data, setData] = useState([]);\r\n     const [search, setSearch] = useState('');\r\n"
                },
                {
                    "date": 1757577063706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,17 +43,18 @@\n             Search:\r\n             <input type=\"text\"\r\n                 value={search}\r\n                 onChange={(e) => setSearch(e.target.value)} />\r\n+                <Button onClick={()=>handleSort('name')}>Name sorting</Button>\r\n+                        <Button onClick={()=>handleSort('email')}>Email sorting</Button>\r\n+                        \r\n             <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n                 {sortedData.map((user) => (\r\n                     <Card key={user.id} style={{\r\n                         width: \"18rem\",\r\n                         margin: \"15px\",\r\n                         padding: \"10px\"\r\n                     }}>\r\n-                        <Button onClick={()=>handleSort('name')}>Name sorting</Button>\r\n-                        <Button onClick={()=>handleSort('email')}>Email sorting</Button>\r\n                         <Card.Body>\r\n                             <Card.Title>{user.id}</Card.Title>\r\n                             <Card.Text>\r\n                                 <b>Name:</b>{user.name}<br />\r\n"
                },
                {
                    "date": 1757577083569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,11 +43,11 @@\n             Search:\r\n             <input type=\"text\"\r\n                 value={search}\r\n                 onChange={(e) => setSearch(e.target.value)} />\r\n-                <Button onClick={()=>handleSort('name')}>Name sorting</Button>\r\n-                        <Button onClick={()=>handleSort('email')}>Email sorting</Button>\r\n-                        \r\n+            <Button onClick={() => handleSort('name')}>Name sorting</Button>\r\n+            <Button onClick={() => handleSort('email')}>Email sorting</Button>\r\n+\r\n             <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n                 {sortedData.map((user) => (\r\n                     <Card key={user.id} style={{\r\n                         width: \"18rem\",\r\n"
                },
                {
                    "date": 1757577332751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,26 +45,28 @@\n                 value={search}\r\n                 onChange={(e) => setSearch(e.target.value)} />\r\n             <Button onClick={() => handleSort('name')}>Name sorting</Button>\r\n             <Button onClick={() => handleSort('email')}>Email sorting</Button>\r\n-\r\n             <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n                 {sortedData.map((user) => (\r\n-                    <Card key={user.id} style={{\r\n-                        width: \"18rem\",\r\n-                        margin: \"15px\",\r\n-                        padding: \"10px\"\r\n-                    }}>\r\n-                        <Card.Body>\r\n-                            <Card.Title>{user.id}</Card.Title>\r\n-                            <Card.Text>\r\n-                                <b>Name:</b>{user.name}<br />\r\n-                                <b>Email:</b>{user.email}<br />\r\n-                                <b>Company:</b>{user.company.name}\r\n-                            </Card.Text>\r\n-                        </Card.Body>\r\n-                        <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n-                    </Card>\r\n+                    // <Card key={user.id} style={{\r\n+                    //     width: \"18rem\",\r\n+                    //     margin: \"15px\",\r\n+                    //     padding: \"10px\"\r\n+                    // }}>\r\n+                    //     <Card.Body>\r\n+                    //         <Card.Title>{user.id}</Card.Title>\r\n+                    //         <Card.Text>\r\n+                    //             <b>Name:</b>{user.name}<br />\r\n+                    //             <b>Email:</b>{user.email}<br />\r\n+                    //             <b>Company:</b>{user.company.name}\r\n+                    //         </Card.Text>\r\n+                    //     </Card.Body>\r\n+                    //     <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n+                    // </Card>\r\n+                    <Table>\r\n+                        \r\n+                    </Table>\r\n                 ))\r\n                 }\r\n             </div>\r\n         </>\r\n"
                },
                {
                    "date": 1757577354388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import { useState, useEffect } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import Card from \"react-bootstrap/Card\";\r\n import Button from \"react-bootstrap/Button\"\r\n+import { Table } from \"react-bootstrap/Table\";\r\n \r\n export default function CardList() {\r\n     const [data, setData] = useState([]);\r\n     const [search, setSearch] = useState('');\r\n"
                },
                {
                    "date": 1757577504963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,23 +48,23 @@\n             <Button onClick={() => handleSort('name')}>Name sorting</Button>\r\n             <Button onClick={() => handleSort('email')}>Email sorting</Button>\r\n             <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n                 {sortedData.map((user) => (\r\n-                    // <Card key={user.id} style={{\r\n-                    //     width: \"18rem\",\r\n-                    //     margin: \"15px\",\r\n-                    //     padding: \"10px\"\r\n-                    // }}>\r\n-                    //     <Card.Body>\r\n-                    //         <Card.Title>{user.id}</Card.Title>\r\n-                    //         <Card.Text>\r\n-                    //             <b>Name:</b>{user.name}<br />\r\n-                    //             <b>Email:</b>{user.email}<br />\r\n-                    //             <b>Company:</b>{user.company.name}\r\n-                    //         </Card.Text>\r\n-                    //     </Card.Body>\r\n-                    //     <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n-                    // </Card>\r\n+                    <Card key={user.id} style={{\r\n+                        width: \"18rem\",\r\n+                        margin: \"15px\",\r\n+                        padding: \"10px\"\r\n+                    }}>\r\n+                        <Card.Body>\r\n+                            <Card.Title>{user.id}</Card.Title>\r\n+                            <Card.Text>\r\n+                                <b>Name:</b>{user.name}<br />\r\n+                                <b>Email:</b>{user.email}<br />\r\n+                                <b>Company:</b>{user.company.name}\r\n+                            </Card.Text>\r\n+                        </Card.Body>\r\n+                        <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n+                    </Card>\r\n                     <Table>\r\n                         \r\n                     </Table>\r\n                 ))\r\n"
                },
                {
                    "date": 1757577510069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,11 +63,8 @@\n                             </Card.Text>\r\n                         </Card.Body>\r\n                         <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n                     </Card>\r\n-                    <Table>\r\n-                        \r\n-                    </Table>\r\n                 ))\r\n                 }\r\n             </div>\r\n         </>\r\n"
                },
                {
                    "date": 1757577730668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,8 +44,13 @@\n             Search:\r\n             <input type=\"text\"\r\n                 value={search}\r\n                 onChange={(e) => setSearch(e.target.value)} />\r\n+\r\n+                <select>\r\n+                    <option>Name</option>\r\n+                    <option>Email</option>\r\n+                </select>\r\n             <Button onClick={() => handleSort('name')}>Name sorting</Button>\r\n             <Button onClick={() => handleSort('email')}>Email sorting</Button>\r\n             <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n                 {sortedData.map((user) => (\r\n"
                },
                {
                    "date": 1757577772561,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,10 +46,10 @@\n                 value={search}\r\n                 onChange={(e) => setSearch(e.target.value)} />\r\n \r\n                 <select>\r\n-                    <option>Name</option>\r\n-                    <option>Email</option>\r\n+                    <option onClick={()=>handleSort('name')}>Name</option>\r\n+                    <option onClick={() => handleSort('email')}>Email</option>\r\n                 </select>\r\n             <Button onClick={() => handleSort('name')}>Name sorting</Button>\r\n             <Button onClick={() => handleSort('email')}>Email sorting</Button>\r\n             <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n"
                },
                {
                    "date": 1757577780572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,15 +45,13 @@\n             <input type=\"text\"\r\n                 value={search}\r\n                 onChange={(e) => setSearch(e.target.value)} />\r\n \r\n-                <select>\r\n-                    <option onClick={()=>handleSort('name')}>Name</option>\r\n-                    <option onClick={() => handleSort('email')}>Email</option>\r\n-                </select>\r\n-            <Button onClick={() => handleSort('name')}>Name sorting</Button>\r\n-            <Button onClick={() => handleSort('email')}>Email sorting</Button>\r\n-            <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n+            <select>\r\n+                <option onClick={() => handleSort('name')}>Name</option>\r\n+                <option onClick={() => handleSort('email')}>Email</option>\r\n+            </select>\r\n+            \\            <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n                 {sortedData.map((user) => (\r\n                     <Card key={user.id} style={{\r\n                         width: \"18rem\",\r\n                         margin: \"15px\",\r\n"
                },
                {
                    "date": 1757577786349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n             <select>\r\n                 <option onClick={() => handleSort('name')}>Name</option>\r\n                 <option onClick={() => handleSort('email')}>Email</option>\r\n             </select>\r\n-            \\            <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n+            <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n                 {sortedData.map((user) => (\r\n                     <Card key={user.id} style={{\r\n                         width: \"18rem\",\r\n                         margin: \"15px\",\r\n"
                },
                {
                    "date": 1757577827661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,11 +46,13 @@\n                 value={search}\r\n                 onChange={(e) => setSearch(e.target.value)} />\r\n \r\n             <select>\r\n+                <option hidden selected disabled>Select Sorting Option</option>\r\n                 <option onClick={() => handleSort('name')}>Name</option>\r\n                 <option onClick={() => handleSort('email')}>Email</option>\r\n             </select>\r\n+\r\n             <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n                 {sortedData.map((user) => (\r\n                     <Card key={user.id} style={{\r\n                         width: \"18rem\",\r\n"
                },
                {
                    "date": 1757577836777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n                 value={search}\r\n                 onChange={(e) => setSearch(e.target.value)} />\r\n \r\n             <select>\r\n-                <option hidden selected disabled>Select Sorting Option</option>\r\n+                <option hidden selected >Select Sorting Option</option>\r\n                 <option onClick={() => handleSort('name')}>Name</option>\r\n                 <option onClick={() => handleSort('email')}>Email</option>\r\n             </select>\r\n \r\n"
                },
                {
                    "date": 1757577843934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n                 value={search}\r\n                 onChange={(e) => setSearch(e.target.value)} />\r\n \r\n             <select>\r\n-                <option hidden selected >Select Sorting Option</option>\r\n+                <option hidden selected>Select Sorting Option</option>\r\n                 <option onClick={() => handleSort('name')}>Name</option>\r\n                 <option onClick={() => handleSort('email')}>Email</option>\r\n             </select>\r\n \r\n"
                },
                {
                    "date": 1757578096355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,16 +15,16 @@\n         fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n     }, [])\r\n-    const handleSort = (key) => {\r\n-        if (sortKey === key) {\r\n-            setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n-        } else {\r\n-            setSortKey(key);\r\n-            setSortDirection('asc');\r\n-        }\r\n-    };\r\n+        const handleSort = (key) => {\r\n+            if (sortKey === key) {\r\n+                setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n+            } else {\r\n+                setSortKey(key);\r\n+                setSortDirection('asc');\r\n+            }\r\n+        };\r\n \r\n     const filteredData = data.filter(item =>\r\n         item.name.toLowerCase().includes(search.toLowerCase())\r\n     );\r\n@@ -45,13 +45,22 @@\n             <input type=\"text\"\r\n                 value={search}\r\n                 onChange={(e) => setSearch(e.target.value)} />\r\n \r\n-            <select>\r\n+                <select\r\n+  value={sortKey || \"name\"}\r\n+  onChange={(e) => handleSort(e.target.value)}\r\n+>\r\n+  <option value=\"name\">Name</option>\r\n+  <option value=\"email\">Email</option>\r\n+</select>\r\n+\r\n+\r\n+            {/* <select>\r\n                 <option hidden selected>Select Sorting Option</option>\r\n                 <option onClick={() => handleSort('name')}>Name</option>\r\n                 <option onClick={() => handleSort('email')}>Email</option>\r\n-            </select>\r\n+            </select> */}\r\n \r\n             <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n                 {sortedData.map((user) => (\r\n                     <Card key={user.id} style={{\r\n"
                },
                {
                    "date": 1757579829897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import { useState, useEffect } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import Card from \"react-bootstrap/Card\";\r\n-import Button from \"react-bootstrap/Button\"\r\n+import Button from \"react-bootstrap/Button\";\r\n+import { Dropdown } from \"react-bootstrap/bootstrap\";\r\n import { Table } from \"react-bootstrap/Table\";\r\n \r\n export default function CardList() {\r\n     const [data, setData] = useState([]);\r\n@@ -15,16 +16,16 @@\n         fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n     }, [])\r\n-        const handleSort = (key) => {\r\n-            if (sortKey === key) {\r\n-                setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n-            } else {\r\n-                setSortKey(key);\r\n-                setSortDirection('asc');\r\n-            }\r\n-        };\r\n+    const handleSort = (key) => {\r\n+        if (sortKey === key) {\r\n+            setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n+        } else {\r\n+            setSortKey(key);\r\n+            setSortDirection('asc');\r\n+        }\r\n+    };\r\n \r\n     const filteredData = data.filter(item =>\r\n         item.name.toLowerCase().includes(search.toLowerCase())\r\n     );\r\n@@ -45,15 +46,15 @@\n             <input type=\"text\"\r\n                 value={search}\r\n                 onChange={(e) => setSearch(e.target.value)} />\r\n \r\n-                <select\r\n-  value={sortKey || \"name\"}\r\n-  onChange={(e) => handleSort(e.target.value)}\r\n->\r\n-  <option value=\"name\">Name</option>\r\n-  <option value=\"email\">Email</option>\r\n-</select>\r\n+            <select\r\n+                value={sortKey || \"name\"}\r\n+                onChange={(e) => handleSort(e.target.value)}\r\n+            >\r\n+                <option value=\"name\">Name</option>\r\n+                <option value=\"email\">Email</option>\r\n+            </select>\r\n \r\n \r\n             {/* <select>\r\n                 <option hidden selected>Select Sorting Option</option>\r\n"
                },
                {
                    "date": 1757579835710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { useState, useEffect } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import Card from \"react-bootstrap/Card\";\r\n import Button from \"react-bootstrap/Button\";\r\n-import { Dropdown } from \"react-bootstrap/bootstrap\";\r\n+import { Dropdown } from \"react-bootstrap/Dropdown\";\r\n import { Table } from \"react-bootstrap/Table\";\r\n \r\n export default function CardList() {\r\n     const [data, setData] = useState([]);\r\n"
                },
                {
                    "date": 1757579977275,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,16 +46,22 @@\n             <input type=\"text\"\r\n                 value={search}\r\n                 onChange={(e) => setSearch(e.target.value)} />\r\n \r\n-            <select\r\n-                value={sortKey || \"name\"}\r\n-                onChange={(e) => handleSort(e.target.value)}\r\n-            >\r\n-                <option value=\"name\">Name</option>\r\n-                <option value=\"email\">Email</option>\r\n-            </select>\r\n+            <Dropdown>\r\n+                <Dropdown.Toggle variant=\"info\">\r\n+                    Sort by {sortKey.charAt(0).toUpperCase() + sortKey.slice(1)} {getArrow(sortKey)}\r\n+                </Dropdown.Toggle>\r\n \r\n+                <Dropdown.Menu>\r\n+                    <Dropdown.Item onClick={() => handleSort(\"name\")}>\r\n+                        Name {getArrow(\"name\")}\r\n+                    </Dropdown.Item>\r\n+                    <Dropdown.Item onClick={() => handleSort(\"email\")}>\r\n+                        Email {getArrow(\"email\")}\r\n+                    </Dropdown.Item>\r\n+                </Dropdown.Menu>\r\n+            </Dropdown>\r\n \r\n             {/* <select>\r\n                 <option hidden selected>Select Sorting Option</option>\r\n                 <option onClick={() => handleSort('name')}>Name</option>\r\n"
                },
                {
                    "date": 1757580018405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,15 +17,15 @@\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n     }, [])\r\n     const handleSort = (key) => {\r\n-        if (sortKey === key) {\r\n-            setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n-        } else {\r\n-            setSortKey(key);\r\n-            setSortDirection('asc');\r\n-        }\r\n-    };\r\n+    if (sortKey === key) {\r\n+      setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\r\n+    } else {\r\n+      setSortKey(key);\r\n+      setSortDirection(\"asc\");\r\n+    }\r\n+  };\r\n \r\n     const filteredData = data.filter(item =>\r\n         item.name.toLowerCase().includes(search.toLowerCase())\r\n     );\r\n"
                },
                {
                    "date": 1757580041493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,15 +17,15 @@\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n     }, [])\r\n     const handleSort = (key) => {\r\n-    if (sortKey === key) {\r\n-      setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\r\n-    } else {\r\n-      setSortKey(key);\r\n-      setSortDirection(\"asc\");\r\n-    }\r\n-  };\r\n+        if (sortKey === key) {\r\n+            setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n+        } else {\r\n+            setSortKey(key);\r\n+            setSortDirection('asc');\r\n+        }\r\n+    };\r\n \r\n     const filteredData = data.filter(item =>\r\n         item.name.toLowerCase().includes(search.toLowerCase())\r\n     );\r\n"
                },
                {
                    "date": 1757580048924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,13 @@\n         fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n     }, [])\r\n+\r\n+    const getArrow = (key) => {\r\n+    return sortKey === key ? (sortDirection === \"asc\" ? \"↑\" : \"↓\") : \"↑\";\r\n+  };\r\n+\r\n     const handleSort = (key) => {\r\n         if (sortKey === key) {\r\n             setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n         } else {\r\n"
                },
                {
                    "date": 1757580162603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,10 +18,10 @@\n             .then(data => setData(data))\r\n     }, [])\r\n \r\n     const getArrow = (key) => {\r\n-    return sortKey === key ? (sortDirection === \"asc\" ? \"↑\" : \"↓\") : \"↑\";\r\n-  };\r\n+        return sortKey === key ? (sortDirection === \"asc\" ? `<i class=\"bi bi - caret - up - fill\"></i>` : \"\") : \"↑\";\r\n+    };\r\n \r\n     const handleSort = (key) => {\r\n         if (sortKey === key) {\r\n             setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n"
                },
                {
                    "date": 1757580179713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { useState, useEffect } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import Card from \"react-bootstrap/Card\";\r\n import Button from \"react-bootstrap/Button\";\r\n-import { Dropdown } from \"react-bootstrap/Dropdown\";\r\n+import  Dropdown  from \"react-bootstrap/Dropdown\";\r\n import { Table } from \"react-bootstrap/Table\";\r\n \r\n export default function CardList() {\r\n     const [data, setData] = useState([]);\r\n"
                },
                {
                    "date": 1757580194505,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n             .then(data => setData(data))\r\n     }, [])\r\n \r\n     const getArrow = (key) => {\r\n-        return sortKey === key ? (sortDirection === \"asc\" ? `<i class=\"bi bi - caret - up - fill\"></i>` : \"\") : \"↑\";\r\n+        return sortKey === key ? (sortDirection === \"asc\" ? `<i class=\"bi bi - caret - up - fill\"></i>` : `<i class=\"bi bi-caret-down-fill\"></i>`) : \"↑\";\r\n     };\r\n \r\n     const handleSort = (key) => {\r\n         if (sortKey === key) {\r\n"
                },
                {
                    "date": 1757580219726,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { useState, useEffect } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import Card from \"react-bootstrap/Card\";\r\n import Button from \"react-bootstrap/Button\";\r\n-import  Dropdown  from \"react-bootstrap/Dropdown\";\r\n+import Dropdown from \"react-bootstrap/Dropdown\";\r\n import { Table } from \"react-bootstrap/Table\";\r\n \r\n export default function CardList() {\r\n     const [data, setData] = useState([]);\r\n@@ -18,9 +18,9 @@\n             .then(data => setData(data))\r\n     }, [])\r\n \r\n     const getArrow = (key) => {\r\n-        return sortKey === key ? (sortDirection === \"asc\" ? `<i class=\"bi bi - caret - up - fill\"></i>` : `<i class=\"bi bi-caret-down-fill\"></i>`) : \"↑\";\r\n+        return sortKey === key ? (sortDirection === \"asc\" ? `<i class=\"bi bi - caret - up - fill\"></i>` : `<i class=\"bi bi-caret-down-fill\"></i>`) : `<i class=\"bi bi - caret - up - fill\"></i>`;\r\n     };\r\n \r\n     const handleSort = (key) => {\r\n         if (sortKey === key) {\r\n"
                },
                {
                    "date": 1757580365981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n                 onChange={(e) => setSearch(e.target.value)} />\r\n \r\n             <Dropdown>\r\n                 <Dropdown.Toggle variant=\"info\">\r\n-                    Sort by {sortKey.charAt(0).toUpperCase() + sortKey.slice(1)} {getArrow(sortKey)}\r\n+                    Sort by {sortKey?.charAt(0).toUpperCase() + sortKey.slice(1)} {getArrow(sortKey)}\r\n                 </Dropdown.Toggle>\r\n \r\n                 <Dropdown.Menu>\r\n                     <Dropdown.Item onClick={() => handleSort(\"name\")}>\r\n"
                },
                {
                    "date": 1757580379183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n                 onChange={(e) => setSearch(e.target.value)} />\r\n \r\n             <Dropdown>\r\n                 <Dropdown.Toggle variant=\"info\">\r\n-                    Sort by {sortKey?.charAt(0).toUpperCase() + sortKey.slice(1)} {getArrow(sortKey)}\r\n+                    Sort by {sortKey?.charAt(0).toUpperCase() + sortKey?.slice(1)} {getArrow(sortKey)}\r\n                 </Dropdown.Toggle>\r\n \r\n                 <Dropdown.Menu>\r\n                     <Dropdown.Item onClick={() => handleSort(\"name\")}>\r\n"
                },
                {
                    "date": 1757580449031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { useState, useEffect } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import Card from \"react-bootstrap/Card\";\r\n import Button from \"react-bootstrap/Button\";\r\n-import Dropdown from \"react-bootstrap/Dropdown\";\r\n+import { Dropdown } from \"react-bootstrap/Dropdown\";\r\n import { Table } from \"react-bootstrap/Table\";\r\n \r\n export default function CardList() {\r\n     const [data, setData] = useState([]);\r\n@@ -18,9 +18,9 @@\n             .then(data => setData(data))\r\n     }, [])\r\n \r\n     const getArrow = (key) => {\r\n-        return sortKey === key ? (sortDirection === \"asc\" ? `<i class=\"bi bi - caret - up - fill\"></i>` : `<i class=\"bi bi-caret-down-fill\"></i>`) : `<i class=\"bi bi - caret - up - fill\"></i>`;\r\n+        return sortKey === key ? (sortDirection === \"asc\" ? \"↑\" : \"↓\") : \"↑\";\r\n     };\r\n \r\n     const handleSort = (key) => {\r\n         if (sortKey === key) {\r\n@@ -53,9 +53,9 @@\n                 onChange={(e) => setSearch(e.target.value)} />\r\n \r\n             <Dropdown>\r\n                 <Dropdown.Toggle variant=\"info\">\r\n-                    Sort by {sortKey?.charAt(0).toUpperCase() + sortKey?.slice(1)} {getArrow(sortKey)}\r\n+                    Sort by {sortKey.charAt(0).toUpperCase() + sortKey.slice(1)} {getArrow(sortKey)}\r\n                 </Dropdown.Toggle>\r\n \r\n                 <Dropdown.Menu>\r\n                     <Dropdown.Item onClick={() => handleSort(\"name\")}>\r\n"
                },
                {
                    "date": 1757580466093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { useState, useEffect } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import Card from \"react-bootstrap/Card\";\r\n import Button from \"react-bootstrap/Button\";\r\n-import { Dropdown } from \"react-bootstrap/Dropdown\";\r\n+import  Dropdown from \"react-bootstrap/Dropdown\";\r\n import { Table } from \"react-bootstrap/Table\";\r\n \r\n export default function CardList() {\r\n     const [data, setData] = useState([]);\r\n"
                },
                {
                    "date": 1757580746329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,23 +51,33 @@\n             <input type=\"text\"\r\n                 value={search}\r\n                 onChange={(e) => setSearch(e.target.value)} />\r\n \r\n-            <Dropdown>\r\n-                <Dropdown.Toggle variant=\"info\">\r\n-                    Sort by {sortKey.charAt(0).toUpperCase() + sortKey.slice(1)} {getArrow(sortKey)}\r\n-                </Dropdown.Toggle>\r\n+            <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)}>\r\n+          <Dropdown.Toggle variant=\"info\" onClick={() => setDropdownOpen(!dropdownOpen)}>\r\n+            Sort by {sortKey.charAt(0).toUpperCase() + sortKey.slice(1)} {getArrow()}\r\n+          </Dropdown.Toggle>\r\n \r\n-                <Dropdown.Menu>\r\n-                    <Dropdown.Item onClick={() => handleSort(\"name\")}>\r\n-                        Name {getArrow(\"name\")}\r\n-                    </Dropdown.Item>\r\n-                    <Dropdown.Item onClick={() => handleSort(\"email\")}>\r\n-                        Email {getArrow(\"email\")}\r\n-                    </Dropdown.Item>\r\n-                </Dropdown.Menu>\r\n-            </Dropdown>\r\n+          <Dropdown.Menu>\r\n+            <Dropdown.Item onClick={() => handleSortKey(\"name\")}>\r\n+              Name {sortKey === \"name\" && getArrow()}\r\n+            </Dropdown.Item>\r\n+            <Dropdown.Item onClick={() => handleSortKey(\"email\")}>\r\n+              Email {sortKey === \"email\" && getArrow()}\r\n+            </Dropdown.Item>\r\n \r\n+            <Dropdown.Divider />\r\n+\r\n+            <Button\r\n+              variant=\"secondary\"\r\n+              className=\"mx-3 mb-2\"\r\n+              onClick={toggleDirection}\r\n+            >\r\n+              Toggle Asc/Desc {getArrow()}\r\n+            </Button>\r\n+          </Dropdown.Menu>\r\n+        </Dropdown>\r\n+\r\n             {/* <select>\r\n                 <option hidden selected>Select Sorting Option</option>\r\n                 <option onClick={() => handleSort('name')}>Name</option>\r\n                 <option onClick={() => handleSort('email')}>Email</option>\r\n"
                },
                {
                    "date": 1757580782907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { useState, useEffect } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import Card from \"react-bootstrap/Card\";\r\n import Button from \"react-bootstrap/Button\";\r\n-import  Dropdown from \"react-bootstrap/Dropdown\";\r\n+import Dropdown from \"react-bootstrap/Dropdown\";\r\n import { Table } from \"react-bootstrap/Table\";\r\n \r\n export default function CardList() {\r\n     const [data, setData] = useState([]);\r\n@@ -17,66 +17,61 @@\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n     }, [])\r\n \r\n-    const getArrow = (key) => {\r\n-        return sortKey === key ? (sortDirection === \"asc\" ? \"↑\" : \"↓\") : \"↑\";\r\n+    const handleSortKey = (key) => {\r\n+        setSortKey(key);\r\n     };\r\n \r\n-    const handleSort = (key) => {\r\n-        if (sortKey === key) {\r\n-            setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n-        } else {\r\n-            setSortKey(key);\r\n-            setSortDirection('asc');\r\n-        }\r\n+    const toggleDirection = () => {\r\n+        setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\r\n     };\r\n \r\n     const filteredData = data.filter(item =>\r\n         item.name.toLowerCase().includes(search.toLowerCase())\r\n     );\r\n \r\n-    const sortedData = [...filteredData].sort((a, b) => {\r\n-        if (!sortKey) return 0;\r\n+     const sortedData = [...filteredData].sort((a, b) => {\r\n+    const aValue = a[sortKey];\r\n+    const bValue = b[sortKey];\r\n+    if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\r\n+    if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n+    return 0;\r\n+  });\r\n \r\n-        const aValue = a[sortKey];\r\n-        const bValue = b[sortKey];\r\n-\r\n-        if (aValue < bValue) return sortDirection === 'asc' ? -1 : 1;\r\n-        if (aValue > bValue) return sortDirection === 'asc' ? 1 : -1;\r\n-        return 0;\r\n-    });\r\n+  const getArrow = () => (sortDirection === \"asc\" ? \"↑\" : \"↓\");\r\n+    \r\n     return (\r\n         <>\r\n             Search:\r\n             <input type=\"text\"\r\n                 value={search}\r\n                 onChange={(e) => setSearch(e.target.value)} />\r\n \r\n             <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)}>\r\n-          <Dropdown.Toggle variant=\"info\" onClick={() => setDropdownOpen(!dropdownOpen)}>\r\n-            Sort by {sortKey.charAt(0).toUpperCase() + sortKey.slice(1)} {getArrow()}\r\n-          </Dropdown.Toggle>\r\n+                <Dropdown.Toggle variant=\"info\" onClick={() => setDropdownOpen(!dropdownOpen)}>\r\n+                    Sort by {sortKey.charAt(0).toUpperCase() + sortKey.slice(1)} {getArrow()}\r\n+                </Dropdown.Toggle>\r\n \r\n-          <Dropdown.Menu>\r\n-            <Dropdown.Item onClick={() => handleSortKey(\"name\")}>\r\n-              Name {sortKey === \"name\" && getArrow()}\r\n-            </Dropdown.Item>\r\n-            <Dropdown.Item onClick={() => handleSortKey(\"email\")}>\r\n-              Email {sortKey === \"email\" && getArrow()}\r\n-            </Dropdown.Item>\r\n+                <Dropdown.Menu>\r\n+                    <Dropdown.Item onClick={() => handleSortKey(\"name\")}>\r\n+                        Name {sortKey === \"name\" && getArrow()}\r\n+                    </Dropdown.Item>\r\n+                    <Dropdown.Item onClick={() => handleSortKey(\"email\")}>\r\n+                        Email {sortKey === \"email\" && getArrow()}\r\n+                    </Dropdown.Item>\r\n \r\n-            <Dropdown.Divider />\r\n+                    <Dropdown.Divider />\r\n \r\n-            <Button\r\n-              variant=\"secondary\"\r\n-              className=\"mx-3 mb-2\"\r\n-              onClick={toggleDirection}\r\n-            >\r\n-              Toggle Asc/Desc {getArrow()}\r\n-            </Button>\r\n-          </Dropdown.Menu>\r\n-        </Dropdown>\r\n+                    <Button\r\n+                        variant=\"secondary\"\r\n+                        className=\"mx-3 mb-2\"\r\n+                        onClick={toggleDirection}\r\n+                    >\r\n+                        Toggle Asc/Desc {getArrow()}\r\n+                    </Button>\r\n+                </Dropdown.Menu>\r\n+            </Dropdown>\r\n \r\n             {/* <select>\r\n                 <option hidden selected>Select Sorting Option</option>\r\n                 <option onClick={() => handleSort('name')}>Name</option>\r\n"
                },
                {
                    "date": 1757580865234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n     const [search, setSearch] = useState('');\r\n     const navigate = useNavigate();\r\n     const [sortKey, setSortKey] = useState(null);\r\n     const [sortDirection, setSortDirection] = useState('asc');\r\n+    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n             .then(res => res.json())\r\n"
                },
                {
                    "date": 1757580889187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                 onChange={(e) => setSearch(e.target.value)} />\r\n \r\n             <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)}>\r\n                 <Dropdown.Toggle variant=\"info\" onClick={() => setDropdownOpen(!dropdownOpen)}>\r\n-                    Sort by {sortKey.charAt(0).toUpperCase() + sortKey.slice(1)} {getArrow()}\r\n+                    Sort by {sortKey?.charAt(0).toUpperCase() + sortKey?.slice(1)} {getArrow()}\r\n                 </Dropdown.Toggle>\r\n \r\n                 <Dropdown.Menu>\r\n                     <Dropdown.Item onClick={() => handleSortKey(\"name\")}>\r\n"
                },
                {
                    "date": 1757580929105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,8 +55,15 @@\n \r\n                 <Dropdown.Menu>\r\n                     <Dropdown.Item onClick={() => handleSortKey(\"name\")}>\r\n                         Name {sortKey === \"name\" && getArrow()}\r\n+                        <Button\r\n+                        variant=\"secondary\"\r\n+                        className=\"mx-3 mb-2\"\r\n+                        onClick={toggleDirection}\r\n+                    >\r\n+                        Toggle Asc/Desc {getArrow()}\r\n+                    </Button>\r\n                     </Dropdown.Item>\r\n                     <Dropdown.Item onClick={() => handleSortKey(\"email\")}>\r\n                         Email {sortKey === \"email\" && getArrow()}\r\n                     </Dropdown.Item>\r\n"
                },
                {
                    "date": 1757580942761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,15 +55,9 @@\n \r\n                 <Dropdown.Menu>\r\n                     <Dropdown.Item onClick={() => handleSortKey(\"name\")}>\r\n                         Name {sortKey === \"name\" && getArrow()}\r\n-                        <Button\r\n-                        variant=\"secondary\"\r\n-                        className=\"mx-3 mb-2\"\r\n-                        onClick={toggleDirection}\r\n-                    >\r\n-                        Toggle Asc/Desc {getArrow()}\r\n-                    </Button>\r\n+                        \r\n                     </Dropdown.Item>\r\n                     <Dropdown.Item onClick={() => handleSortKey(\"email\")}>\r\n                         Email {sortKey === \"email\" && getArrow()}\r\n                     </Dropdown.Item>\r\n"
                },
                {
                    "date": 1757580996295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,8 @@\n \r\n                 <Dropdown.Menu>\r\n                     <Dropdown.Item onClick={() => handleSortKey(\"name\")}>\r\n                         Name {sortKey === \"name\" && getArrow()}\r\n-                        \r\n                     </Dropdown.Item>\r\n                     <Dropdown.Item onClick={() => handleSortKey(\"email\")}>\r\n                         Email {sortKey === \"email\" && getArrow()}\r\n                     </Dropdown.Item>\r\n"
                },
                {
                    "date": 1757581002529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,18 +30,18 @@\n     const filteredData = data.filter(item =>\r\n         item.name.toLowerCase().includes(search.toLowerCase())\r\n     );\r\n \r\n-     const sortedData = [...filteredData].sort((a, b) => {\r\n-    const aValue = a[sortKey];\r\n-    const bValue = b[sortKey];\r\n-    if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\r\n-    if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n-    return 0;\r\n-  });\r\n+    const sortedData = [...filteredData].sort((a, b) => {\r\n+        const aValue = a[sortKey];\r\n+        const bValue = b[sortKey];\r\n+        if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\r\n+        if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n+        return 0;\r\n+    });\r\n \r\n-  const getArrow = () => (sortDirection === \"asc\" ? \"↑\" : \"↓\");\r\n-    \r\n+    const getArrow = () => (sortDirection === \"asc\" ? \"↑\" : \"↓\");\r\n+\r\n     return (\r\n         <>\r\n             Search:\r\n             <input type=\"text\"\r\n@@ -59,11 +59,9 @@\n                     </Dropdown.Item>\r\n                     <Dropdown.Item onClick={() => handleSortKey(\"email\")}>\r\n                         Email {sortKey === \"email\" && getArrow()}\r\n                     </Dropdown.Item>\r\n-\r\n                     <Dropdown.Divider />\r\n-\r\n                     <Button\r\n                         variant=\"secondary\"\r\n                         className=\"mx-3 mb-2\"\r\n                         onClick={toggleDirection}\r\n"
                },
                {
                    "date": 1757581041752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,74 +1,70 @@\n import { useState, useEffect } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import Card from \"react-bootstrap/Card\";\r\n import Button from \"react-bootstrap/Button\";\r\n-import Dropdown from \"react-bootstrap/Dropdown\";\r\n+import  Dropdown from \"react-bootstrap/Dropdown\";\r\n import { Table } from \"react-bootstrap/Table\";\r\n \r\n export default function CardList() {\r\n     const [data, setData] = useState([]);\r\n     const [search, setSearch] = useState('');\r\n     const navigate = useNavigate();\r\n     const [sortKey, setSortKey] = useState(null);\r\n     const [sortDirection, setSortDirection] = useState('asc');\r\n-    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n     }, [])\r\n \r\n-    const handleSortKey = (key) => {\r\n-        setSortKey(key);\r\n+    const getArrow = (key) => {\r\n+        return sortKey === key ? (sortDirection === \"asc\" ? \"↑\" : \"↓\") : \"↑\";\r\n     };\r\n \r\n-    const toggleDirection = () => {\r\n-        setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\r\n+    const handleSort = (key) => {\r\n+        if (sortKey === key) {\r\n+            setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n+        } else {\r\n+            setSortKey(key);\r\n+            setSortDirection('asc');\r\n+        }\r\n     };\r\n \r\n     const filteredData = data.filter(item =>\r\n         item.name.toLowerCase().includes(search.toLowerCase())\r\n     );\r\n \r\n     const sortedData = [...filteredData].sort((a, b) => {\r\n+        if (!sortKey) return 0;\r\n+\r\n         const aValue = a[sortKey];\r\n         const bValue = b[sortKey];\r\n-        if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\r\n-        if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n+\r\n+        if (aValue < bValue) return sortDirection === 'asc' ? -1 : 1;\r\n+        if (aValue > bValue) return sortDirection === 'asc' ? 1 : -1;\r\n         return 0;\r\n     });\r\n-\r\n-    const getArrow = () => (sortDirection === \"asc\" ? \"↑\" : \"↓\");\r\n-\r\n     return (\r\n         <>\r\n             Search:\r\n             <input type=\"text\"\r\n                 value={search}\r\n                 onChange={(e) => setSearch(e.target.value)} />\r\n \r\n-            <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)}>\r\n-                <Dropdown.Toggle variant=\"info\" onClick={() => setDropdownOpen(!dropdownOpen)}>\r\n-                    Sort by {sortKey?.charAt(0).toUpperCase() + sortKey?.slice(1)} {getArrow()}\r\n+            <Dropdown>\r\n+                <Dropdown.Toggle variant=\"info\">\r\n+                    Sort by {sortKey.charAt(0).toUpperCase() + sortKey.slice(1)} {getArrow(sortKey)}\r\n                 </Dropdown.Toggle>\r\n \r\n                 <Dropdown.Menu>\r\n-                    <Dropdown.Item onClick={() => handleSortKey(\"name\")}>\r\n-                        Name {sortKey === \"name\" && getArrow()}\r\n+                    <Dropdown.Item onClick={() => handleSort(\"name\")}>\r\n+                        Name {getArrow(\"name\")}\r\n                     </Dropdown.Item>\r\n-                    <Dropdown.Item onClick={() => handleSortKey(\"email\")}>\r\n-                        Email {sortKey === \"email\" && getArrow()}\r\n+                    <Dropdown.Item onClick={() => handleSort(\"email\")}>\r\n+                        Email {getArrow(\"email\")}\r\n                     </Dropdown.Item>\r\n-                    <Dropdown.Divider />\r\n-                    <Button\r\n-                        variant=\"secondary\"\r\n-                        className=\"mx-3 mb-2\"\r\n-                        onClick={toggleDirection}\r\n-                    >\r\n-                        Toggle Asc/Desc {getArrow()}\r\n-                    </Button>\r\n                 </Dropdown.Menu>\r\n             </Dropdown>\r\n \r\n             {/* <select>\r\n"
                },
                {
                    "date": 1757581065109,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,70 +1,76 @@\n import { useState, useEffect } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import Card from \"react-bootstrap/Card\";\r\n import Button from \"react-bootstrap/Button\";\r\n-import  Dropdown from \"react-bootstrap/Dropdown\";\r\n+import Dropdown from \"react-bootstrap/Dropdown\";\r\n import { Table } from \"react-bootstrap/Table\";\r\n \r\n export default function CardList() {\r\n     const [data, setData] = useState([]);\r\n     const [search, setSearch] = useState('');\r\n     const navigate = useNavigate();\r\n     const [sortKey, setSortKey] = useState(null);\r\n     const [sortDirection, setSortDirection] = useState('asc');\r\n+    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n     }, [])\r\n \r\n-    const getArrow = (key) => {\r\n-        return sortKey === key ? (sortDirection === \"asc\" ? \"↑\" : \"↓\") : \"↑\";\r\n+    const handleSortKey = (key) => {\r\n+        setSortKey(key);\r\n     };\r\n \r\n-    const handleSort = (key) => {\r\n-        if (sortKey === key) {\r\n-            setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n-        } else {\r\n-            setSortKey(key);\r\n-            setSortDirection('asc');\r\n-        }\r\n+    const toggleDirection = () => {\r\n+        setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\r\n     };\r\n \r\n     const filteredData = data.filter(item =>\r\n         item.name.toLowerCase().includes(search.toLowerCase())\r\n     );\r\n \r\n-    const sortedData = [...filteredData].sort((a, b) => {\r\n-        if (!sortKey) return 0;\r\n+     const sortedData = [...filteredData].sort((a, b) => {\r\n+    const aValue = a[sortKey];\r\n+    const bValue = b[sortKey];\r\n+    if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\r\n+    if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n+    return 0;\r\n+  });\r\n \r\n-        const aValue = a[sortKey];\r\n-        const bValue = b[sortKey];\r\n-\r\n-        if (aValue < bValue) return sortDirection === 'asc' ? -1 : 1;\r\n-        if (aValue > bValue) return sortDirection === 'asc' ? 1 : -1;\r\n-        return 0;\r\n-    });\r\n+  const getArrow = () => (sortDirection === \"asc\" ? \"↑\" : \"↓\");\r\n+    \r\n     return (\r\n         <>\r\n             Search:\r\n             <input type=\"text\"\r\n                 value={search}\r\n                 onChange={(e) => setSearch(e.target.value)} />\r\n \r\n-            <Dropdown>\r\n-                <Dropdown.Toggle variant=\"info\">\r\n-                    Sort by {sortKey.charAt(0).toUpperCase() + sortKey.slice(1)} {getArrow(sortKey)}\r\n+            <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)}>\r\n+                <Dropdown.Toggle variant=\"info\" onClick={() => setDropdownOpen(!dropdownOpen)}>\r\n+                    Sort by {sortKey.charAt(0).toUpperCase() + sortKey.slice(1)} {getArrow()}\r\n                 </Dropdown.Toggle>\r\n \r\n                 <Dropdown.Menu>\r\n-                    <Dropdown.Item onClick={() => handleSort(\"name\")}>\r\n-                        Name {getArrow(\"name\")}\r\n+                    <Dropdown.Item onClick={() => handleSortKey(\"name\")}>\r\n+                        Name {sortKey === \"name\" && getArrow()}\r\n                     </Dropdown.Item>\r\n-                    <Dropdown.Item onClick={() => handleSort(\"email\")}>\r\n-                        Email {getArrow(\"email\")}\r\n+                    <Dropdown.Item onClick={() => handleSortKey(\"email\")}>\r\n+                        Email {sortKey === \"email\" && getArrow()}\r\n                     </Dropdown.Item>\r\n+\r\n+                    <Dropdown.Divider />\r\n+\r\n+                    <Button\r\n+                        variant=\"secondary\"\r\n+                        className=\"mx-3 mb-2\"\r\n+                        onClick={toggleDirection}\r\n+                    >\r\n+                        Toggle Asc/Desc {getArrow()}\r\n+                    </Button>\r\n                 </Dropdown.Menu>\r\n             </Dropdown>\r\n \r\n             {/* <select>\r\n"
                },
                {
                    "date": 1757581070911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,14 +49,15 @@\n                 onChange={(e) => setSearch(e.target.value)} />\r\n \r\n             <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)}>\r\n                 <Dropdown.Toggle variant=\"info\" onClick={() => setDropdownOpen(!dropdownOpen)}>\r\n-                    Sort by {sortKey.charAt(0).toUpperCase() + sortKey.slice(1)} {getArrow()}\r\n+                    Sort by {sortKey?.charAt(0).toUpperCase() + sortKey?.slice(1)} {getArrow()}\r\n                 </Dropdown.Toggle>\r\n \r\n                 <Dropdown.Menu>\r\n                     <Dropdown.Item onClick={() => handleSortKey(\"name\")}>\r\n                         Name {sortKey === \"name\" && getArrow()}\r\n+                        \r\n                     </Dropdown.Item>\r\n                     <Dropdown.Item onClick={() => handleSortKey(\"email\")}>\r\n                         Email {sortKey === \"email\" && getArrow()}\r\n                     </Dropdown.Item>\r\n"
                },
                {
                    "date": 1757581109606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,15 +63,9 @@\n                     </Dropdown.Item>\r\n \r\n                     <Dropdown.Divider />\r\n \r\n-                    <Button\r\n-                        variant=\"secondary\"\r\n-                        className=\"mx-3 mb-2\"\r\n-                        onClick={toggleDirection}\r\n-                    >\r\n-                        Toggle Asc/Desc {getArrow()}\r\n-                    </Button>\r\n+                    \r\n                 </Dropdown.Menu>\r\n             </Dropdown>\r\n \r\n             {/* <select>\r\n"
                },
                {
                    "date": 1757581392129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,30 +18,31 @@\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n     }, [])\r\n \r\n-    const handleSortKey = (key) => {\r\n-        setSortKey(key);\r\n+    const toggleSort = (key) => {\r\n+        if (sortKey === key) {\r\n+            setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\r\n+        } else {\r\n+            setSortKey(key);\r\n+            setSortDirection(\"asc\");\r\n+        }\r\n     };\r\n \r\n-    const toggleDirection = () => {\r\n-        setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\r\n-    };\r\n-\r\n     const filteredData = data.filter(item =>\r\n         item.name.toLowerCase().includes(search.toLowerCase())\r\n     );\r\n \r\n-     const sortedData = [...filteredData].sort((a, b) => {\r\n-    const aValue = a[sortKey];\r\n-    const bValue = b[sortKey];\r\n-    if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\r\n-    if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n-    return 0;\r\n-  });\r\n+    const sortedData = [...filteredData].sort((a, b) => {\r\n+        const aValue = a[sortKey];\r\n+        const bValue = b[sortKey];\r\n+        if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\r\n+        if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n+        return 0;\r\n+    });\r\n \r\n-  const getArrow = () => (sortDirection === \"asc\" ? \"↑\" : \"↓\");\r\n-    \r\n+    const getArrow = () => (sortDirection === \"asc\" ? \"↑\" : \"↓\");\r\n+\r\n     return (\r\n         <>\r\n             Search:\r\n             <input type=\"text\"\r\n@@ -55,17 +56,17 @@\n \r\n                 <Dropdown.Menu>\r\n                     <Dropdown.Item onClick={() => handleSortKey(\"name\")}>\r\n                         Name {sortKey === \"name\" && getArrow()}\r\n-                        \r\n+\r\n                     </Dropdown.Item>\r\n                     <Dropdown.Item onClick={() => handleSortKey(\"email\")}>\r\n                         Email {sortKey === \"email\" && getArrow()}\r\n                     </Dropdown.Item>\r\n \r\n                     <Dropdown.Divider />\r\n \r\n-                    \r\n+\r\n                 </Dropdown.Menu>\r\n             </Dropdown>\r\n \r\n             {/* <select>\r\n"
                },
                {
                    "date": 1757581417548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,36 +48,36 @@\n             <input type=\"text\"\r\n                 value={search}\r\n                 onChange={(e) => setSearch(e.target.value)} />\r\n \r\n-            <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)}>\r\n-                <Dropdown.Toggle variant=\"info\" onClick={() => setDropdownOpen(!dropdownOpen)}>\r\n-                    Sort by {sortKey?.charAt(0).toUpperCase() + sortKey?.slice(1)} {getArrow()}\r\n-                </Dropdown.Toggle>\r\n-\r\n-                <Dropdown.Menu>\r\n-                    <Dropdown.Item onClick={() => handleSortKey(\"name\")}>\r\n-                        Name {sortKey === \"name\" && getArrow()}\r\n-\r\n+            <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n+                {[\"name\", \"email\"].map((key) => (\r\n+                    <Dropdown.Item\r\n+                        key={key}\r\n+                        className=\"d-flex justify-content-between align-items-center\"\r\n+                    >\r\n+                        <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n+                        <Button\r\n+                            size=\"sm\"\r\n+                            variant=\"outline-primary\"\r\n+                            onClick={() => toggleSort(key)}\r\n+                        >\r\n+                            {getArrow(key)}\r\n+                        </Button>\r\n                     </Dropdown.Item>\r\n-                    <Dropdown.Item onClick={() => handleSortKey(\"email\")}>\r\n-                        Email {sortKey === \"email\" && getArrow()}\r\n-                    </Dropdown.Item>\r\n+                ))}\r\n+            </Dropdown.Menu>\r\n+        </Dropdown >\r\n \r\n-                    <Dropdown.Divider />\r\n-\r\n-\r\n-                </Dropdown.Menu>\r\n-            </Dropdown>\r\n-\r\n-            {/* <select>\r\n+        {/* <select>\r\n                 <option hidden selected>Select Sorting Option</option>\r\n                 <option onClick={() => handleSort('name')}>Name</option>\r\n                 <option onClick={() => handleSort('email')}>Email</option>\r\n             </select> */}\r\n \r\n-            <div className=\"d-flex flex-row flex-wrap justify-content-center\">\r\n-                {sortedData.map((user) => (\r\n+            < div className = \"d-flex flex-row flex-wrap justify-content-center\" >\r\n+            {\r\n+                sortedData.map((user) => (\r\n                     <Card key={user.id} style={{\r\n                         width: \"18rem\",\r\n                         margin: \"15px\",\r\n                         padding: \"10px\"\r\n@@ -92,9 +92,9 @@\n                         </Card.Body>\r\n                         <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n                     </Card>\r\n                 ))\r\n-                }\r\n-            </div>\r\n+            }\r\n+            </div >\r\n         </>\r\n     )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757581447387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,53 +48,57 @@\n             <input type=\"text\"\r\n                 value={search}\r\n                 onChange={(e) => setSearch(e.target.value)} />\r\n \r\n-            <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n-                {[\"name\", \"email\"].map((key) => (\r\n-                    <Dropdown.Item\r\n-                        key={key}\r\n-                        className=\"d-flex justify-content-between align-items-center\"\r\n-                    >\r\n-                        <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n-                        <Button\r\n-                            size=\"sm\"\r\n-                            variant=\"outline-primary\"\r\n-                            onClick={() => toggleSort(key)}\r\n+            <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)}>\r\n+                <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n+                    Sort Options\r\n+                </Dropdown.Toggle>\r\n+                <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n+                    {[\"name\", \"email\"].map((key) => (\r\n+                        <Dropdown.Item\r\n+                            key={key}\r\n+                            className=\"d-flex justify-content-between align-items-center\"\r\n                         >\r\n-                            {getArrow(key)}\r\n-                        </Button>\r\n-                    </Dropdown.Item>\r\n-                ))}\r\n-            </Dropdown.Menu>\r\n-        </Dropdown >\r\n+                            <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n+                            <Button\r\n+                                size=\"sm\"\r\n+                                variant=\"outline-primary\"\r\n+                                onClick={() => toggleSort(key)}\r\n+                            >\r\n+                                {getArrow(key)}\r\n+                            </Button>\r\n+                        </Dropdown.Item>\r\n+                    ))}\r\n+                </Dropdown.Menu>\r\n+            </Dropdown >\r\n \r\n-        {/* <select>\r\n+            {/* <select>\r\n                 <option hidden selected>Select Sorting Option</option>\r\n                 <option onClick={() => handleSort('name')}>Name</option>\r\n                 <option onClick={() => handleSort('email')}>Email</option>\r\n             </select> */}\r\n \r\n-            < div className = \"d-flex flex-row flex-wrap justify-content-center\" >\r\n-            {\r\n-                sortedData.map((user) => (\r\n-                    <Card key={user.id} style={{\r\n-                        width: \"18rem\",\r\n-                        margin: \"15px\",\r\n-                        padding: \"10px\"\r\n-                    }}>\r\n-                        <Card.Body>\r\n-                            <Card.Title>{user.id}</Card.Title>\r\n-                            <Card.Text>\r\n-                                <b>Name:</b>{user.name}<br />\r\n-                                <b>Email:</b>{user.email}<br />\r\n-                                <b>Company:</b>{user.company.name}\r\n-                            </Card.Text>\r\n-                        </Card.Body>\r\n-                        <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n-                    </Card>\r\n-                ))\r\n-            }\r\n+            < div className=\"d-flex flex-row flex-wrap justify-content-center\" >\r\n+                {\r\n+                    sortedData.map((user) => (\r\n+                        <Card key={user.id} style={{\r\n+                            width: \"18rem\",\r\n+                            margin: \"15px\",\r\n+                            padding: \"10px\"\r\n+                        }}>\r\n+                            <Card.Body>\r\n+                                <Card.Title>{user.id}</Card.Title>\r\n+                                <Card.Text>\r\n+                                    <b>Name:</b>{user.name}<br />\r\n+                                    <b>Email:</b>{user.email}<br />\r\n+                                    <b>Company:</b>{user.company.name}\r\n+                                </Card.Text>\r\n+                            </Card.Body>\r\n+                            <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n+                        </Card>\r\n+                    ))\r\n+                }\r\n             </div >\r\n         </>\r\n     )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757581533507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,22 +55,27 @@\n                 </Dropdown.Toggle>\r\n                 <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n                     {[\"name\", \"email\"].map((key) => (\r\n                         <Dropdown.Item\r\n+                            as=\"div\"   // prevent automatic close\r\n                             key={key}\r\n                             className=\"d-flex justify-content-between align-items-center\"\r\n                         >\r\n                             <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n                             <Button\r\n                                 size=\"sm\"\r\n                                 variant=\"outline-primary\"\r\n-                                onClick={() => toggleSort(key)}\r\n+                                onClick={(e) => {\r\n+                                    e.stopPropagation();   // prevent closing dropdown\r\n+                                    toggleSort(key);\r\n+                                }}\r\n                             >\r\n                                 {getArrow(key)}\r\n                             </Button>\r\n                         </Dropdown.Item>\r\n                     ))}\r\n                 </Dropdown.Menu>\r\n+\r\n             </Dropdown >\r\n \r\n             {/* <select>\r\n                 <option hidden selected>Select Sorting Option</option>\r\n"
                },
                {
                    "date": 1757581976390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n         if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n         return 0;\r\n     });\r\n \r\n-    const getArrow = () => (sortDirection === \"asc\" ? \"↑\" : \"↓\");\r\n+    const getArrow = () => (sortDirection === \"asc\" ? <img src=\"C:\\Users\\admin\\Downloads\\sort-descending.png\"> : );\r\n \r\n     return (\r\n         <>\r\n             Search:\r\n@@ -73,9 +73,8 @@\n                             </Button>\r\n                         </Dropdown.Item>\r\n                     ))}\r\n                 </Dropdown.Menu>\r\n-\r\n             </Dropdown >\r\n \r\n             {/* <select>\r\n                 <option hidden selected>Select Sorting Option</option>\r\n"
                },
                {
                    "date": 1757581995040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n         if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n         return 0;\r\n     });\r\n \r\n-    const getArrow = () => (sortDirection === \"asc\" ? <img src=\"C:\\Users\\admin\\Downloads\\sort-descending.png\"> : );\r\n+    const getArrow = () => (sortDirection === \"asc\" ? <img src=\"C:\\Users\\admin\\Downloads\\sort-descending.png\"> :<img src=\"C:\\Users\\admin\\Downloads\\sort.png\" );\r\n \r\n     return (\r\n         <>\r\n             Search:\r\n"
                },
                {
                    "date": 1757582010040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n         if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n         return 0;\r\n     });\r\n \r\n-    const getArrow = () => (sortDirection === \"asc\" ? <img src=\"C:\\Users\\admin\\Downloads\\sort-descending.png\"> :<img src=\"C:\\Users\\admin\\Downloads\\sort.png\" );\r\n+    const getArrow = () => (sortDirection === \"asc\" ? <img src=\"C:\\Users\\admin\\Downloads\\sort-descending.png\"> :<img src=\"C:\\Users\\admin\\Downloads\\sort.png\"></img> );\r\n \r\n     return (\r\n         <>\r\n             Search:\r\n"
                },
                {
                    "date": 1757582032055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n         if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n         return 0;\r\n     });\r\n \r\n-    const getArrow = () => (sortDirection === \"asc\" ? <img src=\"C:\\Users\\admin\\Downloads\\sort-descending.png\"> :<img src=\"C:\\Users\\admin\\Downloads\\sort.png\"></img> );\r\n+    const getArrow = () => (sortDirection === \"asc\" ? <img src=\"C:\\Users\\admin\\Downloads\\sort-descending.png\"> :<img src=\"C:\\Users\\admin\\Downloads\\sort.png\"> );\r\n \r\n     return (\r\n         <>\r\n             Search:\r\n"
                },
                {
                    "date": 1757582088207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n         if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n         return 0;\r\n     });\r\n \r\n-    const getArrow = () => (sortDirection === \"asc\" ? <img src=\"C:\\Users\\admin\\Downloads\\sort-descending.png\"> :<img src=\"C:\\Users\\admin\\Downloads\\sort.png\"> );\r\n+    const getArrow = () => (sortDirection === \"asc\" ? <img src=\"C:\\Users\\admin\\Downloads\\sort-descending.png\"  </img> :<img src=\"C:\\Users\\admin\\Downloads\\sort.png\"> </img>);\r\n \r\n     return (\r\n         <>\r\n             Search:\r\n"
                },
                {
                    "date": 1757582097641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,108 @@\n+import { useState, useEffect } from \"react\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n+import Card from \"react-bootstrap/Card\";\r\n+import Button from \"react-bootstrap/Button\";\r\n+import Dropdown from \"react-bootstrap/Dropdown\";\r\n+import { Table } from \"react-bootstrap/Table\";\r\n+\r\n+export default function CardList() {\r\n+    const [data, setData] = useState([]);\r\n+    const [search, setSearch] = useState('');\r\n+    const navigate = useNavigate();\r\n+    const [sortKey, setSortKey] = useState(null);\r\n+    const [sortDirection, setSortDirection] = useState('asc');\r\n+    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n+\r\n+    useEffect(() => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n+            .then(res => res.json())\r\n+            .then(data => setData(data))\r\n+    }, [])\r\n+\r\n+    const toggleSort = (key) => {\r\n+        if (sortKey === key) {\r\n+            setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\r\n+        } else {\r\n+            setSortKey(key);\r\n+            setSortDirection(\"asc\");\r\n+        }\r\n+    };\r\n+\r\n+    const filteredData = data.filter(item =>\r\n+        item.name.toLowerCase().includes(search.toLowerCase())\r\n+    );\r\n+\r\n+    const sortedData = [...filteredData].sort((a, b) => {\r\n+        const aValue = a[sortKey];\r\n+        const bValue = b[sortKey];\r\n+        if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\r\n+        if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n+        return 0;\r\n+    });\r\n+\r\n+    const getArrow = () => (sortDirection === \"asc\" ? <img src=\"C:\\Users\\admin\\Downloads\\sort-descending.png\"  </img> :  <img src=\"C:\\Users\\admin\\Downloads\\sort.png\"> </img>);\r\n+\r\n+    return (\r\n+        <>\r\n+            Search:\r\n+            <input type=\"text\"\r\n+                value={search}\r\n+                onChange={(e) => setSearch(e.target.value)} />\r\n+\r\n+            <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)}>\r\n+                <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n+                    Sort Options\r\n+                </Dropdown.Toggle>\r\n+                <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n+                    {[\"name\", \"email\"].map((key) => (\r\n+                        <Dropdown.Item\r\n+                            as=\"div\"   // prevent automatic close\r\n+                            key={key}\r\n+                            className=\"d-flex justify-content-between align-items-center\"\r\n+                        >\r\n+                            <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n+                            <Button\r\n+                                size=\"sm\"\r\n+                                variant=\"outline-primary\"\r\n+                                onClick={(e) => {\r\n+                                    e.stopPropagation();   // prevent closing dropdown\r\n+                                    toggleSort(key);\r\n+                                }}\r\n+                            >\r\n+                                {getArrow(key)}\r\n+                            </Button>\r\n+                        </Dropdown.Item>\r\n+                    ))}\r\n+                </Dropdown.Menu>\r\n+            </Dropdown >\r\n+\r\n+            {/* <select>\r\n+                <option hidden selected>Select Sorting Option</option>\r\n+                <option onClick={() => handleSort('name')}>Name</option>\r\n+                <option onClick={() => handleSort('email')}>Email</option>\r\n+            </select> */}\r\n+\r\n+            < div className=\"d-flex flex-row flex-wrap justify-content-center\" >\r\n+                {\r\n+                    sortedData.map((user) => (\r\n+                        <Card key={user.id} style={{\r\n+                            width: \"18rem\",\r\n+                            margin: \"15px\",\r\n+                            padding: \"10px\"\r\n+                        }}>\r\n+                            <Card.Body>\r\n+                                <Card.Title>{user.id}</Card.Title>\r\n+                                <Card.Text>\r\n+                                    <b>Name:</b>{user.name}<br />\r\n+                                    <b>Email:</b>{user.email}<br />\r\n+                                    <b>Company:</b>{user.company.name}\r\n+                                </Card.Text>\r\n+                            </Card.Body>\r\n+                            <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n+                        </Card>\r\n+                    ))\r\n+                }\r\n+            </div >\r\n+        </>\r\n+    )\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757582169441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n         if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n         return 0;\r\n     });\r\n \r\n-    const getArrow = () => (sortDirection === \"asc\" ? <img src=\"C:\\Users\\admin\\Downloads\\sort-descending.png\"  </img> :  <img src=\"C:\\Users\\admin\\Downloads\\sort.png\"> </img>);\r\n+    const getArrow = () => (sortDirection === \"asc\" ? <img src=\"C:\\Users\\admin\\Downloads\\sort-descending.png\"></img> : <img src=\"C:\\Users\\admin\\Downloads\\sort.png\"> </img>);\r\n \r\n     return (\r\n         <>\r\n             Search:\r\n@@ -104,113 +104,5 @@\n                 }\r\n             </div >\r\n         </>\r\n     )\r\n-}\n-import { useState, useEffect } from \"react\";\r\n-import { useNavigate } from \"react-router-dom\";\r\n-import Card from \"react-bootstrap/Card\";\r\n-import Button from \"react-bootstrap/Button\";\r\n-import Dropdown from \"react-bootstrap/Dropdown\";\r\n-import { Table } from \"react-bootstrap/Table\";\r\n-\r\n-export default function CardList() {\r\n-    const [data, setData] = useState([]);\r\n-    const [search, setSearch] = useState('');\r\n-    const navigate = useNavigate();\r\n-    const [sortKey, setSortKey] = useState(null);\r\n-    const [sortDirection, setSortDirection] = useState('asc');\r\n-    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n-\r\n-    useEffect(() => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n-            .then(res => res.json())\r\n-            .then(data => setData(data))\r\n-    }, [])\r\n-\r\n-    const toggleSort = (key) => {\r\n-        if (sortKey === key) {\r\n-            setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\r\n-        } else {\r\n-            setSortKey(key);\r\n-            setSortDirection(\"asc\");\r\n-        }\r\n-    };\r\n-\r\n-    const filteredData = data.filter(item =>\r\n-        item.name.toLowerCase().includes(search.toLowerCase())\r\n-    );\r\n-\r\n-    const sortedData = [...filteredData].sort((a, b) => {\r\n-        const aValue = a[sortKey];\r\n-        const bValue = b[sortKey];\r\n-        if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\r\n-        if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n-        return 0;\r\n-    });\r\n-\r\n-    const getArrow = () => (sortDirection === \"asc\" ? <img src=\"C:\\Users\\admin\\Downloads\\sort-descending.png\"  </img> :<img src=\"C:\\Users\\admin\\Downloads\\sort.png\"> </img>);\r\n-\r\n-    return (\r\n-        <>\r\n-            Search:\r\n-            <input type=\"text\"\r\n-                value={search}\r\n-                onChange={(e) => setSearch(e.target.value)} />\r\n-\r\n-            <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)}>\r\n-                <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n-                    Sort Options\r\n-                </Dropdown.Toggle>\r\n-                <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n-                    {[\"name\", \"email\"].map((key) => (\r\n-                        <Dropdown.Item\r\n-                            as=\"div\"   // prevent automatic close\r\n-                            key={key}\r\n-                            className=\"d-flex justify-content-between align-items-center\"\r\n-                        >\r\n-                            <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n-                            <Button\r\n-                                size=\"sm\"\r\n-                                variant=\"outline-primary\"\r\n-                                onClick={(e) => {\r\n-                                    e.stopPropagation();   // prevent closing dropdown\r\n-                                    toggleSort(key);\r\n-                                }}\r\n-                            >\r\n-                                {getArrow(key)}\r\n-                            </Button>\r\n-                        </Dropdown.Item>\r\n-                    ))}\r\n-                </Dropdown.Menu>\r\n-            </Dropdown >\r\n-\r\n-            {/* <select>\r\n-                <option hidden selected>Select Sorting Option</option>\r\n-                <option onClick={() => handleSort('name')}>Name</option>\r\n-                <option onClick={() => handleSort('email')}>Email</option>\r\n-            </select> */}\r\n-\r\n-            < div className=\"d-flex flex-row flex-wrap justify-content-center\" >\r\n-                {\r\n-                    sortedData.map((user) => (\r\n-                        <Card key={user.id} style={{\r\n-                            width: \"18rem\",\r\n-                            margin: \"15px\",\r\n-                            padding: \"10px\"\r\n-                        }}>\r\n-                            <Card.Body>\r\n-                                <Card.Title>{user.id}</Card.Title>\r\n-                                <Card.Text>\r\n-                                    <b>Name:</b>{user.name}<br />\r\n-                                    <b>Email:</b>{user.email}<br />\r\n-                                    <b>Company:</b>{user.company.name}\r\n-                                </Card.Text>\r\n-                            </Card.Body>\r\n-                            <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n-                        </Card>\r\n-                    ))\r\n-                }\r\n-            </div >\r\n-        </>\r\n-    )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757582175430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n         if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n         return 0;\r\n     });\r\n \r\n-    const getArrow = () => (sortDirection === \"asc\" ? <img src=\"C:\\Users\\admin\\Downloads\\sort-descending.png\"></img> : <img src=\"C:\\Users\\admin\\Downloads\\sort.png\"> </img>);\r\n+    const getArrow = () => (sortDirection === \"asc\" ? <img src=\"C:\\Users\\admin\\Downloads\\sort-descending.png\"></img> : <img src=\"C:\\Users\\admin\\Downloads\\sort.png\"></img>);\r\n \r\n     return (\r\n         <>\r\n             Search:\r\n"
                },
                {
                    "date": 1757582199105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n         if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n         return 0;\r\n     });\r\n \r\n-    const getArrow = () => (sortDirection === \"asc\" ? <img src=\"C:\\Users\\admin\\Downloads\\sort-descending.png\"></img> : <img src=\"C:\\Users\\admin\\Downloads\\sort.png\"></img>);\r\n+    const getArrow = () => (sortDirection === \"asc\" ? ;\r\n \r\n     return (\r\n         <>\r\n             Search:\r\n"
                },
                {
                    "date": 1757582249658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n         if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n         return 0;\r\n     });\r\n \r\n-    const getArrow = () => (sortDirection === \"asc\" ? ;\r\n+    const getArrow = () => (sortDirection === \"asc\" ? \"⬆️\":\"⬇️\";\r\n \r\n     return (\r\n         <>\r\n             Search:\r\n"
                },
                {
                    "date": 1757582265069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n         if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n         return 0;\r\n     });\r\n \r\n-    const getArrow = () => (sortDirection === \"asc\" ? \"⬆️\":\"⬇️\";\r\n+    const getArrow = () => (sortDirection === \"asc\" ? \"⬆️\":\"⬇️\";)\r\n \r\n     return (\r\n         <>\r\n             Search:\r\n"
                },
                {
                    "date": 1757582346341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n         if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n         return 0;\r\n     });\r\n \r\n-    const getArrow = () => (sortDirection === \"asc\" ? \"⬆️\":\"⬇️\";)\r\n+    const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\":\"⬆️\")\r\n \r\n     return (\r\n         <>\r\n             Search:\r\n"
                },
                {
                    "date": 1757582494573,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,9 @@\n     const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\":\"⬆️\")\r\n \r\n     return (\r\n         <>\r\n+        <div className=\"container\">>\r\n             Search:\r\n             <input type=\"text\"\r\n                 value={search}\r\n                 onChange={(e) => setSearch(e.target.value)} />\r\n@@ -102,7 +103,8 @@\n                         </Card>\r\n                     ))\r\n                 }\r\n             </div >\r\n+            </div>\r\n         </>\r\n     )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757582558845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,111 @@\n+import { useState, useEffect } from \"react\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n+import Card from \"react-bootstrap/Card\";\r\n+import Button from \"react-bootstrap/Button\";\r\n+import Dropdown from \"react-bootstrap/Dropdown\";\r\n+import { Table } from \"react-bootstrap/Table\";\r\n+\r\n+export default function CardList() {\r\n+    const [data, setData] = useState([]);\r\n+    const [search, setSearch] = useState('');\r\n+    const navigate = useNavigate();\r\n+    const [sortKey, setSortKey] = useState(null);\r\n+    const [sortDirection, setSortDirection] = useState('asc');\r\n+    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n+\r\n+    useEffect(() => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n+            .then(res => res.json())\r\n+            .then(data => setData(data))\r\n+    }, [])\r\n+\r\n+    const toggleSort = (key) => {\r\n+        if (sortKey === key) {\r\n+            setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\r\n+        } else {\r\n+            setSortKey(key);\r\n+            setSortDirection(\"asc\");\r\n+        }\r\n+    };\r\n+\r\n+    const filteredData = data.filter(item =>\r\n+        item.name.toLowerCase().includes(search.toLowerCase())\r\n+    );\r\n+\r\n+    const sortedData = [...filteredData].sort((a, b) => {\r\n+        const aValue = a[sortKey];\r\n+        const bValue = b[sortKey];\r\n+        if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\r\n+        if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n+        return 0;\r\n+    });\r\n+\r\n+    const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\" : \"⬆️\")\r\n+\r\n+    return (\r\n+        <>\r\n+            <div className=\"container\">\r\n+                <div className=\"d-flex justify-content-flex-end\"\r\n+                Search:\r\n+                <input type=\"text\"\r\n+                    value={search}\r\n+                    onChange={(e) => setSearch(e.target.value)} />\r\n+\r\n+                <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)}>\r\n+                    <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n+                        Sort Options\r\n+                    </Dropdown.Toggle>\r\n+                    <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n+                        {[\"name\", \"email\"].map((key) => (\r\n+                            <Dropdown.Item\r\n+                                as=\"div\"   // prevent automatic close\r\n+                                key={key}\r\n+                                className=\"d-flex justify-content-between align-items-center\"\r\n+                            >\r\n+                                <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n+                                <Button\r\n+                                    size=\"sm\"\r\n+                                    variant=\"outline-primary\"\r\n+                                    onClick={(e) => {\r\n+                                        e.stopPropagation();   // prevent closing dropdown\r\n+                                        toggleSort(key);\r\n+                                    }}\r\n+                                >\r\n+                                    {getArrow(key)}\r\n+                                </Button>\r\n+                            </Dropdown.Item>\r\n+                        ))}\r\n+                    </Dropdown.Menu>\r\n+                </Dropdown >\r\n+\r\n+                {/* <select>\r\n+                <option hidden selected>Select Sorting Option</option>\r\n+                <option onClick={() => handleSort('name')}>Name</option>\r\n+                <option onClick={() => handleSort('email')}>Email</option>\r\n+            </select> */}\r\n+\r\n+                < div className=\"d-flex flex-row flex-wrap justify-content-center\" >\r\n+                    {\r\n+                        sortedData.map((user) => (\r\n+                            <Card key={user.id} style={{\r\n+                                width: \"18rem\",\r\n+                                margin: \"15px\",\r\n+                                padding: \"10px\"\r\n+                            }}>\r\n+                                <Card.Body>\r\n+                                    <Card.Title>{user.id}</Card.Title>\r\n+                                    <Card.Text>\r\n+                                        <b>Name:</b>{user.name}<br />\r\n+                                        <b>Email:</b>{user.email}<br />\r\n+                                        <b>Company:</b>{user.company.name}\r\n+                                    </Card.Text>\r\n+                                </Card.Body>\r\n+                                <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n+                            </Card>\r\n+                        ))\r\n+                    }\r\n+                </div >\r\n+            </div>\r\n+        </>\r\n+    )\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757582565206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,9 @@\n                 Search:\r\n                 <input type=\"text\"\r\n                     value={search}\r\n                     onChange={(e) => setSearch(e.target.value)} />\r\n+                    </div>\r\n \r\n                 <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)}>\r\n                     <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n                         Sort Options\r\n@@ -107,115 +108,5 @@\n                 </div >\r\n             </div>\r\n         </>\r\n     )\r\n-}\n-import { useState, useEffect } from \"react\";\r\n-import { useNavigate } from \"react-router-dom\";\r\n-import Card from \"react-bootstrap/Card\";\r\n-import Button from \"react-bootstrap/Button\";\r\n-import Dropdown from \"react-bootstrap/Dropdown\";\r\n-import { Table } from \"react-bootstrap/Table\";\r\n-\r\n-export default function CardList() {\r\n-    const [data, setData] = useState([]);\r\n-    const [search, setSearch] = useState('');\r\n-    const navigate = useNavigate();\r\n-    const [sortKey, setSortKey] = useState(null);\r\n-    const [sortDirection, setSortDirection] = useState('asc');\r\n-    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n-\r\n-    useEffect(() => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n-            .then(res => res.json())\r\n-            .then(data => setData(data))\r\n-    }, [])\r\n-\r\n-    const toggleSort = (key) => {\r\n-        if (sortKey === key) {\r\n-            setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\r\n-        } else {\r\n-            setSortKey(key);\r\n-            setSortDirection(\"asc\");\r\n-        }\r\n-    };\r\n-\r\n-    const filteredData = data.filter(item =>\r\n-        item.name.toLowerCase().includes(search.toLowerCase())\r\n-    );\r\n-\r\n-    const sortedData = [...filteredData].sort((a, b) => {\r\n-        const aValue = a[sortKey];\r\n-        const bValue = b[sortKey];\r\n-        if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\r\n-        if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n-        return 0;\r\n-    });\r\n-\r\n-    const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\":\"⬆️\")\r\n-\r\n-    return (\r\n-        <>\r\n-        <div className=\"container\">>\r\n-            Search:\r\n-            <input type=\"text\"\r\n-                value={search}\r\n-                onChange={(e) => setSearch(e.target.value)} />\r\n-\r\n-            <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)}>\r\n-                <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n-                    Sort Options\r\n-                </Dropdown.Toggle>\r\n-                <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n-                    {[\"name\", \"email\"].map((key) => (\r\n-                        <Dropdown.Item\r\n-                            as=\"div\"   // prevent automatic close\r\n-                            key={key}\r\n-                            className=\"d-flex justify-content-between align-items-center\"\r\n-                        >\r\n-                            <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n-                            <Button\r\n-                                size=\"sm\"\r\n-                                variant=\"outline-primary\"\r\n-                                onClick={(e) => {\r\n-                                    e.stopPropagation();   // prevent closing dropdown\r\n-                                    toggleSort(key);\r\n-                                }}\r\n-                            >\r\n-                                {getArrow(key)}\r\n-                            </Button>\r\n-                        </Dropdown.Item>\r\n-                    ))}\r\n-                </Dropdown.Menu>\r\n-            </Dropdown >\r\n-\r\n-            {/* <select>\r\n-                <option hidden selected>Select Sorting Option</option>\r\n-                <option onClick={() => handleSort('name')}>Name</option>\r\n-                <option onClick={() => handleSort('email')}>Email</option>\r\n-            </select> */}\r\n-\r\n-            < div className=\"d-flex flex-row flex-wrap justify-content-center\" >\r\n-                {\r\n-                    sortedData.map((user) => (\r\n-                        <Card key={user.id} style={{\r\n-                            width: \"18rem\",\r\n-                            margin: \"15px\",\r\n-                            padding: \"10px\"\r\n-                        }}>\r\n-                            <Card.Body>\r\n-                                <Card.Title>{user.id}</Card.Title>\r\n-                                <Card.Text>\r\n-                                    <b>Name:</b>{user.name}<br />\r\n-                                    <b>Email:</b>{user.email}<br />\r\n-                                    <b>Company:</b>{user.company.name}\r\n-                                </Card.Text>\r\n-                            </Card.Body>\r\n-                            <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n-                        </Card>\r\n-                    ))\r\n-                }\r\n-            </div >\r\n-            </div>\r\n-        </>\r\n-    )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757582625228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,64 +49,64 @@\n                 Search:\r\n                 <input type=\"text\"\r\n                     value={search}\r\n                     onChange={(e) => setSearch(e.target.value)} />\r\n-                    </div>\r\n+            </div>\r\n \r\n-                <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)}>\r\n-                    <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n-                        Sort Options\r\n-                    </Dropdown.Toggle>\r\n-                    <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n-                        {[\"name\", \"email\"].map((key) => (\r\n-                            <Dropdown.Item\r\n-                                as=\"div\"   // prevent automatic close\r\n-                                key={key}\r\n-                                className=\"d-flex justify-content-between align-items-center\"\r\n+            <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)}>\r\n+                <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n+                    Sort Options\r\n+                </Dropdown.Toggle>\r\n+                <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n+                    {[\"name\", \"email\"].map((key) => (\r\n+                        <Dropdown.Item\r\n+                            as=\"div\"   // prevent automatic close\r\n+                            key={key}\r\n+                            className=\"d-flex justify-content-between align-items-center\"\r\n+                        >\r\n+                            <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n+                            <Button\r\n+                                size=\"sm\"\r\n+                                variant=\"outline-primary\"\r\n+                                onClick={(e) => {\r\n+                                    e.stopPropagation();   // prevent closing dropdown\r\n+                                    toggleSort(key);\r\n+                                }}\r\n                             >\r\n-                                <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n-                                <Button\r\n-                                    size=\"sm\"\r\n-                                    variant=\"outline-primary\"\r\n-                                    onClick={(e) => {\r\n-                                        e.stopPropagation();   // prevent closing dropdown\r\n-                                        toggleSort(key);\r\n-                                    }}\r\n-                                >\r\n-                                    {getArrow(key)}\r\n-                                </Button>\r\n-                            </Dropdown.Item>\r\n-                        ))}\r\n-                    </Dropdown.Menu>\r\n-                </Dropdown >\r\n+                                {getArrow(key)}\r\n+                            </Button>\r\n+                        </Dropdown.Item>\r\n+                    ))}\r\n+                </Dropdown.Menu>\r\n+            </Dropdown >\r\n \r\n-                {/* <select>\r\n+            {/* <select>\r\n                 <option hidden selected>Select Sorting Option</option>\r\n                 <option onClick={() => handleSort('name')}>Name</option>\r\n                 <option onClick={() => handleSort('email')}>Email</option>\r\n             </select> */}\r\n \r\n-                < div className=\"d-flex flex-row flex-wrap justify-content-center\" >\r\n-                    {\r\n-                        sortedData.map((user) => (\r\n-                            <Card key={user.id} style={{\r\n-                                width: \"18rem\",\r\n-                                margin: \"15px\",\r\n-                                padding: \"10px\"\r\n-                            }}>\r\n-                                <Card.Body>\r\n-                                    <Card.Title>{user.id}</Card.Title>\r\n-                                    <Card.Text>\r\n-                                        <b>Name:</b>{user.name}<br />\r\n-                                        <b>Email:</b>{user.email}<br />\r\n-                                        <b>Company:</b>{user.company.name}\r\n-                                    </Card.Text>\r\n-                                </Card.Body>\r\n-                                <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n-                            </Card>\r\n-                        ))\r\n-                    }\r\n-                </div >\r\n-            </div>\r\n+            < div className=\"d-flex flex-row flex-wrap justify-content-center\" >\r\n+                {\r\n+                    sortedData.map((user) => (\r\n+                        <Card key={user.id} style={{\r\n+                            width: \"18rem\",\r\n+                            margin: \"15px\",\r\n+                            padding: \"10px\"\r\n+                        }}>\r\n+                            <Card.Body>\r\n+                                <Card.Title>{user.id}</Card.Title>\r\n+                                <Card.Text>\r\n+                                    <b>Name:</b>{user.name}<br />\r\n+                                    <b>Email:</b>{user.email}<br />\r\n+                                    <b>Company:</b>{user.company.name}\r\n+                                </Card.Text>\r\n+                            </Card.Body>\r\n+                            <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n+                        </Card>\r\n+                    ))\r\n+                }\r\n+            </div >\r\n+        </div >\r\n         </>\r\n     )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757582659591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,69 +44,69 @@\n \r\n     return (\r\n         <>\r\n             <div className=\"container\">\r\n-                <div className=\"d-flex justify-content-flex-end\"\r\n-                Search:\r\n-                <input type=\"text\"\r\n-                    value={search}\r\n-                    onChange={(e) => setSearch(e.target.value)} />\r\n-            </div>\r\n+                <div className=\"d-flex justify-content-flex-end\">\r\n+                    Search:\r\n+                    <input type=\"text\"\r\n+                        value={search}\r\n+                        onChange={(e) => setSearch(e.target.value)} />\r\n+                </div>\r\n \r\n-            <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)}>\r\n-                <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n-                    Sort Options\r\n-                </Dropdown.Toggle>\r\n-                <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n-                    {[\"name\", \"email\"].map((key) => (\r\n-                        <Dropdown.Item\r\n-                            as=\"div\"   // prevent automatic close\r\n-                            key={key}\r\n-                            className=\"d-flex justify-content-between align-items-center\"\r\n-                        >\r\n-                            <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n-                            <Button\r\n-                                size=\"sm\"\r\n-                                variant=\"outline-primary\"\r\n-                                onClick={(e) => {\r\n-                                    e.stopPropagation();   // prevent closing dropdown\r\n-                                    toggleSort(key);\r\n-                                }}\r\n+                <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)}>\r\n+                    <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n+                        Sort Options\r\n+                    </Dropdown.Toggle>\r\n+                    <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n+                        {[\"name\", \"email\"].map((key) => (\r\n+                            <Dropdown.Item\r\n+                                as=\"div\"   // prevent automatic close\r\n+                                key={key}\r\n+                                className=\"d-flex justify-content-between align-items-center\"\r\n                             >\r\n-                                {getArrow(key)}\r\n-                            </Button>\r\n-                        </Dropdown.Item>\r\n-                    ))}\r\n-                </Dropdown.Menu>\r\n-            </Dropdown >\r\n+                                <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n+                                <Button\r\n+                                    size=\"sm\"\r\n+                                    variant=\"outline-primary\"\r\n+                                    onClick={(e) => {\r\n+                                        e.stopPropagation();   // prevent closing dropdown\r\n+                                        toggleSort(key);\r\n+                                    }}\r\n+                                >\r\n+                                    {getArrow(key)}\r\n+                                </Button>\r\n+                            </Dropdown.Item>\r\n+                        ))}\r\n+                    </Dropdown.Menu>\r\n+                </Dropdown >\r\n \r\n-            {/* <select>\r\n+                {/* <select>\r\n                 <option hidden selected>Select Sorting Option</option>\r\n                 <option onClick={() => handleSort('name')}>Name</option>\r\n                 <option onClick={() => handleSort('email')}>Email</option>\r\n             </select> */}\r\n \r\n-            < div className=\"d-flex flex-row flex-wrap justify-content-center\" >\r\n-                {\r\n-                    sortedData.map((user) => (\r\n-                        <Card key={user.id} style={{\r\n-                            width: \"18rem\",\r\n-                            margin: \"15px\",\r\n-                            padding: \"10px\"\r\n-                        }}>\r\n-                            <Card.Body>\r\n-                                <Card.Title>{user.id}</Card.Title>\r\n-                                <Card.Text>\r\n-                                    <b>Name:</b>{user.name}<br />\r\n-                                    <b>Email:</b>{user.email}<br />\r\n-                                    <b>Company:</b>{user.company.name}\r\n-                                </Card.Text>\r\n-                            </Card.Body>\r\n-                            <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n-                        </Card>\r\n-                    ))\r\n-                }\r\n+                < div className=\"d-flex flex-row flex-wrap justify-content-center\" >\r\n+                    {\r\n+                        sortedData.map((user) => (\r\n+                            <Card key={user.id} style={{\r\n+                                width: \"18rem\",\r\n+                                margin: \"15px\",\r\n+                                padding: \"10px\"\r\n+                            }}>\r\n+                                <Card.Body>\r\n+                                    <Card.Title>{user.id}</Card.Title>\r\n+                                    <Card.Text>\r\n+                                        <b>Name:</b>{user.name}<br />\r\n+                                        <b>Email:</b>{user.email}<br />\r\n+                                        <b>Company:</b>{user.company.name}\r\n+                                    </Card.Text>\r\n+                                </Card.Body>\r\n+                                <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n+                            </Card>\r\n+                        ))\r\n+                    }\r\n+                </div >\r\n             </div >\r\n-        </div >\r\n         </>\r\n     )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757582757244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n \r\n     return (\r\n         <>\r\n             <div className=\"container\">\r\n-                <div className=\"d-flex justify-content-flex-end\">\r\n+                <div className=\"d-flex align-item-flex-end\">\r\n                     Search:\r\n                     <input type=\"text\"\r\n                         value={search}\r\n                         onChange={(e) => setSearch(e.target.value)} />\r\n"
                },
                {
                    "date": 1757583094370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,13 @@\n     const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\" : \"⬆️\")\r\n \r\n     return (\r\n         <>\r\n+            <div className=\"d-flex justify-content-flex-end\">\r\n+                <button><i class=\"bi bi-card-text\"></i></button>\r\n+                <button><i class=\"bi bi-table\"></i></button>\r\n+\r\n+            </div>\r\n             <div className=\"container\">\r\n                 <div className=\"d-flex align-item-flex-end\">\r\n                     Search:\r\n                     <input type=\"text\"\r\n"
                },
                {
                    "date": 1757583252596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\" : \"⬆️\")\r\n \r\n     return (\r\n         <>\r\n-            <div className=\"d-flex justify-content-flex-end\">\r\n+            <div className=\"d-flex justify-content-end\">\r\n                 <button><i class=\"bi bi-card-text\"></i></button>\r\n                 <button><i class=\"bi bi-table\"></i></button>\r\n \r\n             </div>\r\n"
                },
                {
                    "date": 1757583268478,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\" : \"⬆️\")\r\n \r\n     return (\r\n         <>\r\n-            <div className=\"d-flex justify-content-end\">\r\n+            <div className=\"d-flex justify-content-end m-5\">\r\n                 <button><i class=\"bi bi-card-text\"></i></button>\r\n                 <button><i class=\"bi bi-table\"></i></button>\r\n \r\n             </div>\r\n"
                },
                {
                    "date": 1757583277812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\" : \"⬆️\")\r\n \r\n     return (\r\n         <>\r\n-            <div className=\"d-flex justify-content-end m-5\">\r\n+            <div className=\"d-flex justify-content-end m-3\">\r\n                 <button><i class=\"bi bi-card-text\"></i></button>\r\n                 <button><i class=\"bi bi-table\"></i></button>\r\n \r\n             </div>\r\n"
                },
                {
                    "date": 1757583303121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,10 +44,10 @@\n \r\n     return (\r\n         <>\r\n             <div className=\"d-flex justify-content-end m-3\">\r\n-                <button><i class=\"bi bi-card-text\"></i></button>\r\n-                <button><i class=\"bi bi-table\"></i></button>\r\n+                <button><i className=\"bi bi-card-text\"></i></button>\r\n+                <button><i className=\"bi bi-table\"></i></button>\r\n \r\n             </div>\r\n             <div className=\"container\">\r\n                 <div className=\"d-flex align-item-flex-end\">\r\n"
                },
                {
                    "date": 1757583350545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,10 +44,10 @@\n \r\n     return (\r\n         <>\r\n             <div className=\"d-flex justify-content-end m-3\">\r\n-                <button><i className=\"bi bi-card-text\"></i></button>\r\n-                <button><i className=\"bi bi-table\"></i></button>\r\n+                <button className=\"btn btn-primary\"><i className=\"bi bi-card-text\"></i></button>\r\n+                <button className=\"btn btn-primary\"><i className=\"bi bi-table\"></i></button>\r\n \r\n             </div>\r\n             <div className=\"container\">\r\n                 <div className=\"d-flex align-item-flex-end\">\r\n"
                },
                {
                    "date": 1757583511677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                 <button className=\"btn btn-primary\"><i className=\"bi bi-table\"></i></button>\r\n \r\n             </div>\r\n             <div className=\"container\">\r\n-                <div className=\"d-flex align-item-flex-end\">\r\n+                <div className=\"d-flex align-item-flex-end m-3\">\r\n                     Search:\r\n                     <input type=\"text\"\r\n                         value={search}\r\n                         onChange={(e) => setSearch(e.target.value)} />\r\n"
                },
                {
                    "date": 1757584931425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n         }\r\n     };\r\n \r\n     const filteredData = data.filter(item =>\r\n-        item.name.toLowerCase().includes(search.toLowerCase())\r\n+        item.name.toLowerCase().includes(search.toLowerCase()) || item.email.tolowecase().includes(search.tolowecase());\r\n     );\r\n \r\n     const sortedData = [...filteredData].sort((a, b) => {\r\n         const aValue = a[sortKey];\r\n"
                },
                {
                    "date": 1757584951241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n         }\r\n     };\r\n \r\n     const filteredData = data.filter(item =>\r\n-        item.name.toLowerCase().includes(search.toLowerCase()) || item.email.tolowecase().includes(search.tolowecase());\r\n+        item.name.toLowerCase().includes(search.toLowerCase()) || item.email.tolowecase().includes(search.toLoweCase())\r\n     );\r\n \r\n     const sortedData = [...filteredData].sort((a, b) => {\r\n         const aValue = a[sortKey];\r\n"
                },
                {
                    "date": 1757584959114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n         }\r\n     };\r\n \r\n     const filteredData = data.filter(item =>\r\n-        item.name.toLowerCase().includes(search.toLowerCase()) || item.email.tolowecase().includes(search.toLoweCase())\r\n+        item.name.toLowerCase().includes(search.toLowerCase()) || item.email.tolowecase().includes(search.toLowerCase())\r\n     );\r\n \r\n     const sortedData = [...filteredData].sort((a, b) => {\r\n         const aValue = a[sortKey];\r\n"
                },
                {
                    "date": 1757584989696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n         }\r\n     };\r\n \r\n     const filteredData = data.filter(item =>\r\n-        item.name.toLowerCase().includes(search.toLowerCase()) || item.email.tolowecase().includes(search.toLowerCase())\r\n+        item.name.toLowerCase().includes(search.toLowerCase()) \r\n     );\r\n \r\n     const sortedData = [...filteredData].sort((a, b) => {\r\n         const aValue = a[sortKey];\r\n"
                },
                {
                    "date": 1757585031613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,8 +53,9 @@\n                 <div className=\"d-flex align-item-flex-end m-3\">\r\n                     Search:\r\n                     <input type=\"text\"\r\n                         value={search}\r\n+                        placeholder=\"Search By Name\"\r\n                         onChange={(e) => setSearch(e.target.value)} />\r\n                 </div>\r\n \r\n                 <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)}>\r\n"
                },
                {
                    "date": 1757585077301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                 <button className=\"btn btn-primary\"><i className=\"bi bi-table\"></i></button>\r\n \r\n             </div>\r\n             <div className=\"container\">\r\n-                <div className=\"d-flex align-item-flex-end m-3\">\r\n+                <div className=\"d-flex align-item-end m-3\">\r\n                     Search:\r\n                     <input type=\"text\"\r\n                         value={search}\r\n                         placeholder=\"Search By Name\"\r\n"
                },
                {
                    "date": 1757585091791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                 <button className=\"btn btn-primary\"><i className=\"bi bi-table\"></i></button>\r\n \r\n             </div>\r\n             <div className=\"container\">\r\n-                <div className=\"d-flex align-item-end m-3\">\r\n+                <div className=\"d-flex justify-content-end m-3\">\r\n                     Search:\r\n                     <input type=\"text\"\r\n                         value={search}\r\n                         placeholder=\"Search By Name\"\r\n"
                },
                {
                    "date": 1757585109711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n         }\r\n     };\r\n \r\n     const filteredData = data.filter(item =>\r\n-        item.name.toLowerCase().includes(search.toLowerCase()) \r\n+        item.name.toLowerCase().includes(search.toLowerCase())\r\n     );\r\n \r\n     const sortedData = [...filteredData].sort((a, b) => {\r\n         const aValue = a[sortKey];\r\n@@ -48,8 +48,35 @@\n                 <button className=\"btn btn-primary\"><i className=\"bi bi-card-text\"></i></button>\r\n                 <button className=\"btn btn-primary\"><i className=\"bi bi-table\"></i></button>\r\n \r\n             </div>\r\n+\r\n+            <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)}>\r\n+                <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n+                    Sort Options\r\n+                </Dropdown.Toggle>\r\n+                <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n+                    {[\"name\", \"email\"].map((key) => (\r\n+                        <Dropdown.Item\r\n+                            as=\"div\"   // prevent automatic close\r\n+                            key={key}\r\n+                            className=\"d-flex justify-content-between align-items-center\"\r\n+                        >\r\n+                            <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n+                            <Button\r\n+                                size=\"sm\"\r\n+                                variant=\"outline-primary\"\r\n+                                onClick={(e) => {\r\n+                                    e.stopPropagation();   // prevent closing dropdown\r\n+                                    toggleSort(key);\r\n+                                }}\r\n+                            >\r\n+                                {getArrow(key)}\r\n+                            </Button>\r\n+                        </Dropdown.Item>\r\n+                    ))}\r\n+                </Dropdown.Menu>\r\n+            </Dropdown >\r\n             <div className=\"container\">\r\n                 <div className=\"d-flex justify-content-end m-3\">\r\n                     Search:\r\n                     <input type=\"text\"\r\n@@ -57,35 +84,8 @@\n                         placeholder=\"Search By Name\"\r\n                         onChange={(e) => setSearch(e.target.value)} />\r\n                 </div>\r\n \r\n-                <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)}>\r\n-                    <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n-                        Sort Options\r\n-                    </Dropdown.Toggle>\r\n-                    <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n-                        {[\"name\", \"email\"].map((key) => (\r\n-                            <Dropdown.Item\r\n-                                as=\"div\"   // prevent automatic close\r\n-                                key={key}\r\n-                                className=\"d-flex justify-content-between align-items-center\"\r\n-                            >\r\n-                                <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n-                                <Button\r\n-                                    size=\"sm\"\r\n-                                    variant=\"outline-primary\"\r\n-                                    onClick={(e) => {\r\n-                                        e.stopPropagation();   // prevent closing dropdown\r\n-                                        toggleSort(key);\r\n-                                    }}\r\n-                                >\r\n-                                    {getArrow(key)}\r\n-                                </Button>\r\n-                            </Dropdown.Item>\r\n-                        ))}\r\n-                    </Dropdown.Menu>\r\n-                </Dropdown >\r\n-\r\n                 {/* <select>\r\n                 <option hidden selected>Select Sorting Option</option>\r\n                 <option onClick={() => handleSort('name')}>Name</option>\r\n                 <option onClick={() => handleSort('email')}>Email</option>\r\n"
                },
                {
                    "date": 1757585155360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,36 +48,35 @@\n                 <button className=\"btn btn-primary\"><i className=\"bi bi-card-text\"></i></button>\r\n                 <button className=\"btn btn-primary\"><i className=\"bi bi-table\"></i></button>\r\n \r\n             </div>\r\n-\r\n-            <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)}>\r\n-                <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n-                    Sort Options\r\n-                </Dropdown.Toggle>\r\n-                <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n-                    {[\"name\", \"email\"].map((key) => (\r\n-                        <Dropdown.Item\r\n-                            as=\"div\"   // prevent automatic close\r\n-                            key={key}\r\n-                            className=\"d-flex justify-content-between align-items-center\"\r\n-                        >\r\n-                            <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n-                            <Button\r\n-                                size=\"sm\"\r\n-                                variant=\"outline-primary\"\r\n-                                onClick={(e) => {\r\n-                                    e.stopPropagation();   // prevent closing dropdown\r\n-                                    toggleSort(key);\r\n-                                }}\r\n+            <div className=\"container\">\r\n+                <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)}>\r\n+                    <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n+                        Sort Options\r\n+                    </Dropdown.Toggle>\r\n+                    <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n+                        {[\"name\", \"email\"].map((key) => (\r\n+                            <Dropdown.Item\r\n+                                as=\"div\"   // prevent automatic close\r\n+                                key={key}\r\n+                                className=\"d-flex justify-content-between align-items-center\"\r\n                             >\r\n-                                {getArrow(key)}\r\n-                            </Button>\r\n-                        </Dropdown.Item>\r\n-                    ))}\r\n-                </Dropdown.Menu>\r\n-            </Dropdown >\r\n-            <div className=\"container\">\r\n+                                <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n+                                <Button\r\n+                                    size=\"sm\"\r\n+                                    variant=\"outline-primary\"\r\n+                                    onClick={(e) => {\r\n+                                        e.stopPropagation();   // prevent closing dropdown\r\n+                                        toggleSort(key);\r\n+                                    }}\r\n+                                >\r\n+                                    {getArrow(key)}\r\n+                                </Button>\r\n+                            </Dropdown.Item>\r\n+                        ))}\r\n+                    </Dropdown.Menu>\r\n+                </Dropdown >\r\n                 <div className=\"d-flex justify-content-end m-3\">\r\n                     Search:\r\n                     <input type=\"text\"\r\n                         value={search}\r\n"
                },
                {
                    "date": 1757585166416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,15 +75,15 @@\n                             </Dropdown.Item>\r\n                         ))}\r\n                     </Dropdown.Menu>\r\n                 </Dropdown >\r\n-                <div className=\"d-flex justify-content-end m-3\">\r\n+                <span className=\"d-flex justify-content-end m-3\">\r\n                     Search:\r\n                     <input type=\"text\"\r\n                         value={search}\r\n                         placeholder=\"Search By Name\"\r\n                         onChange={(e) => setSearch(e.target.value)} />\r\n-                </div>\r\n+                </span>\r\n \r\n                 {/* <select>\r\n                 <option hidden selected>Select Sorting Option</option>\r\n                 <option onClick={() => handleSort('name')}>Name</option>\r\n"
                },
                {
                    "date": 1757585234659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,16 +74,17 @@\n                                 </Button>\r\n                             </Dropdown.Item>\r\n                         ))}\r\n                     </Dropdown.Menu>\r\n-                </Dropdown >\r\n-                <span className=\"d-flex justify-content-end m-3\">\r\n+                    <span className=\"d-flex justify-content-end m-3\">\r\n                     Search:\r\n                     <input type=\"text\"\r\n                         value={search}\r\n                         placeholder=\"Search By Name\"\r\n                         onChange={(e) => setSearch(e.target.value)} />\r\n                 </span>\r\n+                </Dropdown >\r\n+                \r\n \r\n                 {/* <select>\r\n                 <option hidden selected>Select Sorting Option</option>\r\n                 <option onClick={() => handleSort('name')}>Name</option>\r\n"
                },
                {
                    "date": 1757585248753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,15 +74,8 @@\n                                 </Button>\r\n                             </Dropdown.Item>\r\n                         ))}\r\n                     </Dropdown.Menu>\r\n-                    <span className=\"d-flex justify-content-end m-3\">\r\n-                    Search:\r\n-                    <input type=\"text\"\r\n-                        value={search}\r\n-                        placeholder=\"Search By Name\"\r\n-                        onChange={(e) => setSearch(e.target.value)} />\r\n-                </span>\r\n                 </Dropdown >\r\n                 \r\n \r\n                 {/* <select>\r\n"
                },
                {
                    "date": 1757585258499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,8 +74,15 @@\n                                 </Button>\r\n                             </Dropdown.Item>\r\n                         ))}\r\n                     </Dropdown.Menu>\r\n+                    <span className=\"d-flex justify-content-end m-3\">\r\n+                    Search:\r\n+                    <input type=\"text\"\r\n+                        value={search}\r\n+                        placeholder=\"Search By Name\"\r\n+                        onChange={(e) => setSearch(e.target.value)} />\r\n+                </span>\r\n                 </Dropdown >\r\n                 \r\n \r\n                 {/* <select>\r\n"
                },
                {
                    "date": 1757585279360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,17 +74,16 @@\n                                 </Button>\r\n                             </Dropdown.Item>\r\n                         ))}\r\n                     </Dropdown.Menu>\r\n-                    <span className=\"d-flex justify-content-end m-3\">\r\n+                </Dropdown >\r\n+                <span className=\"d-flex justify-content-end m-3\">\r\n                     Search:\r\n                     <input type=\"text\"\r\n                         value={search}\r\n                         placeholder=\"Search By Name\"\r\n                         onChange={(e) => setSearch(e.target.value)} />\r\n                 </span>\r\n-                </Dropdown >\r\n-                \r\n \r\n                 {/* <select>\r\n                 <option hidden selected>Select Sorting Option</option>\r\n                 <option onClick={() => handleSort('name')}>Name</option>\r\n"
                },
                {
                    "date": 1757585318679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,119 @@\n+import { useState, useEffect } from \"react\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n+import Card from \"react-bootstrap/Card\";\r\n+import Button from \"react-bootstrap/Button\";\r\n+import Dropdown from \"react-bootstrap/Dropdown\";\r\n+import { Table } from \"react-bootstrap/Table\";\r\n+\r\n+export default function CardList() {\r\n+    const [data, setData] = useState([]);\r\n+    const [search, setSearch] = useState('');\r\n+    const navigate = useNavigate();\r\n+    const [sortKey, setSortKey] = useState(null);\r\n+    const [sortDirection, setSortDirection] = useState('asc');\r\n+    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n+\r\n+    useEffect(() => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n+            .then(res => res.json())\r\n+            .then(data => setData(data))\r\n+    }, [])\r\n+\r\n+    const toggleSort = (key) => {\r\n+        if (sortKey === key) {\r\n+            setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\r\n+        } else {\r\n+            setSortKey(key);\r\n+            setSortDirection(\"asc\");\r\n+        }\r\n+    };\r\n+\r\n+    const filteredData = data.filter(item =>\r\n+        item.name.toLowerCase().includes(search.toLowerCase())\r\n+    );\r\n+\r\n+    const sortedData = [...filteredData].sort((a, b) => {\r\n+        const aValue = a[sortKey];\r\n+        const bValue = b[sortKey];\r\n+        if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\r\n+        if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n+        return 0;\r\n+    });\r\n+\r\n+    const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\" : \"⬆️\")\r\n+\r\n+    return (\r\n+        <>\r\n+            <div className=\"d-flex justify-content-end m-3\">\r\n+                <button className=\"btn btn-primary\"><i className=\"bi bi-card-text\"></i></button>\r\n+                <button className=\"btn btn-primary\"><i className=\"bi bi-table\"></i></button>\r\n+\r\n+            </div>\r\n+            <div className=\"container\">\r\n+                <div className=\"d-flex justify-content-between\">\r\n+                <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)}>\r\n+                    <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n+                        Sort Options\r\n+                    </Dropdown.Toggle>\r\n+                    <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n+                        {[\"name\", \"email\"].map((key) => (\r\n+                            <Dropdown.Item\r\n+                                as=\"div\"   // prevent automatic close\r\n+                                key={key}\r\n+                                className=\"d-flex justify-content-between align-items-center\"\r\n+                            >\r\n+                                <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n+                                <Button\r\n+                                    size=\"sm\"\r\n+                                    variant=\"outline-primary\"\r\n+                                    onClick={(e) => {\r\n+                                        e.stopPropagation();   // prevent closing dropdown\r\n+                                        toggleSort(key);\r\n+                                    }}\r\n+                                >\r\n+                                    {getArrow(key)}\r\n+                                </Button>\r\n+                            </Dropdown.Item>\r\n+                        ))}\r\n+                    </Dropdown.Menu>\r\n+                </Dropdown >\r\n+                <span className=\"d-flex justify-content-end m-3\">\r\n+                    Search:\r\n+                    <input type=\"text\"\r\n+                        value={search}\r\n+                        placeholder=\"Search By Name\"\r\n+                        onChange={(e) => setSearch(e.target.value)} />\r\n+                </span>\r\n+                </div>\r\n+\r\n+                {/* <select>\r\n+                <option hidden selected>Select Sorting Option</option>\r\n+                <option onClick={() => handleSort('name')}>Name</option>\r\n+                <option onClick={() => handleSort('email')}>Email</option>\r\n+            </select> */}\r\n+\r\n+                < div className=\"d-flex flex-row flex-wrap justify-content-center\" >\r\n+                    {\r\n+                        sortedData.map((user) => (\r\n+                            <Card key={user.id} style={{\r\n+                                width: \"18rem\",\r\n+                                margin: \"15px\",\r\n+                                padding: \"10px\"\r\n+                            }}>\r\n+                                <Card.Body>\r\n+                                    <Card.Title>{user.id}</Card.Title>\r\n+                                    <Card.Text>\r\n+                                        <b>Name:</b>{user.name}<br />\r\n+                                        <b>Email:</b>{user.email}<br />\r\n+                                        <b>Company:</b>{user.company.name}\r\n+                                    </Card.Text>\r\n+                                </Card.Body>\r\n+                                <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n+                            </Card>\r\n+                        ))\r\n+                    }\r\n+                </div >\r\n+            </div >\r\n+        </>\r\n+    )\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757585363442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n \r\n             </div>\r\n             <div className=\"container\">\r\n                 <div className=\"d-flex justify-content-between\">\r\n-                <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)}>\r\n+                <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)} className=\"m-5\">\r\n                     <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n                         Sort Options\r\n                     </Dropdown.Toggle>\r\n                     <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n@@ -115,122 +115,5 @@\n                 </div >\r\n             </div >\r\n         </>\r\n     )\r\n-}\n-import { useState, useEffect } from \"react\";\r\n-import { useNavigate } from \"react-router-dom\";\r\n-import Card from \"react-bootstrap/Card\";\r\n-import Button from \"react-bootstrap/Button\";\r\n-import Dropdown from \"react-bootstrap/Dropdown\";\r\n-import { Table } from \"react-bootstrap/Table\";\r\n-\r\n-export default function CardList() {\r\n-    const [data, setData] = useState([]);\r\n-    const [search, setSearch] = useState('');\r\n-    const navigate = useNavigate();\r\n-    const [sortKey, setSortKey] = useState(null);\r\n-    const [sortDirection, setSortDirection] = useState('asc');\r\n-    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n-\r\n-    useEffect(() => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n-            .then(res => res.json())\r\n-            .then(data => setData(data))\r\n-    }, [])\r\n-\r\n-    const toggleSort = (key) => {\r\n-        if (sortKey === key) {\r\n-            setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\r\n-        } else {\r\n-            setSortKey(key);\r\n-            setSortDirection(\"asc\");\r\n-        }\r\n-    };\r\n-\r\n-    const filteredData = data.filter(item =>\r\n-        item.name.toLowerCase().includes(search.toLowerCase())\r\n-    );\r\n-\r\n-    const sortedData = [...filteredData].sort((a, b) => {\r\n-        const aValue = a[sortKey];\r\n-        const bValue = b[sortKey];\r\n-        if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\r\n-        if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\r\n-        return 0;\r\n-    });\r\n-\r\n-    const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\" : \"⬆️\")\r\n-\r\n-    return (\r\n-        <>\r\n-            <div className=\"d-flex justify-content-end m-3\">\r\n-                <button className=\"btn btn-primary\"><i className=\"bi bi-card-text\"></i></button>\r\n-                <button className=\"btn btn-primary\"><i className=\"bi bi-table\"></i></button>\r\n-\r\n-            </div>\r\n-            <div className=\"container\">\r\n-                <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)}>\r\n-                    <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n-                        Sort Options\r\n-                    </Dropdown.Toggle>\r\n-                    <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n-                        {[\"name\", \"email\"].map((key) => (\r\n-                            <Dropdown.Item\r\n-                                as=\"div\"   // prevent automatic close\r\n-                                key={key}\r\n-                                className=\"d-flex justify-content-between align-items-center\"\r\n-                            >\r\n-                                <span>{key.charAt(0).toUpperCase() + key.slice(1)}</span>\r\n-                                <Button\r\n-                                    size=\"sm\"\r\n-                                    variant=\"outline-primary\"\r\n-                                    onClick={(e) => {\r\n-                                        e.stopPropagation();   // prevent closing dropdown\r\n-                                        toggleSort(key);\r\n-                                    }}\r\n-                                >\r\n-                                    {getArrow(key)}\r\n-                                </Button>\r\n-                            </Dropdown.Item>\r\n-                        ))}\r\n-                    </Dropdown.Menu>\r\n-                </Dropdown >\r\n-                <span className=\"d-flex justify-content-end m-3\">\r\n-                    Search:\r\n-                    <input type=\"text\"\r\n-                        value={search}\r\n-                        placeholder=\"Search By Name\"\r\n-                        onChange={(e) => setSearch(e.target.value)} />\r\n-                </span>\r\n-\r\n-                {/* <select>\r\n-                <option hidden selected>Select Sorting Option</option>\r\n-                <option onClick={() => handleSort('name')}>Name</option>\r\n-                <option onClick={() => handleSort('email')}>Email</option>\r\n-            </select> */}\r\n-\r\n-                < div className=\"d-flex flex-row flex-wrap justify-content-center\" >\r\n-                    {\r\n-                        sortedData.map((user) => (\r\n-                            <Card key={user.id} style={{\r\n-                                width: \"18rem\",\r\n-                                margin: \"15px\",\r\n-                                padding: \"10px\"\r\n-                            }}>\r\n-                                <Card.Body>\r\n-                                    <Card.Title>{user.id}</Card.Title>\r\n-                                    <Card.Text>\r\n-                                        <b>Name:</b>{user.name}<br />\r\n-                                        <b>Email:</b>{user.email}<br />\r\n-                                        <b>Company:</b>{user.company.name}\r\n-                                    </Card.Text>\r\n-                                </Card.Body>\r\n-                                <Button className=\"btn btn-primary\" onClick={() => navigate(`/users/${user.id}`)}>View Details</Button>\r\n-                            </Card>\r\n-                        ))\r\n-                    }\r\n-                </div >\r\n-            </div >\r\n-        </>\r\n-    )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757585370461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n \r\n             </div>\r\n             <div className=\"container\">\r\n                 <div className=\"d-flex justify-content-between\">\r\n-                <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)} className=\"m-5\">\r\n+                <Dropdown show={dropdownOpen} onToggle={() => setDropdownOpen(!dropdownOpen)} className=\"m-3\">\r\n                     <Dropdown.Toggle onClick={() => setDropdownOpen(!dropdownOpen)} variant=\"info\">\r\n                         Sort Options\r\n                     </Dropdown.Toggle>\r\n                     <Dropdown.Menu style={{ minWidth: \"200px\" }}>\r\n"
                },
                {
                    "date": 1757585393417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,8 @@\n                         ))}\r\n                     </Dropdown.Menu>\r\n                 </Dropdown >\r\n                 <span className=\"d-flex justify-content-end m-3\">\r\n-                    Search:\r\n                     <input type=\"text\"\r\n                         value={search}\r\n                         placeholder=\"Search By Name\"\r\n                         onChange={(e) => setSearch(e.target.value)} />\r\n"
                },
                {
                    "date": 1757585405875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,8 +78,9 @@\n                     </Dropdown.Menu>\r\n                 </Dropdown >\r\n                 <span className=\"d-flex justify-content-end m-3\">\r\n                     <input type=\"text\"\r\n+                        title=\"Search:\"\r\n                         value={search}\r\n                         placeholder=\"Search By Name\"\r\n                         onChange={(e) => setSearch(e.target.value)} />\r\n                 </span>\r\n"
                },
                {
                    "date": 1757585500468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,10 +77,10 @@\n                         ))}\r\n                     </Dropdown.Menu>\r\n                 </Dropdown >\r\n                 <span className=\"d-flex justify-content-end m-3\">\r\n+                    <label>Search:</label>\r\n                     <input type=\"text\"\r\n-                        title=\"Search:\"\r\n                         value={search}\r\n                         placeholder=\"Search By Name\"\r\n                         onChange={(e) => setSearch(e.target.value)} />\r\n                 </span>\r\n"
                },
                {
                    "date": 1757585523325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n                         ))}\r\n                     </Dropdown.Menu>\r\n                 </Dropdown >\r\n                 <span className=\"d-flex justify-content-end m-3\">\r\n-                    <label>Search:</label>\r\n+                    <label className=\"align-item-center\">Search:</label>\r\n                     <input type=\"text\"\r\n                         value={search}\r\n                         placeholder=\"Search By Name\"\r\n                         onChange={(e) => setSearch(e.target.value)} />\r\n"
                },
                {
                    "date": 1757585532630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n                         ))}\r\n                     </Dropdown.Menu>\r\n                 </Dropdown >\r\n                 <span className=\"d-flex justify-content-end m-3\">\r\n-                    <label className=\"align-item-center\">Search:</label>\r\n+                    <label className=\"m-2\">Search:</label>\r\n                     <input type=\"text\"\r\n                         value={search}\r\n                         placeholder=\"Search By Name\"\r\n                         onChange={(e) => setSearch(e.target.value)} />\r\n"
                },
                {
                    "date": 1757585580070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,10 +43,10 @@\n     const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\" : \"⬆️\")\r\n \r\n     return (\r\n         <>\r\n-            <div className=\"d-flex justify-content-end m-3\">\r\n-                <button className=\"btn btn-primary\"><i className=\"bi bi-card-text\"></i></button>\r\n+            <div className=\"d-flex justify-content-end \">\r\n+                <button className=\"btn btn-primary\" ><i className=\"bi bi-card-text\"></i></button>\r\n                 <button className=\"btn btn-primary\"><i className=\"bi bi-table\"></i></button>\r\n \r\n             </div>\r\n             <div className=\"container\">\r\n"
                },
                {
                    "date": 1757585587282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\" : \"⬆️\")\r\n \r\n     return (\r\n         <>\r\n-            <div className=\"d-flex justify-content-end \">\r\n+            <div className=\"d-flex justify-content-end m-3 g-5\">\r\n                 <button className=\"btn btn-primary\" ><i className=\"bi bi-card-text\"></i></button>\r\n                 <button className=\"btn btn-primary\"><i className=\"bi bi-table\"></i></button>\r\n \r\n             </div>\r\n"
                },
                {
                    "date": 1757585599181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     const getArrow = () => (sortDirection === \"asc\" ? \"⬇️\" : \"⬆️\")\r\n \r\n     return (\r\n         <>\r\n-            <div className=\"d-flex justify-content-end m-3 g-5\">\r\n+            <div className=\"d-flex justify-content-end m-3\">\r\n                 <button className=\"btn btn-primary\" ><i className=\"bi bi-card-text\"></i></button>\r\n                 <button className=\"btn btn-primary\"><i className=\"bi bi-table\"></i></button>\r\n \r\n             </div>\r\n"
                },
                {
                    "date": 1757585622783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n \r\n     return (\r\n         <>\r\n             <div className=\"d-flex justify-content-end m-3\">\r\n-                <button className=\"btn btn-primary\" ><i className=\"bi bi-card-text\"></i></button>\r\n+                <button className=\"btn btn-primary\" style={{margin:\"5px\"}}><i className=\"bi bi-card-text\"></i></button>\r\n                 <button className=\"btn btn-primary\"><i className=\"bi bi-table\"></i></button>\r\n \r\n             </div>\r\n             <div className=\"container\">\r\n"
                },
                {
                    "date": 1757585639544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,10 +44,10 @@\n \r\n     return (\r\n         <>\r\n             <div className=\"d-flex justify-content-end m-3\">\r\n-                <button className=\"btn btn-primary\" style={{margin:\"5px\"}}><i className=\"bi bi-card-text\"></i></button>\r\n-                <button className=\"btn btn-primary\"><i className=\"bi bi-table\"></i></button>\r\n+                <button className=\"btn btn-primary\" ><i className=\"bi bi-card-text\"></i></button>\r\n+                <button className=\"btn btn-primary\" style={{margin:\"5px\"}}><i className=\"bi bi-table\"></i></button>\r\n \r\n             </div>\r\n             <div className=\"container\">\r\n                 <div className=\"d-flex justify-content-between\">\r\n"
                },
                {
                    "date": 1757585676241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n \r\n     return (\r\n         <>\r\n             <div className=\"d-flex justify-content-end m-3\">\r\n-                <button className=\"btn btn-primary\" ><i className=\"bi bi-card-text\"></i></button>\r\n+                <button className=\"btn btn-primary\" style={{margin:\"5px\"}}><i className=\"bi bi-card-text\"></i></button>\r\n                 <button className=\"btn btn-primary\" style={{margin:\"5px\"}}><i className=\"bi bi-table\"></i></button>\r\n \r\n             </div>\r\n             <div className=\"container\">\r\n"
                }
            ],
            "date": 1757571704041,
            "name": "Commit-0",
            "content": "import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction UsersList() {\r\n  const [users, setUsers] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((res) => res.json())\r\n      .then((data) => setUsers(data));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"d-flex flex-wrap\">\r\n      {users.map((user) => (\r\n        <Card key={user.id} className=\"p-3 m-2 shadow\" style={{ width: \"18rem\" }}>\r\n          <Card.Title>{user.name}</Card.Title>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">\r\n            {user.company?.name}\r\n          </Card.Subtitle>\r\n          <Card.Text>\r\n            <b>Email:</b> {user.email}\r\n          </Card.Text>\r\n\r\n          <Button variant=\"primary\" onClick={() => navigate(`/users/${user.id}`)}>\r\n            View Details\r\n          </Button>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UsersList;\r\n"
        }
    ]
}