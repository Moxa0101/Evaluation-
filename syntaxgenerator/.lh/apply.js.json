{
    "sourceFile": "apply.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 319,
            "patches": [
                {
                    "date": 1756227609833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756227669365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -145,12 +145,12 @@\n       { container: \"#optionSelection\", field: \"#atmdropdown\" }\r\n     ]\r\n   },\r\n   {\r\n-    trigger: \"#scriptSelect\",\r\n+    trigger: \"#atmdropdown\",\r\n     event: \"change\",\r\n     targets: [\r\n-      { container: \"#optionSelection\", field: \"#atmdropdown\" }\r\n+      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n     ]\r\n   }\r\n ];\r\n \r\n"
                },
                {
                    "date": 1756231817901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -195,9 +195,9 @@\n })\r\n \r\n let searchInput=document.getElementById(\"search\");\r\n const dropdown = document.getElementById('dropdown');\r\n-let token=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYxODc4MTIsImV4cCI6MTc1NjI3NDIxMn0.gXoY2DWtFgVNYrud7j88O-KLCwlpkUX6h30ANgYu6TU\"\r\n+let token=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyMzE0MjMsImV4cCI6MTc1NjMxNzgyM30.xxJkyXsONt77WgWhsS6OxUAvj3TzHcL06vGCl2C4lRw\"\r\n document.addEventListener('click', (e) => {\r\n   // Check if click is outside the input and dropdown\r\n   if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n     dropdown.style.display = 'none';\r\n"
                },
                {
                    "date": 1756231930476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -150,8 +150,15 @@\n     event: \"change\",\r\n     targets: [\r\n       { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n     ]\r\n+  },\r\n+  {\r\n+    trigger: \"#scriptsearchbox\",\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n+    ]\r\n   }\r\n ];\r\n \r\n function hideAndReset(triggerSelector, eventType = null) {\r\n"
                },
                {
                    "date": 1756231999975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -152,12 +152,12 @@\n       { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n     ]\r\n   },\r\n   {\r\n-    trigger: \"#scriptsearchbox\",\r\n-    event: \"change\",\r\n+    trigger: \"#premiumbox\",\r\n+    event: \"input\",\r\n     targets: [\r\n-      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n+      { container: \"#premiumval\", field: \"#maxvariationCtn\" }\r\n     ]\r\n   }\r\n ];\r\n \r\n"
                },
                {
                    "date": 1756280476942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,9 +155,10 @@\n   {\r\n     trigger: \"#premiumbox\",\r\n     event: \"input\",\r\n     targets: [\r\n-      { container: \"#premiumval\", field: \"#maxvariationCtn\" }\r\n+      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n+      \r\n     ]\r\n   }\r\n ];\r\n \r\n"
                },
                {
                    "date": 1756319969961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,9 +156,9 @@\n     trigger: \"#premiumbox\",\r\n     event: \"input\",\r\n     targets: [\r\n       { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n-      \r\n+\r\n     ]\r\n   }\r\n ];\r\n \r\n@@ -189,10 +189,39 @@\n \r\n document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n     hideAndReset(\"#atmdropdown\",change)\r\n })\r\n+\r\n let scriptType = document.getElementById(\"dropdown1\");\r\n dropdown1.addEventListener(\"change\", function () {\r\n+  const selectedValue = this.value;\r\n+  if (!selectedValue || !editor) return;\r\n+\r\n+  let currentValue = editor.getValue();\r\n+  //chaecks by regex that value already exist then just replace and on change removes any value afterwards\r\n+ if (/\"script_type\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n+    currentValue = currentValue.replace(\r\n+      /(\"script_type\"\\s*:\\s*\").*?(\")/,\r\n+      `$1${selectedValue}$2`\r\n+    );\r\n+    //makes isrollover false\r\n+    currentValue = currentValue.replace(/(\"is_rollover\"\\s*:\\s*false).*[\\s\\S]*?\\}/, `$1\\n}`);\r\n+\r\n+\r\n+  } else {\r\n+  // Remove the last closing brace\r\n+  currentValue = currentValue.trim();\r\n+  if (currentValue.endsWith(\"}\")) {\r\n+    currentValue = currentValue.slice(0, -1);\r\n+  }\r\n+\r\n+  // Add new line with snippet and closing brace\r\n+   currentValue += \",\\n  \\t\" + `\"script_type\":\"${selectedValue}\"` + \",\\n \\t\" + `\"is_rollover\":${false}  \\n }` ;\r\n+  }\r\n+  editor.setValue(currentValue);\r\n+\r\n+});\r\n+\r\n     if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" || scriptType.value === \"PE\") {\r\n         document.getElementById(\"optionSelection\").style.display = \"block\";\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n     }\r\n"
                },
                {
                    "date": 1756320334334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,8 +124,20 @@\n       console.error(\"Failed to copy: \", err);\r\n     });\r\n });\r\n \r\n+function upsertJson(key, value, quote = true) {\r\n+  if (!editor) return;\r\n+  let code = editor.getValue();\r\n+  const regex = new RegExp(`\"${key}\"\\\\s*:\\\\s*(\".+?\"|\\\\d+|true|false)`);\r\n+  const newVal = quote ? `\"${value}\"` : value;\r\n+  if (regex.test(code)) {\r\n+    code = code.replace(regex, `\"${key}\": ${newVal}`);\r\n+  } else {\r\n+    code = code.trim().replace(/}$/, `,\\n  \"${key}\": ${newVal}\\n}`);\r\n+  }\r\n+  editor.setValue(code);\r\n+}\r\n \r\n //   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n \r\n \r\n@@ -192,36 +204,9 @@\n })\r\n \r\n let scriptType = document.getElementById(\"dropdown1\");\r\n dropdown1.addEventListener(\"change\", function () {\r\n-  const selectedValue = this.value;\r\n-  if (!selectedValue || !editor) return;\r\n-\r\n-  let currentValue = editor.getValue();\r\n-  //chaecks by regex that value already exist then just replace and on change removes any value afterwards\r\n- if (/\"script_type\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n-    currentValue = currentValue.replace(\r\n-      /(\"script_type\"\\s*:\\s*\").*?(\")/,\r\n-      `$1${selectedValue}$2`\r\n-    );\r\n-    //makes isrollover false\r\n-    currentValue = currentValue.replace(/(\"is_rollover\"\\s*:\\s*false).*[\\s\\S]*?\\}/, `$1\\n}`);\r\n-\r\n-\r\n-  } else {\r\n-  // Remove the last closing brace\r\n-  currentValue = currentValue.trim();\r\n-  if (currentValue.endsWith(\"}\")) {\r\n-    currentValue = currentValue.slice(0, -1);\r\n-  }\r\n-\r\n-  // Add new line with snippet and closing brace\r\n-   currentValue += \",\\n  \\t\" + `\"script_type\":\"${selectedValue}\"` + \",\\n \\t\" + `\"is_rollover\":${false}  \\n }` ;\r\n-  }\r\n-  editor.setValue(currentValue);\r\n-\r\n-});\r\n-\r\n+  \r\n     if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" || scriptType.value === \"PE\") {\r\n         document.getElementById(\"optionSelection\").style.display = \"block\";\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n     }\r\n"
                },
                {
                    "date": 1756320415060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -204,9 +204,10 @@\n })\r\n \r\n let scriptType = document.getElementById(\"dropdown1\");\r\n dropdown1.addEventListener(\"change\", function () {\r\n-  \r\n+  upsertJson(\"script_type\",\"this.value\",true);\r\n+  upsertJson(\"is_rollover\",true,false)\r\n     if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" || scriptType.value === \"PE\") {\r\n         document.getElementById(\"optionSelection\").style.display = \"block\";\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n     }\r\n"
                },
                {
                    "date": 1756320432698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -204,9 +204,9 @@\n })\r\n \r\n let scriptType = document.getElementById(\"dropdown1\");\r\n dropdown1.addEventListener(\"change\", function () {\r\n-  upsertJson(\"script_type\",\"this.value\",true);\r\n+  upsertJson(\"script_type\",this.value,true);\r\n   upsertJson(\"is_rollover\",true,false)\r\n     if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" || scriptType.value === \"PE\") {\r\n         document.getElementById(\"optionSelection\").style.display = \"block\";\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n"
                },
                {
                    "date": 1756320501776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n })\r\n \r\n let searchInput=document.getElementById(\"search\");\r\n const dropdown = document.getElementById('dropdown');\r\n-let token=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyMzE0MjMsImV4cCI6MTc1NjMxNzgyM30.xxJkyXsONt77WgWhsS6OxUAvj3TzHcL06vGCl2C4lRw\"\r\n+let token=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n document.addEventListener('click', (e) => {\r\n   // Check if click is outside the input and dropdown\r\n   if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n     dropdown.style.display = 'none';\r\n"
                },
                {
                    "date": 1756320553728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -282,34 +282,11 @@\n     }\r\n \r\n     dropdown.style.display = 'none';\r\n   let currentValue = editor.getValue().trim();\r\n+    \r\n \r\n-// If \"script\" already exists → replace only\r\n-    if (/\"script\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n-      currentValue = currentValue.replace(\r\n-        /(\"script\"\\s*:\\s*\").*?(\")[\\s\\S]*$/,\r\n-        `$1${selectedText}$2\\n}`\r\n-      );\r\n \r\n-\r\n-    } \r\n-\r\n-    else {\r\n-      // Remove last } if present\r\n-      if (currentValue.endsWith(\"}\")) {\r\n-        currentValue = currentValue.slice(0, -1).trim();\r\n-      }\r\n-      // Remove trailing comma if any\r\n-      currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n-      // Append cleanly\r\n-      currentValue = currentValue + `,\\n\\t\"script\":\"${selectedText}\"\\n}`;\r\n-    }\r\n-    editor.setValue(currentValue);\r\n-  }\r\n-});\r\n-\r\n-\r\n searchInput.addEventListener('input', debounce(e => {\r\n   fetchSuggestions(e.target.value);\r\n }, 300));\r\n \r\n"
                },
                {
                    "date": 1756320607920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -281,12 +281,15 @@\n       selectedText = selectedText.split(\"(\")[0];\r\n     }\r\n \r\n     dropdown.style.display = 'none';\r\n-  let currentValue = editor.getValue().trim();\r\n-    \r\n \r\n+// If \"script\" already exists → replace only\r\n+    upsertJson(\"script\",currentValue)\r\n+  }\r\n+});\r\n \r\n+\r\n searchInput.addEventListener('input', debounce(e => {\r\n   fetchSuggestions(e.target.value);\r\n }, 300));\r\n \r\n"
                },
                {
                    "date": 1756320619501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -283,9 +283,9 @@\n \r\n     dropdown.style.display = 'none';\r\n \r\n // If \"script\" already exists → replace only\r\n-    upsertJson(\"script\",currentValue)\r\n+    upsertJson(\"script\",selectedText,true)\r\n   }\r\n });\r\n \r\n \r\n"
                },
                {
                    "date": 1756320698030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,8 +149,9 @@\n //   console.log(getActiveNav())\r\n \r\n // dependency mapping\r\n const dependencies = [\r\n+  \r\n   {\r\n     trigger: \"#dropdown1\", // event trigger (class or ID)\r\n     event: \"change\",\r\n     targets: [\r\n"
                },
                {
                    "date": 1756320799550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -154,9 +154,10 @@\n   {\r\n     trigger: \"#dropdown1\", // event trigger (class or ID)\r\n     event: \"change\",\r\n     targets: [\r\n-      { container: \"#optionSelection\", field: \"#atmdropdown\" }\r\n+      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n+      {container:'#scriptsearchbox' , field:\"#search\"}\r\n     ]\r\n   },\r\n   {\r\n     trigger: \"#atmdropdown\",\r\n"
                },
                {
                    "date": 1756320854432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,9 +207,10 @@\n \r\n let scriptType = document.getElementById(\"dropdown1\");\r\n dropdown1.addEventListener(\"change\", function () {\r\n   upsertJson(\"script_type\",this.value,true);\r\n-  upsertJson(\"is_rollover\",true,false)\r\n+  upsertJson(\"is_rollover\",true,false);\r\n+    hideAndReset(\"#dropdown1\",change)\r\n     if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" || scriptType.value === \"PE\") {\r\n         document.getElementById(\"optionSelection\").style.display = \"block\";\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n     }\r\n"
                },
                {
                    "date": 1756320866451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -208,9 +208,8 @@\n let scriptType = document.getElementById(\"dropdown1\");\r\n dropdown1.addEventListener(\"change\", function () {\r\n   upsertJson(\"script_type\",this.value,true);\r\n   upsertJson(\"is_rollover\",true,false);\r\n-    hideAndReset(\"#dropdown1\",change)\r\n     if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" || scriptType.value === \"PE\") {\r\n         document.getElementById(\"optionSelection\").style.display = \"block\";\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n     }\r\n"
                },
                {
                    "date": 1756321044683,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,31 +177,63 @@\n ];\r\n \r\n function hideAndReset(triggerSelector, eventType = null) {\r\n   dependencies.forEach(dep => {\r\n-    // match trigger, ignore eventType if null\r\n     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-      dep.targets.forEach(t => {\r\n+      dep.targets.forEach((t, index) => {\r\n         const container = document.querySelector(t.container);\r\n         if (container) {\r\n-          // hide the container\r\n-          container.style.display = \"none\";\r\n-\r\n-          // reset child field if provided\r\n-          if (t.field) {\r\n-            const field = container.querySelector(t.field);\r\n-            if (field) {\r\n-              if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-              else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+          // If it's the *direct child* (first dependent) → only reset value\r\n+          if (index === 0) {\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+              }\r\n             }\r\n+          } else {\r\n+            // Other deeper dependents → hide + reset\r\n+            container.style.display = \"none\";\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+              }\r\n+            }\r\n           }\r\n         }\r\n       });\r\n     }\r\n   });\r\n }\r\n \r\n+// function hideAndReset(triggerSelector, eventType = null) {\r\n+//   dependencies.forEach(dep => {\r\n+//     // match trigger, ignore eventType if null\r\n+//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+//       dep.targets.forEach(t => {\r\n+//         const container = document.querySelector(t.container);\r\n+//         if (container) {\r\n+//           // hide the container\r\n+//           container.style.display = \"none\";\r\n \r\n+//           // reset child field if provided\r\n+//           if (t.field) {\r\n+//             const field = container.querySelector(t.field);\r\n+//             if (field) {\r\n+//               if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+//               else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+//             }\r\n+//           }\r\n+//         }\r\n+//       });\r\n+//     }\r\n+//   });\r\n+// }\r\n+\r\n+\r\n document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n     hideAndReset(\"#atmdropdown\",change)\r\n })\r\n \r\n"
                },
                {
                    "date": 1756321153886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -241,12 +241,14 @@\n dropdown1.addEventListener(\"change\", function () {\r\n   upsertJson(\"script_type\",this.value,true);\r\n   upsertJson(\"is_rollover\",true,false);\r\n     if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" || scriptType.value === \"PE\") {\r\n+      console.log(\"if\")\r\n         document.getElementById(\"optionSelection\").style.display = \"block\";\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n     }\r\n     else {\r\n+      console.log(\"else\")\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n         document.getElementById(\"optionSelection\").style.display = \"none\";\r\n     }\r\n })\r\n"
                },
                {
                    "date": 1756321195306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -240,9 +240,9 @@\n let scriptType = document.getElementById(\"dropdown1\");\r\n dropdown1.addEventListener(\"change\", function () {\r\n   upsertJson(\"script_type\",this.value,true);\r\n   upsertJson(\"is_rollover\",true,false);\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" || scriptType.value === \"PE\") {\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" &&  scriptType.value === \"PE\" || scriptType.value === \"CE\") {\r\n       console.log(\"if\")\r\n         document.getElementById(\"optionSelection\").style.display = \"block\";\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n     }\r\n"
                },
                {
                    "date": 1756321219554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -240,9 +240,9 @@\n let scriptType = document.getElementById(\"dropdown1\");\r\n dropdown1.addEventListener(\"change\", function () {\r\n   upsertJson(\"script_type\",this.value,true);\r\n   upsertJson(\"is_rollover\",true,false);\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" &&  scriptType.value === \"PE\" || scriptType.value === \"CE\") {\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" &&   scriptType.value === \"CE\") {\r\n       console.log(\"if\")\r\n         document.getElementById(\"optionSelection\").style.display = \"block\";\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n     }\r\n"
                },
                {
                    "date": 1756321245480,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -240,9 +240,9 @@\n let scriptType = document.getElementById(\"dropdown1\");\r\n dropdown1.addEventListener(\"change\", function () {\r\n   upsertJson(\"script_type\",this.value,true);\r\n   upsertJson(\"is_rollover\",true,false);\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" &&   scriptType.value === \"CE\") {\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"CE\" || scriptType.value === \"PE\" ||) {\r\n       console.log(\"if\")\r\n         document.getElementById(\"optionSelection\").style.display = \"block\";\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n     }\r\n"
                },
                {
                    "date": 1756321254343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -240,9 +240,9 @@\n let scriptType = document.getElementById(\"dropdown1\");\r\n dropdown1.addEventListener(\"change\", function () {\r\n   upsertJson(\"script_type\",this.value,true);\r\n   upsertJson(\"is_rollover\",true,false);\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"CE\" || scriptType.value === \"PE\" ||) {\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"CE\" || scriptType.value === \"PE\" ) {\r\n       console.log(\"if\")\r\n         document.getElementById(\"optionSelection\").style.display = \"block\";\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n     }\r\n"
                },
                {
                    "date": 1756321278378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -241,14 +241,12 @@\n dropdown1.addEventListener(\"change\", function () {\r\n   upsertJson(\"script_type\",this.value,true);\r\n   upsertJson(\"is_rollover\",true,false);\r\n     if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"CE\" || scriptType.value === \"PE\" ) {\r\n-      console.log(\"if\")\r\n         document.getElementById(\"optionSelection\").style.display = \"block\";\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n     }\r\n     else {\r\n-      console.log(\"else\")\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n         document.getElementById(\"optionSelection\").style.display = \"none\";\r\n     }\r\n })\r\n"
                },
                {
                    "date": 1756321300172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -313,12 +313,9 @@\n     // remove everything after \"(\"\r\n     if (selectedText.includes(\"(\")) {\r\n       selectedText = selectedText.split(\"(\")[0];\r\n     }\r\n-\r\n     dropdown.style.display = 'none';\r\n-\r\n-// If \"script\" already exists → replace only\r\n     upsertJson(\"script\",selectedText,true)\r\n   }\r\n });\r\n \r\n"
                },
                {
                    "date": 1756321518546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -314,9 +314,12 @@\n     if (selectedText.includes(\"(\")) {\r\n       selectedText = selectedText.split(\"(\")[0];\r\n     }\r\n     dropdown.style.display = 'none';\r\n-    upsertJson(\"script\",selectedText,true)\r\n+    upsertJson(\"script\",selectedText,true);\r\n+    if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n+\r\n+    }\r\n   }\r\n });\r\n \r\n \r\n"
                },
                {
                    "date": 1756321571232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -316,9 +316,9 @@\n     }\r\n     dropdown.style.display = 'none';\r\n     upsertJson(\"script\",selectedText,true);\r\n     if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n-\r\n+      document.getElementById(\"productType\").style.display=\"block\";\r\n     }\r\n   }\r\n });\r\n \r\n"
                },
                {
                    "date": 1756321611849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -320,10 +320,9 @@\n       document.getElementById(\"productType\").style.display=\"block\";\r\n     }\r\n   }\r\n });\r\n-\r\n-\r\n searchInput.addEventListener('input', debounce(e => {\r\n   fetchSuggestions(e.target.value);\r\n }, 300));\r\n \r\n+\r\n"
                },
                {
                    "date": 1756321759470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -320,9 +320,13 @@\n       document.getElementById(\"productType\").style.display=\"block\";\r\n     }\r\n   }\r\n });\r\n+\r\n searchInput.addEventListener('input', debounce(e => {\r\n   fetchSuggestions(e.target.value);\r\n }, 300));\r\n \r\n-\r\n+document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n+  upsertJson(\"product\",this.value,true);\r\n+  hideAndResetAll(\"#productDropdown\",change)\r\n+})\r\n"
                },
                {
                    "date": 1756321788218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,333 @@\n+var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n+var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n+    return new bootstrap.Tooltip(tooltipTriggerEl)\r\n+\r\n+});\r\n+\r\n+let editor;\r\n+\r\n+require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n+\r\n+require([\"vs/editor/editor.main\"], function () {\r\n+    window.getCodeSnippet = getCodeSnippet;\r\n+\r\n+    const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n+\r\n+    function getCodeSnippet(activeType) {\r\n+if (activeType === \"strategy_order\") {\r\n+    return `{\r\n+    \"type\": \"strategy_order\",\r\n+    \"exit_on_opposite\": false,\r\n+    \"is_tgt\": false,\r\n+    \"is_sl\": false,\r\n+    \"is_trail_set\": false,\r\n+    \"position_size\": \"{{strategy.position_size}}\",\r\n+    \"transaction_type\": \"{{strategy.order.action}}\"\r\n+}`;\r\n+} \r\n+else {\r\n+    return `{\r\n+    \"type\": \"${activeType}\"\r\n+}`;\r\n+}\r\n+    }\r\n+\r\n+    editor = monaco.editor.create(container, {\r\n+        value: getCodeSnippet(\"strategy_order\"),\r\n+        language: \"json\",\r\n+        theme: \"vs-dark\",\r\n+        automaticLayout: true,\r\n+        suggestOnTriggerCharacters: false,\r\n+        quickSuggestions: false,\r\n+        wordBasedSuggestions: false,\r\n+        parameterHints: { enabled: false },\r\n+        inlineSuggest: { enabled: false },\r\n+        fontSize: 18,\r\n+        minimap: { enabled: false },\r\n+        wordWrap: \"on\",\r\n+        scrollbar: {\r\n+            vertical: \"hidden\",\r\n+            horizontal: \"hidden\",\r\n+            handleMouseWheel: false\r\n+        },\r\n+    });\r\n+    \r\n+});\r\n+\r\n+\r\n+\r\n+let activeNav = \"strategy\"; // default active\r\n+\r\n+const navLinks = document.querySelectorAll(\" .nav-link\");\r\n+\r\n+\r\n+navLinks.forEach(link => {\r\n+    link.addEventListener(\"click\", (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        // remove active from all\r\n+        navLinks.forEach(l => l.classList.remove(\"active\"));\r\n+\r\n+        // set active on clicked\r\n+        link.classList.add(\"active\");\r\n+        // update global variable\r\n+        activeNav = link.getAttribute(\"data-type\");\r\n+        localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n+        console.log(\"Active Nav:\", activeNav);\r\n+        editor.setValue(getCodeSnippet(activeNav));\r\n+    });\r\n+});\r\n+\r\n+// let originalcode;\r\n+\r\n+// if(activeNavItem===\"strategy_order\"){\r\n+//     originalcode=`{\r\n+//     \"type\": \"strategy_order\",\r\n+//     \"exit_on_opposite\": false,\r\n+//     \"is_tgt\": false,\r\n+//     \"is_sl\": false,\r\n+//     \"is_trail_set\": false,\r\n+//     \"position_size\": \"{{strategy.position_size}}\",\r\n+//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n+\r\n+// }`\r\n+// }\r\n+// else{\r\n+//     originalcode=`{\r\n+//     \"type\": \"${activeNavItem}\"\r\n+// }`\r\n+// }\r\n+\r\n+document.getElementById(\"deleteBtn\").addEventListener(\"click\",function(){\r\n+  let activeNavItem=JSON.parse(localStorage.getItem(\"activenav\"))\r\n+  editor.setValue(getCodeSnippet(activeNavItem));\r\n+\r\n+  // reset dropdown to index 0\r\n+  let scriptType = document.getElementById(\"dropdown1\");\r\n+  if (scriptType) scriptType.selectedIndex = 0;\r\n+})\r\n+\r\n+const copyBtn = document.getElementById(\"copyBtn\");\r\n+\r\n+copyBtn?.addEventListener(\"click\", function () {\r\n+  if (!editor) return;\r\n+\r\n+  // Get the current editor content\r\n+  const code = editor.getValue();\r\n+\r\n+  // Use navigator clipboard API to copy\r\n+  navigator.clipboard.writeText(code)\r\n+    .then(() => {\r\n+      alert(\"Code copied to clipboard!\");\r\n+    })\r\n+    .catch(err => {\r\n+      console.error(\"Failed to copy: \", err);\r\n+    });\r\n+});\r\n+\r\n+function upsertJson(key, value, quote = true) {\r\n+  if (!editor) return;\r\n+  let code = editor.getValue();\r\n+  const regex = new RegExp(`\"${key}\"\\\\s*:\\\\s*(\".+?\"|\\\\d+|true|false)`);\r\n+  const newVal = quote ? `\"${value}\"` : value;\r\n+  if (regex.test(code)) {\r\n+    code = code.replace(regex, `\"${key}\": ${newVal}`);\r\n+  } else {\r\n+    code = code.trim().replace(/}$/, `,\\n  \"${key}\": ${newVal}\\n}`);\r\n+  }\r\n+  editor.setValue(code);\r\n+}\r\n+\r\n+//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n+\r\n+\r\n+// helper function if you need it elsewhere\r\n+//   function getActiveNav() {\r\n+//     return activeNav;\r\n+//   }\r\n+\r\n+//   console.log(getActiveNav())\r\n+\r\n+// dependency mapping\r\n+const dependencies = [\r\n+  \r\n+  {\r\n+    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n+      {container:'#scriptsearchbox' , field:\"#search\"}\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#atmdropdown\",\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#premiumbox\",\r\n+    event: \"input\",\r\n+    targets: [\r\n+      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n+\r\n+    ]\r\n+  }\r\n+];\r\n+\r\n+function hideAndReset(triggerSelector, eventType = null) {\r\n+  dependencies.forEach(dep => {\r\n+    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+      dep.targets.forEach((t, index) => {\r\n+        const container = document.querySelector(t.container);\r\n+        if (container) {\r\n+          // If it's the *direct child* (first dependent) → only reset value\r\n+          if (index === 0) {\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+              }\r\n+            }\r\n+          } else {\r\n+            // Other deeper dependents → hide + reset\r\n+            container.style.display = \"none\";\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+              }\r\n+            }\r\n+          }\r\n+        }\r\n+      });\r\n+    }\r\n+  });\r\n+}\r\n+\r\n+// function hideAndReset(triggerSelector, eventType = null) {\r\n+//   dependencies.forEach(dep => {\r\n+//     // match trigger, ignore eventType if null\r\n+//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+//       dep.targets.forEach(t => {\r\n+//         const container = document.querySelector(t.container);\r\n+//         if (container) {\r\n+//           // hide the container\r\n+//           container.style.display = \"none\";\r\n+\r\n+//           // reset child field if provided\r\n+//           if (t.field) {\r\n+//             const field = container.querySelector(t.field);\r\n+//             if (field) {\r\n+//               if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+//               else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+//             }\r\n+//           }\r\n+//         }\r\n+//       });\r\n+//     }\r\n+//   });\r\n+// }\r\n+\r\n+\r\n+document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n+    hideAndReset(\"#atmdropdown\",change)\r\n+})\r\n+\r\n+let scriptType = document.getElementById(\"dropdown1\");\r\n+dropdown1.addEventListener(\"change\", function () {\r\n+  upsertJson(\"script_type\",this.value,true);\r\n+  upsertJson(\"is_rollover\",true,false);\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"CE\" || scriptType.value === \"PE\" ) {\r\n+        document.getElementById(\"optionSelection\").style.display = \"block\";\r\n+        document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n+    }\r\n+    else {\r\n+        document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n+        document.getElementById(\"optionSelection\").style.display = \"none\";\r\n+    }\r\n+})\r\n+\r\n+let searchInput=document.getElementById(\"search\");\r\n+const dropdown = document.getElementById('dropdown');\r\n+let token=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n+document.addEventListener('click', (e) => {\r\n+  // Check if click is outside the input and dropdown\r\n+  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n+    dropdown.style.display = 'none';\r\n+  }\r\n+});\r\n+\r\n+// Simple debounce function\r\n+function debounce(func, delay) {\r\n+  let timer;\r\n+  return function (...args) {\r\n+    clearTimeout(timer);\r\n+    timer = setTimeout(() => func.apply(this, args), delay);\r\n+  };\r\n+}\r\n+\r\n+// Fetch API suggestions\r\n+async function fetchSuggestions(query) {\r\n+  if (!query) {\r\n+    dropdown.style.display = 'none';\r\n+    dropdown.innerHTML = '';\r\n+    return;\r\n+  }\r\n+\r\n+  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n+  try {\r\n+    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n+      method: \"POST\",\r\n+      headers: {\r\n+        \"Content-Type\": \"application/json\",\r\n+        \"Authorization\": token\r\n+      },\r\n+      body: JSON.stringify({\r\n+        script: query,\r\n+        type: scriptType\r\n+      })\r\n+    });\r\n+\r\n+    const data = await res.json();\r\n+    const suggestions = data.data;\r\n+\r\n+\r\n+    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n+    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n+\r\n+  }\r\n+  catch (err) {\r\n+    console.error(err);\r\n+  }\r\n+}\r\n+\r\n+// Add click selection\r\n+dropdown?.addEventListener('click', e => {\r\n+  if (e.target.tagName === 'LI') {\r\n+    let selectedText = e.target.textContent;\r\n+    searchInput.value = selectedText;\r\n+    // remove everything after \"(\"\r\n+    if (selectedText.includes(\"(\")) {\r\n+      selectedText = selectedText.split(\"(\")[0];\r\n+    }\r\n+    dropdown.style.display = 'none';\r\n+    upsertJson(\"script\",selectedText,true);\r\n+    if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n+      document.getElementById(\"productType\").style.display=\"block\";\r\n+    }\r\n+  }\r\n+});\r\n+\r\n+searchInput.addEventListener('input', debounce(e => {\r\n+  fetchSuggestions(e.target.value);\r\n+}, 300));\r\n+\r\n+document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n+  upsertJson(\"product\",this.value,true);\r\n+  hideAndResetAll(\"#productDropdown\",change);\r\n+\r\n+})\r\n"
                },
                {
                    "date": 1756321819317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -325,341 +325,11 @@\n searchInput.addEventListener('input', debounce(e => {\r\n   fetchSuggestions(e.target.value);\r\n }, 300));\r\n \r\n+if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n   upsertJson(\"product\",this.value,true);\r\n   hideAndResetAll(\"#productDropdown\",change);\r\n \r\n })\r\n-var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n-var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n-    return new bootstrap.Tooltip(tooltipTriggerEl)\r\n-\r\n-});\r\n-\r\n-let editor;\r\n-\r\n-require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n-\r\n-require([\"vs/editor/editor.main\"], function () {\r\n-    window.getCodeSnippet = getCodeSnippet;\r\n-\r\n-    const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n-\r\n-    function getCodeSnippet(activeType) {\r\n-if (activeType === \"strategy_order\") {\r\n-    return `{\r\n-    \"type\": \"strategy_order\",\r\n-    \"exit_on_opposite\": false,\r\n-    \"is_tgt\": false,\r\n-    \"is_sl\": false,\r\n-    \"is_trail_set\": false,\r\n-    \"position_size\": \"{{strategy.position_size}}\",\r\n-    \"transaction_type\": \"{{strategy.order.action}}\"\r\n-}`;\r\n-} \r\n-else {\r\n-    return `{\r\n-    \"type\": \"${activeType}\"\r\n-}`;\r\n-}\r\n-    }\r\n-\r\n-    editor = monaco.editor.create(container, {\r\n-        value: getCodeSnippet(\"strategy_order\"),\r\n-        language: \"json\",\r\n-        theme: \"vs-dark\",\r\n-        automaticLayout: true,\r\n-        suggestOnTriggerCharacters: false,\r\n-        quickSuggestions: false,\r\n-        wordBasedSuggestions: false,\r\n-        parameterHints: { enabled: false },\r\n-        inlineSuggest: { enabled: false },\r\n-        fontSize: 18,\r\n-        minimap: { enabled: false },\r\n-        wordWrap: \"on\",\r\n-        scrollbar: {\r\n-            vertical: \"hidden\",\r\n-            horizontal: \"hidden\",\r\n-            handleMouseWheel: false\r\n-        },\r\n-    });\r\n-    \r\n-});\r\n-\r\n-\r\n-\r\n-let activeNav = \"strategy\"; // default active\r\n-\r\n-const navLinks = document.querySelectorAll(\" .nav-link\");\r\n-\r\n-\r\n-navLinks.forEach(link => {\r\n-    link.addEventListener(\"click\", (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        // remove active from all\r\n-        navLinks.forEach(l => l.classList.remove(\"active\"));\r\n-\r\n-        // set active on clicked\r\n-        link.classList.add(\"active\");\r\n-        // update global variable\r\n-        activeNav = link.getAttribute(\"data-type\");\r\n-        localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n-        console.log(\"Active Nav:\", activeNav);\r\n-        editor.setValue(getCodeSnippet(activeNav));\r\n-    });\r\n-});\r\n-\r\n-// let originalcode;\r\n-\r\n-// if(activeNavItem===\"strategy_order\"){\r\n-//     originalcode=`{\r\n-//     \"type\": \"strategy_order\",\r\n-//     \"exit_on_opposite\": false,\r\n-//     \"is_tgt\": false,\r\n-//     \"is_sl\": false,\r\n-//     \"is_trail_set\": false,\r\n-//     \"position_size\": \"{{strategy.position_size}}\",\r\n-//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n-\r\n-// }`\r\n-// }\r\n-// else{\r\n-//     originalcode=`{\r\n-//     \"type\": \"${activeNavItem}\"\r\n-// }`\r\n-// }\r\n-\r\n-document.getElementById(\"deleteBtn\").addEventListener(\"click\",function(){\r\n-  let activeNavItem=JSON.parse(localStorage.getItem(\"activenav\"))\r\n-  editor.setValue(getCodeSnippet(activeNavItem));\r\n-\r\n-  // reset dropdown to index 0\r\n-  let scriptType = document.getElementById(\"dropdown1\");\r\n-  if (scriptType) scriptType.selectedIndex = 0;\r\n-})\r\n-\r\n-const copyBtn = document.getElementById(\"copyBtn\");\r\n-\r\n-copyBtn?.addEventListener(\"click\", function () {\r\n-  if (!editor) return;\r\n-\r\n-  // Get the current editor content\r\n-  const code = editor.getValue();\r\n-\r\n-  // Use navigator clipboard API to copy\r\n-  navigator.clipboard.writeText(code)\r\n-    .then(() => {\r\n-      alert(\"Code copied to clipboard!\");\r\n-    })\r\n-    .catch(err => {\r\n-      console.error(\"Failed to copy: \", err);\r\n-    });\r\n-});\r\n-\r\n-function upsertJson(key, value, quote = true) {\r\n-  if (!editor) return;\r\n-  let code = editor.getValue();\r\n-  const regex = new RegExp(`\"${key}\"\\\\s*:\\\\s*(\".+?\"|\\\\d+|true|false)`);\r\n-  const newVal = quote ? `\"${value}\"` : value;\r\n-  if (regex.test(code)) {\r\n-    code = code.replace(regex, `\"${key}\": ${newVal}`);\r\n-  } else {\r\n-    code = code.trim().replace(/}$/, `,\\n  \"${key}\": ${newVal}\\n}`);\r\n-  }\r\n-  editor.setValue(code);\r\n-}\r\n-\r\n-//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n-\r\n-\r\n-// helper function if you need it elsewhere\r\n-//   function getActiveNav() {\r\n-//     return activeNav;\r\n-//   }\r\n-\r\n-//   console.log(getActiveNav())\r\n-\r\n-// dependency mapping\r\n-const dependencies = [\r\n-  \r\n-  {\r\n-    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n-      {container:'#scriptsearchbox' , field:\"#search\"}\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#atmdropdown\",\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#premiumbox\",\r\n-    event: \"input\",\r\n-    targets: [\r\n-      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n-\r\n-    ]\r\n-  }\r\n-];\r\n-\r\n-function hideAndReset(triggerSelector, eventType = null) {\r\n-  dependencies.forEach(dep => {\r\n-    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-      dep.targets.forEach((t, index) => {\r\n-        const container = document.querySelector(t.container);\r\n-        if (container) {\r\n-          // If it's the *direct child* (first dependent) → only reset value\r\n-          if (index === 0) {\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-              }\r\n-            }\r\n-          } else {\r\n-            // Other deeper dependents → hide + reset\r\n-            container.style.display = \"none\";\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-              }\r\n-            }\r\n-          }\r\n-        }\r\n-      });\r\n-    }\r\n-  });\r\n-}\r\n-\r\n-// function hideAndReset(triggerSelector, eventType = null) {\r\n-//   dependencies.forEach(dep => {\r\n-//     // match trigger, ignore eventType if null\r\n-//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-//       dep.targets.forEach(t => {\r\n-//         const container = document.querySelector(t.container);\r\n-//         if (container) {\r\n-//           // hide the container\r\n-//           container.style.display = \"none\";\r\n-\r\n-//           // reset child field if provided\r\n-//           if (t.field) {\r\n-//             const field = container.querySelector(t.field);\r\n-//             if (field) {\r\n-//               if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-//               else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-//             }\r\n-//           }\r\n-//         }\r\n-//       });\r\n-//     }\r\n-//   });\r\n-// }\r\n-\r\n-\r\n-document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n-    hideAndReset(\"#atmdropdown\",change)\r\n-})\r\n-\r\n-let scriptType = document.getElementById(\"dropdown1\");\r\n-dropdown1.addEventListener(\"change\", function () {\r\n-  upsertJson(\"script_type\",this.value,true);\r\n-  upsertJson(\"is_rollover\",true,false);\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"CE\" || scriptType.value === \"PE\" ) {\r\n-        document.getElementById(\"optionSelection\").style.display = \"block\";\r\n-        document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n-    }\r\n-    else {\r\n-        document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n-        document.getElementById(\"optionSelection\").style.display = \"none\";\r\n-    }\r\n-})\r\n-\r\n-let searchInput=document.getElementById(\"search\");\r\n-const dropdown = document.getElementById('dropdown');\r\n-let token=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n-document.addEventListener('click', (e) => {\r\n-  // Check if click is outside the input and dropdown\r\n-  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n-    dropdown.style.display = 'none';\r\n-  }\r\n-});\r\n-\r\n-// Simple debounce function\r\n-function debounce(func, delay) {\r\n-  let timer;\r\n-  return function (...args) {\r\n-    clearTimeout(timer);\r\n-    timer = setTimeout(() => func.apply(this, args), delay);\r\n-  };\r\n-}\r\n-\r\n-// Fetch API suggestions\r\n-async function fetchSuggestions(query) {\r\n-  if (!query) {\r\n-    dropdown.style.display = 'none';\r\n-    dropdown.innerHTML = '';\r\n-    return;\r\n-  }\r\n-\r\n-  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n-  try {\r\n-    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n-      method: \"POST\",\r\n-      headers: {\r\n-        \"Content-Type\": \"application/json\",\r\n-        \"Authorization\": token\r\n-      },\r\n-      body: JSON.stringify({\r\n-        script: query,\r\n-        type: scriptType\r\n-      })\r\n-    });\r\n-\r\n-    const data = await res.json();\r\n-    const suggestions = data.data;\r\n-\r\n-\r\n-    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n-    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n-\r\n-  }\r\n-  catch (err) {\r\n-    console.error(err);\r\n-  }\r\n-}\r\n-\r\n-// Add click selection\r\n-dropdown?.addEventListener('click', e => {\r\n-  if (e.target.tagName === 'LI') {\r\n-    let selectedText = e.target.textContent;\r\n-    searchInput.value = selectedText;\r\n-    // remove everything after \"(\"\r\n-    if (selectedText.includes(\"(\")) {\r\n-      selectedText = selectedText.split(\"(\")[0];\r\n-    }\r\n-    dropdown.style.display = 'none';\r\n-    upsertJson(\"script\",selectedText,true);\r\n-    if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n-      document.getElementById(\"productType\").style.display=\"block\";\r\n-    }\r\n-  }\r\n-});\r\n-\r\n-searchInput.addEventListener('input', debounce(e => {\r\n-  fetchSuggestions(e.target.value);\r\n-}, 300));\r\n-\r\n-document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n-  upsertJson(\"product\",this.value,true);\r\n-  hideAndResetAll(\"#productDropdown\",change)\r\n-})\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1756321954089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,9 +155,10 @@\n     trigger: \"#dropdown1\", // event trigger (class or ID)\r\n     event: \"change\",\r\n     targets: [\r\n       { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n-      {container:'#scriptsearchbox' , field:\"#search\"}\r\n+      {container:'#scriptsearchbox' , field:\"#search\"},\r\n+      {container:\"#productType\",field:\"#productDropdown\"}\r\n     ]\r\n   },\r\n   {\r\n     trigger: \"#atmdropdown\",\r\n@@ -328,8 +329,8 @@\n \r\n if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n   upsertJson(\"product\",this.value,true);\r\n-  hideAndResetAll(\"#productDropdown\",change);\r\n+  hideAndReset(\"#productDropdown\",change);\r\n \r\n })\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1756321988562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -233,11 +233,11 @@\n //   });\r\n // }\r\n \r\n \r\n-document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n-    hideAndReset(\"#atmdropdown\",change)\r\n-})\r\n+// document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n+//     hideAndReset(\"#atmdropdown\",change)\r\n+// })\r\n \r\n let scriptType = document.getElementById(\"dropdown1\");\r\n dropdown1.addEventListener(\"change\", function () {\r\n   upsertJson(\"script_type\",this.value,true);\r\n"
                },
                {
                    "date": 1756322201147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -241,8 +241,9 @@\n let scriptType = document.getElementById(\"dropdown1\");\r\n dropdown1.addEventListener(\"change\", function () {\r\n   upsertJson(\"script_type\",this.value,true);\r\n   upsertJson(\"is_rollover\",true,false);\r\n+  hideAndReset(\"#dropdown1\",\"change\")\r\n     if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"CE\" || scriptType.value === \"PE\" ) {\r\n         document.getElementById(\"optionSelection\").style.display = \"block\";\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n     }\r\n"
                },
                {
                    "date": 1756322297322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -331,7 +331,8 @@\n if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n   upsertJson(\"product\",this.value,true);\r\n   hideAndReset(\"#productDropdown\",change);\r\n+  document.getElementById(\"quantityBox\").style.display=\"block\"\r\n \r\n })\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1756322406478,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,8 +173,15 @@\n     targets: [\r\n       { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n \r\n     ]\r\n+  },\r\n+  {\r\n+    trigger:\"productDropdown\",\r\n+    event:\"change\",\r\n+    targets:[\r\n+      {container:\"#quantityBox\",\"#quantityBox\"}\r\n+    ]\r\n   }\r\n ];\r\n \r\n function hideAndReset(triggerSelector, eventType = null) {\r\n@@ -331,8 +338,8 @@\n if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n   upsertJson(\"product\",this.value,true);\r\n   hideAndReset(\"#productDropdown\",change);\r\n-  document.getElementById(\"quantityBox\").style.display=\"block\"\r\n+  document.getElementById(\"quantityBox\").style.display=\"block\";\r\n \r\n })\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1756322432007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -178,9 +178,9 @@\n   {\r\n     trigger:\"productDropdown\",\r\n     event:\"change\",\r\n     targets:[\r\n-      {container:\"#quantityBox\",\"#quantityBox\"}\r\n+      {container:\"#quantityBox\",field:\"#quantityBox\"},\r\n     ]\r\n   }\r\n ];\r\n \r\n"
                },
                {
                    "date": 1756322497035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -178,9 +178,9 @@\n   {\r\n     trigger:\"productDropdown\",\r\n     event:\"change\",\r\n     targets:[\r\n-      {container:\"#quantityBox\",field:\"#quantityBox\"},\r\n+      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n     ]\r\n   }\r\n ];\r\n \r\n@@ -338,8 +338,8 @@\n if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n   upsertJson(\"product\",this.value,true);\r\n   hideAndReset(\"#productDropdown\",change);\r\n-  document.getElementById(\"quantityBox\").style.display=\"block\";\r\n-\r\n+  document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n+  document.getElementById(\"quantityBox\")\r\n })\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1756322550718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -339,7 +339,9 @@\n document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n   upsertJson(\"product\",this.value,true);\r\n   hideAndReset(\"#productDropdown\",change);\r\n   document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n-  document.getElementById(\"quantityBox\")\r\n+  document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n+    upsertJson(\"quantity\",this.value,false)\r\n+  })\r\n })\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1756322586007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -335,8 +335,9 @@\n   fetchSuggestions(e.target.value);\r\n }, 300));\r\n \r\n if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n+  console.log(\"enter\")\r\n document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n   upsertJson(\"product\",this.value,true);\r\n   hideAndReset(\"#productDropdown\",change);\r\n   document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n"
                },
                {
                    "date": 1756322594711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -334,10 +334,10 @@\n searchInput.addEventListener('input', debounce(e => {\r\n   fetchSuggestions(e.target.value);\r\n }, 300));\r\n \r\n-if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n-  console.log(\"enter\")\r\n+if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value ===\"EQ\"){\r\n+  console.log(\"enter\");\r\n document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n   upsertJson(\"product\",this.value,true);\r\n   hideAndReset(\"#productDropdown\",change);\r\n   document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n"
                },
                {
                    "date": 1756322667750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,348 @@\n+var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n+var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n+    return new bootstrap.Tooltip(tooltipTriggerEl)\r\n+\r\n+});\r\n+\r\n+let editor;\r\n+\r\n+require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n+\r\n+require([\"vs/editor/editor.main\"], function () {\r\n+    window.getCodeSnippet = getCodeSnippet;\r\n+\r\n+    const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n+\r\n+    function getCodeSnippet(activeType) {\r\n+if (activeType === \"strategy_order\") {\r\n+    return `{\r\n+    \"type\": \"strategy_order\",\r\n+    \"exit_on_opposite\": false,\r\n+    \"is_tgt\": false,\r\n+    \"is_sl\": false,\r\n+    \"is_trail_set\": false,\r\n+    \"position_size\": \"{{strategy.position_size}}\",\r\n+    \"transaction_type\": \"{{strategy.order.action}}\"\r\n+}`;\r\n+} \r\n+else {\r\n+    return `{\r\n+    \"type\": \"${activeType}\"\r\n+}`;\r\n+}\r\n+    }\r\n+\r\n+    editor = monaco.editor.create(container, {\r\n+        value: getCodeSnippet(\"strategy_order\"),\r\n+        language: \"json\",\r\n+        theme: \"vs-dark\",\r\n+        automaticLayout: true,\r\n+        suggestOnTriggerCharacters: false,\r\n+        quickSuggestions: false,\r\n+        wordBasedSuggestions: false,\r\n+        parameterHints: { enabled: false },\r\n+        inlineSuggest: { enabled: false },\r\n+        fontSize: 18,\r\n+        minimap: { enabled: false },\r\n+        wordWrap: \"on\",\r\n+        scrollbar: {\r\n+            vertical: \"hidden\",\r\n+            horizontal: \"hidden\",\r\n+            handleMouseWheel: false\r\n+        },\r\n+    });\r\n+    \r\n+});\r\n+\r\n+\r\n+\r\n+let activeNav = \"strategy\"; // default active\r\n+\r\n+const navLinks = document.querySelectorAll(\" .nav-link\");\r\n+\r\n+\r\n+navLinks.forEach(link => {\r\n+    link.addEventListener(\"click\", (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        // remove active from all\r\n+        navLinks.forEach(l => l.classList.remove(\"active\"));\r\n+\r\n+        // set active on clicked\r\n+        link.classList.add(\"active\");\r\n+        // update global variable\r\n+        activeNav = link.getAttribute(\"data-type\");\r\n+        localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n+        console.log(\"Active Nav:\", activeNav);\r\n+        editor.setValue(getCodeSnippet(activeNav));\r\n+    });\r\n+});\r\n+\r\n+// let originalcode;\r\n+\r\n+// if(activeNavItem===\"strategy_order\"){\r\n+//     originalcode=`{\r\n+//     \"type\": \"strategy_order\",\r\n+//     \"exit_on_opposite\": false,\r\n+//     \"is_tgt\": false,\r\n+//     \"is_sl\": false,\r\n+//     \"is_trail_set\": false,\r\n+//     \"position_size\": \"{{strategy.position_size}}\",\r\n+//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n+\r\n+// }`\r\n+// }\r\n+// else{\r\n+//     originalcode=`{\r\n+//     \"type\": \"${activeNavItem}\"\r\n+// }`\r\n+// }\r\n+\r\n+document.getElementById(\"deleteBtn\").addEventListener(\"click\",function(){\r\n+  let activeNavItem=JSON.parse(localStorage.getItem(\"activenav\"))\r\n+  editor.setValue(getCodeSnippet(activeNavItem));\r\n+\r\n+  // reset dropdown to index 0\r\n+  let scriptType = document.getElementById(\"dropdown1\");\r\n+  if (scriptType) scriptType.selectedIndex = 0;\r\n+})\r\n+\r\n+const copyBtn = document.getElementById(\"copyBtn\");\r\n+\r\n+copyBtn?.addEventListener(\"click\", function () {\r\n+  if (!editor) return;\r\n+\r\n+  // Get the current editor content\r\n+  const code = editor.getValue();\r\n+\r\n+  // Use navigator clipboard API to copy\r\n+  navigator.clipboard.writeText(code)\r\n+    .then(() => {\r\n+      alert(\"Code copied to clipboard!\");\r\n+    })\r\n+    .catch(err => {\r\n+      console.error(\"Failed to copy: \", err);\r\n+    });\r\n+});\r\n+\r\n+function upsertJson(key, value, quote = true) {\r\n+  if (!editor) return;\r\n+  let code = editor.getValue();\r\n+  const regex = new RegExp(`\"${key}\"\\\\s*:\\\\s*(\".+?\"|\\\\d+|true|false)`);\r\n+  const newVal = quote ? `\"${value}\"` : value;\r\n+  if (regex.test(code)) {\r\n+    code = code.replace(regex, `\"${key}\": ${newVal}`);\r\n+  } else {\r\n+    code = code.trim().replace(/}$/, `,\\n  \"${key}\": ${newVal}\\n}`);\r\n+  }\r\n+  editor.setValue(code);\r\n+}\r\n+\r\n+//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n+\r\n+\r\n+// helper function if you need it elsewhere\r\n+//   function getActiveNav() {\r\n+//     return activeNav;\r\n+//   }\r\n+\r\n+//   console.log(getActiveNav())\r\n+\r\n+// dependency mapping\r\n+const dependencies = [\r\n+  \r\n+  {\r\n+    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n+      {container:'#scriptsearchbox' , field:\"#search\"},\r\n+      {container:\"#productType\",field:\"#productDropdown\"}\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#atmdropdown\",\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#premiumbox\",\r\n+    event: \"input\",\r\n+    targets: [\r\n+      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n+\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger:\"productDropdown\",\r\n+    event:\"change\",\r\n+    targets:[\r\n+      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n+    ]\r\n+  }\r\n+];\r\n+\r\n+function hideAndReset(triggerSelector, eventType = null) {\r\n+  dependencies.forEach(dep => {\r\n+    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+      dep.targets.forEach((t, index) => {\r\n+        const container = document.querySelector(t.container);\r\n+        if (container) {\r\n+          // If it's the *direct child* (first dependent) → only reset value\r\n+          if (index === 0) {\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+              }\r\n+            }\r\n+          } else {\r\n+            // Other deeper dependents → hide + reset\r\n+            container.style.display = \"none\";\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+              }\r\n+            }\r\n+          }\r\n+        }\r\n+      });\r\n+    }\r\n+  });\r\n+}\r\n+\r\n+// function hideAndReset(triggerSelector, eventType = null) {\r\n+//   dependencies.forEach(dep => {\r\n+//     // match trigger, ignore eventType if null\r\n+//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+//       dep.targets.forEach(t => {\r\n+//         const container = document.querySelector(t.container);\r\n+//         if (container) {\r\n+//           // hide the container\r\n+//           container.style.display = \"none\";\r\n+\r\n+//           // reset child field if provided\r\n+//           if (t.field) {\r\n+//             const field = container.querySelector(t.field);\r\n+//             if (field) {\r\n+//               if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+//               else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+//             }\r\n+//           }\r\n+//         }\r\n+//       });\r\n+//     }\r\n+//   });\r\n+// }\r\n+\r\n+\r\n+// document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n+//     hideAndReset(\"#atmdropdown\",change)\r\n+// })\r\n+\r\n+let scriptType = document.getElementById(\"dropdown1\");\r\n+dropdown1.addEventListener(\"change\", function () {\r\n+  upsertJson(\"script_type\",this.value,true);\r\n+  upsertJson(\"is_rollover\",true,false);\r\n+  hideAndReset(\"#dropdown1\",\"change\")\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"CE\" || scriptType.value === \"PE\" ) {\r\n+        document.getElementById(\"optionSelection\").style.display = \"block\";\r\n+        document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n+    }\r\n+    else {\r\n+        document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n+        document.getElementById(\"optionSelection\").style.display = \"none\";\r\n+    }\r\n+})\r\n+\r\n+let searchInput=document.getElementById(\"search\");\r\n+const dropdown = document.getElementById('dropdown');\r\n+let token=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n+document.addEventListener('click', (e) => {\r\n+  // Check if click is outside the input and dropdown\r\n+  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n+    dropdown.style.display = 'none';\r\n+  }\r\n+});\r\n+\r\n+// Simple debounce function\r\n+function debounce(func, delay) {\r\n+  let timer;\r\n+  return function (...args) {\r\n+    clearTimeout(timer);\r\n+    timer = setTimeout(() => func.apply(this, args), delay);\r\n+  };\r\n+}\r\n+\r\n+// Fetch API suggestions\r\n+async function fetchSuggestions(query) {\r\n+  if (!query) {\r\n+    dropdown.style.display = 'none';\r\n+    dropdown.innerHTML = '';\r\n+    return;\r\n+  }\r\n+\r\n+  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n+  try {\r\n+    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n+      method: \"POST\",\r\n+      headers: {\r\n+        \"Content-Type\": \"application/json\",\r\n+        \"Authorization\": token\r\n+      },\r\n+      body: JSON.stringify({\r\n+        script: query,\r\n+        type: scriptType\r\n+      })\r\n+    });\r\n+\r\n+    const data = await res.json();\r\n+    const suggestions = data.data;\r\n+\r\n+\r\n+    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n+    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n+\r\n+  }\r\n+  catch (err) {\r\n+    console.error(err);\r\n+  }\r\n+}\r\n+\r\n+// Add click selection\r\n+dropdown?.addEventListener('click', e => {\r\n+  if (e.target.tagName === 'LI') {\r\n+    let selectedText = e.target.textContent;\r\n+    searchInput.value = selectedText;\r\n+    // remove everything after \"(\"\r\n+    if (selectedText.includes(\"(\")) {\r\n+      selectedText = selectedText.split(\"(\")[0];\r\n+    }\r\n+    dropdown.style.display = 'none';\r\n+    upsertJson(\"script\",selectedText,true);\r\n+    if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n+      document.getElementById(\"productType\").style.display=\"block\";\r\n+    }\r\n+  }\r\n+});\r\n+\r\n+searchInput.addEventListener('input', debounce(e => {\r\n+  fetchSuggestions(e.target.value);\r\n+}, 300));\r\n+\r\n+if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n+  console.log(\"enter\");\r\n+document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n+  upsertJson(\"product\",this.value,true);\r\n+  hideAndReset(\"#productDropdown\",change);\r\n+  document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n+  document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n+    upsertJson(\"quantity\",this.value,false)\r\n+  })\r\n+})\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1756322688123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -334,8 +334,9 @@\n searchInput.addEventListener('input', debounce(e => {\r\n   fetchSuggestions(e.target.value);\r\n }, 300));\r\n \r\n+console.log( scriptType.value)\r\n if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n   console.log(\"enter\");\r\n document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n   upsertJson(\"product\",this.value,true);\r\n@@ -344,353 +345,5 @@\n   document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n     upsertJson(\"quantity\",this.value,false)\r\n   })\r\n })\r\n-}\n-var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n-var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n-    return new bootstrap.Tooltip(tooltipTriggerEl)\r\n-\r\n-});\r\n-\r\n-let editor;\r\n-\r\n-require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n-\r\n-require([\"vs/editor/editor.main\"], function () {\r\n-    window.getCodeSnippet = getCodeSnippet;\r\n-\r\n-    const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n-\r\n-    function getCodeSnippet(activeType) {\r\n-if (activeType === \"strategy_order\") {\r\n-    return `{\r\n-    \"type\": \"strategy_order\",\r\n-    \"exit_on_opposite\": false,\r\n-    \"is_tgt\": false,\r\n-    \"is_sl\": false,\r\n-    \"is_trail_set\": false,\r\n-    \"position_size\": \"{{strategy.position_size}}\",\r\n-    \"transaction_type\": \"{{strategy.order.action}}\"\r\n-}`;\r\n-} \r\n-else {\r\n-    return `{\r\n-    \"type\": \"${activeType}\"\r\n-}`;\r\n-}\r\n-    }\r\n-\r\n-    editor = monaco.editor.create(container, {\r\n-        value: getCodeSnippet(\"strategy_order\"),\r\n-        language: \"json\",\r\n-        theme: \"vs-dark\",\r\n-        automaticLayout: true,\r\n-        suggestOnTriggerCharacters: false,\r\n-        quickSuggestions: false,\r\n-        wordBasedSuggestions: false,\r\n-        parameterHints: { enabled: false },\r\n-        inlineSuggest: { enabled: false },\r\n-        fontSize: 18,\r\n-        minimap: { enabled: false },\r\n-        wordWrap: \"on\",\r\n-        scrollbar: {\r\n-            vertical: \"hidden\",\r\n-            horizontal: \"hidden\",\r\n-            handleMouseWheel: false\r\n-        },\r\n-    });\r\n-    \r\n-});\r\n-\r\n-\r\n-\r\n-let activeNav = \"strategy\"; // default active\r\n-\r\n-const navLinks = document.querySelectorAll(\" .nav-link\");\r\n-\r\n-\r\n-navLinks.forEach(link => {\r\n-    link.addEventListener(\"click\", (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        // remove active from all\r\n-        navLinks.forEach(l => l.classList.remove(\"active\"));\r\n-\r\n-        // set active on clicked\r\n-        link.classList.add(\"active\");\r\n-        // update global variable\r\n-        activeNav = link.getAttribute(\"data-type\");\r\n-        localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n-        console.log(\"Active Nav:\", activeNav);\r\n-        editor.setValue(getCodeSnippet(activeNav));\r\n-    });\r\n-});\r\n-\r\n-// let originalcode;\r\n-\r\n-// if(activeNavItem===\"strategy_order\"){\r\n-//     originalcode=`{\r\n-//     \"type\": \"strategy_order\",\r\n-//     \"exit_on_opposite\": false,\r\n-//     \"is_tgt\": false,\r\n-//     \"is_sl\": false,\r\n-//     \"is_trail_set\": false,\r\n-//     \"position_size\": \"{{strategy.position_size}}\",\r\n-//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n-\r\n-// }`\r\n-// }\r\n-// else{\r\n-//     originalcode=`{\r\n-//     \"type\": \"${activeNavItem}\"\r\n-// }`\r\n-// }\r\n-\r\n-document.getElementById(\"deleteBtn\").addEventListener(\"click\",function(){\r\n-  let activeNavItem=JSON.parse(localStorage.getItem(\"activenav\"))\r\n-  editor.setValue(getCodeSnippet(activeNavItem));\r\n-\r\n-  // reset dropdown to index 0\r\n-  let scriptType = document.getElementById(\"dropdown1\");\r\n-  if (scriptType) scriptType.selectedIndex = 0;\r\n-})\r\n-\r\n-const copyBtn = document.getElementById(\"copyBtn\");\r\n-\r\n-copyBtn?.addEventListener(\"click\", function () {\r\n-  if (!editor) return;\r\n-\r\n-  // Get the current editor content\r\n-  const code = editor.getValue();\r\n-\r\n-  // Use navigator clipboard API to copy\r\n-  navigator.clipboard.writeText(code)\r\n-    .then(() => {\r\n-      alert(\"Code copied to clipboard!\");\r\n-    })\r\n-    .catch(err => {\r\n-      console.error(\"Failed to copy: \", err);\r\n-    });\r\n-});\r\n-\r\n-function upsertJson(key, value, quote = true) {\r\n-  if (!editor) return;\r\n-  let code = editor.getValue();\r\n-  const regex = new RegExp(`\"${key}\"\\\\s*:\\\\s*(\".+?\"|\\\\d+|true|false)`);\r\n-  const newVal = quote ? `\"${value}\"` : value;\r\n-  if (regex.test(code)) {\r\n-    code = code.replace(regex, `\"${key}\": ${newVal}`);\r\n-  } else {\r\n-    code = code.trim().replace(/}$/, `,\\n  \"${key}\": ${newVal}\\n}`);\r\n-  }\r\n-  editor.setValue(code);\r\n-}\r\n-\r\n-//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n-\r\n-\r\n-// helper function if you need it elsewhere\r\n-//   function getActiveNav() {\r\n-//     return activeNav;\r\n-//   }\r\n-\r\n-//   console.log(getActiveNav())\r\n-\r\n-// dependency mapping\r\n-const dependencies = [\r\n-  \r\n-  {\r\n-    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n-      {container:'#scriptsearchbox' , field:\"#search\"},\r\n-      {container:\"#productType\",field:\"#productDropdown\"}\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#atmdropdown\",\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#premiumbox\",\r\n-    event: \"input\",\r\n-    targets: [\r\n-      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n-\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger:\"productDropdown\",\r\n-    event:\"change\",\r\n-    targets:[\r\n-      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n-    ]\r\n-  }\r\n-];\r\n-\r\n-function hideAndReset(triggerSelector, eventType = null) {\r\n-  dependencies.forEach(dep => {\r\n-    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-      dep.targets.forEach((t, index) => {\r\n-        const container = document.querySelector(t.container);\r\n-        if (container) {\r\n-          // If it's the *direct child* (first dependent) → only reset value\r\n-          if (index === 0) {\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-              }\r\n-            }\r\n-          } else {\r\n-            // Other deeper dependents → hide + reset\r\n-            container.style.display = \"none\";\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-              }\r\n-            }\r\n-          }\r\n-        }\r\n-      });\r\n-    }\r\n-  });\r\n-}\r\n-\r\n-// function hideAndReset(triggerSelector, eventType = null) {\r\n-//   dependencies.forEach(dep => {\r\n-//     // match trigger, ignore eventType if null\r\n-//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-//       dep.targets.forEach(t => {\r\n-//         const container = document.querySelector(t.container);\r\n-//         if (container) {\r\n-//           // hide the container\r\n-//           container.style.display = \"none\";\r\n-\r\n-//           // reset child field if provided\r\n-//           if (t.field) {\r\n-//             const field = container.querySelector(t.field);\r\n-//             if (field) {\r\n-//               if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-//               else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-//             }\r\n-//           }\r\n-//         }\r\n-//       });\r\n-//     }\r\n-//   });\r\n-// }\r\n-\r\n-\r\n-// document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n-//     hideAndReset(\"#atmdropdown\",change)\r\n-// })\r\n-\r\n-let scriptType = document.getElementById(\"dropdown1\");\r\n-dropdown1.addEventListener(\"change\", function () {\r\n-  upsertJson(\"script_type\",this.value,true);\r\n-  upsertJson(\"is_rollover\",true,false);\r\n-  hideAndReset(\"#dropdown1\",\"change\")\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"CE\" || scriptType.value === \"PE\" ) {\r\n-        document.getElementById(\"optionSelection\").style.display = \"block\";\r\n-        document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n-    }\r\n-    else {\r\n-        document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n-        document.getElementById(\"optionSelection\").style.display = \"none\";\r\n-    }\r\n-})\r\n-\r\n-let searchInput=document.getElementById(\"search\");\r\n-const dropdown = document.getElementById('dropdown');\r\n-let token=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n-document.addEventListener('click', (e) => {\r\n-  // Check if click is outside the input and dropdown\r\n-  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n-    dropdown.style.display = 'none';\r\n-  }\r\n-});\r\n-\r\n-// Simple debounce function\r\n-function debounce(func, delay) {\r\n-  let timer;\r\n-  return function (...args) {\r\n-    clearTimeout(timer);\r\n-    timer = setTimeout(() => func.apply(this, args), delay);\r\n-  };\r\n-}\r\n-\r\n-// Fetch API suggestions\r\n-async function fetchSuggestions(query) {\r\n-  if (!query) {\r\n-    dropdown.style.display = 'none';\r\n-    dropdown.innerHTML = '';\r\n-    return;\r\n-  }\r\n-\r\n-  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n-  try {\r\n-    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n-      method: \"POST\",\r\n-      headers: {\r\n-        \"Content-Type\": \"application/json\",\r\n-        \"Authorization\": token\r\n-      },\r\n-      body: JSON.stringify({\r\n-        script: query,\r\n-        type: scriptType\r\n-      })\r\n-    });\r\n-\r\n-    const data = await res.json();\r\n-    const suggestions = data.data;\r\n-\r\n-\r\n-    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n-    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n-\r\n-  }\r\n-  catch (err) {\r\n-    console.error(err);\r\n-  }\r\n-}\r\n-\r\n-// Add click selection\r\n-dropdown?.addEventListener('click', e => {\r\n-  if (e.target.tagName === 'LI') {\r\n-    let selectedText = e.target.textContent;\r\n-    searchInput.value = selectedText;\r\n-    // remove everything after \"(\"\r\n-    if (selectedText.includes(\"(\")) {\r\n-      selectedText = selectedText.split(\"(\")[0];\r\n-    }\r\n-    dropdown.style.display = 'none';\r\n-    upsertJson(\"script\",selectedText,true);\r\n-    if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n-      document.getElementById(\"productType\").style.display=\"block\";\r\n-    }\r\n-  }\r\n-});\r\n-\r\n-searchInput.addEventListener('input', debounce(e => {\r\n-  fetchSuggestions(e.target.value);\r\n-}, 300));\r\n-\r\n-if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value ===\"EQ\"){\r\n-  console.log(\"enter\");\r\n-document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n-  upsertJson(\"product\",this.value,true);\r\n-  hideAndReset(\"#productDropdown\",change);\r\n-  document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n-  document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n-    upsertJson(\"quantity\",this.value,false)\r\n-  })\r\n-})\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1756322701846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -334,9 +334,9 @@\n searchInput.addEventListener('input', debounce(e => {\r\n   fetchSuggestions(e.target.value);\r\n }, 300));\r\n \r\n-console.log( scriptType.value)\r\n+\r\n if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n   console.log(\"enter\");\r\n document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n   upsertJson(\"product\",this.value,true);\r\n"
                },
                {
                    "date": 1756322728501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -335,9 +335,9 @@\n   fetchSuggestions(e.target.value);\r\n }, 300));\r\n \r\n \r\n-if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n+\r\n   console.log(\"enter\");\r\n document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n   upsertJson(\"product\",this.value,true);\r\n   hideAndReset(\"#productDropdown\",change);\r\n@@ -345,5 +345,4 @@\n   document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n     upsertJson(\"quantity\",this.value,false)\r\n   })\r\n })\r\n-}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1756322735818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -335,9 +335,9 @@\n   fetchSuggestions(e.target.value);\r\n }, 300));\r\n \r\n \r\n-\r\n+if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n   console.log(\"enter\");\r\n document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n   upsertJson(\"product\",this.value,true);\r\n   hideAndReset(\"#productDropdown\",change);\r\n@@ -345,4 +345,5 @@\n   document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n     upsertJson(\"quantity\",this.value,false)\r\n   })\r\n })\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1756322796423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -335,15 +335,15 @@\n   fetchSuggestions(e.target.value);\r\n }, 300));\r\n \r\n \r\n-if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n+\r\n   console.log(\"enter\");\r\n-document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n+ document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n   upsertJson(\"product\",this.value,true);\r\n   hideAndReset(\"#productDropdown\",change);\r\n+  if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n   document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n   document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n     upsertJson(\"quantity\",this.value,false)\r\n\\ No newline at end of file\n   })\r\n })\r\n-}\n"
                },
                {
                    "date": 1756322804273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -345,5 +345,6 @@\n   document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n   document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n     upsertJson(\"quantity\",this.value,false)\r\n   })\r\n-})\n\\ No newline at end of file\n+}\r\n+})\r\n"
                },
                {
                    "date": 1756322832420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -339,9 +339,9 @@\n \r\n   console.log(\"enter\");\r\n  document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n   upsertJson(\"product\",this.value,true);\r\n-  hideAndReset(\"#productDropdown\",change);\r\n+  hideAndReset(\"#productDropdown\",\"change\");\r\n   if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n   document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n   document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n     upsertJson(\"quantity\",this.value,false)\r\n"
                },
                {
                    "date": 1756323048893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,18 +127,29 @@\n \r\n function upsertJson(key, value, quote = true) {\r\n   if (!editor) return;\r\n   let code = editor.getValue();\r\n-  const regex = new RegExp(`\"${key}\"\\\\s*:\\\\s*(\".+?\"|\\\\d+|true|false)`);\r\n-  const newVal = quote ? `\"${value}\"` : value;\r\n-  if (regex.test(code)) {\r\n-    code = code.replace(regex, `\"${key}\": ${newVal}`);\r\n+\r\n+  const regex = new RegExp(`,?\\\\s*\"?${key}\"\\\\s*:\\\\s*(\".*?\"|\\\\d*|true|false|null)`, \"m\");\r\n+\r\n+  if (value === \"\" || value == null) {\r\n+    // Remove the key if value is empty\r\n+    code = code.replace(regex, \"\");\r\n+    // Clean up any trailing commas\r\n+    code = code.replace(/,\\s*}/, \"\\n}\");\r\n   } else {\r\n-    code = code.trim().replace(/}$/, `,\\n  \"${key}\": ${newVal}\\n}`);\r\n+    const newVal = quote ? `\"${value}\"` : value;\r\n+    if (regex.test(code)) {\r\n+      code = code.replace(regex, `\"${key}\": ${newVal}`);\r\n+    } else {\r\n+      code = code.trim().replace(/}$/, `,\\n  \"${key}\": ${newVal}\\n}`);\r\n+    }\r\n   }\r\n+\r\n   editor.setValue(code);\r\n }\r\n \r\n+\r\n //   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n \r\n \r\n // helper function if you need it elsewhere\r\n"
                },
                {
                    "date": 1756323154636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,9 +128,9 @@\n function upsertJson(key, value, quote = true) {\r\n   if (!editor) return;\r\n   let code = editor.getValue();\r\n \r\n-  const regex = new RegExp(`,?\\\\s*\"?${key}\"\\\\s*:\\\\s*(\".*?\"|\\\\d*|true|false|null)`, \"m\");\r\n+  const regex = new RegExp(`,?\\\\s*\"?${key}\"\\\\s*:\\\\s*(\".*?\"|\\\\d+*|true|false|null)`, \"m\");\r\n \r\n   if (value === \"\" || value == null) {\r\n     // Remove the key if value is empty\r\n     code = code.replace(regex, \"\");\r\n"
                },
                {
                    "date": 1756323190398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,15 +128,15 @@\n function upsertJson(key, value, quote = true) {\r\n   if (!editor) return;\r\n   let code = editor.getValue();\r\n \r\n-  const regex = new RegExp(`,?\\\\s*\"?${key}\"\\\\s*:\\\\s*(\".*?\"|\\\\d+*|true|false|null)`, \"m\");\r\n+  // Match only the value part, not across commas/objects\r\n+  const regex = new RegExp(`\"(${key})\"\\\\s*:\\\\s*(\".*?\"|\\\\d+(?:\\\\.\\\\d+)?|true|false|null)`, \"m\");\r\n \r\n   if (value === \"\" || value == null) {\r\n-    // Remove the key if value is empty\r\n-    code = code.replace(regex, \"\");\r\n-    // Clean up any trailing commas\r\n-    code = code.replace(/,\\s*}/, \"\\n}\");\r\n+    // Remove key + value, handle commas safely\r\n+    code = code.replace(new RegExp(`,?\\\\s*\"${key}\"\\\\s*:\\\\s*(\".*?\"|\\\\d+(?:\\\\.\\\\d+)?|true|false|null)`, \"m\"), \"\");\r\n+    code = code.replace(/,\\s*}/, \"}\"); // fix trailing commas\r\n   } else {\r\n     const newVal = quote ? `\"${value}\"` : value;\r\n     if (regex.test(code)) {\r\n       code = code.replace(regex, `\"${key}\": ${newVal}`);\r\n"
                },
                {
                    "date": 1756323299197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,27 +126,27 @@\n });\r\n \r\n function upsertJson(key, value, quote = true) {\r\n   if (!editor) return;\r\n+\r\n   let code = editor.getValue();\r\n+  let obj;\r\n \r\n-  // Match only the value part, not across commas/objects\r\n-  const regex = new RegExp(`\"(${key})\"\\\\s*:\\\\s*(\".*?\"|\\\\d+(?:\\\\.\\\\d+)?|true|false|null)`, \"m\");\r\n+  try {\r\n+    obj = JSON.parse(code);\r\n+  } catch (e) {\r\n+    console.error(\"Invalid JSON in editor:\", e);\r\n+    return;\r\n+  }\r\n \r\n   if (value === \"\" || value == null) {\r\n-    // Remove key + value, handle commas safely\r\n-    code = code.replace(new RegExp(`,?\\\\s*\"${key}\"\\\\s*:\\\\s*(\".*?\"|\\\\d+(?:\\\\.\\\\d+)?|true|false|null)`, \"m\"), \"\");\r\n-    code = code.replace(/,\\s*}/, \"}\"); // fix trailing commas\r\n+    delete obj[key]; // remove key\r\n   } else {\r\n-    const newVal = quote ? `\"${value}\"` : value;\r\n-    if (regex.test(code)) {\r\n-      code = code.replace(regex, `\"${key}\": ${newVal}`);\r\n-    } else {\r\n-      code = code.trim().replace(/}$/, `,\\n  \"${key}\": ${newVal}\\n}`);\r\n-    }\r\n+    obj[key] = quote ? String(value) : Number(value);\r\n   }\r\n \r\n-  editor.setValue(code);\r\n+  // Pretty print JSON back to editor\r\n+  editor.setValue(JSON.stringify(obj, null, 2));\r\n }\r\n \r\n \r\n //   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n"
                },
                {
                    "date": 1756323336970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -258,9 +258,9 @@\n \r\n let scriptType = document.getElementById(\"dropdown1\");\r\n dropdown1.addEventListener(\"change\", function () {\r\n   upsertJson(\"script_type\",this.value,true);\r\n-  upsertJson(\"is_rollover\",true,false);\r\n+  upsertJson(\"is_rollover\",\"true\",false);\r\n   hideAndReset(\"#dropdown1\",\"change\")\r\n     if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"CE\" || scriptType.value === \"PE\" ) {\r\n         document.getElementById(\"optionSelection\").style.display = \"block\";\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n"
                },
                {
                    "date": 1756323444764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,9 +124,9 @@\n       console.error(\"Failed to copy: \", err);\r\n     });\r\n });\r\n \r\n-function upsertJson(key, value, quote = true) {\r\n+function upsertJson(key, value) {\r\n   if (!editor) return;\r\n \r\n   let code = editor.getValue();\r\n   let obj;\r\n@@ -138,14 +138,21 @@\n     return;\r\n   }\r\n \r\n   if (value === \"\" || value == null) {\r\n-    delete obj[key]; // remove key\r\n+    delete obj[key]; // remove key if empty\r\n   } else {\r\n-    obj[key] = quote ? String(value) : Number(value);\r\n+    let parsedVal;\r\n+\r\n+    if (value === \"true\") parsedVal = true;\r\n+    else if (value === \"false\") parsedVal = false;\r\n+    else if (value === \"null\") parsedVal = null;\r\n+    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n+    else parsedVal = value; // string\r\n+\r\n+    obj[key] = parsedVal;\r\n   }\r\n \r\n-  // Pretty print JSON back to editor\r\n   editor.setValue(JSON.stringify(obj, null, 2));\r\n }\r\n \r\n \r\n@@ -258,9 +265,9 @@\n \r\n let scriptType = document.getElementById(\"dropdown1\");\r\n dropdown1.addEventListener(\"change\", function () {\r\n   upsertJson(\"script_type\",this.value,true);\r\n-  upsertJson(\"is_rollover\",\"true\",false);\r\n+  upsertJson(\"is_rollover\",true,false);\r\n   hideAndReset(\"#dropdown1\",\"change\")\r\n     if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"CE\" || scriptType.value === \"PE\" ) {\r\n         document.getElementById(\"optionSelection\").style.display = \"block\";\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n"
                },
                {
                    "date": 1756323465389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,368 @@\n+var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n+var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n+    return new bootstrap.Tooltip(tooltipTriggerEl)\r\n+\r\n+});\r\n+\r\n+let editor;\r\n+\r\n+require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n+\r\n+require([\"vs/editor/editor.main\"], function () {\r\n+    window.getCodeSnippet = getCodeSnippet;\r\n+\r\n+    const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n+\r\n+    function getCodeSnippet(activeType) {\r\n+if (activeType === \"strategy_order\") {\r\n+    return `{\r\n+    \"type\": \"strategy_order\",\r\n+    \"exit_on_opposite\": false,\r\n+    \"is_tgt\": false,\r\n+    \"is_sl\": false,\r\n+    \"is_trail_set\": false,\r\n+    \"position_size\": \"{{strategy.position_size}}\",\r\n+    \"transaction_type\": \"{{strategy.order.action}}\"\r\n+}`;\r\n+} \r\n+else {\r\n+    return `{\r\n+    \"type\": \"${activeType}\"\r\n+}`;\r\n+}\r\n+    }\r\n+\r\n+    editor = monaco.editor.create(container, {\r\n+        value: getCodeSnippet(\"strategy_order\"),\r\n+        language: \"json\",\r\n+        theme: \"vs-dark\",\r\n+        automaticLayout: true,\r\n+        suggestOnTriggerCharacters: false,\r\n+        quickSuggestions: false,\r\n+        wordBasedSuggestions: false,\r\n+        parameterHints: { enabled: false },\r\n+        inlineSuggest: { enabled: false },\r\n+        fontSize: 18,\r\n+        minimap: { enabled: false },\r\n+        wordWrap: \"on\",\r\n+        scrollbar: {\r\n+            vertical: \"hidden\",\r\n+            horizontal: \"hidden\",\r\n+            handleMouseWheel: false\r\n+        },\r\n+    });\r\n+    \r\n+});\r\n+\r\n+\r\n+\r\n+let activeNav = \"strategy\"; // default active\r\n+\r\n+const navLinks = document.querySelectorAll(\" .nav-link\");\r\n+\r\n+\r\n+navLinks.forEach(link => {\r\n+    link.addEventListener(\"click\", (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        // remove active from all\r\n+        navLinks.forEach(l => l.classList.remove(\"active\"));\r\n+\r\n+        // set active on clicked\r\n+        link.classList.add(\"active\");\r\n+        // update global variable\r\n+        activeNav = link.getAttribute(\"data-type\");\r\n+        localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n+        console.log(\"Active Nav:\", activeNav);\r\n+        editor.setValue(getCodeSnippet(activeNav));\r\n+    });\r\n+});\r\n+\r\n+// let originalcode;\r\n+\r\n+// if(activeNavItem===\"strategy_order\"){\r\n+//     originalcode=`{\r\n+//     \"type\": \"strategy_order\",\r\n+//     \"exit_on_opposite\": false,\r\n+//     \"is_tgt\": false,\r\n+//     \"is_sl\": false,\r\n+//     \"is_trail_set\": false,\r\n+//     \"position_size\": \"{{strategy.position_size}}\",\r\n+//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n+\r\n+// }`\r\n+// }\r\n+// else{\r\n+//     originalcode=`{\r\n+//     \"type\": \"${activeNavItem}\"\r\n+// }`\r\n+// }\r\n+\r\n+document.getElementById(\"deleteBtn\").addEventListener(\"click\",function(){\r\n+  let activeNavItem=JSON.parse(localStorage.getItem(\"activenav\"))\r\n+  editor.setValue(getCodeSnippet(activeNavItem));\r\n+\r\n+  // reset dropdown to index 0\r\n+  let scriptType = document.getElementById(\"dropdown1\");\r\n+  if (scriptType) scriptType.selectedIndex = 0;\r\n+})\r\n+\r\n+const copyBtn = document.getElementById(\"copyBtn\");\r\n+\r\n+copyBtn?.addEventListener(\"click\", function () {\r\n+  if (!editor) return;\r\n+\r\n+  // Get the current editor content\r\n+  const code = editor.getValue();\r\n+\r\n+  // Use navigator clipboard API to copy\r\n+  navigator.clipboard.writeText(code)\r\n+    .then(() => {\r\n+      alert(\"Code copied to clipboard!\");\r\n+    })\r\n+    .catch(err => {\r\n+      console.error(\"Failed to copy: \", err);\r\n+    });\r\n+});\r\n+\r\n+function upsertJson(key, value) {\r\n+  if (!editor) return;\r\n+\r\n+  let code = editor.getValue();\r\n+  let obj;\r\n+\r\n+  try {\r\n+    obj = JSON.parse(code);\r\n+  } catch (e) {\r\n+    console.error(\"Invalid JSON in editor:\", e);\r\n+    return;\r\n+  }\r\n+\r\n+  if (value === \"\" || value == null) {\r\n+    delete obj[key]; // remove key if empty\r\n+  } else {\r\n+    let parsedVal;\r\n+\r\n+    if (value === \"true\") parsedVal = true;\r\n+    else if (value === \"false\") parsedVal = false;\r\n+    else if (value === \"null\") parsedVal = null;\r\n+    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n+    else parsedVal = value; // string\r\n+\r\n+    obj[key] = parsedVal;\r\n+  }\r\n+\r\n+  editor.setValue(JSON.stringify(obj, null, 2));\r\n+}\r\n+\r\n+\r\n+//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n+\r\n+\r\n+// helper function if you need it elsewhere\r\n+//   function getActiveNav() {\r\n+//     return activeNav;\r\n+//   }\r\n+\r\n+//   console.log(getActiveNav())\r\n+\r\n+// dependency mapping\r\n+const dependencies = [\r\n+  \r\n+  {\r\n+    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n+      {container:'#scriptsearchbox' , field:\"#search\"},\r\n+      {container:\"#productType\",field:\"#productDropdown\"}\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#atmdropdown\",\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#premiumbox\",\r\n+    event: \"input\",\r\n+    targets: [\r\n+      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n+\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger:\"productDropdown\",\r\n+    event:\"change\",\r\n+    targets:[\r\n+      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n+    ]\r\n+  }\r\n+];\r\n+\r\n+function hideAndReset(triggerSelector, eventType = null) {\r\n+  dependencies.forEach(dep => {\r\n+    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+      dep.targets.forEach((t, index) => {\r\n+        const container = document.querySelector(t.container);\r\n+        if (container) {\r\n+          // If it's the *direct child* (first dependent) → only reset value\r\n+          if (index === 0) {\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+              }\r\n+            }\r\n+          } else {\r\n+            // Other deeper dependents → hide + reset\r\n+            container.style.display = \"none\";\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+              }\r\n+            }\r\n+          }\r\n+        }\r\n+      });\r\n+    }\r\n+  });\r\n+}\r\n+\r\n+// function hideAndReset(triggerSelector, eventType = null) {\r\n+//   dependencies.forEach(dep => {\r\n+//     // match trigger, ignore eventType if null\r\n+//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+//       dep.targets.forEach(t => {\r\n+//         const container = document.querySelector(t.container);\r\n+//         if (container) {\r\n+//           // hide the container\r\n+//           container.style.display = \"none\";\r\n+\r\n+//           // reset child field if provided\r\n+//           if (t.field) {\r\n+//             const field = container.querySelector(t.field);\r\n+//             if (field) {\r\n+//               if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+//               else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+//             }\r\n+//           }\r\n+//         }\r\n+//       });\r\n+//     }\r\n+//   });\r\n+// }\r\n+\r\n+\r\n+// document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n+//     hideAndReset(\"#atmdropdown\",change)\r\n+// })\r\n+\r\n+let scriptType = document.getElementById(\"dropdown1\");\r\n+dropdown1.addEventListener(\"change\", function () {\r\n+  upsertJson(\"script_type\",this.value,true);\r\n+  upsertJson(\"is_rollover\",\"true\",false);\r\n+  hideAndReset(\"#dropdown1\",\"change\")\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"CE\" || scriptType.value === \"PE\" ) {\r\n+        document.getElementById(\"optionSelection\").style.display = \"block\";\r\n+        document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n+    }\r\n+    else {\r\n+        document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n+        document.getElementById(\"optionSelection\").style.display = \"none\";\r\n+    }\r\n+})\r\n+\r\n+let searchInput=document.getElementById(\"search\");\r\n+const dropdown = document.getElementById('dropdown');\r\n+let token=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n+document.addEventListener('click', (e) => {\r\n+  // Check if click is outside the input and dropdown\r\n+  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n+    dropdown.style.display = 'none';\r\n+  }\r\n+});\r\n+\r\n+// Simple debounce function\r\n+function debounce(func, delay) {\r\n+  let timer;\r\n+  return function (...args) {\r\n+    clearTimeout(timer);\r\n+    timer = setTimeout(() => func.apply(this, args), delay);\r\n+  };\r\n+}\r\n+\r\n+// Fetch API suggestions\r\n+async function fetchSuggestions(query) {\r\n+  if (!query) {\r\n+    dropdown.style.display = 'none';\r\n+    dropdown.innerHTML = '';\r\n+    return;\r\n+  }\r\n+\r\n+  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n+  try {\r\n+    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n+      method: \"POST\",\r\n+      headers: {\r\n+        \"Content-Type\": \"application/json\",\r\n+        \"Authorization\": token\r\n+      },\r\n+      body: JSON.stringify({\r\n+        script: query,\r\n+        type: scriptType\r\n+      })\r\n+    });\r\n+\r\n+    const data = await res.json();\r\n+    const suggestions = data.data;\r\n+\r\n+\r\n+    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n+    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n+\r\n+  }\r\n+  catch (err) {\r\n+    console.error(err);\r\n+  }\r\n+}\r\n+\r\n+// Add click selection\r\n+dropdown?.addEventListener('click', e => {\r\n+  if (e.target.tagName === 'LI') {\r\n+    let selectedText = e.target.textContent;\r\n+    searchInput.value = selectedText;\r\n+    // remove everything after \"(\"\r\n+    if (selectedText.includes(\"(\")) {\r\n+      selectedText = selectedText.split(\"(\")[0];\r\n+    }\r\n+    dropdown.style.display = 'none';\r\n+    upsertJson(\"script\",selectedText,true);\r\n+    if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n+      document.getElementById(\"productType\").style.display=\"block\";\r\n+    }\r\n+  }\r\n+});\r\n+\r\n+searchInput.addEventListener('input', debounce(e => {\r\n+  fetchSuggestions(e.target.value);\r\n+}, 300));\r\n+\r\n+\r\n+\r\n+  console.log(\"enter\");\r\n+ document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n+  upsertJson(\"product\",this.value,true);\r\n+  hideAndReset(\"#productDropdown\",\"change\");\r\n+  if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n+  document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n+  document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n+    upsertJson(\"quantity\",this.value,false)\r\n+  })\r\n+}\r\n+})\r\n"
                },
                {
                    "date": 1756323627097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -362,375 +362,9 @@\n   if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n   document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n   document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n     upsertJson(\"quantity\",this.value,false)\r\n+    document.getElementById(\"BtnGroup\").style.display=\"block\";\r\n+    document.getElementById(\"toggleSwitchGroup\").style.display=\"block\"\r\n   })\r\n }\r\n })\r\n-var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n-var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n-    return new bootstrap.Tooltip(tooltipTriggerEl)\r\n-\r\n-});\r\n-\r\n-let editor;\r\n-\r\n-require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n-\r\n-require([\"vs/editor/editor.main\"], function () {\r\n-    window.getCodeSnippet = getCodeSnippet;\r\n-\r\n-    const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n-\r\n-    function getCodeSnippet(activeType) {\r\n-if (activeType === \"strategy_order\") {\r\n-    return `{\r\n-    \"type\": \"strategy_order\",\r\n-    \"exit_on_opposite\": false,\r\n-    \"is_tgt\": false,\r\n-    \"is_sl\": false,\r\n-    \"is_trail_set\": false,\r\n-    \"position_size\": \"{{strategy.position_size}}\",\r\n-    \"transaction_type\": \"{{strategy.order.action}}\"\r\n-}`;\r\n-} \r\n-else {\r\n-    return `{\r\n-    \"type\": \"${activeType}\"\r\n-}`;\r\n-}\r\n-    }\r\n-\r\n-    editor = monaco.editor.create(container, {\r\n-        value: getCodeSnippet(\"strategy_order\"),\r\n-        language: \"json\",\r\n-        theme: \"vs-dark\",\r\n-        automaticLayout: true,\r\n-        suggestOnTriggerCharacters: false,\r\n-        quickSuggestions: false,\r\n-        wordBasedSuggestions: false,\r\n-        parameterHints: { enabled: false },\r\n-        inlineSuggest: { enabled: false },\r\n-        fontSize: 18,\r\n-        minimap: { enabled: false },\r\n-        wordWrap: \"on\",\r\n-        scrollbar: {\r\n-            vertical: \"hidden\",\r\n-            horizontal: \"hidden\",\r\n-            handleMouseWheel: false\r\n-        },\r\n-    });\r\n-    \r\n-});\r\n-\r\n-\r\n-\r\n-let activeNav = \"strategy\"; // default active\r\n-\r\n-const navLinks = document.querySelectorAll(\" .nav-link\");\r\n-\r\n-\r\n-navLinks.forEach(link => {\r\n-    link.addEventListener(\"click\", (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        // remove active from all\r\n-        navLinks.forEach(l => l.classList.remove(\"active\"));\r\n-\r\n-        // set active on clicked\r\n-        link.classList.add(\"active\");\r\n-        // update global variable\r\n-        activeNav = link.getAttribute(\"data-type\");\r\n-        localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n-        console.log(\"Active Nav:\", activeNav);\r\n-        editor.setValue(getCodeSnippet(activeNav));\r\n-    });\r\n-});\r\n-\r\n-// let originalcode;\r\n-\r\n-// if(activeNavItem===\"strategy_order\"){\r\n-//     originalcode=`{\r\n-//     \"type\": \"strategy_order\",\r\n-//     \"exit_on_opposite\": false,\r\n-//     \"is_tgt\": false,\r\n-//     \"is_sl\": false,\r\n-//     \"is_trail_set\": false,\r\n-//     \"position_size\": \"{{strategy.position_size}}\",\r\n-//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n-\r\n-// }`\r\n-// }\r\n-// else{\r\n-//     originalcode=`{\r\n-//     \"type\": \"${activeNavItem}\"\r\n-// }`\r\n-// }\r\n-\r\n-document.getElementById(\"deleteBtn\").addEventListener(\"click\",function(){\r\n-  let activeNavItem=JSON.parse(localStorage.getItem(\"activenav\"))\r\n-  editor.setValue(getCodeSnippet(activeNavItem));\r\n-\r\n-  // reset dropdown to index 0\r\n-  let scriptType = document.getElementById(\"dropdown1\");\r\n-  if (scriptType) scriptType.selectedIndex = 0;\r\n-})\r\n-\r\n-const copyBtn = document.getElementById(\"copyBtn\");\r\n-\r\n-copyBtn?.addEventListener(\"click\", function () {\r\n-  if (!editor) return;\r\n-\r\n-  // Get the current editor content\r\n-  const code = editor.getValue();\r\n-\r\n-  // Use navigator clipboard API to copy\r\n-  navigator.clipboard.writeText(code)\r\n-    .then(() => {\r\n-      alert(\"Code copied to clipboard!\");\r\n-    })\r\n-    .catch(err => {\r\n-      console.error(\"Failed to copy: \", err);\r\n-    });\r\n-});\r\n-\r\n-function upsertJson(key, value) {\r\n-  if (!editor) return;\r\n-\r\n-  let code = editor.getValue();\r\n-  let obj;\r\n-\r\n-  try {\r\n-    obj = JSON.parse(code);\r\n-  } catch (e) {\r\n-    console.error(\"Invalid JSON in editor:\", e);\r\n-    return;\r\n-  }\r\n-\r\n-  if (value === \"\" || value == null) {\r\n-    delete obj[key]; // remove key if empty\r\n-  } else {\r\n-    let parsedVal;\r\n-\r\n-    if (value === \"true\") parsedVal = true;\r\n-    else if (value === \"false\") parsedVal = false;\r\n-    else if (value === \"null\") parsedVal = null;\r\n-    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n-    else parsedVal = value; // string\r\n-\r\n-    obj[key] = parsedVal;\r\n-  }\r\n-\r\n-  editor.setValue(JSON.stringify(obj, null, 2));\r\n-}\r\n-\r\n-\r\n-//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n-\r\n-\r\n-// helper function if you need it elsewhere\r\n-//   function getActiveNav() {\r\n-//     return activeNav;\r\n-//   }\r\n-\r\n-//   console.log(getActiveNav())\r\n-\r\n-// dependency mapping\r\n-const dependencies = [\r\n-  \r\n-  {\r\n-    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n-      {container:'#scriptsearchbox' , field:\"#search\"},\r\n-      {container:\"#productType\",field:\"#productDropdown\"}\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#atmdropdown\",\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#premiumbox\",\r\n-    event: \"input\",\r\n-    targets: [\r\n-      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n-\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger:\"productDropdown\",\r\n-    event:\"change\",\r\n-    targets:[\r\n-      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n-    ]\r\n-  }\r\n-];\r\n-\r\n-function hideAndReset(triggerSelector, eventType = null) {\r\n-  dependencies.forEach(dep => {\r\n-    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-      dep.targets.forEach((t, index) => {\r\n-        const container = document.querySelector(t.container);\r\n-        if (container) {\r\n-          // If it's the *direct child* (first dependent) → only reset value\r\n-          if (index === 0) {\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-              }\r\n-            }\r\n-          } else {\r\n-            // Other deeper dependents → hide + reset\r\n-            container.style.display = \"none\";\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-              }\r\n-            }\r\n-          }\r\n-        }\r\n-      });\r\n-    }\r\n-  });\r\n-}\r\n-\r\n-// function hideAndReset(triggerSelector, eventType = null) {\r\n-//   dependencies.forEach(dep => {\r\n-//     // match trigger, ignore eventType if null\r\n-//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-//       dep.targets.forEach(t => {\r\n-//         const container = document.querySelector(t.container);\r\n-//         if (container) {\r\n-//           // hide the container\r\n-//           container.style.display = \"none\";\r\n-\r\n-//           // reset child field if provided\r\n-//           if (t.field) {\r\n-//             const field = container.querySelector(t.field);\r\n-//             if (field) {\r\n-//               if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-//               else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-//             }\r\n-//           }\r\n-//         }\r\n-//       });\r\n-//     }\r\n-//   });\r\n-// }\r\n-\r\n-\r\n-// document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n-//     hideAndReset(\"#atmdropdown\",change)\r\n-// })\r\n-\r\n-let scriptType = document.getElementById(\"dropdown1\");\r\n-dropdown1.addEventListener(\"change\", function () {\r\n-  upsertJson(\"script_type\",this.value,true);\r\n-  upsertJson(\"is_rollover\",true,false);\r\n-  hideAndReset(\"#dropdown1\",\"change\")\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"CE\" || scriptType.value === \"PE\" ) {\r\n-        document.getElementById(\"optionSelection\").style.display = \"block\";\r\n-        document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n-    }\r\n-    else {\r\n-        document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n-        document.getElementById(\"optionSelection\").style.display = \"none\";\r\n-    }\r\n-})\r\n-\r\n-let searchInput=document.getElementById(\"search\");\r\n-const dropdown = document.getElementById('dropdown');\r\n-let token=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n-document.addEventListener('click', (e) => {\r\n-  // Check if click is outside the input and dropdown\r\n-  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n-    dropdown.style.display = 'none';\r\n-  }\r\n-});\r\n-\r\n-// Simple debounce function\r\n-function debounce(func, delay) {\r\n-  let timer;\r\n-  return function (...args) {\r\n-    clearTimeout(timer);\r\n-    timer = setTimeout(() => func.apply(this, args), delay);\r\n-  };\r\n-}\r\n-\r\n-// Fetch API suggestions\r\n-async function fetchSuggestions(query) {\r\n-  if (!query) {\r\n-    dropdown.style.display = 'none';\r\n-    dropdown.innerHTML = '';\r\n-    return;\r\n-  }\r\n-\r\n-  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n-  try {\r\n-    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n-      method: \"POST\",\r\n-      headers: {\r\n-        \"Content-Type\": \"application/json\",\r\n-        \"Authorization\": token\r\n-      },\r\n-      body: JSON.stringify({\r\n-        script: query,\r\n-        type: scriptType\r\n-      })\r\n-    });\r\n-\r\n-    const data = await res.json();\r\n-    const suggestions = data.data;\r\n-\r\n-\r\n-    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n-    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n-\r\n-  }\r\n-  catch (err) {\r\n-    console.error(err);\r\n-  }\r\n-}\r\n-\r\n-// Add click selection\r\n-dropdown?.addEventListener('click', e => {\r\n-  if (e.target.tagName === 'LI') {\r\n-    let selectedText = e.target.textContent;\r\n-    searchInput.value = selectedText;\r\n-    // remove everything after \"(\"\r\n-    if (selectedText.includes(\"(\")) {\r\n-      selectedText = selectedText.split(\"(\")[0];\r\n-    }\r\n-    dropdown.style.display = 'none';\r\n-    upsertJson(\"script\",selectedText,true);\r\n-    if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n-      document.getElementById(\"productType\").style.display=\"block\";\r\n-    }\r\n-  }\r\n-});\r\n-\r\n-searchInput.addEventListener('input', debounce(e => {\r\n-  fetchSuggestions(e.target.value);\r\n-}, 300));\r\n-\r\n-\r\n-\r\n-  console.log(\"enter\");\r\n- document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n-  upsertJson(\"product\",this.value,true);\r\n-  hideAndReset(\"#productDropdown\",\"change\");\r\n-  if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n-  document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n-  document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n-    upsertJson(\"quantity\",this.value,false)\r\n-  })\r\n-}\r\n-})\r\n"
                },
                {
                    "date": 1756323919480,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -198,8 +198,15 @@\n     event:\"change\",\r\n     targets:[\r\n       {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n     ]\r\n+  },\r\n+  {\r\n+    trigger:\"quantityBox\",\r\n+    event:\"input\",\r\n+    targets:[\r\n+      {container:\"#quantityEntershow\"}\r\n+    ]\r\n   }\r\n ];\r\n \r\n function hideAndReset(triggerSelector, eventType = null) {\r\n@@ -363,8 +370,8 @@\n   document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n   document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n     upsertJson(\"quantity\",this.value,false)\r\n     document.getElementById(\"BtnGroup\").style.display=\"block\";\r\n-    document.getElementById(\"toggleSwitchGroup\").style.display=\"block\"\r\n+    document.getElementById(\"toggleSwitchGroup\").style.display=\"block\";\r\n   })\r\n }\r\n })\r\n"
                },
                {
                    "date": 1756324388614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -203,9 +203,10 @@\n   {\r\n     trigger:\"quantityBox\",\r\n     event:\"input\",\r\n     targets:[\r\n-      {container:\"#quantityEntershow\"}\r\n+     { container: \"#buySellButtons\", field: null },   // resets Buy/Sell group\r\n+     { container: \"#switchGroup\", field: null }  \r\n     ]\r\n   }\r\n ];\r\n \r\n"
                },
                {
                    "date": 1756324472750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -203,9 +203,8 @@\n   {\r\n     trigger:\"quantityBox\",\r\n     event:\"input\",\r\n     targets:[\r\n-     { container: \"#buySellButtons\", field: null },   // resets Buy/Sell group\r\n      { container: \"#switchGroup\", field: null }  \r\n     ]\r\n   }\r\n ];\r\n"
                },
                {
                    "date": 1756324563833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -369,9 +369,15 @@\n   if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n   document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n   document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n     upsertJson(\"quantity\",this.value,false)\r\n+    if(document.getElementById(\"quantityBox\")?.value<=0){\r\n+      document.getElementById(\"BtnGroup\").style.display=\"none\";\r\n+    document.getElementById(\"toggleSwitchGroup\").style.display=\"none\";\r\n+    }\r\n+    else{\r\n     document.getElementById(\"BtnGroup\").style.display=\"block\";\r\n     document.getElementById(\"toggleSwitchGroup\").style.display=\"block\";\r\n+    }\r\n   })\r\n }\r\n })\r\n"
                },
                {
                    "date": 1756324650384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -370,12 +370,14 @@\n   document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n   document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n     upsertJson(\"quantity\",this.value,false)\r\n     if(document.getElementById(\"quantityBox\")?.value<=0){\r\n-      document.getElementById(\"BtnGroup\").style.display=\"none\";\r\n+      document.getElementById(\"qyantityError\").style.display=\"block\";\r\n+    document.getElementById(\"BtnGroup\").style.display=\"none\";\r\n     document.getElementById(\"toggleSwitchGroup\").style.display=\"none\";\r\n     }\r\n     else{\r\n+          document.getElementById(\"qyantityError\").style.display=\"block\";\r\n     document.getElementById(\"BtnGroup\").style.display=\"block\";\r\n     document.getElementById(\"toggleSwitchGroup\").style.display=\"block\";\r\n     }\r\n   })\r\n"
                },
                {
                    "date": 1756324688473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -375,9 +375,9 @@\n     document.getElementById(\"BtnGroup\").style.display=\"none\";\r\n     document.getElementById(\"toggleSwitchGroup\").style.display=\"none\";\r\n     }\r\n     else{\r\n-          document.getElementById(\"qyantityError\").style.display=\"block\";\r\n+          document.getElementById(\"qyantityError\")?.style.display=\"none\";\r\n     document.getElementById(\"BtnGroup\").style.display=\"block\";\r\n     document.getElementById(\"toggleSwitchGroup\").style.display=\"block\";\r\n     }\r\n   })\r\n"
                },
                {
                    "date": 1756324708115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -370,9 +370,9 @@\n   document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n   document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n     upsertJson(\"quantity\",this.value,false)\r\n     if(document.getElementById(\"quantityBox\")?.value<=0){\r\n-      document.getElementById(\"qyantityError\").style.display=\"block\";\r\n+      document.getElementById(\"qyantityError\")?.style.display=\"block\";\r\n     document.getElementById(\"BtnGroup\").style.display=\"none\";\r\n     document.getElementById(\"toggleSwitchGroup\").style.display=\"none\";\r\n     }\r\n     else{\r\n"
                },
                {
                    "date": 1756324719494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -370,9 +370,9 @@\n   document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n   document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n     upsertJson(\"quantity\",this.value,false)\r\n     if(document.getElementById(\"quantityBox\")?.value<=0){\r\n-      document.getElementById(\"qyantityError\")?.style.display=\"block\";\r\n+      document.getElementById(\"qyantityError\").style.display=\"block\";\r\n     document.getElementById(\"BtnGroup\").style.display=\"none\";\r\n     document.getElementById(\"toggleSwitchGroup\").style.display=\"none\";\r\n     }\r\n     else{\r\n"
                },
                {
                    "date": 1756324734643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,385 @@\n+var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n+var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n+    return new bootstrap.Tooltip(tooltipTriggerEl)\r\n+\r\n+});\r\n+\r\n+let editor;\r\n+\r\n+require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n+\r\n+require([\"vs/editor/editor.main\"], function () {\r\n+    window.getCodeSnippet = getCodeSnippet;\r\n+\r\n+    const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n+\r\n+    function getCodeSnippet(activeType) {\r\n+if (activeType === \"strategy_order\") {\r\n+    return `{\r\n+    \"type\": \"strategy_order\",\r\n+    \"exit_on_opposite\": false,\r\n+    \"is_tgt\": false,\r\n+    \"is_sl\": false,\r\n+    \"is_trail_set\": false,\r\n+    \"position_size\": \"{{strategy.position_size}}\",\r\n+    \"transaction_type\": \"{{strategy.order.action}}\"\r\n+}`;\r\n+} \r\n+else {\r\n+    return `{\r\n+    \"type\": \"${activeType}\"\r\n+}`;\r\n+}\r\n+    }\r\n+\r\n+    editor = monaco.editor.create(container, {\r\n+        value: getCodeSnippet(\"strategy_order\"),\r\n+        language: \"json\",\r\n+        theme: \"vs-dark\",\r\n+        automaticLayout: true,\r\n+        suggestOnTriggerCharacters: false,\r\n+        quickSuggestions: false,\r\n+        wordBasedSuggestions: false,\r\n+        parameterHints: { enabled: false },\r\n+        inlineSuggest: { enabled: false },\r\n+        fontSize: 18,\r\n+        minimap: { enabled: false },\r\n+        wordWrap: \"on\",\r\n+        scrollbar: {\r\n+            vertical: \"hidden\",\r\n+            horizontal: \"hidden\",\r\n+            handleMouseWheel: false\r\n+        },\r\n+    });\r\n+    \r\n+});\r\n+\r\n+\r\n+\r\n+let activeNav = \"strategy\"; // default active\r\n+\r\n+const navLinks = document.querySelectorAll(\" .nav-link\");\r\n+\r\n+\r\n+navLinks.forEach(link => {\r\n+    link.addEventListener(\"click\", (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        // remove active from all\r\n+        navLinks.forEach(l => l.classList.remove(\"active\"));\r\n+\r\n+        // set active on clicked\r\n+        link.classList.add(\"active\");\r\n+        // update global variable\r\n+        activeNav = link.getAttribute(\"data-type\");\r\n+        localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n+        console.log(\"Active Nav:\", activeNav);\r\n+        editor.setValue(getCodeSnippet(activeNav));\r\n+    });\r\n+});\r\n+\r\n+// let originalcode;\r\n+\r\n+// if(activeNavItem===\"strategy_order\"){\r\n+//     originalcode=`{\r\n+//     \"type\": \"strategy_order\",\r\n+//     \"exit_on_opposite\": false,\r\n+//     \"is_tgt\": false,\r\n+//     \"is_sl\": false,\r\n+//     \"is_trail_set\": false,\r\n+//     \"position_size\": \"{{strategy.position_size}}\",\r\n+//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n+\r\n+// }`\r\n+// }\r\n+// else{\r\n+//     originalcode=`{\r\n+//     \"type\": \"${activeNavItem}\"\r\n+// }`\r\n+// }\r\n+\r\n+document.getElementById(\"deleteBtn\").addEventListener(\"click\",function(){\r\n+  let activeNavItem=JSON.parse(localStorage.getItem(\"activenav\"))\r\n+  editor.setValue(getCodeSnippet(activeNavItem));\r\n+\r\n+  // reset dropdown to index 0\r\n+  let scriptType = document.getElementById(\"dropdown1\");\r\n+  if (scriptType) scriptType.selectedIndex = 0;\r\n+})\r\n+\r\n+const copyBtn = document.getElementById(\"copyBtn\");\r\n+\r\n+copyBtn?.addEventListener(\"click\", function () {\r\n+  if (!editor) return;\r\n+\r\n+  // Get the current editor content\r\n+  const code = editor.getValue();\r\n+\r\n+  // Use navigator clipboard API to copy\r\n+  navigator.clipboard.writeText(code)\r\n+    .then(() => {\r\n+      alert(\"Code copied to clipboard!\");\r\n+    })\r\n+    .catch(err => {\r\n+      console.error(\"Failed to copy: \", err);\r\n+    });\r\n+});\r\n+\r\n+function upsertJson(key, value) {\r\n+  if (!editor) return;\r\n+\r\n+  let code = editor.getValue();\r\n+  let obj;\r\n+\r\n+  try {\r\n+    obj = JSON.parse(code);\r\n+  } catch (e) {\r\n+    console.error(\"Invalid JSON in editor:\", e);\r\n+    return;\r\n+  }\r\n+\r\n+  if (value === \"\" || value == null) {\r\n+    delete obj[key]; // remove key if empty\r\n+  } else {\r\n+    let parsedVal;\r\n+\r\n+    if (value === \"true\") parsedVal = true;\r\n+    else if (value === \"false\") parsedVal = false;\r\n+    else if (value === \"null\") parsedVal = null;\r\n+    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n+    else parsedVal = value; // string\r\n+\r\n+    obj[key] = parsedVal;\r\n+  }\r\n+\r\n+  editor.setValue(JSON.stringify(obj, null, 2));\r\n+}\r\n+\r\n+\r\n+//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n+\r\n+\r\n+// helper function if you need it elsewhere\r\n+//   function getActiveNav() {\r\n+//     return activeNav;\r\n+//   }\r\n+\r\n+//   console.log(getActiveNav())\r\n+\r\n+// dependency mapping\r\n+const dependencies = [\r\n+  \r\n+  {\r\n+    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n+      {container:'#scriptsearchbox' , field:\"#search\"},\r\n+      {container:\"#productType\",field:\"#productDropdown\"}\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#atmdropdown\",\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#premiumbox\",\r\n+    event: \"input\",\r\n+    targets: [\r\n+      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n+\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger:\"productDropdown\",\r\n+    event:\"change\",\r\n+    targets:[\r\n+      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger:\"quantityBox\",\r\n+    event:\"input\",\r\n+    targets:[\r\n+     { container: \"#switchGroup\", field: null }  \r\n+    ]\r\n+  }\r\n+];\r\n+\r\n+function hideAndReset(triggerSelector, eventType = null) {\r\n+  dependencies.forEach(dep => {\r\n+    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+      dep.targets.forEach((t, index) => {\r\n+        const container = document.querySelector(t.container);\r\n+        if (container) {\r\n+          // If it's the *direct child* (first dependent) → only reset value\r\n+          if (index === 0) {\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+              }\r\n+            }\r\n+          } else {\r\n+            // Other deeper dependents → hide + reset\r\n+            container.style.display = \"none\";\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+              }\r\n+            }\r\n+          }\r\n+        }\r\n+      });\r\n+    }\r\n+  });\r\n+}\r\n+\r\n+// function hideAndReset(triggerSelector, eventType = null) {\r\n+//   dependencies.forEach(dep => {\r\n+//     // match trigger, ignore eventType if null\r\n+//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+//       dep.targets.forEach(t => {\r\n+//         const container = document.querySelector(t.container);\r\n+//         if (container) {\r\n+//           // hide the container\r\n+//           container.style.display = \"none\";\r\n+\r\n+//           // reset child field if provided\r\n+//           if (t.field) {\r\n+//             const field = container.querySelector(t.field);\r\n+//             if (field) {\r\n+//               if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+//               else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+//             }\r\n+//           }\r\n+//         }\r\n+//       });\r\n+//     }\r\n+//   });\r\n+// }\r\n+\r\n+\r\n+// document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n+//     hideAndReset(\"#atmdropdown\",change)\r\n+// })\r\n+\r\n+let scriptType = document.getElementById(\"dropdown1\");\r\n+dropdown1.addEventListener(\"change\", function () {\r\n+  upsertJson(\"script_type\",this.value,true);\r\n+  upsertJson(\"is_rollover\",\"true\",false);\r\n+  hideAndReset(\"#dropdown1\",\"change\")\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"CE\" || scriptType.value === \"PE\" ) {\r\n+        document.getElementById(\"optionSelection\").style.display = \"block\";\r\n+        document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n+    }\r\n+    else {\r\n+        document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n+        document.getElementById(\"optionSelection\").style.display = \"none\";\r\n+    }\r\n+})\r\n+\r\n+let searchInput=document.getElementById(\"search\");\r\n+const dropdown = document.getElementById('dropdown');\r\n+let token=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n+document.addEventListener('click', (e) => {\r\n+  // Check if click is outside the input and dropdown\r\n+  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n+    dropdown.style.display = 'none';\r\n+  }\r\n+});\r\n+\r\n+// Simple debounce function\r\n+function debounce(func, delay) {\r\n+  let timer;\r\n+  return function (...args) {\r\n+    clearTimeout(timer);\r\n+    timer = setTimeout(() => func.apply(this, args), delay);\r\n+  };\r\n+}\r\n+\r\n+// Fetch API suggestions\r\n+async function fetchSuggestions(query) {\r\n+  if (!query) {\r\n+    dropdown.style.display = 'none';\r\n+    dropdown.innerHTML = '';\r\n+    return;\r\n+  }\r\n+\r\n+  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n+  try {\r\n+    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n+      method: \"POST\",\r\n+      headers: {\r\n+        \"Content-Type\": \"application/json\",\r\n+        \"Authorization\": token\r\n+      },\r\n+      body: JSON.stringify({\r\n+        script: query,\r\n+        type: scriptType\r\n+      })\r\n+    });\r\n+\r\n+    const data = await res.json();\r\n+    const suggestions = data.data;\r\n+\r\n+\r\n+    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n+    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n+\r\n+  }\r\n+  catch (err) {\r\n+    console.error(err);\r\n+  }\r\n+}\r\n+\r\n+// Add click selection\r\n+dropdown?.addEventListener('click', e => {\r\n+  if (e.target.tagName === 'LI') {\r\n+    let selectedText = e.target.textContent;\r\n+    searchInput.value = selectedText;\r\n+    // remove everything after \"(\"\r\n+    if (selectedText.includes(\"(\")) {\r\n+      selectedText = selectedText.split(\"(\")[0];\r\n+    }\r\n+    dropdown.style.display = 'none';\r\n+    upsertJson(\"script\",selectedText,true);\r\n+    if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n+      document.getElementById(\"productType\").style.display=\"block\";\r\n+    }\r\n+  }\r\n+});\r\n+\r\n+searchInput.addEventListener('input', debounce(e => {\r\n+  fetchSuggestions(e.target.value);\r\n+}, 300));\r\n+\r\n+\r\n+\r\n+  console.log(\"enter\");\r\n+ document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n+  upsertJson(\"product\",this.value,true);\r\n+  hideAndReset(\"#productDropdown\",\"change\");\r\n+  if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n+  document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n+  document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n+    upsertJson(\"quantity\",this.value,false)\r\n+    if(document.getElementById(\"quantityBox\")?.value<=0){\r\n+      document.getElementById(\"qyantityError\").style.display=\"block\";\r\n+    document.getElementById(\"BtnGroup\").style.display=\"none\";\r\n+    document.getElementById(\"toggleSwitchGroup\").style.display=\"none\";\r\n+    }\r\n+    else{\r\n+    document.getElementById(\"qyantityError\").style.display=\"none\";\r\n+    document.getElementById(\"BtnGroup\").style.display=\"block\";\r\n+    document.getElementById(\"toggleSwitchGroup\").style.display=\"block\";\r\n+    }\r\n+  })\r\n+}\r\n+})\r\n"
                },
                {
                    "date": 1756325442822,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -370,401 +370,16 @@\n   document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n   document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n     upsertJson(\"quantity\",this.value,false)\r\n     if(document.getElementById(\"quantityBox\")?.value<=0){\r\n-      document.getElementById(\"qyantityError\").style.display=\"block\";\r\n+      document.getElementById(\"quantityError\").style.display=\"block\";\r\n     document.getElementById(\"BtnGroup\").style.display=\"none\";\r\n     document.getElementById(\"toggleSwitchGroup\").style.display=\"none\";\r\n     }\r\n     else{\r\n-    document.getElementById(\"qyantityError\").style.display=\"none\";\r\n+    document.getElementById(\"quantityError\").style.display=\"none\";\r\n     document.getElementById(\"BtnGroup\").style.display=\"block\";\r\n     document.getElementById(\"toggleSwitchGroup\").style.display=\"block\";\r\n     }\r\n   })\r\n }\r\n })\r\n-var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n-var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n-    return new bootstrap.Tooltip(tooltipTriggerEl)\r\n-\r\n-});\r\n-\r\n-let editor;\r\n-\r\n-require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n-\r\n-require([\"vs/editor/editor.main\"], function () {\r\n-    window.getCodeSnippet = getCodeSnippet;\r\n-\r\n-    const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n-\r\n-    function getCodeSnippet(activeType) {\r\n-if (activeType === \"strategy_order\") {\r\n-    return `{\r\n-    \"type\": \"strategy_order\",\r\n-    \"exit_on_opposite\": false,\r\n-    \"is_tgt\": false,\r\n-    \"is_sl\": false,\r\n-    \"is_trail_set\": false,\r\n-    \"position_size\": \"{{strategy.position_size}}\",\r\n-    \"transaction_type\": \"{{strategy.order.action}}\"\r\n-}`;\r\n-} \r\n-else {\r\n-    return `{\r\n-    \"type\": \"${activeType}\"\r\n-}`;\r\n-}\r\n-    }\r\n-\r\n-    editor = monaco.editor.create(container, {\r\n-        value: getCodeSnippet(\"strategy_order\"),\r\n-        language: \"json\",\r\n-        theme: \"vs-dark\",\r\n-        automaticLayout: true,\r\n-        suggestOnTriggerCharacters: false,\r\n-        quickSuggestions: false,\r\n-        wordBasedSuggestions: false,\r\n-        parameterHints: { enabled: false },\r\n-        inlineSuggest: { enabled: false },\r\n-        fontSize: 18,\r\n-        minimap: { enabled: false },\r\n-        wordWrap: \"on\",\r\n-        scrollbar: {\r\n-            vertical: \"hidden\",\r\n-            horizontal: \"hidden\",\r\n-            handleMouseWheel: false\r\n-        },\r\n-    });\r\n-    \r\n-});\r\n-\r\n-\r\n-\r\n-let activeNav = \"strategy\"; // default active\r\n-\r\n-const navLinks = document.querySelectorAll(\" .nav-link\");\r\n-\r\n-\r\n-navLinks.forEach(link => {\r\n-    link.addEventListener(\"click\", (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        // remove active from all\r\n-        navLinks.forEach(l => l.classList.remove(\"active\"));\r\n-\r\n-        // set active on clicked\r\n-        link.classList.add(\"active\");\r\n-        // update global variable\r\n-        activeNav = link.getAttribute(\"data-type\");\r\n-        localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n-        console.log(\"Active Nav:\", activeNav);\r\n-        editor.setValue(getCodeSnippet(activeNav));\r\n-    });\r\n-});\r\n-\r\n-// let originalcode;\r\n-\r\n-// if(activeNavItem===\"strategy_order\"){\r\n-//     originalcode=`{\r\n-//     \"type\": \"strategy_order\",\r\n-//     \"exit_on_opposite\": false,\r\n-//     \"is_tgt\": false,\r\n-//     \"is_sl\": false,\r\n-//     \"is_trail_set\": false,\r\n-//     \"position_size\": \"{{strategy.position_size}}\",\r\n-//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n-\r\n-// }`\r\n-// }\r\n-// else{\r\n-//     originalcode=`{\r\n-//     \"type\": \"${activeNavItem}\"\r\n-// }`\r\n-// }\r\n-\r\n-document.getElementById(\"deleteBtn\").addEventListener(\"click\",function(){\r\n-  let activeNavItem=JSON.parse(localStorage.getItem(\"activenav\"))\r\n-  editor.setValue(getCodeSnippet(activeNavItem));\r\n-\r\n-  // reset dropdown to index 0\r\n-  let scriptType = document.getElementById(\"dropdown1\");\r\n-  if (scriptType) scriptType.selectedIndex = 0;\r\n-})\r\n-\r\n-const copyBtn = document.getElementById(\"copyBtn\");\r\n-\r\n-copyBtn?.addEventListener(\"click\", function () {\r\n-  if (!editor) return;\r\n-\r\n-  // Get the current editor content\r\n-  const code = editor.getValue();\r\n-\r\n-  // Use navigator clipboard API to copy\r\n-  navigator.clipboard.writeText(code)\r\n-    .then(() => {\r\n-      alert(\"Code copied to clipboard!\");\r\n-    })\r\n-    .catch(err => {\r\n-      console.error(\"Failed to copy: \", err);\r\n-    });\r\n-});\r\n-\r\n-function upsertJson(key, value) {\r\n-  if (!editor) return;\r\n-\r\n-  let code = editor.getValue();\r\n-  let obj;\r\n-\r\n-  try {\r\n-    obj = JSON.parse(code);\r\n-  } catch (e) {\r\n-    console.error(\"Invalid JSON in editor:\", e);\r\n-    return;\r\n-  }\r\n-\r\n-  if (value === \"\" || value == null) {\r\n-    delete obj[key]; // remove key if empty\r\n-  } else {\r\n-    let parsedVal;\r\n-\r\n-    if (value === \"true\") parsedVal = true;\r\n-    else if (value === \"false\") parsedVal = false;\r\n-    else if (value === \"null\") parsedVal = null;\r\n-    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n-    else parsedVal = value; // string\r\n-\r\n-    obj[key] = parsedVal;\r\n-  }\r\n-\r\n-  editor.setValue(JSON.stringify(obj, null, 2));\r\n-}\r\n-\r\n-\r\n-//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n-\r\n-\r\n-// helper function if you need it elsewhere\r\n-//   function getActiveNav() {\r\n-//     return activeNav;\r\n-//   }\r\n-\r\n-//   console.log(getActiveNav())\r\n-\r\n-// dependency mapping\r\n-const dependencies = [\r\n-  \r\n-  {\r\n-    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n-      {container:'#scriptsearchbox' , field:\"#search\"},\r\n-      {container:\"#productType\",field:\"#productDropdown\"}\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#atmdropdown\",\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#premiumbox\",\r\n-    event: \"input\",\r\n-    targets: [\r\n-      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n-\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger:\"productDropdown\",\r\n-    event:\"change\",\r\n-    targets:[\r\n-      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger:\"quantityBox\",\r\n-    event:\"input\",\r\n-    targets:[\r\n-     { container: \"#switchGroup\", field: null }  \r\n-    ]\r\n-  }\r\n-];\r\n-\r\n-function hideAndReset(triggerSelector, eventType = null) {\r\n-  dependencies.forEach(dep => {\r\n-    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-      dep.targets.forEach((t, index) => {\r\n-        const container = document.querySelector(t.container);\r\n-        if (container) {\r\n-          // If it's the *direct child* (first dependent) → only reset value\r\n-          if (index === 0) {\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-              }\r\n-            }\r\n-          } else {\r\n-            // Other deeper dependents → hide + reset\r\n-            container.style.display = \"none\";\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-              }\r\n-            }\r\n-          }\r\n-        }\r\n-      });\r\n-    }\r\n-  });\r\n-}\r\n-\r\n-// function hideAndReset(triggerSelector, eventType = null) {\r\n-//   dependencies.forEach(dep => {\r\n-//     // match trigger, ignore eventType if null\r\n-//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-//       dep.targets.forEach(t => {\r\n-//         const container = document.querySelector(t.container);\r\n-//         if (container) {\r\n-//           // hide the container\r\n-//           container.style.display = \"none\";\r\n-\r\n-//           // reset child field if provided\r\n-//           if (t.field) {\r\n-//             const field = container.querySelector(t.field);\r\n-//             if (field) {\r\n-//               if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-//               else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-//             }\r\n-//           }\r\n-//         }\r\n-//       });\r\n-//     }\r\n-//   });\r\n-// }\r\n-\r\n-\r\n-// document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n-//     hideAndReset(\"#atmdropdown\",change)\r\n-// })\r\n-\r\n-let scriptType = document.getElementById(\"dropdown1\");\r\n-dropdown1.addEventListener(\"change\", function () {\r\n-  upsertJson(\"script_type\",this.value,true);\r\n-  upsertJson(\"is_rollover\",\"true\",false);\r\n-  hideAndReset(\"#dropdown1\",\"change\")\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"CE\" || scriptType.value === \"PE\" ) {\r\n-        document.getElementById(\"optionSelection\").style.display = \"block\";\r\n-        document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n-    }\r\n-    else {\r\n-        document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n-        document.getElementById(\"optionSelection\").style.display = \"none\";\r\n-    }\r\n-})\r\n-\r\n-let searchInput=document.getElementById(\"search\");\r\n-const dropdown = document.getElementById('dropdown');\r\n-let token=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n-document.addEventListener('click', (e) => {\r\n-  // Check if click is outside the input and dropdown\r\n-  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n-    dropdown.style.display = 'none';\r\n-  }\r\n-});\r\n-\r\n-// Simple debounce function\r\n-function debounce(func, delay) {\r\n-  let timer;\r\n-  return function (...args) {\r\n-    clearTimeout(timer);\r\n-    timer = setTimeout(() => func.apply(this, args), delay);\r\n-  };\r\n-}\r\n-\r\n-// Fetch API suggestions\r\n-async function fetchSuggestions(query) {\r\n-  if (!query) {\r\n-    dropdown.style.display = 'none';\r\n-    dropdown.innerHTML = '';\r\n-    return;\r\n-  }\r\n-\r\n-  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n-  try {\r\n-    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n-      method: \"POST\",\r\n-      headers: {\r\n-        \"Content-Type\": \"application/json\",\r\n-        \"Authorization\": token\r\n-      },\r\n-      body: JSON.stringify({\r\n-        script: query,\r\n-        type: scriptType\r\n-      })\r\n-    });\r\n-\r\n-    const data = await res.json();\r\n-    const suggestions = data.data;\r\n-\r\n-\r\n-    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n-    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n-\r\n-  }\r\n-  catch (err) {\r\n-    console.error(err);\r\n-  }\r\n-}\r\n-\r\n-// Add click selection\r\n-dropdown?.addEventListener('click', e => {\r\n-  if (e.target.tagName === 'LI') {\r\n-    let selectedText = e.target.textContent;\r\n-    searchInput.value = selectedText;\r\n-    // remove everything after \"(\"\r\n-    if (selectedText.includes(\"(\")) {\r\n-      selectedText = selectedText.split(\"(\")[0];\r\n-    }\r\n-    dropdown.style.display = 'none';\r\n-    upsertJson(\"script\",selectedText,true);\r\n-    if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n-      document.getElementById(\"productType\").style.display=\"block\";\r\n-    }\r\n-  }\r\n-});\r\n-\r\n-searchInput.addEventListener('input', debounce(e => {\r\n-  fetchSuggestions(e.target.value);\r\n-}, 300));\r\n-\r\n-\r\n-\r\n-  console.log(\"enter\");\r\n- document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n-  upsertJson(\"product\",this.value,true);\r\n-  hideAndReset(\"#productDropdown\",\"change\");\r\n-  if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n-  document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n-  document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n-    upsertJson(\"quantity\",this.value,false)\r\n-    if(document.getElementById(\"quantityBox\")?.value<=0){\r\n-      document.getElementById(\"qyantityError\").style.display=\"block\";\r\n-    document.getElementById(\"BtnGroup\").style.display=\"none\";\r\n-    document.getElementById(\"toggleSwitchGroup\").style.display=\"none\";\r\n-    }\r\n-    else{\r\n-          document.getElementById(\"qyantityError\")?.style.display=\"none\";\r\n-    document.getElementById(\"BtnGroup\").style.display=\"block\";\r\n-    document.getElementById(\"toggleSwitchGroup\").style.display=\"block\";\r\n-    }\r\n-  })\r\n-}\r\n-})\r\n"
                },
                {
                    "date": 1756325517818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -379,7 +379,13 @@\n     document.getElementById(\"quantityError\").style.display=\"none\";\r\n     document.getElementById(\"BtnGroup\").style.display=\"block\";\r\n     document.getElementById(\"toggleSwitchGroup\").style.display=\"block\";\r\n     }\r\n+    let buy=document.getElementsByClassName(\"buyBtn\")[0];\r\n+                          let sell=document.getElementsByClassName(\"sellBtn\")[0];\r\n+                        \r\n+                          buy.addEventListener(\"click\",function(){\r\n+                            buy.style.background=\"green\";\r\n+                            sell.style.background=\"\";\r\n   })\r\n }\r\n })\r\n"
                },
                {
                    "date": 1756325539661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -380,12 +380,13 @@\n     document.getElementById(\"BtnGroup\").style.display=\"block\";\r\n     document.getElementById(\"toggleSwitchGroup\").style.display=\"block\";\r\n     }\r\n     let buy=document.getElementsByClassName(\"buyBtn\")[0];\r\n-                          let sell=document.getElementsByClassName(\"sellBtn\")[0];\r\n-                        \r\n-                          buy.addEventListener(\"click\",function(){\r\n-                            buy.style.background=\"green\";\r\n-                            sell.style.background=\"\";\r\n+      let sell=document.getElementsByClassName(\"sellBtn\")[0];\r\n+    \r\n+      buy.addEventListener(\"click\",function(){\r\n+        buy.style.background=\"green\";\r\n+        sell.style.background=\"\";\r\n+      })\r\n   })\r\n }\r\n })\r\n"
                },
                {
                    "date": 1756325579515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -385,8 +385,9 @@\n     \r\n       buy.addEventListener(\"click\",function(){\r\n         buy.style.background=\"green\";\r\n         sell.style.background=\"\";\r\n+        upsertJson(\"transaction_type\",\"BUY\",true)\r\n       })\r\n   })\r\n }\r\n })\r\n"
                },
                {
                    "date": 1756325614296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -387,7 +387,12 @@\n         buy.style.background=\"green\";\r\n         sell.style.background=\"\";\r\n         upsertJson(\"transaction_type\",\"BUY\",true)\r\n       })\r\n+      buy.addEventListener(\"click\",function(){\r\n+        buy.style.background=\"green\";\r\n+        sell.style.background=\"\";\r\n+        upsertJson(\"transaction_type\",\"BUY\",true)\r\n+      })\r\n   })\r\n }\r\n })\r\n"
                },
                {
                    "date": 1756325624386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -387,12 +387,12 @@\n         buy.style.background=\"green\";\r\n         sell.style.background=\"\";\r\n         upsertJson(\"transaction_type\",\"BUY\",true)\r\n       })\r\n-      buy.addEventListener(\"click\",function(){\r\n-        buy.style.background=\"green\";\r\n+      sell.addEventListener(\"click\",function(){\r\n+        sell.style.background=\"green\";\r\n         sell.style.background=\"\";\r\n-        upsertJson(\"transaction_type\",\"BUY\",true)\r\n+        upsertJson(\"transaction_type\",\"SELL\",true)\r\n       })\r\n   })\r\n }\r\n })\r\n"
                },
                {
                    "date": 1756325648236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -388,9 +388,9 @@\n         sell.style.background=\"\";\r\n         upsertJson(\"transaction_type\",\"BUY\",true)\r\n       })\r\n       sell.addEventListener(\"click\",function(){\r\n-        sell.style.background=\"green\";\r\n+        sell.style.background=\"red\";\r\n         sell.style.background=\"\";\r\n         upsertJson(\"transaction_type\",\"SELL\",true)\r\n       })\r\n   })\r\n"
                },
                {
                    "date": 1756325709141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -380,9 +380,9 @@\n     document.getElementById(\"BtnGroup\").style.display=\"block\";\r\n     document.getElementById(\"toggleSwitchGroup\").style.display=\"block\";\r\n     }\r\n     let buy=document.getElementsByClassName(\"buyBtn\")[0];\r\n-      let sell=document.getElementsByClassName(\"sellBtn\")[0];\r\n+    let sell=document.getElementsByClassName(\"sellBtn\")[0];\r\n     \r\n       buy.addEventListener(\"click\",function(){\r\n         buy.style.background=\"green\";\r\n         sell.style.background=\"\";\r\n"
                },
                {
                    "date": 1756325741962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -389,9 +389,9 @@\n         upsertJson(\"transaction_type\",\"BUY\",true)\r\n       })\r\n       sell.addEventListener(\"click\",function(){\r\n         sell.style.background=\"red\";\r\n-        sell.style.background=\"\";\r\n+        buy.style.background=\"\";\r\n         upsertJson(\"transaction_type\",\"SELL\",true)\r\n       })\r\n   })\r\n }\r\n"
                },
                {
                    "date": 1756325909919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,9 +174,12 @@\n     event: \"change\",\r\n     targets: [\r\n       { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n       {container:'#scriptsearchbox' , field:\"#search\"},\r\n-      {container:\"#productType\",field:\"#productDropdown\"}\r\n+      {container:\"#productType\",field:\"#productDropdown\"},\r\n+      {container:\"#quantityBlock\",field:\"#quantitybox\"},\r\n+       { container: \"#switchGroup\", field: null } \r\n+\r\n     ]\r\n   },\r\n   {\r\n     trigger: \"#atmdropdown\",\r\n@@ -392,7 +395,8 @@\n         sell.style.background=\"red\";\r\n         buy.style.background=\"\";\r\n         upsertJson(\"transaction_type\",\"SELL\",true)\r\n       })\r\n+\r\n   })\r\n }\r\n })\r\n"
                },
                {
                    "date": 1756325930104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,9 +176,10 @@\n       { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n       {container:'#scriptsearchbox' , field:\"#search\"},\r\n       {container:\"#productType\",field:\"#productDropdown\"},\r\n       {container:\"#quantityBlock\",field:\"#quantitybox\"},\r\n-       { container: \"#switchGroup\", field: null } \r\n+       { container: \"#switchGroup\", field: null } ,\r\n+        { container: \"#btnGroup\", field: null } \r\n \r\n     ]\r\n   },\r\n   {\r\n"
                },
                {
                    "date": 1756325939858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,9 +177,9 @@\n       {container:'#scriptsearchbox' , field:\"#search\"},\r\n       {container:\"#productType\",field:\"#productDropdown\"},\r\n       {container:\"#quantityBlock\",field:\"#quantitybox\"},\r\n        { container: \"#switchGroup\", field: null } ,\r\n-        { container: \"#btnGroup\", field: null } \r\n+        { container: \"#BtnGroup\", field: null } \r\n \r\n     ]\r\n   },\r\n   {\r\n"
                },
                {
                    "date": 1756325974576,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,9 +176,9 @@\n       { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n       {container:'#scriptsearchbox' , field:\"#search\"},\r\n       {container:\"#productType\",field:\"#productDropdown\"},\r\n       {container:\"#quantityBlock\",field:\"#quantitybox\"},\r\n-       { container: \"#switchGroup\", field: null } ,\r\n+       { container: \"#toggleSwitchGroup\", field: null } ,\r\n         { container: \"#BtnGroup\", field: null } \r\n \r\n     ]\r\n   },\r\n"
                },
                {
                    "date": 1756325981028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,9 +207,9 @@\n   {\r\n     trigger:\"quantityBox\",\r\n     event:\"input\",\r\n     targets:[\r\n-     { container: \"#switchGroup\", field: null }  \r\n+     { container: \"#toggleSwitchGroup\", field: null }  \r\n     ]\r\n   }\r\n ];\r\n \r\n"
                },
                {
                    "date": 1756326031836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,9 +175,9 @@\n     targets: [\r\n       { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n       {container:'#scriptsearchbox' , field:\"#search\"},\r\n       {container:\"#productType\",field:\"#productDropdown\"},\r\n-      {container:\"#quantityBlock\",field:\"#quantitybox\"},\r\n+      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n        { container: \"#toggleSwitchGroup\", field: null } ,\r\n         { container: \"#BtnGroup\", field: null } \r\n \r\n     ]\r\n"
                },
                {
                    "date": 1756326141494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,10 +176,10 @@\n       { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n       {container:'#scriptsearchbox' , field:\"#search\"},\r\n       {container:\"#productType\",field:\"#productDropdown\"},\r\n       {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n-       { container: \"#toggleSwitchGroup\", field: null } ,\r\n-        { container: \"#BtnGroup\", field: null } \r\n+      { container: \"#toggleSwitchGroup\", field: null } ,\r\n+      { container: \"#BtnGroup\", field: null } \r\n \r\n     ]\r\n   },\r\n   {\r\n@@ -235,8 +235,11 @@\n               const field = container.querySelector(t.field);\r\n               if (field) {\r\n                 if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n                 else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+                else if (field.tagName === \"BUTTON\") {\r\n+    field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n+  }\r\n               }\r\n             }\r\n           }\r\n         }\r\n"
                },
                {
                    "date": 1756326164240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -236,10 +236,10 @@\n               if (field) {\r\n                 if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n                 else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n                 else if (field.tagName === \"BUTTON\") {\r\n-    field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n-  }\r\n+                 field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n+                }\r\n               }\r\n             }\r\n           }\r\n         }\r\n"
                },
                {
                    "date": 1756326268431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -234,9 +234,14 @@\n             if (t.field) {\r\n               const field = container.querySelector(t.field);\r\n               if (field) {\r\n                 if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+                 else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n+                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n+                    field.checked = false;   // ✅ uncheck toggle\r\n+                  } else {\r\n+                    field.value = \"\";\r\n+                  }\r\n                 else if (field.tagName === \"BUTTON\") {\r\n                  field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n                 }\r\n               }\r\n"
                },
                {
                    "date": 1756326275640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -240,8 +240,9 @@\n                     field.checked = false;   // ✅ uncheck toggle\r\n                   } else {\r\n                     field.value = \"\";\r\n                   }\r\n+                }\r\n                 else if (field.tagName === \"BUTTON\") {\r\n                  field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n                 }\r\n               }\r\n"
                },
                {
                    "date": 1756326335872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -236,9 +236,9 @@\n               if (field) {\r\n                 if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n                  else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n                   if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-                    field.checked = false;   // ✅ uncheck toggle\r\n+                    field.checked = false;   \r\n                   } else {\r\n                     field.value = \"\";\r\n                   }\r\n                 }\r\n"
                },
                {
                    "date": 1756326456838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,9 +176,9 @@\n       { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n       {container:'#scriptsearchbox' , field:\"#search\"},\r\n       {container:\"#productType\",field:\"#productDropdown\"},\r\n       {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n-      { container: \"#toggleSwitchGroup\", field: null } ,\r\n+      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" } ,\r\n       { container: \"#BtnGroup\", field: null } \r\n \r\n     ]\r\n   },\r\n@@ -207,9 +207,9 @@\n   {\r\n     trigger:\"quantityBox\",\r\n     event:\"input\",\r\n     targets:[\r\n-     { container: \"#toggleSwitchGroup\", field: null }  \r\n+     { container: \"#toggleSwitchGroup\", field: \".form-check-input\" }  \r\n     ]\r\n   }\r\n ];\r\n \r\n"
                },
                {
                    "date": 1756327243486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -253,8 +253,23 @@\n     }\r\n   });\r\n }\r\n \r\n+function resetField(field, keepVisible) {\r\n+  if (field.tagName === \"SELECT\") {\r\n+    field.selectedIndex = 0;\r\n+    upsertJson(field.id, \"\"); // dropdown → disappear\r\n+  } else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n+    if (field.type === \"checkbox\") {\r\n+      field.checked = false;\r\n+      upsertJson(field.id, false); // toggle → always false (even when hidden)\r\n+    } else {\r\n+      field.value = \"\";\r\n+      upsertJson(field.id, \"\"); // text/number → disappear\r\n+    }\r\n+  }\r\n+}\r\n+\r\n // function hideAndReset(triggerSelector, eventType = null) {\r\n //   dependencies.forEach(dep => {\r\n //     // match trigger, ignore eventType if null\r\n //     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n"
                },
                {
                    "date": 1756327472248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -225,8 +225,9 @@\n               const field = container.querySelector(t.field);\r\n               if (field) {\r\n                 if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n                 else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+                 resetField(field, true);\r\n               }\r\n             }\r\n           } else {\r\n             // Other deeper dependents → hide + reset\r\n@@ -246,8 +247,9 @@\n                  field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n                 }\r\n               }\r\n             }\r\n+\r\n           }\r\n         }\r\n       });\r\n     }\r\n"
                },
                {
                    "date": 1756327546053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -231,11 +231,13 @@\n             }\r\n           } else {\r\n             // Other deeper dependents → hide + reset\r\n             container.style.display = \"none\";\r\n+            \r\n             if (t.field) {\r\n               const field = container.querySelector(t.field);\r\n               if (field) {\r\n+                resetField(field, true);\r\n                 if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n                  else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n                   if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n                     field.checked = false;   \r\n"
                },
                {
                    "date": 1756327595943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,9 +228,10 @@\n                 else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n                  resetField(field, true);\r\n               }\r\n             }\r\n-          } else {\r\n+          } \r\n+          else {\r\n             // Other deeper dependents → hide + reset\r\n             container.style.display = \"none\";\r\n             \r\n             if (t.field) {\r\n@@ -249,8 +250,11 @@\n                  field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n                 }\r\n               }\r\n             }\r\n+            container.querySelectorAll(\"input, select, textarea\").forEach(inp => {\r\n+              resetField(inp, false);\r\n+            });\r\n \r\n           }\r\n         }\r\n       });\r\n"
                },
                {
                    "date": 1756327675174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -308,9 +308,9 @@\n \r\n let scriptType = document.getElementById(\"dropdown1\");\r\n dropdown1.addEventListener(\"change\", function () {\r\n   upsertJson(\"script_type\",this.value,true);\r\n-  upsertJson(\"is_rollover\",\"true\",false);\r\n+  upsertJson(\"is_rollover\",\"false\",false);\r\n   hideAndReset(\"#dropdown1\",\"change\")\r\n     if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"CE\" || scriptType.value === \"PE\" ) {\r\n         document.getElementById(\"optionSelection\").style.display = \"block\";\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n"
                },
                {
                    "date": 1756327876055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -245,39 +245,40 @@\n                   } else {\r\n                     field.value = \"\";\r\n                   }\r\n                 }\r\n+                \r\n                 else if (field.tagName === \"BUTTON\") {\r\n                  field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n                 }\r\n               }\r\n             }\r\n-            container.querySelectorAll(\"input, select, textarea\").forEach(inp => {\r\n-              resetField(inp, false);\r\n-            });\r\n+            \r\n \r\n           }\r\n         }\r\n       });\r\n     }\r\n   });\r\n }\r\n \r\n-function resetField(field, keepVisible) {\r\n-  if (field.tagName === \"SELECT\") {\r\n+function resetField(field) {\r\n+  if (!field) return;\r\n+\r\n+  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n+    // uncheck but DO NOT force false into JSON\r\n+    field.checked = false;\r\n+    upsertJson(field.id, undefined); // remove key if present\r\n+  } else if (field.tagName === \"SELECT\") {\r\n     field.selectedIndex = 0;\r\n-    upsertJson(field.id, \"\"); // dropdown → disappear\r\n+    upsertJson(field.id, undefined);\r\n   } else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n-    if (field.type === \"checkbox\") {\r\n-      field.checked = false;\r\n-      upsertJson(field.id, false); // toggle → always false (even when hidden)\r\n-    } else {\r\n-      field.value = \"\";\r\n-      upsertJson(field.id, \"\"); // text/number → disappear\r\n-    }\r\n+    field.value = \"\";\r\n+    upsertJson(field.id, undefined);\r\n   }\r\n }\r\n \r\n+\r\n // function hideAndReset(triggerSelector, eventType = null) {\r\n //   dependencies.forEach(dep => {\r\n //     // match trigger, ignore eventType if null\r\n //     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n"
                },
                {
                    "date": 1756327901537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -212,8 +212,24 @@\n     ]\r\n   }\r\n ];\r\n \r\n+function resetField(field) {\r\n+  if (!field) return;\r\n+\r\n+  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n+    // uncheck but DO NOT force false into JSON\r\n+    field.checked = false;\r\n+    upsertJson(field.id, undefined); // remove key if present\r\n+  } else if (field.tagName === \"SELECT\") {\r\n+    field.selectedIndex = 0;\r\n+    upsertJson(field.id, undefined);\r\n+  } else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n+    field.value = \"\";\r\n+    upsertJson(field.id, undefined);\r\n+  }\r\n+}\r\n+\r\n function hideAndReset(triggerSelector, eventType = null) {\r\n   dependencies.forEach(dep => {\r\n     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n       dep.targets.forEach((t, index) => {\r\n@@ -260,25 +276,10 @@\n     }\r\n   });\r\n }\r\n \r\n-function resetField(field) {\r\n-  if (!field) return;\r\n \r\n-  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-    // uncheck but DO NOT force false into JSON\r\n-    field.checked = false;\r\n-    upsertJson(field.id, undefined); // remove key if present\r\n-  } else if (field.tagName === \"SELECT\") {\r\n-    field.selectedIndex = 0;\r\n-    upsertJson(field.id, undefined);\r\n-  } else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n-    field.value = \"\";\r\n-    upsertJson(field.id, undefined);\r\n-  }\r\n-}\r\n \r\n-\r\n // function hideAndReset(triggerSelector, eventType = null) {\r\n //   dependencies.forEach(dep => {\r\n //     // match trigger, ignore eventType if null\r\n //     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n"
                },
                {
                    "date": 1756328129797,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,50 +228,72 @@\n     upsertJson(field.id, undefined);\r\n   }\r\n }\r\n \r\n+// function hideAndReset(triggerSelector, eventType = null) {\r\n+//   dependencies.forEach(dep => {\r\n+//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+//       dep.targets.forEach((t, index) => {\r\n+//         const container = document.querySelector(t.container);\r\n+//         if (container) {\r\n+//           // If it's the *direct child* (first dependent) → only reset value\r\n+//           if (index === 0) {\r\n+//             if (t.field) {\r\n+//               const field = container.querySelector(t.field);\r\n+//               if (field) {\r\n+//                 if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+//                 else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+//                  resetField(field, true);\r\n+//               }\r\n+//             }\r\n+//           } \r\n+//           else {\r\n+//             // Other deeper dependents → hide + reset\r\n+//             container.style.display = \"none\";\r\n+            \r\n+//             if (t.field) {\r\n+//               const field = container.querySelector(t.field);\r\n+//               if (field) {\r\n+//                 resetField(field, true);\r\n+//                 if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+//                  else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n+//                   if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n+//                     field.checked = false;   \r\n+//                   } else {\r\n+//                     field.value = \"\";\r\n+//                   }\r\n+//                 }\r\n+                \r\n+//                 else if (field.tagName === \"BUTTON\") {\r\n+//                  field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n+//                 }\r\n+//               }\r\n+//             }\r\n+            \r\n+\r\n+//           }\r\n+//         }\r\n+//       });\r\n+//     }\r\n+//   });\r\n+// }\r\n+\r\n function hideAndReset(triggerSelector, eventType = null) {\r\n   dependencies.forEach(dep => {\r\n     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n       dep.targets.forEach((t, index) => {\r\n         const container = document.querySelector(t.container);\r\n-        if (container) {\r\n-          // If it's the *direct child* (first dependent) → only reset value\r\n-          if (index === 0) {\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-                 resetField(field, true);\r\n-              }\r\n-            }\r\n-          } \r\n-          else {\r\n-            // Other deeper dependents → hide + reset\r\n-            container.style.display = \"none\";\r\n-            \r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                resetField(field, true);\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                 else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n-                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-                    field.checked = false;   \r\n-                  } else {\r\n-                    field.value = \"\";\r\n-                  }\r\n-                }\r\n-                \r\n-                else if (field.tagName === \"BUTTON\") {\r\n-                 field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n-                }\r\n-              }\r\n-            }\r\n-            \r\n+        if (!container) return;\r\n \r\n-          }\r\n+        const field = t.field ? container.querySelector(t.field) : null;\r\n+\r\n+        if (index === 0) {\r\n+          // First dependent → only reset value\r\n+          if (field) resetField(field, true);\r\n+        } else {\r\n+          // Other dependents → hide + reset\r\n+          container.style.display = \"none\";\r\n+          if (field) resetField(field, true);\r\n         }\r\n       });\r\n     }\r\n   });\r\n"
                },
                {
                    "date": 1756328468449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -212,21 +212,35 @@\n     ]\r\n   }\r\n ];\r\n \r\n-function resetField(field) {\r\n+function resetField(field, isHide = false) {\r\n   if (!field) return;\r\n \r\n+  let key = field.getAttribute(\"data-snippet-key\"); \r\n+  if (!key) return;\r\n+\r\n   if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-    // uncheck but DO NOT force false into JSON\r\n     field.checked = false;\r\n-    upsertJson(field.id, undefined); // remove key if present\r\n-  } else if (field.tagName === \"SELECT\") {\r\n+    if (isHide) snippetData[key] = false; // booleans → force false\r\n+  } \r\n+  else if (field.tagName === \"SELECT\") {\r\n     field.selectedIndex = 0;\r\n-    upsertJson(field.id, undefined);\r\n-  } else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n+    if (isHide) delete snippetData[key]; // remove dropdown from snippet\r\n+  } \r\n+  else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n     field.value = \"\";\r\n-    upsertJson(field.id, undefined);\r\n+    if (isHide) {\r\n+      if (field.type === \"number\" || field.type === \"text\") {\r\n+        delete snippetData[key]; // remove normal fields\r\n+      } else {\r\n+        snippetData[key] = \"\";\r\n+      }\r\n+    }\r\n+  } \r\n+  else if (field.tagName === \"BUTTON\") {\r\n+    field.classList.remove(\"active\");\r\n+    if (isHide) delete snippetData[key];\r\n   }\r\n }\r\n \r\n // function hideAndReset(triggerSelector, eventType = null) {\r\n"
                },
                {
                    "date": 1756328537384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -212,110 +212,49 @@\n     ]\r\n   }\r\n ];\r\n \r\n-function resetField(field, isHide = false) {\r\n-  if (!field) return;\r\n-\r\n-  let key = field.getAttribute(\"data-snippet-key\"); \r\n-  if (!key) return;\r\n-\r\n-  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-    field.checked = false;\r\n-    if (isHide) snippetData[key] = false; // booleans → force false\r\n-  } \r\n-  else if (field.tagName === \"SELECT\") {\r\n-    field.selectedIndex = 0;\r\n-    if (isHide) delete snippetData[key]; // remove dropdown from snippet\r\n-  } \r\n-  else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n-    field.value = \"\";\r\n-    if (isHide) {\r\n-      if (field.type === \"number\" || field.type === \"text\") {\r\n-        delete snippetData[key]; // remove normal fields\r\n-      } else {\r\n-        snippetData[key] = \"\";\r\n-      }\r\n-    }\r\n-  } \r\n-  else if (field.tagName === \"BUTTON\") {\r\n-    field.classList.remove(\"active\");\r\n-    if (isHide) delete snippetData[key];\r\n-  }\r\n-}\r\n-\r\n-// function hideAndReset(triggerSelector, eventType = null) {\r\n-//   dependencies.forEach(dep => {\r\n-//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-//       dep.targets.forEach((t, index) => {\r\n-//         const container = document.querySelector(t.container);\r\n-//         if (container) {\r\n-//           // If it's the *direct child* (first dependent) → only reset value\r\n-//           if (index === 0) {\r\n-//             if (t.field) {\r\n-//               const field = container.querySelector(t.field);\r\n-//               if (field) {\r\n-//                 if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-//                 else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-//                  resetField(field, true);\r\n-//               }\r\n-//             }\r\n-//           } \r\n-//           else {\r\n-//             // Other deeper dependents → hide + reset\r\n-//             container.style.display = \"none\";\r\n-            \r\n-//             if (t.field) {\r\n-//               const field = container.querySelector(t.field);\r\n-//               if (field) {\r\n-//                 resetField(field, true);\r\n-//                 if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-//                  else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n-//                   if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-//                     field.checked = false;   \r\n-//                   } else {\r\n-//                     field.value = \"\";\r\n-//                   }\r\n-//                 }\r\n-                \r\n-//                 else if (field.tagName === \"BUTTON\") {\r\n-//                  field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n-//                 }\r\n-//               }\r\n-//             }\r\n-            \r\n-\r\n-//           }\r\n-//         }\r\n-//       });\r\n-//     }\r\n-//   });\r\n-// }\r\n-\r\n function hideAndReset(triggerSelector, eventType = null) {\r\n   dependencies.forEach(dep => {\r\n     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n       dep.targets.forEach((t, index) => {\r\n         const container = document.querySelector(t.container);\r\n-        if (!container) return;\r\n-\r\n-        const field = t.field ? container.querySelector(t.field) : null;\r\n-\r\n-        if (index === 0) {\r\n-          // First dependent → only reset value\r\n-          if (field) resetField(field, true);\r\n-        } else {\r\n-          // Other dependents → hide + reset\r\n-          container.style.display = \"none\";\r\n-          if (field) resetField(field, true);\r\n+        if (container) {\r\n+          // If it's the *direct child* (first dependent) → only reset value\r\n+          if (index === 0) {\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+              }\r\n+            }\r\n+          } else {\r\n+            // Other deeper dependents → hide + reset\r\n+            container.style.display = \"none\";\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                 else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n+                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n+                    field.checked = false;   \r\n+                  } else {\r\n+                    field.value = \"\";\r\n+                  }\r\n+                }\r\n+                else if (field.tagName === \"BUTTON\") {\r\n+                 field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n+                }\r\n+              }\r\n+            }\r\n+          }\r\n         }\r\n       });\r\n     }\r\n   });\r\n }\r\n \r\n-\r\n-\r\n // function hideAndReset(triggerSelector, eventType = null) {\r\n //   dependencies.forEach(dep => {\r\n //     // match trigger, ignore eventType if null\r\n //     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n@@ -346,9 +285,9 @@\n \r\n let scriptType = document.getElementById(\"dropdown1\");\r\n dropdown1.addEventListener(\"change\", function () {\r\n   upsertJson(\"script_type\",this.value,true);\r\n-  upsertJson(\"is_rollover\",\"false\",false);\r\n+  upsertJson(\"is_rollover\",\"true\",false);\r\n   hideAndReset(\"#dropdown1\",\"change\")\r\n     if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"CE\" || scriptType.value === \"PE\" ) {\r\n         document.getElementById(\"optionSelection\").style.display = \"block\";\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n"
                },
                {
                    "date": 1756328558290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -285,9 +285,9 @@\n \r\n let scriptType = document.getElementById(\"dropdown1\");\r\n dropdown1.addEventListener(\"change\", function () {\r\n   upsertJson(\"script_type\",this.value,true);\r\n-  upsertJson(\"is_rollover\",\"true\",false);\r\n+  upsertJson(\"is_rollover\",\"false\",false);\r\n   hideAndReset(\"#dropdown1\",\"change\")\r\n     if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"CE\" || scriptType.value === \"PE\" ) {\r\n         document.getElementById(\"optionSelection\").style.display = \"block\";\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n"
                },
                {
                    "date": 1756328798262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -212,47 +212,77 @@\n     ]\r\n   }\r\n ];\r\n \r\n-function hideAndReset(triggerSelector, eventType = null) {\r\n-  dependencies.forEach(dep => {\r\n-    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-      dep.targets.forEach((t, index) => {\r\n-        const container = document.querySelector(t.container);\r\n-        if (container) {\r\n-          // If it's the *direct child* (first dependent) → only reset value\r\n-          if (index === 0) {\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-              }\r\n-            }\r\n-          } else {\r\n-            // Other deeper dependents → hide + reset\r\n-            container.style.display = \"none\";\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                 else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n-                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-                    field.checked = false;   \r\n-                  } else {\r\n-                    field.value = \"\";\r\n-                  }\r\n-                }\r\n-                else if (field.tagName === \"BUTTON\") {\r\n-                 field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n-                }\r\n-              }\r\n-            }\r\n-          }\r\n-        }\r\n-      });\r\n+// function hideAndReset(triggerSelector, eventType = null) {\r\n+//   dependencies.forEach(dep => {\r\n+//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+//       dep.targets.forEach((t, index) => {\r\n+//         const container = document.querySelector(t.container);\r\n+//         if (container) {\r\n+//           // If it's the *direct child* (first dependent) → only reset value\r\n+//           if (index === 0) {\r\n+//             if (t.field) {\r\n+//               const field = container.querySelector(t.field);\r\n+//               if (field) {\r\n+//                 if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+//                 else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+//               }\r\n+//             }\r\n+//           } else {\r\n+//             // Other deeper dependents → hide + reset\r\n+//             container.style.display = \"none\";\r\n+//             if (t.field) {\r\n+//               const field = container.querySelector(t.field);\r\n+//               if (field) {\r\n+//                 if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+//                  else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n+//                   if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n+//                     field.checked = false;   \r\n+//                   } else {\r\n+//                     field.value = \"\";\r\n+//                   }\r\n+//                 }\r\n+//                 else if (field.tagName === \"BUTTON\") {\r\n+//                  field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n+//                 }\r\n+//               }\r\n+//             }\r\n+//           }\r\n+//         }\r\n+//       });\r\n+//     }\r\n+//   });\r\n+// }\r\n+\r\n+function resetField(field, isHide = false) {\r\n+  if (!field) return;\r\n+\r\n+  let key = field.getAttribute(\"data-snippet-key\"); \r\n+  if (!key) return;\r\n+\r\n+  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n+    field.checked = false;\r\n+    if (isHide) snippetData[key] = false; // booleans → force false\r\n+  } \r\n+  else if (field.tagName === \"SELECT\") {\r\n+    field.selectedIndex = 0;\r\n+    if (isHide) delete snippetData[key]; // remove dropdown from snippet\r\n+  } \r\n+  else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n+    field.value = \"\";\r\n+    if (isHide) {\r\n+      if (field.type === \"number\" || field.type === \"text\") {\r\n+        delete snippetData[key]; // remove normal fields\r\n+      } else {\r\n+        snippetData[key] = \"\";\r\n+      }\r\n     }\r\n-  });\r\n+  } \r\n+  else if (field.tagName === \"BUTTON\") {\r\n+    field.classList.remove(\"active\");\r\n+    if (isHide) delete snippetData[key];\r\n+  }\r\n }\r\n \r\n // function hideAndReset(triggerSelector, eventType = null) {\r\n //   dependencies.forEach(dep => {\r\n"
                },
                {
                    "date": 1756328822932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -283,8 +283,30 @@\n     if (isHide) delete snippetData[key];\r\n   }\r\n }\r\n \r\n+function hideAndReset(triggerSelector, eventType = null) {\r\n+  dependencies.forEach(dep => {\r\n+    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+      dep.targets.forEach((t, index) => {\r\n+        const container = document.querySelector(t.container);\r\n+        if (!container) return;\r\n+\r\n+        const field = t.field ? container.querySelector(t.field) : null;\r\n+\r\n+        if (index === 0) {\r\n+          // First dependent → only reset value\r\n+          if (field) resetField(field, true);\r\n+        } else {\r\n+          // Other dependents → hide + reset\r\n+          container.style.display = \"none\";\r\n+          if (field) resetField(field, true);\r\n+        }\r\n+      });\r\n+    }\r\n+  });\r\n+}\r\n+\r\n // function hideAndReset(triggerSelector, eventType = null) {\r\n //   dependencies.forEach(dep => {\r\n //     // match trigger, ignore eventType if null\r\n //     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n"
                },
                {
                    "date": 1756328924357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -254,35 +254,25 @@\n //   });\r\n // }\r\n \r\n function resetField(field, isHide = false) {\r\n-  if (!field) return;\r\n+    if (!field) return;\r\n \r\n-  let key = field.getAttribute(\"data-snippet-key\"); \r\n-  if (!key) return;\r\n+    let key = field.getAttribute(\"data-snippet-key\");\r\n+    if (!key) return;\r\n \r\n-  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-    field.checked = false;\r\n-    if (isHide) snippetData[key] = false; // booleans → force false\r\n-  } \r\n-  else if (field.tagName === \"SELECT\") {\r\n-    field.selectedIndex = 0;\r\n-    if (isHide) delete snippetData[key]; // remove dropdown from snippet\r\n-  } \r\n-  else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n-    field.value = \"\";\r\n-    if (isHide) {\r\n-      if (field.type === \"number\" || field.type === \"text\") {\r\n-        delete snippetData[key]; // remove normal fields\r\n-      } else {\r\n-        snippetData[key] = \"\";\r\n-      }\r\n+    if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n+        field.checked = false;\r\n+        if (isHide) snippetData[key] = false; // booleans always false\r\n+    } else if (field.tagName === \"SELECT\" || field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n+        field.value = \"\";\r\n+        if (isHide) delete snippetData[key]; // normal fields removed\r\n+    } else if (field.tagName === \"BUTTON\") {\r\n+        field.classList.remove(\"active\");\r\n+        if (isHide) delete snippetData[key];\r\n     }\r\n-  } \r\n-  else if (field.tagName === \"BUTTON\") {\r\n-    field.classList.remove(\"active\");\r\n-    if (isHide) delete snippetData[key];\r\n-  }\r\n+\r\n+    updateEditor();\r\n }\r\n \r\n function hideAndReset(triggerSelector, eventType = null) {\r\n   dependencies.forEach(dep => {\r\n"
                },
                {
                    "date": 1756329020483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -254,25 +254,22 @@\n //   });\r\n // }\r\n \r\n function resetField(field, isHide = false) {\r\n-    if (!field) return;\r\n+    if (!field || !field.id) return;\r\n \r\n-    let key = field.getAttribute(\"data-snippet-key\");\r\n-    if (!key) return;\r\n-\r\n     if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n         field.checked = false;\r\n-        if (isHide) snippetData[key] = false; // booleans always false\r\n+        if (isHide) snippetData[field.id] = false; // boolean false\r\n     } else if (field.tagName === \"SELECT\" || field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n         field.value = \"\";\r\n-        if (isHide) delete snippetData[key]; // normal fields removed\r\n+        if (isHide) delete snippetData[field.id]; // remove normal fields\r\n     } else if (field.tagName === \"BUTTON\") {\r\n         field.classList.remove(\"active\");\r\n-        if (isHide) delete snippetData[key];\r\n+        if (isHide) delete snippetData[field.id];\r\n     }\r\n \r\n-    updateEditor();\r\n+    updateEditor(); // refresh Monaco\r\n }\r\n \r\n function hideAndReset(triggerSelector, eventType = null) {\r\n   dependencies.forEach(dep => {\r\n"
                },
                {
                    "date": 1756329047731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -269,9 +269,13 @@\n     }\r\n \r\n     updateEditor(); // refresh Monaco\r\n }\r\n-\r\n+function updateEditor() {\r\n+    if (editor) {\r\n+        editor.setValue(JSON.stringify(snippetData, null, 2)); // pretty-print JSON\r\n+    }\r\n+}\r\n function hideAndReset(triggerSelector, eventType = null) {\r\n   dependencies.forEach(dep => {\r\n     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n       dep.targets.forEach((t, index) => {\r\n"
                },
                {
                    "date": 1756329144907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -254,8 +254,11 @@\n //   });\r\n // }\r\n \r\n function resetField(field, isHide = false) {\r\n+  // Initialize snippetData from the default snippet\r\n+let snippetData = JSON.parse(getCodeSnippet(\"strategy_order\"));\r\n+\r\n     if (!field || !field.id) return;\r\n \r\n     if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n         field.checked = false;\r\n"
                },
                {
                    "date": 1756329292037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -212,89 +212,43 @@\n     ]\r\n   }\r\n ];\r\n \r\n-// function hideAndReset(triggerSelector, eventType = null) {\r\n-//   dependencies.forEach(dep => {\r\n-//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-//       dep.targets.forEach((t, index) => {\r\n-//         const container = document.querySelector(t.container);\r\n-//         if (container) {\r\n-//           // If it's the *direct child* (first dependent) → only reset value\r\n-//           if (index === 0) {\r\n-//             if (t.field) {\r\n-//               const field = container.querySelector(t.field);\r\n-//               if (field) {\r\n-//                 if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-//                 else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-//               }\r\n-//             }\r\n-//           } else {\r\n-//             // Other deeper dependents → hide + reset\r\n-//             container.style.display = \"none\";\r\n-//             if (t.field) {\r\n-//               const field = container.querySelector(t.field);\r\n-//               if (field) {\r\n-//                 if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-//                  else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n-//                   if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-//                     field.checked = false;   \r\n-//                   } else {\r\n-//                     field.value = \"\";\r\n-//                   }\r\n-//                 }\r\n-//                 else if (field.tagName === \"BUTTON\") {\r\n-//                  field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n-//                 }\r\n-//               }\r\n-//             }\r\n-//           }\r\n-//         }\r\n-//       });\r\n-//     }\r\n-//   });\r\n-// }\r\n-\r\n-function resetField(field, isHide = false) {\r\n-  // Initialize snippetData from the default snippet\r\n-let snippetData = JSON.parse(getCodeSnippet(\"strategy_order\"));\r\n-\r\n-    if (!field || !field.id) return;\r\n-\r\n-    if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-        field.checked = false;\r\n-        if (isHide) snippetData[field.id] = false; // boolean false\r\n-    } else if (field.tagName === \"SELECT\" || field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n-        field.value = \"\";\r\n-        if (isHide) delete snippetData[field.id]; // remove normal fields\r\n-    } else if (field.tagName === \"BUTTON\") {\r\n-        field.classList.remove(\"active\");\r\n-        if (isHide) delete snippetData[field.id];\r\n-    }\r\n-\r\n-    updateEditor(); // refresh Monaco\r\n-}\r\n-function updateEditor() {\r\n-    if (editor) {\r\n-        editor.setValue(JSON.stringify(snippetData, null, 2)); // pretty-print JSON\r\n-    }\r\n-}\r\n function hideAndReset(triggerSelector, eventType = null) {\r\n   dependencies.forEach(dep => {\r\n     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n       dep.targets.forEach((t, index) => {\r\n         const container = document.querySelector(t.container);\r\n-        if (!container) return;\r\n-\r\n-        const field = t.field ? container.querySelector(t.field) : null;\r\n-\r\n-        if (index === 0) {\r\n-          // First dependent → only reset value\r\n-          if (field) resetField(field, true);\r\n-        } else {\r\n-          // Other dependents → hide + reset\r\n-          container.style.display = \"none\";\r\n-          if (field) resetField(field, true);\r\n+        if (container) {\r\n+          // If it's the *direct child* (first dependent) → only reset value\r\n+          if (index === 0) {\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+              }\r\n+            }\r\n+          } else {\r\n+            // Other deeper dependents → hide + reset\r\n+            container.style.display = \"none\";\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                 else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n+                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n+                    field.checked = false;   \r\n+                  } else {\r\n+                    field.value = \"\";\r\n+                  }\r\n+                }\r\n+                else if (field.tagName === \"BUTTON\") {\r\n+                 field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n+                }\r\n+              }\r\n+            }\r\n+          }\r\n         }\r\n       });\r\n     }\r\n   });\r\n"
                },
                {
                    "date": 1756329621299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,8 +55,9 @@\n });\r\n \r\n \r\n \r\n+\r\n let activeNav = \"strategy\"; // default active\r\n \r\n const navLinks = document.querySelectorAll(\" .nav-link\");\r\n \r\n@@ -253,8 +254,34 @@\n     }\r\n   });\r\n }\r\n \r\n+function syncEditorWithUI() {\r\n+    if (!editor) return;\r\n+\r\n+    let currentJSON;\r\n+    try { \r\n+        currentJSON = JSON.parse(editor.getValue()); \r\n+    } catch { \r\n+        currentJSON = {}; \r\n+    }\r\n+\r\n+    // Boolean fields → reset to false\r\n+    const booleanFields = [\"exit_on_opposite\", \"is_tgt\", \"is_sl\", \"is_trail_set\"];\r\n+    booleanFields.forEach(bf => {\r\n+        if (bf in currentJSON) currentJSON[bf] = false;\r\n+    });\r\n+\r\n+    // Remove text/number fields if they exist\r\n+    const removableFields = [\"position_size\", \"transaction_type\"]; // add more if needed\r\n+    removableFields.forEach(f => {\r\n+        if (f in currentJSON) delete currentJSON[f];\r\n+    });\r\n+\r\n+    editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n+}\r\n+\r\n+\r\n // function hideAndReset(triggerSelector, eventType = null) {\r\n //   dependencies.forEach(dep => {\r\n //     // match trigger, ignore eventType if null\r\n //     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n"
                },
                {
                    "date": 1756329642449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -252,8 +252,9 @@\n         }\r\n       });\r\n     }\r\n   });\r\n+  syncEditorWithUI();\r\n }\r\n \r\n function syncEditorWithUI() {\r\n     if (!editor) return;\r\n"
                },
                {
                    "date": 1756329718190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -252,9 +252,8 @@\n         }\r\n       });\r\n     }\r\n   });\r\n-  syncEditorWithUI();\r\n }\r\n \r\n function syncEditorWithUI() {\r\n     if (!editor) return;\r\n"
                },
                {
                    "date": 1756329811999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -252,33 +252,40 @@\n         }\r\n       });\r\n     }\r\n   });\r\n+  syncEditorWithUI();\r\n }\r\n \r\n function syncEditorWithUI() {\r\n     if (!editor) return;\r\n \r\n-    let currentJSON;\r\n-    try { \r\n-        currentJSON = JSON.parse(editor.getValue()); \r\n-    } catch { \r\n-        currentJSON = {}; \r\n-    }\r\n+    // Keep default snippet based on current type\r\n+    let currentType = JSON.parse(editor.getValue()).type || \"strategy_order\";\r\n+    let defaultJSON = getCodeSnippet(currentType);\r\n+    let parsedDefault;\r\n+    try { parsedDefault = JSON.parse(defaultJSON); } catch { parsedDefault = {}; }\r\n \r\n-    // Boolean fields → reset to false\r\n-    const booleanFields = [\"exit_on_opposite\", \"is_tgt\", \"is_sl\", \"is_trail_set\"];\r\n-    booleanFields.forEach(bf => {\r\n-        if (bf in currentJSON) currentJSON[bf] = false;\r\n-    });\r\n+    let newJSON = { ...parsedDefault };\r\n \r\n-    // Remove text/number fields if they exist\r\n-    const removableFields = [\"position_size\", \"transaction_type\"]; // add more if needed\r\n-    removableFields.forEach(f => {\r\n-        if (f in currentJSON) delete currentJSON[f];\r\n+    // Add visible fields dynamically from UI\r\n+    const uiFields = document.querySelectorAll(\"[data-field]\");\r\n+    uiFields.forEach(field => {\r\n+        const key = field.dataset.field;\r\n+        if (field.offsetParent !== null) { // visible in DOM\r\n+            if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n+                newJSON[key] = field.checked;\r\n+            } else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\" || field.tagName === \"SELECT\") {\r\n+                newJSON[key] = field.value;\r\n+            }\r\n+        } else {\r\n+            // hidden → remove or reset boolean\r\n+            if (typeof parsedDefault[key] === \"boolean\") newJSON[key] = false;\r\n+            else delete newJSON[key];\r\n+        }\r\n     });\r\n \r\n-    editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n+    editor.setValue(JSON.stringify(newJSON, null, 4));\r\n }\r\n \r\n \r\n // function hideAndReset(triggerSelector, eventType = null) {\r\n"
                },
                {
                    "date": 1756329881738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,39 +125,10 @@\n       console.error(\"Failed to copy: \", err);\r\n     });\r\n });\r\n \r\n-function upsertJson(key, value) {\r\n-  if (!editor) return;\r\n \r\n-  let code = editor.getValue();\r\n-  let obj;\r\n \r\n-  try {\r\n-    obj = JSON.parse(code);\r\n-  } catch (e) {\r\n-    console.error(\"Invalid JSON in editor:\", e);\r\n-    return;\r\n-  }\r\n-\r\n-  if (value === \"\" || value == null) {\r\n-    delete obj[key]; // remove key if empty\r\n-  } else {\r\n-    let parsedVal;\r\n-\r\n-    if (value === \"true\") parsedVal = true;\r\n-    else if (value === \"false\") parsedVal = false;\r\n-    else if (value === \"null\") parsedVal = null;\r\n-    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n-    else parsedVal = value; // string\r\n-\r\n-    obj[key] = parsedVal;\r\n-  }\r\n-\r\n-  editor.setValue(JSON.stringify(obj, null, 2));\r\n-}\r\n-\r\n-\r\n //   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n \r\n \r\n // helper function if you need it elsewhere\r\n@@ -286,9 +257,40 @@\n \r\n     editor.setValue(JSON.stringify(newJSON, null, 4));\r\n }\r\n \r\n+function upsertJson(key, value) {\r\n+  if (!editor) return;\r\n \r\n+  let code = editor.getValue();\r\n+  let obj;\r\n+\r\n+  try {\r\n+    obj = JSON.parse(code);\r\n+  } catch (e) {\r\n+    console.error(\"Invalid JSON in editor:\", e);\r\n+    return;\r\n+  }\r\n+\r\n+  if (value === \"\" || value == null) {\r\n+    delete obj[key]; // remove key if empty\r\n+  } else {\r\n+    let parsedVal;\r\n+\r\n+    if (value === \"true\") parsedVal = true;\r\n+    else if (value === \"false\") parsedVal = false;\r\n+    else if (value === \"null\") parsedVal = null;\r\n+    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n+    else parsedVal = value; // string\r\n+\r\n+    obj[key] = parsedVal;\r\n+  }\r\n+\r\n+  editor.setValue(JSON.stringify(obj, null, 2));\r\n+}\r\n+\r\n+\r\n+\r\n // function hideAndReset(triggerSelector, eventType = null) {\r\n //   dependencies.forEach(dep => {\r\n //     // match trigger, ignore eventType if null\r\n //     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n"
                },
                {
                    "date": 1756329903446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,419 @@\n+var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n+var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n+    return new bootstrap.Tooltip(tooltipTriggerEl)\r\n+\r\n+});\r\n+\r\n+let editor;\r\n+\r\n+require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n+\r\n+require([\"vs/editor/editor.main\"], function () {\r\n+    window.getCodeSnippet = getCodeSnippet;\r\n+\r\n+    const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n+\r\n+    function getCodeSnippet(activeType) {\r\n+if (activeType === \"strategy_order\") {\r\n+    return `{\r\n+    \"type\": \"strategy_order\",\r\n+    \"exit_on_opposite\": false,\r\n+    \"is_tgt\": false,\r\n+    \"is_sl\": false,\r\n+    \"is_trail_set\": false,\r\n+    \"position_size\": \"{{strategy.position_size}}\",\r\n+    \"transaction_type\": \"{{strategy.order.action}}\"\r\n+}`;\r\n+} \r\n+else {\r\n+    return `{\r\n+    \"type\": \"${activeType}\"\r\n+}`;\r\n+}\r\n+    }\r\n+\r\n+    editor = monaco.editor.create(container, {\r\n+        value: getCodeSnippet(\"strategy_order\"),\r\n+        language: \"json\",\r\n+        theme: \"vs-dark\",\r\n+        automaticLayout: true,\r\n+        suggestOnTriggerCharacters: false,\r\n+        quickSuggestions: false,\r\n+        wordBasedSuggestions: false,\r\n+        parameterHints: { enabled: false },\r\n+        inlineSuggest: { enabled: false },\r\n+        fontSize: 18,\r\n+        minimap: { enabled: false },\r\n+        wordWrap: \"on\",\r\n+        scrollbar: {\r\n+            vertical: \"hidden\",\r\n+            horizontal: \"hidden\",\r\n+            handleMouseWheel: false\r\n+        },\r\n+    });\r\n+    \r\n+});\r\n+\r\n+\r\n+\r\n+\r\n+let activeNav = \"strategy\"; // default active\r\n+\r\n+const navLinks = document.querySelectorAll(\" .nav-link\");\r\n+\r\n+\r\n+navLinks.forEach(link => {\r\n+    link.addEventListener(\"click\", (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        // remove active from all\r\n+        navLinks.forEach(l => l.classList.remove(\"active\"));\r\n+\r\n+        // set active on clicked\r\n+        link.classList.add(\"active\");\r\n+        // update global variable\r\n+        activeNav = link.getAttribute(\"data-type\");\r\n+        localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n+        console.log(\"Active Nav:\", activeNav);\r\n+        editor.setValue(getCodeSnippet(activeNav));\r\n+    });\r\n+});\r\n+\r\n+// let originalcode;\r\n+\r\n+// if(activeNavItem===\"strategy_order\"){\r\n+//     originalcode=`{\r\n+//     \"type\": \"strategy_order\",\r\n+//     \"exit_on_opposite\": false,\r\n+//     \"is_tgt\": false,\r\n+//     \"is_sl\": false,\r\n+//     \"is_trail_set\": false,\r\n+//     \"position_size\": \"{{strategy.position_size}}\",\r\n+//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n+\r\n+// }`\r\n+// }\r\n+// else{\r\n+//     originalcode=`{\r\n+//     \"type\": \"${activeNavItem}\"\r\n+// }`\r\n+// }\r\n+\r\n+document.getElementById(\"deleteBtn\").addEventListener(\"click\",function(){\r\n+  let activeNavItem=JSON.parse(localStorage.getItem(\"activenav\"))\r\n+  editor.setValue(getCodeSnippet(activeNavItem));\r\n+\r\n+  // reset dropdown to index 0\r\n+  let scriptType = document.getElementById(\"dropdown1\");\r\n+  if (scriptType) scriptType.selectedIndex = 0;\r\n+})\r\n+\r\n+const copyBtn = document.getElementById(\"copyBtn\");\r\n+\r\n+copyBtn?.addEventListener(\"click\", function () {\r\n+  if (!editor) return;\r\n+\r\n+  // Get the current editor content\r\n+  const code = editor.getValue();\r\n+\r\n+  // Use navigator clipboard API to copy\r\n+  navigator.clipboard.writeText(code)\r\n+    .then(() => {\r\n+      alert(\"Code copied to clipboard!\");\r\n+    })\r\n+    .catch(err => {\r\n+      console.error(\"Failed to copy: \", err);\r\n+    });\r\n+});\r\n+\r\n+\r\n+\r\n+//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n+\r\n+\r\n+// helper function if you need it elsewhere\r\n+//   function getActiveNav() {\r\n+//     return activeNav;\r\n+//   }\r\n+\r\n+//   console.log(getActiveNav())\r\n+\r\n+// dependency mapping\r\n+const dependencies = [\r\n+  \r\n+  {\r\n+    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n+      {container:'#scriptsearchbox' , field:\"#search\"},\r\n+      {container:\"#productType\",field:\"#productDropdown\"},\r\n+      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n+      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" } ,\r\n+      { container: \"#BtnGroup\", field: null } \r\n+\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#atmdropdown\",\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#premiumbox\",\r\n+    event: \"input\",\r\n+    targets: [\r\n+      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n+\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger:\"productDropdown\",\r\n+    event:\"change\",\r\n+    targets:[\r\n+      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger:\"quantityBox\",\r\n+    event:\"input\",\r\n+    targets:[\r\n+     { container: \"#toggleSwitchGroup\", field: \".form-check-input\" }  \r\n+    ]\r\n+  }\r\n+];\r\n+\r\n+function hideAndReset(triggerSelector, eventType = null) {\r\n+  dependencies.forEach(dep => {\r\n+    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+      dep.targets.forEach((t, index) => {\r\n+        const container = document.querySelector(t.container);\r\n+        if (container) {\r\n+          // If it's the *direct child* (first dependent) → only reset value\r\n+          if (index === 0) {\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+              }\r\n+            }\r\n+          } else {\r\n+            // Other deeper dependents → hide + reset\r\n+            container.style.display = \"none\";\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                 else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n+                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n+                    field.checked = false;   \r\n+                  } else {\r\n+                    field.value = \"\";\r\n+                  }\r\n+                }\r\n+                else if (field.tagName === \"BUTTON\") {\r\n+                 field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n+                }\r\n+              }\r\n+            }\r\n+          }\r\n+        }\r\n+      });\r\n+    }\r\n+  });\r\n+  syncEditorWithUI();\r\n+}\r\n+\r\n+function syncEditorWithUI() {\r\n+    if (!editor) return;\r\n+\r\n+    // Keep default snippet based on current type\r\n+    let currentType = JSON.parse(editor.getValue()).type || \"strategy_order\";\r\n+    let defaultJSON = getCodeSnippet(currentType);\r\n+    let parsedDefault;\r\n+    try { parsedDefault = JSON.parse(defaultJSON); } catch { parsedDefault = {}; }\r\n+\r\n+    let newJSON = { ...parsedDefault };\r\n+\r\n+    // Add visible fields dynamically from UI\r\n+    const uiFields = document.querySelectorAll(\"[data-field]\");\r\n+    uiFields.forEach(field => {\r\n+        const key = field.dataset.field;\r\n+        if (field.offsetParent !== null) { // visible in DOM\r\n+            if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n+                newJSON[key] = field.checked;\r\n+            } else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\" || field.tagName === \"SELECT\") {\r\n+                newJSON[key] = field.value;\r\n+            }\r\n+        } else {\r\n+            // hidden → remove or reset boolean\r\n+            if (typeof parsedDefault[key] === \"boolean\") newJSON[key] = false;\r\n+            else delete newJSON[key];\r\n+        }\r\n+    });\r\n+\r\n+    editor.setValue(JSON.stringify(newJSON, null, 4));\r\n+}\r\n+\r\n+\r\n+\r\n+\r\n+// function hideAndReset(triggerSelector, eventType = null) {\r\n+//   dependencies.forEach(dep => {\r\n+//     // match trigger, ignore eventType if null\r\n+//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+//       dep.targets.forEach(t => {\r\n+//         const container = document.querySelector(t.container);\r\n+//         if (container) {\r\n+//           // hide the container\r\n+//           container.style.display = \"none\";\r\n+\r\n+//           // reset child field if provided\r\n+//           if (t.field) {\r\n+//             const field = container.querySelector(t.field);\r\n+//             if (field) {\r\n+//               if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+//               else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+//             }\r\n+//           }\r\n+//         }\r\n+//       });\r\n+//     }\r\n+//   });\r\n+// }\r\n+\r\n+\r\n+// document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n+//     hideAndReset(\"#atmdropdown\",change)\r\n+// })\r\n+\r\n+let scriptType = document.getElementById(\"dropdown1\");\r\n+dropdown1.addEventListener(\"change\", function () {\r\n+  upsertJson(\"script_type\",this.value,true);\r\n+  upsertJson(\"is_rollover\",\"false\",false);\r\n+  hideAndReset(\"#dropdown1\",\"change\")\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"CE\" || scriptType.value === \"PE\" ) {\r\n+        document.getElementById(\"optionSelection\").style.display = \"block\";\r\n+        document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n+    }\r\n+    else {\r\n+        document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n+        document.getElementById(\"optionSelection\").style.display = \"none\";\r\n+    }\r\n+})\r\n+\r\n+let searchInput=document.getElementById(\"search\");\r\n+const dropdown = document.getElementById('dropdown');\r\n+let token=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n+document.addEventListener('click', (e) => {\r\n+  // Check if click is outside the input and dropdown\r\n+  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n+    dropdown.style.display = 'none';\r\n+  }\r\n+});\r\n+\r\n+// Simple debounce function\r\n+function debounce(func, delay) {\r\n+  let timer;\r\n+  return function (...args) {\r\n+    clearTimeout(timer);\r\n+    timer = setTimeout(() => func.apply(this, args), delay);\r\n+  };\r\n+}\r\n+\r\n+// Fetch API suggestions\r\n+async function fetchSuggestions(query) {\r\n+  if (!query) {\r\n+    dropdown.style.display = 'none';\r\n+    dropdown.innerHTML = '';\r\n+    return;\r\n+  }\r\n+\r\n+  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n+  try {\r\n+    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n+      method: \"POST\",\r\n+      headers: {\r\n+        \"Content-Type\": \"application/json\",\r\n+        \"Authorization\": token\r\n+      },\r\n+      body: JSON.stringify({\r\n+        script: query,\r\n+        type: scriptType\r\n+      })\r\n+    });\r\n+\r\n+    const data = await res.json();\r\n+    const suggestions = data.data;\r\n+\r\n+\r\n+    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n+    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n+\r\n+  }\r\n+  catch (err) {\r\n+    console.error(err);\r\n+  }\r\n+}\r\n+\r\n+// Add click selection\r\n+dropdown?.addEventListener('click', e => {\r\n+  if (e.target.tagName === 'LI') {\r\n+    let selectedText = e.target.textContent;\r\n+    searchInput.value = selectedText;\r\n+    // remove everything after \"(\"\r\n+    if (selectedText.includes(\"(\")) {\r\n+      selectedText = selectedText.split(\"(\")[0];\r\n+    }\r\n+    dropdown.style.display = 'none';\r\n+    upsertJson(\"script\",selectedText,true);\r\n+    if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n+      document.getElementById(\"productType\").style.display=\"block\";\r\n+    }\r\n+  }\r\n+});\r\n+\r\n+searchInput.addEventListener('input', debounce(e => {\r\n+  fetchSuggestions(e.target.value);\r\n+}, 300));\r\n+\r\n+\r\n+\r\n+  console.log(\"enter\");\r\n+ document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n+  upsertJson(\"product\",this.value,true);\r\n+  hideAndReset(\"#productDropdown\",\"change\");\r\n+  if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n+  document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n+  document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n+    upsertJson(\"quantity\",this.value,false)\r\n+    if(document.getElementById(\"quantityBox\")?.value<=0){\r\n+      document.getElementById(\"quantityError\").style.display=\"block\";\r\n+    document.getElementById(\"BtnGroup\").style.display=\"none\";\r\n+    document.getElementById(\"toggleSwitchGroup\").style.display=\"none\";\r\n+    }\r\n+    else{\r\n+    document.getElementById(\"quantityError\").style.display=\"none\";\r\n+    document.getElementById(\"BtnGroup\").style.display=\"block\";\r\n+    document.getElementById(\"toggleSwitchGroup\").style.display=\"block\";\r\n+    }\r\n+    let buy=document.getElementsByClassName(\"buyBtn\")[0];\r\n+    let sell=document.getElementsByClassName(\"sellBtn\")[0];\r\n+    \r\n+      buy.addEventListener(\"click\",function(){\r\n+        buy.style.background=\"green\";\r\n+        sell.style.background=\"\";\r\n+        upsertJson(\"transaction_type\",\"BUY\",true)\r\n+      })\r\n+      sell.addEventListener(\"click\",function(){\r\n+        sell.style.background=\"red\";\r\n+        buy.style.background=\"\";\r\n+        upsertJson(\"transaction_type\",\"SELL\",true)\r\n+      })\r\n+\r\n+  })\r\n+}\r\n+})\r\n"
                },
                {
                    "date": 1756329916701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,429 +125,39 @@\n       console.error(\"Failed to copy: \", err);\r\n     });\r\n });\r\n \r\n+function upsertJson(key, value) {\r\n+  if (!editor) return;\r\n \r\n+  let code = editor.getValue();\r\n+  let obj;\r\n \r\n-//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n-\r\n-\r\n-// helper function if you need it elsewhere\r\n-//   function getActiveNav() {\r\n-//     return activeNav;\r\n-//   }\r\n-\r\n-//   console.log(getActiveNav())\r\n-\r\n-// dependency mapping\r\n-const dependencies = [\r\n-  \r\n-  {\r\n-    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n-      {container:'#scriptsearchbox' , field:\"#search\"},\r\n-      {container:\"#productType\",field:\"#productDropdown\"},\r\n-      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n-      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" } ,\r\n-      { container: \"#BtnGroup\", field: null } \r\n-\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#atmdropdown\",\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#premiumbox\",\r\n-    event: \"input\",\r\n-    targets: [\r\n-      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n-\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger:\"productDropdown\",\r\n-    event:\"change\",\r\n-    targets:[\r\n-      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger:\"quantityBox\",\r\n-    event:\"input\",\r\n-    targets:[\r\n-     { container: \"#toggleSwitchGroup\", field: \".form-check-input\" }  \r\n-    ]\r\n-  }\r\n-];\r\n-\r\n-function hideAndReset(triggerSelector, eventType = null) {\r\n-  dependencies.forEach(dep => {\r\n-    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-      dep.targets.forEach((t, index) => {\r\n-        const container = document.querySelector(t.container);\r\n-        if (container) {\r\n-          // If it's the *direct child* (first dependent) → only reset value\r\n-          if (index === 0) {\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-              }\r\n-            }\r\n-          } else {\r\n-            // Other deeper dependents → hide + reset\r\n-            container.style.display = \"none\";\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                 else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n-                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-                    field.checked = false;   \r\n-                  } else {\r\n-                    field.value = \"\";\r\n-                  }\r\n-                }\r\n-                else if (field.tagName === \"BUTTON\") {\r\n-                 field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n-                }\r\n-              }\r\n-            }\r\n-          }\r\n-        }\r\n-      });\r\n-    }\r\n-  });\r\n-  syncEditorWithUI();\r\n-}\r\n-\r\n-function syncEditorWithUI() {\r\n-    if (!editor) return;\r\n-\r\n-    // Keep default snippet based on current type\r\n-    let currentType = JSON.parse(editor.getValue()).type || \"strategy_order\";\r\n-    let defaultJSON = getCodeSnippet(currentType);\r\n-    let parsedDefault;\r\n-    try { parsedDefault = JSON.parse(defaultJSON); } catch { parsedDefault = {}; }\r\n-\r\n-    let newJSON = { ...parsedDefault };\r\n-\r\n-    // Add visible fields dynamically from UI\r\n-    const uiFields = document.querySelectorAll(\"[data-field]\");\r\n-    uiFields.forEach(field => {\r\n-        const key = field.dataset.field;\r\n-        if (field.offsetParent !== null) { // visible in DOM\r\n-            if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-                newJSON[key] = field.checked;\r\n-            } else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\" || field.tagName === \"SELECT\") {\r\n-                newJSON[key] = field.value;\r\n-            }\r\n-        } else {\r\n-            // hidden → remove or reset boolean\r\n-            if (typeof parsedDefault[key] === \"boolean\") newJSON[key] = false;\r\n-            else delete newJSON[key];\r\n-        }\r\n-    });\r\n-\r\n-    editor.setValue(JSON.stringify(newJSON, null, 4));\r\n-}\r\n-\r\n-\r\n-\r\n-\r\n-// function hideAndReset(triggerSelector, eventType = null) {\r\n-//   dependencies.forEach(dep => {\r\n-//     // match trigger, ignore eventType if null\r\n-//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-//       dep.targets.forEach(t => {\r\n-//         const container = document.querySelector(t.container);\r\n-//         if (container) {\r\n-//           // hide the container\r\n-//           container.style.display = \"none\";\r\n-\r\n-//           // reset child field if provided\r\n-//           if (t.field) {\r\n-//             const field = container.querySelector(t.field);\r\n-//             if (field) {\r\n-//               if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-//               else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-//             }\r\n-//           }\r\n-//         }\r\n-//       });\r\n-//     }\r\n-//   });\r\n-// }\r\n-\r\n-\r\n-// document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n-//     hideAndReset(\"#atmdropdown\",change)\r\n-// })\r\n-\r\n-let scriptType = document.getElementById(\"dropdown1\");\r\n-dropdown1.addEventListener(\"change\", function () {\r\n-  upsertJson(\"script_type\",this.value,true);\r\n-  upsertJson(\"is_rollover\",\"false\",false);\r\n-  hideAndReset(\"#dropdown1\",\"change\")\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"CE\" || scriptType.value === \"PE\" ) {\r\n-        document.getElementById(\"optionSelection\").style.display = \"block\";\r\n-        document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n-    }\r\n-    else {\r\n-        document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n-        document.getElementById(\"optionSelection\").style.display = \"none\";\r\n-    }\r\n-})\r\n-\r\n-let searchInput=document.getElementById(\"search\");\r\n-const dropdown = document.getElementById('dropdown');\r\n-let token=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n-document.addEventListener('click', (e) => {\r\n-  // Check if click is outside the input and dropdown\r\n-  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n-    dropdown.style.display = 'none';\r\n-  }\r\n-});\r\n-\r\n-// Simple debounce function\r\n-function debounce(func, delay) {\r\n-  let timer;\r\n-  return function (...args) {\r\n-    clearTimeout(timer);\r\n-    timer = setTimeout(() => func.apply(this, args), delay);\r\n-  };\r\n-}\r\n-\r\n-// Fetch API suggestions\r\n-async function fetchSuggestions(query) {\r\n-  if (!query) {\r\n-    dropdown.style.display = 'none';\r\n-    dropdown.innerHTML = '';\r\n+  try {\r\n+    obj = JSON.parse(code);\r\n+  } catch (e) {\r\n+    console.error(\"Invalid JSON in editor:\", e);\r\n     return;\r\n   }\r\n \r\n-  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n-  try {\r\n-    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n-      method: \"POST\",\r\n-      headers: {\r\n-        \"Content-Type\": \"application/json\",\r\n-        \"Authorization\": token\r\n-      },\r\n-      body: JSON.stringify({\r\n-        script: query,\r\n-        type: scriptType\r\n-      })\r\n-    });\r\n+  if (value === \"\" || value == null) {\r\n+    delete obj[key]; // remove key if empty\r\n+  } else {\r\n+    let parsedVal;\r\n \r\n-    const data = await res.json();\r\n-    const suggestions = data.data;\r\n+    if (value === \"true\") parsedVal = true;\r\n+    else if (value === \"false\") parsedVal = false;\r\n+    else if (value === \"null\") parsedVal = null;\r\n+    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n+    else parsedVal = value; // string\r\n \r\n-\r\n-    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n-    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n-\r\n+    obj[key] = parsedVal;\r\n   }\r\n-  catch (err) {\r\n-    console.error(err);\r\n-  }\r\n-}\r\n \r\n-// Add click selection\r\n-dropdown?.addEventListener('click', e => {\r\n-  if (e.target.tagName === 'LI') {\r\n-    let selectedText = e.target.textContent;\r\n-    searchInput.value = selectedText;\r\n-    // remove everything after \"(\"\r\n-    if (selectedText.includes(\"(\")) {\r\n-      selectedText = selectedText.split(\"(\")[0];\r\n-    }\r\n-    dropdown.style.display = 'none';\r\n-    upsertJson(\"script\",selectedText,true);\r\n-    if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n-      document.getElementById(\"productType\").style.display=\"block\";\r\n-    }\r\n-  }\r\n-});\r\n-\r\n-searchInput.addEventListener('input', debounce(e => {\r\n-  fetchSuggestions(e.target.value);\r\n-}, 300));\r\n-\r\n-\r\n-\r\n-  console.log(\"enter\");\r\n- document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n-  upsertJson(\"product\",this.value,true);\r\n-  hideAndReset(\"#productDropdown\",\"change\");\r\n-  if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n-  document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n-  document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n-    upsertJson(\"quantity\",this.value,false)\r\n-    if(document.getElementById(\"quantityBox\")?.value<=0){\r\n-      document.getElementById(\"quantityError\").style.display=\"block\";\r\n-    document.getElementById(\"BtnGroup\").style.display=\"none\";\r\n-    document.getElementById(\"toggleSwitchGroup\").style.display=\"none\";\r\n-    }\r\n-    else{\r\n-    document.getElementById(\"quantityError\").style.display=\"none\";\r\n-    document.getElementById(\"BtnGroup\").style.display=\"block\";\r\n-    document.getElementById(\"toggleSwitchGroup\").style.display=\"block\";\r\n-    }\r\n-    let buy=document.getElementsByClassName(\"buyBtn\")[0];\r\n-    let sell=document.getElementsByClassName(\"sellBtn\")[0];\r\n-    \r\n-      buy.addEventListener(\"click\",function(){\r\n-        buy.style.background=\"green\";\r\n-        sell.style.background=\"\";\r\n-        upsertJson(\"transaction_type\",\"BUY\",true)\r\n-      })\r\n-      sell.addEventListener(\"click\",function(){\r\n-        sell.style.background=\"red\";\r\n-        buy.style.background=\"\";\r\n-        upsertJson(\"transaction_type\",\"SELL\",true)\r\n-      })\r\n-\r\n-  })\r\n+  editor.setValue(JSON.stringify(obj, null, 2));\r\n }\r\n-})\r\n-var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n-var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n-    return new bootstrap.Tooltip(tooltipTriggerEl)\r\n \r\n-});\r\n \r\n-let editor;\r\n-\r\n-require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n-\r\n-require([\"vs/editor/editor.main\"], function () {\r\n-    window.getCodeSnippet = getCodeSnippet;\r\n-\r\n-    const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n-\r\n-    function getCodeSnippet(activeType) {\r\n-if (activeType === \"strategy_order\") {\r\n-    return `{\r\n-    \"type\": \"strategy_order\",\r\n-    \"exit_on_opposite\": false,\r\n-    \"is_tgt\": false,\r\n-    \"is_sl\": false,\r\n-    \"is_trail_set\": false,\r\n-    \"position_size\": \"{{strategy.position_size}}\",\r\n-    \"transaction_type\": \"{{strategy.order.action}}\"\r\n-}`;\r\n-} \r\n-else {\r\n-    return `{\r\n-    \"type\": \"${activeType}\"\r\n-}`;\r\n-}\r\n-    }\r\n-\r\n-    editor = monaco.editor.create(container, {\r\n-        value: getCodeSnippet(\"strategy_order\"),\r\n-        language: \"json\",\r\n-        theme: \"vs-dark\",\r\n-        automaticLayout: true,\r\n-        suggestOnTriggerCharacters: false,\r\n-        quickSuggestions: false,\r\n-        wordBasedSuggestions: false,\r\n-        parameterHints: { enabled: false },\r\n-        inlineSuggest: { enabled: false },\r\n-        fontSize: 18,\r\n-        minimap: { enabled: false },\r\n-        wordWrap: \"on\",\r\n-        scrollbar: {\r\n-            vertical: \"hidden\",\r\n-            horizontal: \"hidden\",\r\n-            handleMouseWheel: false\r\n-        },\r\n-    });\r\n-    \r\n-});\r\n-\r\n-\r\n-\r\n-\r\n-let activeNav = \"strategy\"; // default active\r\n-\r\n-const navLinks = document.querySelectorAll(\" .nav-link\");\r\n-\r\n-\r\n-navLinks.forEach(link => {\r\n-    link.addEventListener(\"click\", (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        // remove active from all\r\n-        navLinks.forEach(l => l.classList.remove(\"active\"));\r\n-\r\n-        // set active on clicked\r\n-        link.classList.add(\"active\");\r\n-        // update global variable\r\n-        activeNav = link.getAttribute(\"data-type\");\r\n-        localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n-        console.log(\"Active Nav:\", activeNav);\r\n-        editor.setValue(getCodeSnippet(activeNav));\r\n-    });\r\n-});\r\n-\r\n-// let originalcode;\r\n-\r\n-// if(activeNavItem===\"strategy_order\"){\r\n-//     originalcode=`{\r\n-//     \"type\": \"strategy_order\",\r\n-//     \"exit_on_opposite\": false,\r\n-//     \"is_tgt\": false,\r\n-//     \"is_sl\": false,\r\n-//     \"is_trail_set\": false,\r\n-//     \"position_size\": \"{{strategy.position_size}}\",\r\n-//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n-\r\n-// }`\r\n-// }\r\n-// else{\r\n-//     originalcode=`{\r\n-//     \"type\": \"${activeNavItem}\"\r\n-// }`\r\n-// }\r\n-\r\n-document.getElementById(\"deleteBtn\").addEventListener(\"click\",function(){\r\n-  let activeNavItem=JSON.parse(localStorage.getItem(\"activenav\"))\r\n-  editor.setValue(getCodeSnippet(activeNavItem));\r\n-\r\n-  // reset dropdown to index 0\r\n-  let scriptType = document.getElementById(\"dropdown1\");\r\n-  if (scriptType) scriptType.selectedIndex = 0;\r\n-})\r\n-\r\n-const copyBtn = document.getElementById(\"copyBtn\");\r\n-\r\n-copyBtn?.addEventListener(\"click\", function () {\r\n-  if (!editor) return;\r\n-\r\n-  // Get the current editor content\r\n-  const code = editor.getValue();\r\n-\r\n-  // Use navigator clipboard API to copy\r\n-  navigator.clipboard.writeText(code)\r\n-    .then(() => {\r\n-      alert(\"Code copied to clipboard!\");\r\n-    })\r\n-    .catch(err => {\r\n-      console.error(\"Failed to copy: \", err);\r\n-    });\r\n-});\r\n-\r\n-\r\n-\r\n //   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n \r\n \r\n // helper function if you need it elsewhere\r\n@@ -642,9 +252,9 @@\n         }\r\n       });\r\n     }\r\n   });\r\n-  syncEditorWithUI();\r\n+  //syncEditorWithUI();\r\n }\r\n \r\n function syncEditorWithUI() {\r\n     if (!editor) return;\r\n@@ -676,40 +286,9 @@\n \r\n     editor.setValue(JSON.stringify(newJSON, null, 4));\r\n }\r\n \r\n-function upsertJson(key, value) {\r\n-  if (!editor) return;\r\n \r\n-  let code = editor.getValue();\r\n-  let obj;\r\n-\r\n-  try {\r\n-    obj = JSON.parse(code);\r\n-  } catch (e) {\r\n-    console.error(\"Invalid JSON in editor:\", e);\r\n-    return;\r\n-  }\r\n-\r\n-  if (value === \"\" || value == null) {\r\n-    delete obj[key]; // remove key if empty\r\n-  } else {\r\n-    let parsedVal;\r\n-\r\n-    if (value === \"true\") parsedVal = true;\r\n-    else if (value === \"false\") parsedVal = false;\r\n-    else if (value === \"null\") parsedVal = null;\r\n-    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n-    else parsedVal = value; // string\r\n-\r\n-    obj[key] = parsedVal;\r\n-  }\r\n-\r\n-  editor.setValue(JSON.stringify(obj, null, 2));\r\n-}\r\n-\r\n-\r\n-\r\n // function hideAndReset(triggerSelector, eventType = null) {\r\n //   dependencies.forEach(dep => {\r\n //     // match trigger, ignore eventType if null\r\n //     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n"
                },
                {
                    "date": 1756330080239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -252,9 +252,9 @@\n         }\r\n       });\r\n     }\r\n   });\r\n-  //syncEditorWithUI();\r\n+  //  syncEditorWithUI();\r\n }\r\n \r\n function syncEditorWithUI() {\r\n     if (!editor) return;\r\n"
                },
                {
                    "date": 1756330152695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -326,8 +326,9 @@\n         document.getElementById(\"optionSelection\").style.display = \"block\";\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n     }\r\n     else {\r\n+      console.log(\"else\")\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n         document.getElementById(\"optionSelection\").style.display = \"none\";\r\n     }\r\n })\r\n"
                },
                {
                    "date": 1756330183277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -321,9 +321,9 @@\n dropdown1.addEventListener(\"change\", function () {\r\n   upsertJson(\"script_type\",this.value,true);\r\n   upsertJson(\"is_rollover\",\"false\",false);\r\n   hideAndReset(\"#dropdown1\",\"change\")\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"CE\" || scriptType.value === \"PE\" ) {\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" || scriptType.value === \"PE\" ) {\r\n         document.getElementById(\"optionSelection\").style.display = \"block\";\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n     }\r\n     else {\r\n"
                },
                {
                    "date": 1756330206355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -321,9 +321,9 @@\n dropdown1.addEventListener(\"change\", function () {\r\n   upsertJson(\"script_type\",this.value,true);\r\n   upsertJson(\"is_rollover\",\"false\",false);\r\n   hideAndReset(\"#dropdown1\",\"change\")\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" || scriptType.value === \"PE\" ) {\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" ||JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\" ) {\r\n         document.getElementById(\"optionSelection\").style.display = \"block\";\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n     }\r\n     else {\r\n"
                },
                {
                    "date": 1756330218568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -326,9 +326,8 @@\n         document.getElementById(\"optionSelection\").style.display = \"block\";\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n     }\r\n     else {\r\n-      console.log(\"else\")\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n         document.getElementById(\"optionSelection\").style.display = \"none\";\r\n     }\r\n })\r\n"
                },
                {
                    "date": 1756330276147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -252,9 +252,9 @@\n         }\r\n       });\r\n     }\r\n   });\r\n-  //  syncEditorWithUI();\r\n+    syncEditorWithUI();\r\n }\r\n \r\n function syncEditorWithUI() {\r\n     if (!editor) return;\r\n"
                },
                {
                    "date": 1756330337930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -252,9 +252,9 @@\n         }\r\n       });\r\n     }\r\n   });\r\n-    syncEditorWithUI();\r\n+  //  syncEditorWithUI();\r\n }\r\n \r\n function syncEditorWithUI() {\r\n     if (!editor) return;\r\n"
                },
                {
                    "date": 1756330489082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -252,43 +252,45 @@\n         }\r\n       });\r\n     }\r\n   });\r\n-  //  syncEditorWithUI();\r\n+    syncEditorWithUI();\r\n }\r\n-\r\n function syncEditorWithUI() {\r\n     if (!editor) return;\r\n \r\n-    // Keep default snippet based on current type\r\n-    let currentType = JSON.parse(editor.getValue()).type || \"strategy_order\";\r\n-    let defaultJSON = getCodeSnippet(currentType);\r\n-    let parsedDefault;\r\n-    try { parsedDefault = JSON.parse(defaultJSON); } catch { parsedDefault = {}; }\r\n+    let currentJSON;\r\n+    try { currentJSON = JSON.parse(editor.getValue()); } catch { currentJSON = {}; }\r\n \r\n-    let newJSON = { ...parsedDefault };\r\n-\r\n-    // Add visible fields dynamically from UI\r\n     const uiFields = document.querySelectorAll(\"[data-field]\");\r\n+    \r\n     uiFields.forEach(field => {\r\n         const key = field.dataset.field;\r\n-        if (field.offsetParent !== null) { // visible in DOM\r\n+\r\n+        if (field.offsetParent !== null) {\r\n+            // visible → update JSON\r\n             if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-                newJSON[key] = field.checked;\r\n+                currentJSON[key] = field.checked;\r\n             } else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\" || field.tagName === \"SELECT\") {\r\n-                newJSON[key] = field.value;\r\n+                currentJSON[key] = field.value; // only visible fields added/updated\r\n             }\r\n         } else {\r\n-            // hidden → remove or reset boolean\r\n-            if (typeof parsedDefault[key] === \"boolean\") newJSON[key] = false;\r\n-            else delete newJSON[key];\r\n+            // hidden → reset boolean or remove text/number field\r\n+            if (typeof currentJSON[key] === \"boolean\") currentJSON[key] = false;\r\n+            else if (!isParentField(key)) delete currentJSON[key]; // remove only if not parent\r\n         }\r\n     });\r\n \r\n-    editor.setValue(JSON.stringify(newJSON, null, 4));\r\n+    editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n }\r\n \r\n+// Example helper: mark parent fields you never want to remove\r\n+function isParentField(key) {\r\n+    const parentFields = [\"type\", \"parent_field_1\", \"parent_field_2\"]; // add all your parent keys here\r\n+    return parentFields.includes(key);\r\n+}\r\n \r\n+\r\n // function hideAndReset(triggerSelector, eventType = null) {\r\n //   dependencies.forEach(dep => {\r\n //     // match trigger, ignore eventType if null\r\n //     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n"
                },
                {
                    "date": 1756330601310,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -261,36 +261,33 @@\n     let currentJSON;\r\n     try { currentJSON = JSON.parse(editor.getValue()); } catch { currentJSON = {}; }\r\n \r\n     const uiFields = document.querySelectorAll(\"[data-field]\");\r\n-    \r\n+\r\n     uiFields.forEach(field => {\r\n         const key = field.dataset.field;\r\n \r\n+        // Keep main parent 'script_type' always\r\n+        if (key === \"script_type\") return;\r\n+\r\n         if (field.offsetParent !== null) {\r\n             // visible → update JSON\r\n             if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n                 currentJSON[key] = field.checked;\r\n             } else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\" || field.tagName === \"SELECT\") {\r\n-                currentJSON[key] = field.value; // only visible fields added/updated\r\n+                currentJSON[key] = field.value; // add/update visible fields\r\n             }\r\n         } else {\r\n             // hidden → reset boolean or remove text/number field\r\n             if (typeof currentJSON[key] === \"boolean\") currentJSON[key] = false;\r\n-            else if (!isParentField(key)) delete currentJSON[key]; // remove only if not parent\r\n+            else delete currentJSON[key]; // safe to delete if hidden and not main parent\r\n         }\r\n     });\r\n \r\n     editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n }\r\n \r\n-// Example helper: mark parent fields you never want to remove\r\n-function isParentField(key) {\r\n-    const parentFields = [\"type\", \"parent_field_1\", \"parent_field_2\"]; // add all your parent keys here\r\n-    return parentFields.includes(key);\r\n-}\r\n \r\n-\r\n // function hideAndReset(triggerSelector, eventType = null) {\r\n //   dependencies.forEach(dep => {\r\n //     // match trigger, ignore eventType if null\r\n //     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n"
                },
                {
                    "date": 1756330862666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,8 +50,10 @@\n             horizontal: \"hidden\",\r\n             handleMouseWheel: false\r\n         },\r\n     });\r\n+    editor.setValue(newValue); // add/update value\r\n+    editor.layout();   \r\n     \r\n });\r\n \r\n \r\n"
                },
                {
                    "date": 1756330989475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,27 +33,26 @@\n     }\r\n \r\n     editor = monaco.editor.create(container, {\r\n         value: getCodeSnippet(\"strategy_order\"),\r\n-        language: \"json\",\r\n-        theme: \"vs-dark\",\r\n-        automaticLayout: true,\r\n-        suggestOnTriggerCharacters: false,\r\n-        quickSuggestions: false,\r\n-        wordBasedSuggestions: false,\r\n-        parameterHints: { enabled: false },\r\n-        inlineSuggest: { enabled: false },\r\n-        fontSize: 18,\r\n-        minimap: { enabled: false },\r\n-        wordWrap: \"on\",\r\n-        scrollbar: {\r\n-            vertical: \"hidden\",\r\n-            horizontal: \"hidden\",\r\n-            handleMouseWheel: false\r\n+         language: \"json\",\r\n+    theme: \"vs-dark\",\r\n+    automaticLayout: true,\r\n+    suggestOnTriggerCharacters: false,\r\n+    quickSuggestions: false,\r\n+    wordBasedSuggestions: false,\r\n+    parameterHints: { enabled: false },\r\n+    inlineSuggest: { enabled: false },\r\n+    fontSize: 18,\r\n+    minimap: { enabled: false },\r\n+    wordWrap: \"on\",\r\n+    scrollbar: {\r\n+      vertical: \"hidden\",\r\n+      horizontal: \"hidden\",\r\n+      handleMouseWheel: false\r\n         },\r\n     });\r\n-    editor.setValue(newValue); // add/update value\r\n-    editor.layout();   \r\n+      \r\n     \r\n });\r\n \r\n \r\n"
                },
                {
                    "date": 1756330997738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,11 +45,11 @@\n     fontSize: 18,\r\n     minimap: { enabled: false },\r\n     wordWrap: \"on\",\r\n     scrollbar: {\r\n-      vertical: \"hidden\",\r\n-      horizontal: \"hidden\",\r\n-      handleMouseWheel: false\r\n+    vertical: \"hidden\",\r\n+    horizontal: \"hidden\",\r\n+    handleMouseWheel: false\r\n         },\r\n     });\r\n       \r\n     \r\n"
                },
                {
                    "date": 1756331022662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,10 +32,10 @@\n }\r\n     }\r\n \r\n     editor = monaco.editor.create(container, {\r\n-        value: getCodeSnippet(\"strategy_order\"),\r\n-         language: \"json\",\r\n+    value: getCodeSnippet(\"strategy_order\"),\r\n+    language: \"json\",\r\n     theme: \"vs-dark\",\r\n     automaticLayout: true,\r\n     suggestOnTriggerCharacters: false,\r\n     quickSuggestions: false,\r\n"
                },
                {
                    "date": 1756331140541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     parameterHints: { enabled: false },\r\n     inlineSuggest: { enabled: false },\r\n     fontSize: 18,\r\n     minimap: { enabled: false },\r\n-    wordWrap: \"on\",\r\n+    wordWrap: \"off\",\r\n     scrollbar: {\r\n     vertical: \"hidden\",\r\n     horizontal: \"hidden\",\r\n     handleMouseWheel: false\r\n"
                },
                {
                    "date": 1756331154271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     parameterHints: { enabled: false },\r\n     inlineSuggest: { enabled: false },\r\n     fontSize: 18,\r\n     minimap: { enabled: false },\r\n-    wordWrap: \"off\",\r\n+    wordWrap: \"onn\",\r\n     scrollbar: {\r\n     vertical: \"hidden\",\r\n     horizontal: \"hidden\",\r\n     handleMouseWheel: false\r\n"
                },
                {
                    "date": 1756331183835,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,446 @@\n+var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n+var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n+    return new bootstrap.Tooltip(tooltipTriggerEl)\r\n+\r\n+});\r\n+\r\n+let editor;\r\n+\r\n+require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n+\r\n+require([\"vs/editor/editor.main\"], function () {\r\n+    window.getCodeSnippet = getCodeSnippet;\r\n+\r\n+    const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n+\r\n+    function getCodeSnippet(activeType) {\r\n+if (activeType === \"strategy_order\") {\r\n+    return `{\r\n+    \"type\": \"strategy_order\",\r\n+    \"exit_on_opposite\": false,\r\n+    \"is_tgt\": false,\r\n+    \"is_sl\": false,\r\n+    \"is_trail_set\": false,\r\n+    \"position_size\": \"{{strategy.position_size}}\",\r\n+    \"transaction_type\": \"{{strategy.order.action}}\"\r\n+}`;\r\n+} \r\n+else {\r\n+    return `{\r\n+    \"type\": \"${activeType}\"\r\n+}`;\r\n+}\r\n+    }\r\n+\r\n+    editor = monaco.editor.create(container, {\r\n+    value: getCodeSnippet(\"strategy_order\"),\r\n+    language: \"json\",\r\n+    theme: \"vs-dark\",\r\n+    automaticLayout: false,\r\n+    suggestOnTriggerCharacters: false,\r\n+    quickSuggestions: false,\r\n+    wordBasedSuggestions: false,\r\n+    parameterHints: { enabled: false },\r\n+    inlineSuggest: { enabled: false },\r\n+    fontSize: 18,\r\n+    minimap: { enabled: false },\r\n+    wordWrap: \"on\",\r\n+    scrollbar: {\r\n+    vertical: \"hidden\",\r\n+    horizontal: \"hidden\",\r\n+    handleMouseWheel: false\r\n+        },\r\n+    });\r\n+      \r\n+    \r\n+});\r\n+\r\n+\r\n+\r\n+\r\n+let activeNav = \"strategy\"; // default active\r\n+\r\n+const navLinks = document.querySelectorAll(\" .nav-link\");\r\n+\r\n+\r\n+navLinks.forEach(link => {\r\n+    link.addEventListener(\"click\", (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        // remove active from all\r\n+        navLinks.forEach(l => l.classList.remove(\"active\"));\r\n+\r\n+        // set active on clicked\r\n+        link.classList.add(\"active\");\r\n+        // update global variable\r\n+        activeNav = link.getAttribute(\"data-type\");\r\n+        localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n+        console.log(\"Active Nav:\", activeNav);\r\n+        editor.setValue(getCodeSnippet(activeNav));\r\n+    });\r\n+});\r\n+\r\n+// let originalcode;\r\n+\r\n+// if(activeNavItem===\"strategy_order\"){\r\n+//     originalcode=`{\r\n+//     \"type\": \"strategy_order\",\r\n+//     \"exit_on_opposite\": false,\r\n+//     \"is_tgt\": false,\r\n+//     \"is_sl\": false,\r\n+//     \"is_trail_set\": false,\r\n+//     \"position_size\": \"{{strategy.position_size}}\",\r\n+//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n+\r\n+// }`\r\n+// }\r\n+// else{\r\n+//     originalcode=`{\r\n+//     \"type\": \"${activeNavItem}\"\r\n+// }`\r\n+// }\r\n+\r\n+document.getElementById(\"deleteBtn\").addEventListener(\"click\",function(){\r\n+  let activeNavItem=JSON.parse(localStorage.getItem(\"activenav\"))\r\n+  editor.setValue(getCodeSnippet(activeNavItem));\r\n+\r\n+  // reset dropdown to index 0\r\n+  let scriptType = document.getElementById(\"dropdown1\");\r\n+  if (scriptType) scriptType.selectedIndex = 0;\r\n+})\r\n+\r\n+const copyBtn = document.getElementById(\"copyBtn\");\r\n+\r\n+copyBtn?.addEventListener(\"click\", function () {\r\n+  if (!editor) return;\r\n+\r\n+  // Get the current editor content\r\n+  const code = editor.getValue();\r\n+\r\n+  // Use navigator clipboard API to copy\r\n+  navigator.clipboard.writeText(code)\r\n+    .then(() => {\r\n+      alert(\"Code copied to clipboard!\");\r\n+    })\r\n+    .catch(err => {\r\n+      console.error(\"Failed to copy: \", err);\r\n+    });\r\n+});\r\n+\r\n+function upsertJson(key, value) {\r\n+  if (!editor) return;\r\n+\r\n+  let code = editor.getValue();\r\n+  let obj;\r\n+\r\n+  try {\r\n+    obj = JSON.parse(code);\r\n+  } catch (e) {\r\n+    console.error(\"Invalid JSON in editor:\", e);\r\n+    return;\r\n+  }\r\n+\r\n+  if (value === \"\" || value == null) {\r\n+    delete obj[key]; // remove key if empty\r\n+  } else {\r\n+    let parsedVal;\r\n+\r\n+    if (value === \"true\") parsedVal = true;\r\n+    else if (value === \"false\") parsedVal = false;\r\n+    else if (value === \"null\") parsedVal = null;\r\n+    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n+    else parsedVal = value; // string\r\n+\r\n+    obj[key] = parsedVal;\r\n+  }\r\n+\r\n+  editor.setValue(JSON.stringify(obj, null, 2));\r\n+}\r\n+\r\n+\r\n+//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n+\r\n+\r\n+// helper function if you need it elsewhere\r\n+//   function getActiveNav() {\r\n+//     return activeNav;\r\n+//   }\r\n+\r\n+//   console.log(getActiveNav())\r\n+\r\n+// dependency mapping\r\n+const dependencies = [\r\n+  \r\n+  {\r\n+    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n+      {container:'#scriptsearchbox' , field:\"#search\"},\r\n+      {container:\"#productType\",field:\"#productDropdown\"},\r\n+      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n+      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" } ,\r\n+      { container: \"#BtnGroup\", field: null } \r\n+\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#atmdropdown\",\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#premiumbox\",\r\n+    event: \"input\",\r\n+    targets: [\r\n+      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n+\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger:\"productDropdown\",\r\n+    event:\"change\",\r\n+    targets:[\r\n+      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger:\"quantityBox\",\r\n+    event:\"input\",\r\n+    targets:[\r\n+     { container: \"#toggleSwitchGroup\", field: \".form-check-input\" }  \r\n+    ]\r\n+  }\r\n+];\r\n+\r\n+function hideAndReset(triggerSelector, eventType = null) {\r\n+  dependencies.forEach(dep => {\r\n+    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+      dep.targets.forEach((t, index) => {\r\n+        const container = document.querySelector(t.container);\r\n+        if (container) {\r\n+          // If it's the *direct child* (first dependent) → only reset value\r\n+          if (index === 0) {\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+              }\r\n+            }\r\n+          } else {\r\n+            // Other deeper dependents → hide + reset\r\n+            container.style.display = \"none\";\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                 else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n+                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n+                    field.checked = false;   \r\n+                  } else {\r\n+                    field.value = \"\";\r\n+                  }\r\n+                }\r\n+                else if (field.tagName === \"BUTTON\") {\r\n+                 field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n+                }\r\n+              }\r\n+            }\r\n+          }\r\n+        }\r\n+      });\r\n+    }\r\n+  });\r\n+    syncEditorWithUI();\r\n+}\r\n+function syncEditorWithUI() {\r\n+    if (!editor) return;\r\n+\r\n+    let currentJSON;\r\n+    try { currentJSON = JSON.parse(editor.getValue()); } catch { currentJSON = {}; }\r\n+\r\n+    const uiFields = document.querySelectorAll(\"[data-field]\");\r\n+\r\n+    uiFields.forEach(field => {\r\n+        const key = field.dataset.field;\r\n+\r\n+        // Keep main parent 'script_type' always\r\n+        if (key === \"script_type\") return;\r\n+\r\n+        if (field.offsetParent !== null) {\r\n+            // visible → update JSON\r\n+            if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n+                currentJSON[key] = field.checked;\r\n+            } else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\" || field.tagName === \"SELECT\") {\r\n+                currentJSON[key] = field.value; // add/update visible fields\r\n+            }\r\n+        } else {\r\n+            // hidden → reset boolean or remove text/number field\r\n+            if (typeof currentJSON[key] === \"boolean\") currentJSON[key] = false;\r\n+            else delete currentJSON[key]; // safe to delete if hidden and not main parent\r\n+        }\r\n+    });\r\n+\r\n+    editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n+}\r\n+\r\n+\r\n+// function hideAndReset(triggerSelector, eventType = null) {\r\n+//   dependencies.forEach(dep => {\r\n+//     // match trigger, ignore eventType if null\r\n+//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+//       dep.targets.forEach(t => {\r\n+//         const container = document.querySelector(t.container);\r\n+//         if (container) {\r\n+//           // hide the container\r\n+//           container.style.display = \"none\";\r\n+\r\n+//           // reset child field if provided\r\n+//           if (t.field) {\r\n+//             const field = container.querySelector(t.field);\r\n+//             if (field) {\r\n+//               if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+//               else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+//             }\r\n+//           }\r\n+//         }\r\n+//       });\r\n+//     }\r\n+//   });\r\n+// }\r\n+\r\n+\r\n+// document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n+//     hideAndReset(\"#atmdropdown\",change)\r\n+// })\r\n+\r\n+let scriptType = document.getElementById(\"dropdown1\");\r\n+dropdown1.addEventListener(\"change\", function () {\r\n+  upsertJson(\"script_type\",this.value,true);\r\n+  upsertJson(\"is_rollover\",\"false\",false);\r\n+  hideAndReset(\"#dropdown1\",\"change\")\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" ||JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\" ) {\r\n+        document.getElementById(\"optionSelection\").style.display = \"block\";\r\n+        document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n+    }\r\n+    else {\r\n+        document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n+        document.getElementById(\"optionSelection\").style.display = \"none\";\r\n+    }\r\n+})\r\n+\r\n+let searchInput=document.getElementById(\"search\");\r\n+const dropdown = document.getElementById('dropdown');\r\n+let token=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n+document.addEventListener('click', (e) => {\r\n+  // Check if click is outside the input and dropdown\r\n+  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n+    dropdown.style.display = 'none';\r\n+  }\r\n+});\r\n+\r\n+// Simple debounce function\r\n+function debounce(func, delay) {\r\n+  let timer;\r\n+  return function (...args) {\r\n+    clearTimeout(timer);\r\n+    timer = setTimeout(() => func.apply(this, args), delay);\r\n+  };\r\n+}\r\n+\r\n+// Fetch API suggestions\r\n+async function fetchSuggestions(query) {\r\n+  if (!query) {\r\n+    dropdown.style.display = 'none';\r\n+    dropdown.innerHTML = '';\r\n+    return;\r\n+  }\r\n+\r\n+  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n+  try {\r\n+    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n+      method: \"POST\",\r\n+      headers: {\r\n+        \"Content-Type\": \"application/json\",\r\n+        \"Authorization\": token\r\n+      },\r\n+      body: JSON.stringify({\r\n+        script: query,\r\n+        type: scriptType\r\n+      })\r\n+    });\r\n+\r\n+    const data = await res.json();\r\n+    const suggestions = data.data;\r\n+\r\n+\r\n+    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n+    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n+\r\n+  }\r\n+  catch (err) {\r\n+    console.error(err);\r\n+  }\r\n+}\r\n+\r\n+// Add click selection\r\n+dropdown?.addEventListener('click', e => {\r\n+  if (e.target.tagName === 'LI') {\r\n+    let selectedText = e.target.textContent;\r\n+    searchInput.value = selectedText;\r\n+    // remove everything after \"(\"\r\n+    if (selectedText.includes(\"(\")) {\r\n+      selectedText = selectedText.split(\"(\")[0];\r\n+    }\r\n+    dropdown.style.display = 'none';\r\n+    upsertJson(\"script\",selectedText,true);\r\n+    if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n+      document.getElementById(\"productType\").style.display=\"block\";\r\n+    }\r\n+  }\r\n+});\r\n+\r\n+searchInput.addEventListener('input', debounce(e => {\r\n+  fetchSuggestions(e.target.value);\r\n+}, 300));\r\n+\r\n+\r\n+\r\n+  console.log(\"enter\");\r\n+ document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n+  upsertJson(\"product\",this.value,true);\r\n+  hideAndReset(\"#productDropdown\",\"change\");\r\n+  if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n+  document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n+  document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n+    upsertJson(\"quantity\",this.value,false)\r\n+    if(document.getElementById(\"quantityBox\")?.value<=0){\r\n+      document.getElementById(\"quantityError\").style.display=\"block\";\r\n+    document.getElementById(\"BtnGroup\").style.display=\"none\";\r\n+    document.getElementById(\"toggleSwitchGroup\").style.display=\"none\";\r\n+    }\r\n+    else{\r\n+    document.getElementById(\"quantityError\").style.display=\"none\";\r\n+    document.getElementById(\"BtnGroup\").style.display=\"block\";\r\n+    document.getElementById(\"toggleSwitchGroup\").style.display=\"block\";\r\n+    }\r\n+    let buy=document.getElementsByClassName(\"buyBtn\")[0];\r\n+    let sell=document.getElementsByClassName(\"sellBtn\")[0];\r\n+    \r\n+      buy.addEventListener(\"click\",function(){\r\n+        buy.style.background=\"green\";\r\n+        sell.style.background=\"\";\r\n+        upsertJson(\"transaction_type\",\"BUY\",true)\r\n+      })\r\n+      sell.addEventListener(\"click\",function(){\r\n+        sell.style.background=\"red\";\r\n+        buy.style.background=\"\";\r\n+        upsertJson(\"transaction_type\",\"SELL\",true)\r\n+      })\r\n+\r\n+  })\r\n+}\r\n+})\r\n"
                },
                {
                    "date": 1756331206157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,446 @@\n+var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n+var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n+    return new bootstrap.Tooltip(tooltipTriggerEl)\r\n+\r\n+});\r\n+\r\n+let editor;\r\n+\r\n+require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n+\r\n+require([\"vs/editor/editor.main\"], function () {\r\n+    window.getCodeSnippet = getCodeSnippet;\r\n+\r\n+    const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n+\r\n+    function getCodeSnippet(activeType) {\r\n+if (activeType === \"strategy_order\") {\r\n+    return `{\r\n+    \"type\": \"strategy_order\",\r\n+    \"exit_on_opposite\": false,\r\n+    \"is_tgt\": false,\r\n+    \"is_sl\": false,\r\n+    \"is_trail_set\": false,\r\n+    \"position_size\": \"{{strategy.position_size}}\",\r\n+    \"transaction_type\": \"{{strategy.order.action}}\"\r\n+}`;\r\n+} \r\n+else {\r\n+    return `{\r\n+    \"type\": \"${activeType}\"\r\n+}`;\r\n+}\r\n+    }\r\n+\r\n+    editor = monaco.editor.create(container, {\r\n+    value: getCodeSnippet(\"strategy_order\"),\r\n+    language: \"json\",\r\n+    theme: \"vs-dark\",\r\n+    automaticLayout: true,\r\n+    suggestOnTriggerCharacters: false,\r\n+    quickSuggestions: false,\r\n+    wordBasedSuggestions: false,\r\n+    parameterHints: { enabled: false },\r\n+    inlineSuggest: { enabled: false },\r\n+    fontSize: 18,\r\n+    minimap: { enabled: false },\r\n+    wordWrap: \"on\",\r\n+    scrollbar: {\r\n+    vertical: \"hidden\",\r\n+    horizontal: \"hidden\",\r\n+    handleMouseWheel: false\r\n+        },\r\n+    });\r\n+      \r\n+    \r\n+});\r\n+\r\n+\r\n+\r\n+\r\n+let activeNav = \"strategy\"; // default active\r\n+\r\n+const navLinks = document.querySelectorAll(\" .nav-link\");\r\n+\r\n+\r\n+navLinks.forEach(link => {\r\n+    link.addEventListener(\"click\", (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        // remove active from all\r\n+        navLinks.forEach(l => l.classList.remove(\"active\"));\r\n+\r\n+        // set active on clicked\r\n+        link.classList.add(\"active\");\r\n+        // update global variable\r\n+        activeNav = link.getAttribute(\"data-type\");\r\n+        localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n+        console.log(\"Active Nav:\", activeNav);\r\n+        editor.setValue(getCodeSnippet(activeNav));\r\n+    });\r\n+});\r\n+\r\n+// let originalcode;\r\n+\r\n+// if(activeNavItem===\"strategy_order\"){\r\n+//     originalcode=`{\r\n+//     \"type\": \"strategy_order\",\r\n+//     \"exit_on_opposite\": false,\r\n+//     \"is_tgt\": false,\r\n+//     \"is_sl\": false,\r\n+//     \"is_trail_set\": false,\r\n+//     \"position_size\": \"{{strategy.position_size}}\",\r\n+//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n+\r\n+// }`\r\n+// }\r\n+// else{\r\n+//     originalcode=`{\r\n+//     \"type\": \"${activeNavItem}\"\r\n+// }`\r\n+// }\r\n+\r\n+document.getElementById(\"deleteBtn\").addEventListener(\"click\",function(){\r\n+  let activeNavItem=JSON.parse(localStorage.getItem(\"activenav\"))\r\n+  editor.setValue(getCodeSnippet(activeNavItem));\r\n+\r\n+  // reset dropdown to index 0\r\n+  let scriptType = document.getElementById(\"dropdown1\");\r\n+  if (scriptType) scriptType.selectedIndex = 0;\r\n+})\r\n+\r\n+const copyBtn = document.getElementById(\"copyBtn\");\r\n+\r\n+copyBtn?.addEventListener(\"click\", function () {\r\n+  if (!editor) return;\r\n+\r\n+  // Get the current editor content\r\n+  const code = editor.getValue();\r\n+\r\n+  // Use navigator clipboard API to copy\r\n+  navigator.clipboard.writeText(code)\r\n+    .then(() => {\r\n+      alert(\"Code copied to clipboard!\");\r\n+    })\r\n+    .catch(err => {\r\n+      console.error(\"Failed to copy: \", err);\r\n+    });\r\n+});\r\n+\r\n+function upsertJson(key, value) {\r\n+  if (!editor) return;\r\n+\r\n+  let code = editor.getValue();\r\n+  let obj;\r\n+\r\n+  try {\r\n+    obj = JSON.parse(code);\r\n+  } catch (e) {\r\n+    console.error(\"Invalid JSON in editor:\", e);\r\n+    return;\r\n+  }\r\n+\r\n+  if (value === \"\" || value == null) {\r\n+    delete obj[key]; // remove key if empty\r\n+  } else {\r\n+    let parsedVal;\r\n+\r\n+    if (value === \"true\") parsedVal = true;\r\n+    else if (value === \"false\") parsedVal = false;\r\n+    else if (value === \"null\") parsedVal = null;\r\n+    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n+    else parsedVal = value; // string\r\n+\r\n+    obj[key] = parsedVal;\r\n+  }\r\n+\r\n+  editor.setValue(JSON.stringify(obj, null, 2));\r\n+}\r\n+\r\n+\r\n+//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n+\r\n+\r\n+// helper function if you need it elsewhere\r\n+//   function getActiveNav() {\r\n+//     return activeNav;\r\n+//   }\r\n+\r\n+//   console.log(getActiveNav())\r\n+\r\n+// dependency mapping\r\n+const dependencies = [\r\n+  \r\n+  {\r\n+    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n+      {container:'#scriptsearchbox' , field:\"#search\"},\r\n+      {container:\"#productType\",field:\"#productDropdown\"},\r\n+      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n+      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" } ,\r\n+      { container: \"#BtnGroup\", field: null } \r\n+\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#atmdropdown\",\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#premiumbox\",\r\n+    event: \"input\",\r\n+    targets: [\r\n+      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n+\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger:\"productDropdown\",\r\n+    event:\"change\",\r\n+    targets:[\r\n+      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger:\"quantityBox\",\r\n+    event:\"input\",\r\n+    targets:[\r\n+     { container: \"#toggleSwitchGroup\", field: \".form-check-input\" }  \r\n+    ]\r\n+  }\r\n+];\r\n+\r\n+function hideAndReset(triggerSelector, eventType = null) {\r\n+  dependencies.forEach(dep => {\r\n+    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+      dep.targets.forEach((t, index) => {\r\n+        const container = document.querySelector(t.container);\r\n+        if (container) {\r\n+          // If it's the *direct child* (first dependent) → only reset value\r\n+          if (index === 0) {\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+              }\r\n+            }\r\n+          } else {\r\n+            // Other deeper dependents → hide + reset\r\n+            container.style.display = \"none\";\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                 else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n+                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n+                    field.checked = false;   \r\n+                  } else {\r\n+                    field.value = \"\";\r\n+                  }\r\n+                }\r\n+                else if (field.tagName === \"BUTTON\") {\r\n+                 field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n+                }\r\n+              }\r\n+            }\r\n+          }\r\n+        }\r\n+      });\r\n+    }\r\n+  });\r\n+    syncEditorWithUI();\r\n+}\r\n+function syncEditorWithUI() {\r\n+    if (!editor) return;\r\n+\r\n+    let currentJSON;\r\n+    try { currentJSON = JSON.parse(editor.getValue()); } catch { currentJSON = {}; }\r\n+\r\n+    const uiFields = document.querySelectorAll(\"[data-field]\");\r\n+\r\n+    uiFields.forEach(field => {\r\n+        const key = field.dataset.field;\r\n+\r\n+        // Keep main parent 'script_type' always\r\n+        if (key === \"script_type\") return;\r\n+\r\n+        if (field.offsetParent !== null) {\r\n+            // visible → update JSON\r\n+            if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n+                currentJSON[key] = field.checked;\r\n+            } else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\" || field.tagName === \"SELECT\") {\r\n+                currentJSON[key] = field.value; // add/update visible fields\r\n+            }\r\n+        } else {\r\n+            // hidden → reset boolean or remove text/number field\r\n+            if (typeof currentJSON[key] === \"boolean\") currentJSON[key] = false;\r\n+            else delete currentJSON[key]; // safe to delete if hidden and not main parent\r\n+        }\r\n+    });\r\n+\r\n+    editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n+}\r\n+\r\n+\r\n+// function hideAndReset(triggerSelector, eventType = null) {\r\n+//   dependencies.forEach(dep => {\r\n+//     // match trigger, ignore eventType if null\r\n+//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+//       dep.targets.forEach(t => {\r\n+//         const container = document.querySelector(t.container);\r\n+//         if (container) {\r\n+//           // hide the container\r\n+//           container.style.display = \"none\";\r\n+\r\n+//           // reset child field if provided\r\n+//           if (t.field) {\r\n+//             const field = container.querySelector(t.field);\r\n+//             if (field) {\r\n+//               if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+//               else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+//             }\r\n+//           }\r\n+//         }\r\n+//       });\r\n+//     }\r\n+//   });\r\n+// }\r\n+\r\n+\r\n+// document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n+//     hideAndReset(\"#atmdropdown\",change)\r\n+// })\r\n+\r\n+let scriptType = document.getElementById(\"dropdown1\");\r\n+dropdown1.addEventListener(\"change\", function () {\r\n+  upsertJson(\"script_type\",this.value,true);\r\n+  upsertJson(\"is_rollover\",\"false\",false);\r\n+  hideAndReset(\"#dropdown1\",\"change\")\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" ||JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\" ) {\r\n+        document.getElementById(\"optionSelection\").style.display = \"block\";\r\n+        document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n+    }\r\n+    else {\r\n+        document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n+        document.getElementById(\"optionSelection\").style.display = \"none\";\r\n+    }\r\n+})\r\n+\r\n+let searchInput=document.getElementById(\"search\");\r\n+const dropdown = document.getElementById('dropdown');\r\n+let token=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n+document.addEventListener('click', (e) => {\r\n+  // Check if click is outside the input and dropdown\r\n+  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n+    dropdown.style.display = 'none';\r\n+  }\r\n+});\r\n+\r\n+// Simple debounce function\r\n+function debounce(func, delay) {\r\n+  let timer;\r\n+  return function (...args) {\r\n+    clearTimeout(timer);\r\n+    timer = setTimeout(() => func.apply(this, args), delay);\r\n+  };\r\n+}\r\n+\r\n+// Fetch API suggestions\r\n+async function fetchSuggestions(query) {\r\n+  if (!query) {\r\n+    dropdown.style.display = 'none';\r\n+    dropdown.innerHTML = '';\r\n+    return;\r\n+  }\r\n+\r\n+  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n+  try {\r\n+    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n+      method: \"POST\",\r\n+      headers: {\r\n+        \"Content-Type\": \"application/json\",\r\n+        \"Authorization\": token\r\n+      },\r\n+      body: JSON.stringify({\r\n+        script: query,\r\n+        type: scriptType\r\n+      })\r\n+    });\r\n+\r\n+    const data = await res.json();\r\n+    const suggestions = data.data;\r\n+\r\n+\r\n+    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n+    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n+\r\n+  }\r\n+  catch (err) {\r\n+    console.error(err);\r\n+  }\r\n+}\r\n+\r\n+// Add click selection\r\n+dropdown?.addEventListener('click', e => {\r\n+  if (e.target.tagName === 'LI') {\r\n+    let selectedText = e.target.textContent;\r\n+    searchInput.value = selectedText;\r\n+    // remove everything after \"(\"\r\n+    if (selectedText.includes(\"(\")) {\r\n+      selectedText = selectedText.split(\"(\")[0];\r\n+    }\r\n+    dropdown.style.display = 'none';\r\n+    upsertJson(\"script\",selectedText,true);\r\n+    if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n+      document.getElementById(\"productType\").style.display=\"block\";\r\n+    }\r\n+  }\r\n+});\r\n+\r\n+searchInput.addEventListener('input', debounce(e => {\r\n+  fetchSuggestions(e.target.value);\r\n+}, 300));\r\n+\r\n+\r\n+\r\n+  console.log(\"enter\");\r\n+ document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n+  upsertJson(\"product\",this.value,true);\r\n+  hideAndReset(\"#productDropdown\",\"change\");\r\n+  if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n+  document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n+  document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n+    upsertJson(\"quantity\",this.value,false)\r\n+    if(document.getElementById(\"quantityBox\")?.value<=0){\r\n+      document.getElementById(\"quantityError\").style.display=\"block\";\r\n+    document.getElementById(\"BtnGroup\").style.display=\"none\";\r\n+    document.getElementById(\"toggleSwitchGroup\").style.display=\"none\";\r\n+    }\r\n+    else{\r\n+    document.getElementById(\"quantityError\").style.display=\"none\";\r\n+    document.getElementById(\"BtnGroup\").style.display=\"block\";\r\n+    document.getElementById(\"toggleSwitchGroup\").style.display=\"block\";\r\n+    }\r\n+    let buy=document.getElementsByClassName(\"buyBtn\")[0];\r\n+    let sell=document.getElementsByClassName(\"sellBtn\")[0];\r\n+    \r\n+      buy.addEventListener(\"click\",function(){\r\n+        buy.style.background=\"green\";\r\n+        sell.style.background=\"\";\r\n+        upsertJson(\"transaction_type\",\"BUY\",true)\r\n+      })\r\n+      sell.addEventListener(\"click\",function(){\r\n+        sell.style.background=\"red\";\r\n+        buy.style.background=\"\";\r\n+        upsertJson(\"transaction_type\",\"SELL\",true)\r\n+      })\r\n+\r\n+  })\r\n+}\r\n+})\r\n"
                },
                {
                    "date": 1756331228759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     parameterHints: { enabled: false },\r\n     inlineSuggest: { enabled: false },\r\n     fontSize: 18,\r\n     minimap: { enabled: false },\r\n-    wordWrap: \"on\",\r\n+    wordWrap: \"off\",\r\n     scrollbar: {\r\n     vertical: \"hidden\",\r\n     horizontal: \"hidden\",\r\n     handleMouseWheel: false\r\n@@ -443,896 +443,4 @@\n \r\n   })\r\n }\r\n })\r\n-var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n-var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n-    return new bootstrap.Tooltip(tooltipTriggerEl)\r\n-\r\n-});\r\n-\r\n-let editor;\r\n-\r\n-require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n-\r\n-require([\"vs/editor/editor.main\"], function () {\r\n-    window.getCodeSnippet = getCodeSnippet;\r\n-\r\n-    const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n-\r\n-    function getCodeSnippet(activeType) {\r\n-if (activeType === \"strategy_order\") {\r\n-    return `{\r\n-    \"type\": \"strategy_order\",\r\n-    \"exit_on_opposite\": false,\r\n-    \"is_tgt\": false,\r\n-    \"is_sl\": false,\r\n-    \"is_trail_set\": false,\r\n-    \"position_size\": \"{{strategy.position_size}}\",\r\n-    \"transaction_type\": \"{{strategy.order.action}}\"\r\n-}`;\r\n-} \r\n-else {\r\n-    return `{\r\n-    \"type\": \"${activeType}\"\r\n-}`;\r\n-}\r\n-    }\r\n-\r\n-    editor = monaco.editor.create(container, {\r\n-    value: getCodeSnippet(\"strategy_order\"),\r\n-    language: \"json\",\r\n-    theme: \"vs-dark\",\r\n-    automaticLayout: false,\r\n-    suggestOnTriggerCharacters: false,\r\n-    quickSuggestions: false,\r\n-    wordBasedSuggestions: false,\r\n-    parameterHints: { enabled: false },\r\n-    inlineSuggest: { enabled: false },\r\n-    fontSize: 18,\r\n-    minimap: { enabled: false },\r\n-    wordWrap: \"on\",\r\n-    scrollbar: {\r\n-    vertical: \"hidden\",\r\n-    horizontal: \"hidden\",\r\n-    handleMouseWheel: false\r\n-        },\r\n-    });\r\n-      \r\n-    \r\n-});\r\n-\r\n-\r\n-\r\n-\r\n-let activeNav = \"strategy\"; // default active\r\n-\r\n-const navLinks = document.querySelectorAll(\" .nav-link\");\r\n-\r\n-\r\n-navLinks.forEach(link => {\r\n-    link.addEventListener(\"click\", (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        // remove active from all\r\n-        navLinks.forEach(l => l.classList.remove(\"active\"));\r\n-\r\n-        // set active on clicked\r\n-        link.classList.add(\"active\");\r\n-        // update global variable\r\n-        activeNav = link.getAttribute(\"data-type\");\r\n-        localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n-        console.log(\"Active Nav:\", activeNav);\r\n-        editor.setValue(getCodeSnippet(activeNav));\r\n-    });\r\n-});\r\n-\r\n-// let originalcode;\r\n-\r\n-// if(activeNavItem===\"strategy_order\"){\r\n-//     originalcode=`{\r\n-//     \"type\": \"strategy_order\",\r\n-//     \"exit_on_opposite\": false,\r\n-//     \"is_tgt\": false,\r\n-//     \"is_sl\": false,\r\n-//     \"is_trail_set\": false,\r\n-//     \"position_size\": \"{{strategy.position_size}}\",\r\n-//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n-\r\n-// }`\r\n-// }\r\n-// else{\r\n-//     originalcode=`{\r\n-//     \"type\": \"${activeNavItem}\"\r\n-// }`\r\n-// }\r\n-\r\n-document.getElementById(\"deleteBtn\").addEventListener(\"click\",function(){\r\n-  let activeNavItem=JSON.parse(localStorage.getItem(\"activenav\"))\r\n-  editor.setValue(getCodeSnippet(activeNavItem));\r\n-\r\n-  // reset dropdown to index 0\r\n-  let scriptType = document.getElementById(\"dropdown1\");\r\n-  if (scriptType) scriptType.selectedIndex = 0;\r\n-})\r\n-\r\n-const copyBtn = document.getElementById(\"copyBtn\");\r\n-\r\n-copyBtn?.addEventListener(\"click\", function () {\r\n-  if (!editor) return;\r\n-\r\n-  // Get the current editor content\r\n-  const code = editor.getValue();\r\n-\r\n-  // Use navigator clipboard API to copy\r\n-  navigator.clipboard.writeText(code)\r\n-    .then(() => {\r\n-      alert(\"Code copied to clipboard!\");\r\n-    })\r\n-    .catch(err => {\r\n-      console.error(\"Failed to copy: \", err);\r\n-    });\r\n-});\r\n-\r\n-function upsertJson(key, value) {\r\n-  if (!editor) return;\r\n-\r\n-  let code = editor.getValue();\r\n-  let obj;\r\n-\r\n-  try {\r\n-    obj = JSON.parse(code);\r\n-  } catch (e) {\r\n-    console.error(\"Invalid JSON in editor:\", e);\r\n-    return;\r\n-  }\r\n-\r\n-  if (value === \"\" || value == null) {\r\n-    delete obj[key]; // remove key if empty\r\n-  } else {\r\n-    let parsedVal;\r\n-\r\n-    if (value === \"true\") parsedVal = true;\r\n-    else if (value === \"false\") parsedVal = false;\r\n-    else if (value === \"null\") parsedVal = null;\r\n-    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n-    else parsedVal = value; // string\r\n-\r\n-    obj[key] = parsedVal;\r\n-  }\r\n-\r\n-  editor.setValue(JSON.stringify(obj, null, 2));\r\n-}\r\n-\r\n-\r\n-//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n-\r\n-\r\n-// helper function if you need it elsewhere\r\n-//   function getActiveNav() {\r\n-//     return activeNav;\r\n-//   }\r\n-\r\n-//   console.log(getActiveNav())\r\n-\r\n-// dependency mapping\r\n-const dependencies = [\r\n-  \r\n-  {\r\n-    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n-      {container:'#scriptsearchbox' , field:\"#search\"},\r\n-      {container:\"#productType\",field:\"#productDropdown\"},\r\n-      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n-      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" } ,\r\n-      { container: \"#BtnGroup\", field: null } \r\n-\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#atmdropdown\",\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#premiumbox\",\r\n-    event: \"input\",\r\n-    targets: [\r\n-      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n-\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger:\"productDropdown\",\r\n-    event:\"change\",\r\n-    targets:[\r\n-      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger:\"quantityBox\",\r\n-    event:\"input\",\r\n-    targets:[\r\n-     { container: \"#toggleSwitchGroup\", field: \".form-check-input\" }  \r\n-    ]\r\n-  }\r\n-];\r\n-\r\n-function hideAndReset(triggerSelector, eventType = null) {\r\n-  dependencies.forEach(dep => {\r\n-    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-      dep.targets.forEach((t, index) => {\r\n-        const container = document.querySelector(t.container);\r\n-        if (container) {\r\n-          // If it's the *direct child* (first dependent) → only reset value\r\n-          if (index === 0) {\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-              }\r\n-            }\r\n-          } else {\r\n-            // Other deeper dependents → hide + reset\r\n-            container.style.display = \"none\";\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                 else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n-                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-                    field.checked = false;   \r\n-                  } else {\r\n-                    field.value = \"\";\r\n-                  }\r\n-                }\r\n-                else if (field.tagName === \"BUTTON\") {\r\n-                 field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n-                }\r\n-              }\r\n-            }\r\n-          }\r\n-        }\r\n-      });\r\n-    }\r\n-  });\r\n-    syncEditorWithUI();\r\n-}\r\n-function syncEditorWithUI() {\r\n-    if (!editor) return;\r\n-\r\n-    let currentJSON;\r\n-    try { currentJSON = JSON.parse(editor.getValue()); } catch { currentJSON = {}; }\r\n-\r\n-    const uiFields = document.querySelectorAll(\"[data-field]\");\r\n-\r\n-    uiFields.forEach(field => {\r\n-        const key = field.dataset.field;\r\n-\r\n-        // Keep main parent 'script_type' always\r\n-        if (key === \"script_type\") return;\r\n-\r\n-        if (field.offsetParent !== null) {\r\n-            // visible → update JSON\r\n-            if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-                currentJSON[key] = field.checked;\r\n-            } else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\" || field.tagName === \"SELECT\") {\r\n-                currentJSON[key] = field.value; // add/update visible fields\r\n-            }\r\n-        } else {\r\n-            // hidden → reset boolean or remove text/number field\r\n-            if (typeof currentJSON[key] === \"boolean\") currentJSON[key] = false;\r\n-            else delete currentJSON[key]; // safe to delete if hidden and not main parent\r\n-        }\r\n-    });\r\n-\r\n-    editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n-}\r\n-\r\n-\r\n-// function hideAndReset(triggerSelector, eventType = null) {\r\n-//   dependencies.forEach(dep => {\r\n-//     // match trigger, ignore eventType if null\r\n-//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-//       dep.targets.forEach(t => {\r\n-//         const container = document.querySelector(t.container);\r\n-//         if (container) {\r\n-//           // hide the container\r\n-//           container.style.display = \"none\";\r\n-\r\n-//           // reset child field if provided\r\n-//           if (t.field) {\r\n-//             const field = container.querySelector(t.field);\r\n-//             if (field) {\r\n-//               if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-//               else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-//             }\r\n-//           }\r\n-//         }\r\n-//       });\r\n-//     }\r\n-//   });\r\n-// }\r\n-\r\n-\r\n-// document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n-//     hideAndReset(\"#atmdropdown\",change)\r\n-// })\r\n-\r\n-let scriptType = document.getElementById(\"dropdown1\");\r\n-dropdown1.addEventListener(\"change\", function () {\r\n-  upsertJson(\"script_type\",this.value,true);\r\n-  upsertJson(\"is_rollover\",\"false\",false);\r\n-  hideAndReset(\"#dropdown1\",\"change\")\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" ||JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\" ) {\r\n-        document.getElementById(\"optionSelection\").style.display = \"block\";\r\n-        document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n-    }\r\n-    else {\r\n-        document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n-        document.getElementById(\"optionSelection\").style.display = \"none\";\r\n-    }\r\n-})\r\n-\r\n-let searchInput=document.getElementById(\"search\");\r\n-const dropdown = document.getElementById('dropdown');\r\n-let token=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n-document.addEventListener('click', (e) => {\r\n-  // Check if click is outside the input and dropdown\r\n-  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n-    dropdown.style.display = 'none';\r\n-  }\r\n-});\r\n-\r\n-// Simple debounce function\r\n-function debounce(func, delay) {\r\n-  let timer;\r\n-  return function (...args) {\r\n-    clearTimeout(timer);\r\n-    timer = setTimeout(() => func.apply(this, args), delay);\r\n-  };\r\n-}\r\n-\r\n-// Fetch API suggestions\r\n-async function fetchSuggestions(query) {\r\n-  if (!query) {\r\n-    dropdown.style.display = 'none';\r\n-    dropdown.innerHTML = '';\r\n-    return;\r\n-  }\r\n-\r\n-  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n-  try {\r\n-    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n-      method: \"POST\",\r\n-      headers: {\r\n-        \"Content-Type\": \"application/json\",\r\n-        \"Authorization\": token\r\n-      },\r\n-      body: JSON.stringify({\r\n-        script: query,\r\n-        type: scriptType\r\n-      })\r\n-    });\r\n-\r\n-    const data = await res.json();\r\n-    const suggestions = data.data;\r\n-\r\n-\r\n-    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n-    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n-\r\n-  }\r\n-  catch (err) {\r\n-    console.error(err);\r\n-  }\r\n-}\r\n-\r\n-// Add click selection\r\n-dropdown?.addEventListener('click', e => {\r\n-  if (e.target.tagName === 'LI') {\r\n-    let selectedText = e.target.textContent;\r\n-    searchInput.value = selectedText;\r\n-    // remove everything after \"(\"\r\n-    if (selectedText.includes(\"(\")) {\r\n-      selectedText = selectedText.split(\"(\")[0];\r\n-    }\r\n-    dropdown.style.display = 'none';\r\n-    upsertJson(\"script\",selectedText,true);\r\n-    if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n-      document.getElementById(\"productType\").style.display=\"block\";\r\n-    }\r\n-  }\r\n-});\r\n-\r\n-searchInput.addEventListener('input', debounce(e => {\r\n-  fetchSuggestions(e.target.value);\r\n-}, 300));\r\n-\r\n-\r\n-\r\n-  console.log(\"enter\");\r\n- document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n-  upsertJson(\"product\",this.value,true);\r\n-  hideAndReset(\"#productDropdown\",\"change\");\r\n-  if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n-  document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n-  document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n-    upsertJson(\"quantity\",this.value,false)\r\n-    if(document.getElementById(\"quantityBox\")?.value<=0){\r\n-      document.getElementById(\"quantityError\").style.display=\"block\";\r\n-    document.getElementById(\"BtnGroup\").style.display=\"none\";\r\n-    document.getElementById(\"toggleSwitchGroup\").style.display=\"none\";\r\n-    }\r\n-    else{\r\n-    document.getElementById(\"quantityError\").style.display=\"none\";\r\n-    document.getElementById(\"BtnGroup\").style.display=\"block\";\r\n-    document.getElementById(\"toggleSwitchGroup\").style.display=\"block\";\r\n-    }\r\n-    let buy=document.getElementsByClassName(\"buyBtn\")[0];\r\n-    let sell=document.getElementsByClassName(\"sellBtn\")[0];\r\n-    \r\n-      buy.addEventListener(\"click\",function(){\r\n-        buy.style.background=\"green\";\r\n-        sell.style.background=\"\";\r\n-        upsertJson(\"transaction_type\",\"BUY\",true)\r\n-      })\r\n-      sell.addEventListener(\"click\",function(){\r\n-        sell.style.background=\"red\";\r\n-        buy.style.background=\"\";\r\n-        upsertJson(\"transaction_type\",\"SELL\",true)\r\n-      })\r\n-\r\n-  })\r\n-}\r\n-})\r\n-var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n-var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n-    return new bootstrap.Tooltip(tooltipTriggerEl)\r\n-\r\n-});\r\n-\r\n-let editor;\r\n-\r\n-require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n-\r\n-require([\"vs/editor/editor.main\"], function () {\r\n-    window.getCodeSnippet = getCodeSnippet;\r\n-\r\n-    const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n-\r\n-    function getCodeSnippet(activeType) {\r\n-if (activeType === \"strategy_order\") {\r\n-    return `{\r\n-    \"type\": \"strategy_order\",\r\n-    \"exit_on_opposite\": false,\r\n-    \"is_tgt\": false,\r\n-    \"is_sl\": false,\r\n-    \"is_trail_set\": false,\r\n-    \"position_size\": \"{{strategy.position_size}}\",\r\n-    \"transaction_type\": \"{{strategy.order.action}}\"\r\n-}`;\r\n-} \r\n-else {\r\n-    return `{\r\n-    \"type\": \"${activeType}\"\r\n-}`;\r\n-}\r\n-    }\r\n-\r\n-    editor = monaco.editor.create(container, {\r\n-    value: getCodeSnippet(\"strategy_order\"),\r\n-    language: \"json\",\r\n-    theme: \"vs-dark\",\r\n-    automaticLayout: true,\r\n-    suggestOnTriggerCharacters: false,\r\n-    quickSuggestions: false,\r\n-    wordBasedSuggestions: false,\r\n-    parameterHints: { enabled: false },\r\n-    inlineSuggest: { enabled: false },\r\n-    fontSize: 18,\r\n-    minimap: { enabled: false },\r\n-    wordWrap: \"onn\",\r\n-    scrollbar: {\r\n-    vertical: \"hidden\",\r\n-    horizontal: \"hidden\",\r\n-    handleMouseWheel: false\r\n-        },\r\n-    });\r\n-      \r\n-    \r\n-});\r\n-\r\n-\r\n-\r\n-\r\n-let activeNav = \"strategy\"; // default active\r\n-\r\n-const navLinks = document.querySelectorAll(\" .nav-link\");\r\n-\r\n-\r\n-navLinks.forEach(link => {\r\n-    link.addEventListener(\"click\", (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        // remove active from all\r\n-        navLinks.forEach(l => l.classList.remove(\"active\"));\r\n-\r\n-        // set active on clicked\r\n-        link.classList.add(\"active\");\r\n-        // update global variable\r\n-        activeNav = link.getAttribute(\"data-type\");\r\n-        localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n-        console.log(\"Active Nav:\", activeNav);\r\n-        editor.setValue(getCodeSnippet(activeNav));\r\n-    });\r\n-});\r\n-\r\n-// let originalcode;\r\n-\r\n-// if(activeNavItem===\"strategy_order\"){\r\n-//     originalcode=`{\r\n-//     \"type\": \"strategy_order\",\r\n-//     \"exit_on_opposite\": false,\r\n-//     \"is_tgt\": false,\r\n-//     \"is_sl\": false,\r\n-//     \"is_trail_set\": false,\r\n-//     \"position_size\": \"{{strategy.position_size}}\",\r\n-//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n-\r\n-// }`\r\n-// }\r\n-// else{\r\n-//     originalcode=`{\r\n-//     \"type\": \"${activeNavItem}\"\r\n-// }`\r\n-// }\r\n-\r\n-document.getElementById(\"deleteBtn\").addEventListener(\"click\",function(){\r\n-  let activeNavItem=JSON.parse(localStorage.getItem(\"activenav\"))\r\n-  editor.setValue(getCodeSnippet(activeNavItem));\r\n-\r\n-  // reset dropdown to index 0\r\n-  let scriptType = document.getElementById(\"dropdown1\");\r\n-  if (scriptType) scriptType.selectedIndex = 0;\r\n-})\r\n-\r\n-const copyBtn = document.getElementById(\"copyBtn\");\r\n-\r\n-copyBtn?.addEventListener(\"click\", function () {\r\n-  if (!editor) return;\r\n-\r\n-  // Get the current editor content\r\n-  const code = editor.getValue();\r\n-\r\n-  // Use navigator clipboard API to copy\r\n-  navigator.clipboard.writeText(code)\r\n-    .then(() => {\r\n-      alert(\"Code copied to clipboard!\");\r\n-    })\r\n-    .catch(err => {\r\n-      console.error(\"Failed to copy: \", err);\r\n-    });\r\n-});\r\n-\r\n-function upsertJson(key, value) {\r\n-  if (!editor) return;\r\n-\r\n-  let code = editor.getValue();\r\n-  let obj;\r\n-\r\n-  try {\r\n-    obj = JSON.parse(code);\r\n-  } catch (e) {\r\n-    console.error(\"Invalid JSON in editor:\", e);\r\n-    return;\r\n-  }\r\n-\r\n-  if (value === \"\" || value == null) {\r\n-    delete obj[key]; // remove key if empty\r\n-  } else {\r\n-    let parsedVal;\r\n-\r\n-    if (value === \"true\") parsedVal = true;\r\n-    else if (value === \"false\") parsedVal = false;\r\n-    else if (value === \"null\") parsedVal = null;\r\n-    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n-    else parsedVal = value; // string\r\n-\r\n-    obj[key] = parsedVal;\r\n-  }\r\n-\r\n-  editor.setValue(JSON.stringify(obj, null, 2));\r\n-}\r\n-\r\n-\r\n-//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n-\r\n-\r\n-// helper function if you need it elsewhere\r\n-//   function getActiveNav() {\r\n-//     return activeNav;\r\n-//   }\r\n-\r\n-//   console.log(getActiveNav())\r\n-\r\n-// dependency mapping\r\n-const dependencies = [\r\n-  \r\n-  {\r\n-    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n-      {container:'#scriptsearchbox' , field:\"#search\"},\r\n-      {container:\"#productType\",field:\"#productDropdown\"},\r\n-      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n-      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" } ,\r\n-      { container: \"#BtnGroup\", field: null } \r\n-\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#atmdropdown\",\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#premiumbox\",\r\n-    event: \"input\",\r\n-    targets: [\r\n-      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n-\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger:\"productDropdown\",\r\n-    event:\"change\",\r\n-    targets:[\r\n-      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger:\"quantityBox\",\r\n-    event:\"input\",\r\n-    targets:[\r\n-     { container: \"#toggleSwitchGroup\", field: \".form-check-input\" }  \r\n-    ]\r\n-  }\r\n-];\r\n-\r\n-function hideAndReset(triggerSelector, eventType = null) {\r\n-  dependencies.forEach(dep => {\r\n-    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-      dep.targets.forEach((t, index) => {\r\n-        const container = document.querySelector(t.container);\r\n-        if (container) {\r\n-          // If it's the *direct child* (first dependent) → only reset value\r\n-          if (index === 0) {\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-              }\r\n-            }\r\n-          } else {\r\n-            // Other deeper dependents → hide + reset\r\n-            container.style.display = \"none\";\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                 else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n-                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-                    field.checked = false;   \r\n-                  } else {\r\n-                    field.value = \"\";\r\n-                  }\r\n-                }\r\n-                else if (field.tagName === \"BUTTON\") {\r\n-                 field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n-                }\r\n-              }\r\n-            }\r\n-          }\r\n-        }\r\n-      });\r\n-    }\r\n-  });\r\n-    syncEditorWithUI();\r\n-}\r\n-function syncEditorWithUI() {\r\n-    if (!editor) return;\r\n-\r\n-    let currentJSON;\r\n-    try { currentJSON = JSON.parse(editor.getValue()); } catch { currentJSON = {}; }\r\n-\r\n-    const uiFields = document.querySelectorAll(\"[data-field]\");\r\n-\r\n-    uiFields.forEach(field => {\r\n-        const key = field.dataset.field;\r\n-\r\n-        // Keep main parent 'script_type' always\r\n-        if (key === \"script_type\") return;\r\n-\r\n-        if (field.offsetParent !== null) {\r\n-            // visible → update JSON\r\n-            if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-                currentJSON[key] = field.checked;\r\n-            } else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\" || field.tagName === \"SELECT\") {\r\n-                currentJSON[key] = field.value; // add/update visible fields\r\n-            }\r\n-        } else {\r\n-            // hidden → reset boolean or remove text/number field\r\n-            if (typeof currentJSON[key] === \"boolean\") currentJSON[key] = false;\r\n-            else delete currentJSON[key]; // safe to delete if hidden and not main parent\r\n-        }\r\n-    });\r\n-\r\n-    editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n-}\r\n-\r\n-\r\n-// function hideAndReset(triggerSelector, eventType = null) {\r\n-//   dependencies.forEach(dep => {\r\n-//     // match trigger, ignore eventType if null\r\n-//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-//       dep.targets.forEach(t => {\r\n-//         const container = document.querySelector(t.container);\r\n-//         if (container) {\r\n-//           // hide the container\r\n-//           container.style.display = \"none\";\r\n-\r\n-//           // reset child field if provided\r\n-//           if (t.field) {\r\n-//             const field = container.querySelector(t.field);\r\n-//             if (field) {\r\n-//               if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-//               else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-//             }\r\n-//           }\r\n-//         }\r\n-//       });\r\n-//     }\r\n-//   });\r\n-// }\r\n-\r\n-\r\n-// document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n-//     hideAndReset(\"#atmdropdown\",change)\r\n-// })\r\n-\r\n-let scriptType = document.getElementById(\"dropdown1\");\r\n-dropdown1.addEventListener(\"change\", function () {\r\n-  upsertJson(\"script_type\",this.value,true);\r\n-  upsertJson(\"is_rollover\",\"false\",false);\r\n-  hideAndReset(\"#dropdown1\",\"change\")\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" ||JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\" ) {\r\n-        document.getElementById(\"optionSelection\").style.display = \"block\";\r\n-        document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n-    }\r\n-    else {\r\n-        document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n-        document.getElementById(\"optionSelection\").style.display = \"none\";\r\n-    }\r\n-})\r\n-\r\n-let searchInput=document.getElementById(\"search\");\r\n-const dropdown = document.getElementById('dropdown');\r\n-let token=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n-document.addEventListener('click', (e) => {\r\n-  // Check if click is outside the input and dropdown\r\n-  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n-    dropdown.style.display = 'none';\r\n-  }\r\n-});\r\n-\r\n-// Simple debounce function\r\n-function debounce(func, delay) {\r\n-  let timer;\r\n-  return function (...args) {\r\n-    clearTimeout(timer);\r\n-    timer = setTimeout(() => func.apply(this, args), delay);\r\n-  };\r\n-}\r\n-\r\n-// Fetch API suggestions\r\n-async function fetchSuggestions(query) {\r\n-  if (!query) {\r\n-    dropdown.style.display = 'none';\r\n-    dropdown.innerHTML = '';\r\n-    return;\r\n-  }\r\n-\r\n-  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n-  try {\r\n-    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n-      method: \"POST\",\r\n-      headers: {\r\n-        \"Content-Type\": \"application/json\",\r\n-        \"Authorization\": token\r\n-      },\r\n-      body: JSON.stringify({\r\n-        script: query,\r\n-        type: scriptType\r\n-      })\r\n-    });\r\n-\r\n-    const data = await res.json();\r\n-    const suggestions = data.data;\r\n-\r\n-\r\n-    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n-    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n-\r\n-  }\r\n-  catch (err) {\r\n-    console.error(err);\r\n-  }\r\n-}\r\n-\r\n-// Add click selection\r\n-dropdown?.addEventListener('click', e => {\r\n-  if (e.target.tagName === 'LI') {\r\n-    let selectedText = e.target.textContent;\r\n-    searchInput.value = selectedText;\r\n-    // remove everything after \"(\"\r\n-    if (selectedText.includes(\"(\")) {\r\n-      selectedText = selectedText.split(\"(\")[0];\r\n-    }\r\n-    dropdown.style.display = 'none';\r\n-    upsertJson(\"script\",selectedText,true);\r\n-    if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n-      document.getElementById(\"productType\").style.display=\"block\";\r\n-    }\r\n-  }\r\n-});\r\n-\r\n-searchInput.addEventListener('input', debounce(e => {\r\n-  fetchSuggestions(e.target.value);\r\n-}, 300));\r\n-\r\n-\r\n-\r\n-  console.log(\"enter\");\r\n- document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n-  upsertJson(\"product\",this.value,true);\r\n-  hideAndReset(\"#productDropdown\",\"change\");\r\n-  if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n-  document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n-  document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n-    upsertJson(\"quantity\",this.value,false)\r\n-    if(document.getElementById(\"quantityBox\")?.value<=0){\r\n-      document.getElementById(\"quantityError\").style.display=\"block\";\r\n-    document.getElementById(\"BtnGroup\").style.display=\"none\";\r\n-    document.getElementById(\"toggleSwitchGroup\").style.display=\"none\";\r\n-    }\r\n-    else{\r\n-    document.getElementById(\"quantityError\").style.display=\"none\";\r\n-    document.getElementById(\"BtnGroup\").style.display=\"block\";\r\n-    document.getElementById(\"toggleSwitchGroup\").style.display=\"block\";\r\n-    }\r\n-    let buy=document.getElementsByClassName(\"buyBtn\")[0];\r\n-    let sell=document.getElementsByClassName(\"sellBtn\")[0];\r\n-    \r\n-      buy.addEventListener(\"click\",function(){\r\n-        buy.style.background=\"green\";\r\n-        sell.style.background=\"\";\r\n-        upsertJson(\"transaction_type\",\"BUY\",true)\r\n-      })\r\n-      sell.addEventListener(\"click\",function(){\r\n-        sell.style.background=\"red\";\r\n-        buy.style.background=\"\";\r\n-        upsertJson(\"transaction_type\",\"SELL\",true)\r\n-      })\r\n-\r\n-  })\r\n-}\r\n-})\r\n"
                },
                {
                    "date": 1756331238690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     parameterHints: { enabled: false },\r\n     inlineSuggest: { enabled: false },\r\n     fontSize: 18,\r\n     minimap: { enabled: false },\r\n-    wordWrap: \"off\",\r\n+    wordWrap: \"on\",\r\n     scrollbar: {\r\n     vertical: \"hidden\",\r\n     horizontal: \"hidden\",\r\n     handleMouseWheel: false\r\n"
                },
                {
                    "date": 1756331458528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,20 +15,20 @@\n \r\n     function getCodeSnippet(activeType) {\r\n if (activeType === \"strategy_order\") {\r\n     return `{\r\n-    \"type\": \"strategy_order\",\r\n-    \"exit_on_opposite\": false,\r\n-    \"is_tgt\": false,\r\n-    \"is_sl\": false,\r\n-    \"is_trail_set\": false,\r\n-    \"position_size\": \"{{strategy.position_size}}\",\r\n-    \"transaction_type\": \"{{strategy.order.action}}\"\r\n+  \"type\": \"strategy_order\",\r\n+  \"exit_on_opposite\": false,\r\n+  \"is_tgt\": false,\r\n+  \"is_sl\": false,\r\n+  \"is_trail_set\": false,\r\n+  \"position_size\": \"{{strategy.position_size}}\",\r\n+  \"transaction_type\": \"{{strategy.order.action}}\"\r\n }`;\r\n } \r\n else {\r\n     return `{\r\n-    \"type\": \"${activeType}\"\r\n+  \"type\": \"${activeType}\"\r\n }`;\r\n }\r\n     }\r\n \r\n"
                },
                {
                    "date": 1756331481030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,20 +15,20 @@\n \r\n     function getCodeSnippet(activeType) {\r\n if (activeType === \"strategy_order\") {\r\n     return `{\r\n-  \"type\": \"strategy_order\",\r\n-  \"exit_on_opposite\": false,\r\n-  \"is_tgt\": false,\r\n-  \"is_sl\": false,\r\n-  \"is_trail_set\": false,\r\n-  \"position_size\": \"{{strategy.position_size}}\",\r\n-  \"transaction_type\": \"{{strategy.order.action}}\"\r\n+    \"type\": \"strategy_order\",\r\n+    \"exit_on_opposite\": false,\r\n+    \"is_tgt\": false,\r\n+    \"is_sl\": false,\r\n+    \"is_trail_set\": false,\r\n+    \"position_size\": \"{{strategy.position_size}}\",\r\n+    \"transaction_type\": \"{{strategy.order.action}}\"\r\n }`;\r\n } \r\n else {\r\n     return `{\r\n-  \"type\": \"${activeType}\"\r\n+    \"type\": \"${activeType}\"\r\n }`;\r\n }\r\n     }\r\n \r\n"
                },
                {
                    "date": 1756331645458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,16 +49,15 @@\n     vertical: \"hidden\",\r\n     horizontal: \"hidden\",\r\n     handleMouseWheel: false\r\n         },\r\n-    });\r\n-      \r\n-    \r\n+    });    \r\n });\r\n+editor.setValue(newValue);\r\n+editor.layout();\r\n \r\n \r\n \r\n-\r\n let activeNav = \"strategy\"; // default active\r\n \r\n const navLinks = document.querySelectorAll(\" .nav-link\");\r\n \r\n"
                },
                {
                    "date": 1756331665680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,14 +50,15 @@\n     horizontal: \"hidden\",\r\n     handleMouseWheel: false\r\n         },\r\n     });    \r\n+    editor.setValue(newValue);\r\n+editor.layout();\r\n });\r\n-editor.setValue(newValue);\r\n-editor.layout();\r\n \r\n \r\n \r\n+\r\n let activeNav = \"strategy\"; // default active\r\n \r\n const navLinks = document.querySelectorAll(\" .nav-link\");\r\n \r\n"
                },
                {
                    "date": 1756331703881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,10 +50,9 @@\n     horizontal: \"hidden\",\r\n     handleMouseWheel: false\r\n         },\r\n     });    \r\n-    editor.setValue(newValue);\r\n-editor.layout();\r\n+    \r\n });\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1756331975319,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -258,36 +258,45 @@\n function syncEditorWithUI() {\r\n     if (!editor) return;\r\n \r\n     let currentJSON;\r\n-    try { currentJSON = JSON.parse(editor.getValue()); } catch { currentJSON = {}; }\r\n+    try { \r\n+        currentJSON = JSON.parse(editor.getValue()); \r\n+    } catch { \r\n+        currentJSON = {}; \r\n+    }\r\n \r\n+    const mainParent = \"script_type\";\r\n+    const mainValue = currentJSON[mainParent] || \"\";\r\n+\r\n+    // Start JSON with only main parent\r\n+    let newJSON = { [mainParent]: mainValue };\r\n+\r\n     const uiFields = document.querySelectorAll(\"[data-field]\");\r\n \r\n     uiFields.forEach(field => {\r\n         const key = field.dataset.field;\r\n \r\n-        // Keep main parent 'script_type' always\r\n-        if (key === \"script_type\") return;\r\n+        if (key === mainParent) return; // never remove main parent\r\n \r\n-        if (field.offsetParent !== null) {\r\n-            // visible → update JSON\r\n+        // Find the closest container that hideAndReset hides\r\n+        const container = field.closest(\".field-container\") || field.parentElement;\r\n+        const isVisible = container && container.offsetParent !== null;\r\n+\r\n+        if (isVisible) {\r\n+            // Only add visible fields\r\n             if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-                currentJSON[key] = field.checked;\r\n+                newJSON[key] = field.checked;\r\n             } else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\" || field.tagName === \"SELECT\") {\r\n-                currentJSON[key] = field.value; // add/update visible fields\r\n+                if (field.value !== \"\") newJSON[key] = field.value;\r\n             }\r\n-        } else {\r\n-            // hidden → reset boolean or remove text/number field\r\n-            if (typeof currentJSON[key] === \"boolean\") currentJSON[key] = false;\r\n-            else delete currentJSON[key]; // safe to delete if hidden and not main parent\r\n         }\r\n+        // hidden fields are skipped completely — no key/value added\r\n     });\r\n \r\n-    editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n+    editor.setValue(JSON.stringify(newJSON, null, 4));\r\n }\r\n \r\n-\r\n // function hideAndReset(triggerSelector, eventType = null) {\r\n //   dependencies.forEach(dep => {\r\n //     // match trigger, ignore eventType if null\r\n //     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n"
                },
                {
                    "date": 1756332197238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -254,44 +254,50 @@\n     }\r\n   });\r\n     syncEditorWithUI();\r\n }\r\n-function syncEditorWithUI() {\r\n+function syncEditorWithUI(triggerSelector = null) {\r\n     if (!editor) return;\r\n \r\n     let currentJSON;\r\n-    try { \r\n-        currentJSON = JSON.parse(editor.getValue()); \r\n-    } catch { \r\n-        currentJSON = {}; \r\n-    }\r\n+    try { currentJSON = JSON.parse(editor.getValue()); } catch { currentJSON = {}; }\r\n \r\n+    // Always preserve main parent\r\n     const mainParent = \"script_type\";\r\n     const mainValue = currentJSON[mainParent] || \"\";\r\n-\r\n-    // Start JSON with only main parent\r\n     let newJSON = { [mainParent]: mainValue };\r\n \r\n-    const uiFields = document.querySelectorAll(\"[data-field]\");\r\n+    // Copy existing unrelated fields\r\n+    Object.keys(currentJSON).forEach(key => {\r\n+        if (key !== mainParent) newJSON[key] = currentJSON[key];\r\n+    });\r\n \r\n-    uiFields.forEach(field => {\r\n-        const key = field.dataset.field;\r\n+    // Iterate over dependencies\r\n+    dependencies.forEach(dep => {\r\n+        if (!triggerSelector || dep.trigger === triggerSelector) {\r\n+            dep.targets.forEach(t => {\r\n+                const container = document.querySelector(t.container);\r\n+                if (!container) return;\r\n \r\n-        if (key === mainParent) return; // never remove main parent\r\n+                const field = t.field ? container.querySelector(t.field) : null;\r\n+                if (!field) return;\r\n \r\n-        // Find the closest container that hideAndReset hides\r\n-        const container = field.closest(\".field-container\") || field.parentElement;\r\n-        const isVisible = container && container.offsetParent !== null;\r\n+                const isVisible = container.offsetParent !== null;\r\n \r\n-        if (isVisible) {\r\n-            // Only add visible fields\r\n-            if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-                newJSON[key] = field.checked;\r\n-            } else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\" || field.tagName === \"SELECT\") {\r\n-                if (field.value !== \"\") newJSON[key] = field.value;\r\n-            }\r\n+                if (isVisible) {\r\n+                    // update visible field\r\n+                    if (field.type === \"checkbox\" || field.type === \"radio\") newJSON[t.fieldKey || field.dataset.field] = field.checked;\r\n+                    else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\" || field.tagName === \"SELECT\") {\r\n+                        if (field.value !== \"\") newJSON[t.fieldKey || field.dataset.field] = field.value;\r\n+                    }\r\n+                } else {\r\n+                    // hidden → reset boolean or remove text/number\r\n+                    const key = t.fieldKey || field.dataset.field;\r\n+                    if (typeof newJSON[key] === \"boolean\") newJSON[key] = false;\r\n+                    else delete newJSON[key];\r\n+                }\r\n+            });\r\n         }\r\n-        // hidden fields are skipped completely — no key/value added\r\n     });\r\n \r\n     editor.setValue(JSON.stringify(newJSON, null, 4));\r\n }\r\n"
                },
                {
                    "date": 1756332249407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -252,57 +252,10 @@\n         }\r\n       });\r\n     }\r\n   });\r\n-    syncEditorWithUI();\r\n }\r\n-function syncEditorWithUI(triggerSelector = null) {\r\n-    if (!editor) return;\r\n \r\n-    let currentJSON;\r\n-    try { currentJSON = JSON.parse(editor.getValue()); } catch { currentJSON = {}; }\r\n-\r\n-    // Always preserve main parent\r\n-    const mainParent = \"script_type\";\r\n-    const mainValue = currentJSON[mainParent] || \"\";\r\n-    let newJSON = { [mainParent]: mainValue };\r\n-\r\n-    // Copy existing unrelated fields\r\n-    Object.keys(currentJSON).forEach(key => {\r\n-        if (key !== mainParent) newJSON[key] = currentJSON[key];\r\n-    });\r\n-\r\n-    // Iterate over dependencies\r\n-    dependencies.forEach(dep => {\r\n-        if (!triggerSelector || dep.trigger === triggerSelector) {\r\n-            dep.targets.forEach(t => {\r\n-                const container = document.querySelector(t.container);\r\n-                if (!container) return;\r\n-\r\n-                const field = t.field ? container.querySelector(t.field) : null;\r\n-                if (!field) return;\r\n-\r\n-                const isVisible = container.offsetParent !== null;\r\n-\r\n-                if (isVisible) {\r\n-                    // update visible field\r\n-                    if (field.type === \"checkbox\" || field.type === \"radio\") newJSON[t.fieldKey || field.dataset.field] = field.checked;\r\n-                    else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\" || field.tagName === \"SELECT\") {\r\n-                        if (field.value !== \"\") newJSON[t.fieldKey || field.dataset.field] = field.value;\r\n-                    }\r\n-                } else {\r\n-                    // hidden → reset boolean or remove text/number\r\n-                    const key = t.fieldKey || field.dataset.field;\r\n-                    if (typeof newJSON[key] === \"boolean\") newJSON[key] = false;\r\n-                    else delete newJSON[key];\r\n-                }\r\n-            });\r\n-        }\r\n-    });\r\n-\r\n-    editor.setValue(JSON.stringify(newJSON, null, 4));\r\n-}\r\n-\r\n // function hideAndReset(triggerSelector, eventType = null) {\r\n //   dependencies.forEach(dep => {\r\n //     // match trigger, ignore eventType if null\r\n //     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n"
                },
                {
                    "date": 1756332492510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,446 @@\n+var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n+var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n+    return new bootstrap.Tooltip(tooltipTriggerEl)\r\n+\r\n+});\r\n+\r\n+let editor;\r\n+\r\n+require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n+\r\n+require([\"vs/editor/editor.main\"], function () {\r\n+    window.getCodeSnippet = getCodeSnippet;\r\n+\r\n+    const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n+\r\n+    function getCodeSnippet(activeType) {\r\n+if (activeType === \"strategy_order\") {\r\n+    return `{\r\n+    \"type\": \"strategy_order\",\r\n+    \"exit_on_opposite\": false,\r\n+    \"is_tgt\": false,\r\n+    \"is_sl\": false,\r\n+    \"is_trail_set\": false,\r\n+    \"position_size\": \"{{strategy.position_size}}\",\r\n+    \"transaction_type\": \"{{strategy.order.action}}\"\r\n+}`;\r\n+} \r\n+else {\r\n+    return `{\r\n+    \"type\": \"${activeType}\"\r\n+}`;\r\n+}\r\n+    }\r\n+\r\n+    editor = monaco.editor.create(container, {\r\n+    value: getCodeSnippet(\"strategy_order\"),\r\n+    language: \"json\",\r\n+    theme: \"vs-dark\",\r\n+    automaticLayout: true,\r\n+    suggestOnTriggerCharacters: false,\r\n+    quickSuggestions: false,\r\n+    wordBasedSuggestions: false,\r\n+    parameterHints: { enabled: false },\r\n+    inlineSuggest: { enabled: false },\r\n+    fontSize: 18,\r\n+    minimap: { enabled: false },\r\n+    wordWrap: \"on\",\r\n+    scrollbar: {\r\n+    vertical: \"hidden\",\r\n+    horizontal: \"hidden\",\r\n+    handleMouseWheel: false\r\n+        },\r\n+    });    \r\n+    \r\n+});\r\n+\r\n+\r\n+\r\n+\r\n+let activeNav = \"strategy\"; // default active\r\n+\r\n+const navLinks = document.querySelectorAll(\" .nav-link\");\r\n+\r\n+\r\n+navLinks.forEach(link => {\r\n+    link.addEventListener(\"click\", (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        // remove active from all\r\n+        navLinks.forEach(l => l.classList.remove(\"active\"));\r\n+\r\n+        // set active on clicked\r\n+        link.classList.add(\"active\");\r\n+        // update global variable\r\n+        activeNav = link.getAttribute(\"data-type\");\r\n+        localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n+        console.log(\"Active Nav:\", activeNav);\r\n+        editor.setValue(getCodeSnippet(activeNav));\r\n+    });\r\n+});\r\n+\r\n+// let originalcode;\r\n+\r\n+// if(activeNavItem===\"strategy_order\"){\r\n+//     originalcode=`{\r\n+//     \"type\": \"strategy_order\",\r\n+//     \"exit_on_opposite\": false,\r\n+//     \"is_tgt\": false,\r\n+//     \"is_sl\": false,\r\n+//     \"is_trail_set\": false,\r\n+//     \"position_size\": \"{{strategy.position_size}}\",\r\n+//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n+\r\n+// }`\r\n+// }\r\n+// else{\r\n+//     originalcode=`{\r\n+//     \"type\": \"${activeNavItem}\"\r\n+// }`\r\n+// }\r\n+\r\n+document.getElementById(\"deleteBtn\").addEventListener(\"click\",function(){\r\n+  let activeNavItem=JSON.parse(localStorage.getItem(\"activenav\"))\r\n+  editor.setValue(getCodeSnippet(activeNavItem));\r\n+\r\n+  // reset dropdown to index 0\r\n+  let scriptType = document.getElementById(\"dropdown1\");\r\n+  if (scriptType) scriptType.selectedIndex = 0;\r\n+})\r\n+\r\n+const copyBtn = document.getElementById(\"copyBtn\");\r\n+\r\n+copyBtn?.addEventListener(\"click\", function () {\r\n+  if (!editor) return;\r\n+\r\n+  // Get the current editor content\r\n+  const code = editor.getValue();\r\n+\r\n+  // Use navigator clipboard API to copy\r\n+  navigator.clipboard.writeText(code)\r\n+    .then(() => {\r\n+      alert(\"Code copied to clipboard!\");\r\n+    })\r\n+    .catch(err => {\r\n+      console.error(\"Failed to copy: \", err);\r\n+    });\r\n+});\r\n+\r\n+function upsertJson(key, value) {\r\n+  if (!editor) return;\r\n+\r\n+  let code = editor.getValue();\r\n+  let obj;\r\n+\r\n+  try {\r\n+    obj = JSON.parse(code);\r\n+  } catch (e) {\r\n+    console.error(\"Invalid JSON in editor:\", e);\r\n+    return;\r\n+  }\r\n+\r\n+  if (value === \"\" || value == null) {\r\n+    delete obj[key]; // remove key if empty\r\n+  } else {\r\n+    let parsedVal;\r\n+\r\n+    if (value === \"true\") parsedVal = true;\r\n+    else if (value === \"false\") parsedVal = false;\r\n+    else if (value === \"null\") parsedVal = null;\r\n+    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n+    else parsedVal = value; // string\r\n+\r\n+    obj[key] = parsedVal;\r\n+  }\r\n+\r\n+  editor.setValue(JSON.stringify(obj, null, 2));\r\n+}\r\n+\r\n+\r\n+//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n+\r\n+\r\n+// helper function if you need it elsewhere\r\n+//   function getActiveNav() {\r\n+//     return activeNav;\r\n+//   }\r\n+\r\n+//   console.log(getActiveNav())\r\n+\r\n+// dependency mapping\r\n+const dependencies = [\r\n+  \r\n+  {\r\n+    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n+      {container:'#scriptsearchbox' , field:\"#search\"},\r\n+      {container:\"#productType\",field:\"#productDropdown\"},\r\n+      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n+      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" } ,\r\n+      { container: \"#BtnGroup\", field: null } \r\n+\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#atmdropdown\",\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#premiumbox\",\r\n+    event: \"input\",\r\n+    targets: [\r\n+      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n+\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger:\"productDropdown\",\r\n+    event:\"change\",\r\n+    targets:[\r\n+      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger:\"quantityBox\",\r\n+    event:\"input\",\r\n+    targets:[\r\n+     { container: \"#toggleSwitchGroup\", field: \".form-check-input\" }  \r\n+    ]\r\n+  }\r\n+];\r\n+\r\n+function hideAndReset(triggerSelector, eventType = null) {\r\n+  dependencies.forEach(dep => {\r\n+    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+      dep.targets.forEach((t, index) => {\r\n+        const container = document.querySelector(t.container);\r\n+        if (container) {\r\n+          // If it's the *direct child* (first dependent) → only reset value\r\n+          if (index === 0) {\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+              }\r\n+            }\r\n+          } else {\r\n+            // Other deeper dependents → hide + reset\r\n+            container.style.display = \"none\";\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                 else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n+                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n+                    field.checked = false;   \r\n+                  } else {\r\n+                    field.value = \"\";\r\n+                  }\r\n+                }\r\n+                else if (field.tagName === \"BUTTON\") {\r\n+                 field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n+                }\r\n+              }\r\n+            }\r\n+          }\r\n+        }\r\n+      });\r\n+    }\r\n+  });\r\n+  syncEditorWithUI();\r\n+}\r\n+function syncEditorWithUI() {\r\n+    if (!editor) return;\r\n+\r\n+    let currentJSON;\r\n+    try { \r\n+        currentJSON = JSON.parse(editor.getValue()); \r\n+    } catch { \r\n+        currentJSON = {}; \r\n+    }\r\n+\r\n+    const uiFields = document.querySelectorAll(\"[data-field]\");\r\n+\r\n+    uiFields.forEach(field => {\r\n+        const key = field.dataset.field;\r\n+\r\n+        // Never remove main parent\r\n+        if (key === \"script_type\") return;\r\n+\r\n+        const container = field.closest(\".field-container\") || field.parentElement;\r\n+        const isVisible = container && container.offsetParent !== null;\r\n+\r\n+        if (!isVisible) {\r\n+            // Field hidden → remove or reset boolean\r\n+            if (typeof currentJSON[key] === \"boolean\") currentJSON[key] = false;\r\n+            else delete currentJSON[key];\r\n+        }\r\n+        // visible fields → keep as-is\r\n+    });\r\n+\r\n+    editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n+}\r\n+\r\n+\r\n+// function hideAndReset(triggerSelector, eventType = null) {\r\n+//   dependencies.forEach(dep => {\r\n+//     // match trigger, ignore eventType if null\r\n+//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+//       dep.targets.forEach(t => {\r\n+//         const container = document.querySelector(t.container);\r\n+//         if (container) {\r\n+//           // hide the container\r\n+//           container.style.display = \"none\";\r\n+\r\n+//           // reset child field if provided\r\n+//           if (t.field) {\r\n+//             const field = container.querySelector(t.field);\r\n+//             if (field) {\r\n+//               if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+//               else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+//             }\r\n+//           }\r\n+//         }\r\n+//       });\r\n+//     }\r\n+//   });\r\n+// }\r\n+\r\n+\r\n+// document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n+//     hideAndReset(\"#atmdropdown\",change)\r\n+// })\r\n+\r\n+let scriptType = document.getElementById(\"dropdown1\");\r\n+dropdown1.addEventListener(\"change\", function () {\r\n+  upsertJson(\"script_type\",this.value,true);\r\n+  upsertJson(\"is_rollover\",\"false\",false);\r\n+  hideAndReset(\"#dropdown1\",\"change\")\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" ||JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\" ) {\r\n+        document.getElementById(\"optionSelection\").style.display = \"block\";\r\n+        document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n+    }\r\n+    else {\r\n+        document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n+        document.getElementById(\"optionSelection\").style.display = \"none\";\r\n+    }\r\n+})\r\n+\r\n+let searchInput=document.getElementById(\"search\");\r\n+const dropdown = document.getElementById('dropdown');\r\n+let token=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n+document.addEventListener('click', (e) => {\r\n+  // Check if click is outside the input and dropdown\r\n+  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n+    dropdown.style.display = 'none';\r\n+  }\r\n+});\r\n+\r\n+// Simple debounce function\r\n+function debounce(func, delay) {\r\n+  let timer;\r\n+  return function (...args) {\r\n+    clearTimeout(timer);\r\n+    timer = setTimeout(() => func.apply(this, args), delay);\r\n+  };\r\n+}\r\n+\r\n+// Fetch API suggestions\r\n+async function fetchSuggestions(query) {\r\n+  if (!query) {\r\n+    dropdown.style.display = 'none';\r\n+    dropdown.innerHTML = '';\r\n+    return;\r\n+  }\r\n+\r\n+  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n+  try {\r\n+    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n+      method: \"POST\",\r\n+      headers: {\r\n+        \"Content-Type\": \"application/json\",\r\n+        \"Authorization\": token\r\n+      },\r\n+      body: JSON.stringify({\r\n+        script: query,\r\n+        type: scriptType\r\n+      })\r\n+    });\r\n+\r\n+    const data = await res.json();\r\n+    const suggestions = data.data;\r\n+\r\n+\r\n+    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n+    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n+\r\n+  }\r\n+  catch (err) {\r\n+    console.error(err);\r\n+  }\r\n+}\r\n+\r\n+// Add click selection\r\n+dropdown?.addEventListener('click', e => {\r\n+  if (e.target.tagName === 'LI') {\r\n+    let selectedText = e.target.textContent;\r\n+    searchInput.value = selectedText;\r\n+    // remove everything after \"(\"\r\n+    if (selectedText.includes(\"(\")) {\r\n+      selectedText = selectedText.split(\"(\")[0];\r\n+    }\r\n+    dropdown.style.display = 'none';\r\n+    upsertJson(\"script\",selectedText,true);\r\n+    if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n+      document.getElementById(\"productType\").style.display=\"block\";\r\n+    }\r\n+  }\r\n+});\r\n+\r\n+searchInput.addEventListener('input', debounce(e => {\r\n+  fetchSuggestions(e.target.value);\r\n+}, 300));\r\n+\r\n+\r\n+\r\n+  console.log(\"enter\");\r\n+ document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n+  upsertJson(\"product\",this.value,true);\r\n+  hideAndReset(\"#productDropdown\",\"change\");\r\n+  if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n+  document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n+  document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n+    upsertJson(\"quantity\",this.value,false)\r\n+    if(document.getElementById(\"quantityBox\")?.value<=0){\r\n+      document.getElementById(\"quantityError\").style.display=\"block\";\r\n+    document.getElementById(\"BtnGroup\").style.display=\"none\";\r\n+    document.getElementById(\"toggleSwitchGroup\").style.display=\"none\";\r\n+    }\r\n+    else{\r\n+    document.getElementById(\"quantityError\").style.display=\"none\";\r\n+    document.getElementById(\"BtnGroup\").style.display=\"block\";\r\n+    document.getElementById(\"toggleSwitchGroup\").style.display=\"block\";\r\n+    }\r\n+    let buy=document.getElementsByClassName(\"buyBtn\")[0];\r\n+    let sell=document.getElementsByClassName(\"sellBtn\")[0];\r\n+    \r\n+      buy.addEventListener(\"click\",function(){\r\n+        buy.style.background=\"green\";\r\n+        sell.style.background=\"\";\r\n+        upsertJson(\"transaction_type\",\"BUY\",true)\r\n+      })\r\n+      sell.addEventListener(\"click\",function(){\r\n+        sell.style.background=\"red\";\r\n+        buy.style.background=\"\";\r\n+        upsertJson(\"transaction_type\",\"SELL\",true)\r\n+      })\r\n+\r\n+  })\r\n+}\r\n+})\r\n"
                },
                {
                    "date": 1756332880651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,445 @@\n+var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n+var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n+    return new bootstrap.Tooltip(tooltipTriggerEl)\r\n+\r\n+});\r\n+\r\n+let editor;\r\n+\r\n+require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n+\r\n+require([\"vs/editor/editor.main\"], function () {\r\n+    window.getCodeSnippet = getCodeSnippet;\r\n+\r\n+    const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n+\r\n+    function getCodeSnippet(activeType) {\r\n+if (activeType === \"strategy_order\") {\r\n+    return `{\r\n+    \"type\": \"strategy_order\",\r\n+    \"exit_on_opposite\": false,\r\n+    \"is_tgt\": false,\r\n+    \"is_sl\": false,\r\n+    \"is_trail_set\": false,\r\n+    \"position_size\": \"{{strategy.position_size}}\",\r\n+    \"transaction_type\": \"{{strategy.order.action}}\"\r\n+}`;\r\n+} \r\n+else {\r\n+    return `{\r\n+    \"type\": \"${activeType}\"\r\n+}`;\r\n+}\r\n+    }\r\n+\r\n+    editor = monaco.editor.create(container, {\r\n+    value: getCodeSnippet(\"strategy_order\"),\r\n+    language: \"json\",\r\n+    theme: \"vs-dark\",\r\n+    automaticLayout: true,\r\n+    suggestOnTriggerCharacters: false,\r\n+    quickSuggestions: false,\r\n+    wordBasedSuggestions: false,\r\n+    parameterHints: { enabled: false },\r\n+    inlineSuggest: { enabled: false },\r\n+    fontSize: 18,\r\n+    minimap: { enabled: false },\r\n+    wordWrap: \"on\",\r\n+    scrollbar: {\r\n+    vertical: \"hidden\",\r\n+    horizontal: \"hidden\",\r\n+    handleMouseWheel: false\r\n+        },\r\n+    });    \r\n+    \r\n+});\r\n+\r\n+\r\n+\r\n+\r\n+let activeNav = \"strategy\"; // default active\r\n+\r\n+const navLinks = document.querySelectorAll(\" .nav-link\");\r\n+\r\n+\r\n+navLinks.forEach(link => {\r\n+    link.addEventListener(\"click\", (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        // remove active from all\r\n+        navLinks.forEach(l => l.classList.remove(\"active\"));\r\n+\r\n+        // set active on clicked\r\n+        link.classList.add(\"active\");\r\n+        // update global variable\r\n+        activeNav = link.getAttribute(\"data-type\");\r\n+        localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n+        console.log(\"Active Nav:\", activeNav);\r\n+        editor.setValue(getCodeSnippet(activeNav));\r\n+    });\r\n+});\r\n+\r\n+// let originalcode;\r\n+\r\n+// if(activeNavItem===\"strategy_order\"){\r\n+//     originalcode=`{\r\n+//     \"type\": \"strategy_order\",\r\n+//     \"exit_on_opposite\": false,\r\n+//     \"is_tgt\": false,\r\n+//     \"is_sl\": false,\r\n+//     \"is_trail_set\": false,\r\n+//     \"position_size\": \"{{strategy.position_size}}\",\r\n+//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n+\r\n+// }`\r\n+// }\r\n+// else{\r\n+//     originalcode=`{\r\n+//     \"type\": \"${activeNavItem}\"\r\n+// }`\r\n+// }\r\n+\r\n+document.getElementById(\"deleteBtn\").addEventListener(\"click\",function(){\r\n+  let activeNavItem=JSON.parse(localStorage.getItem(\"activenav\"))\r\n+  editor.setValue(getCodeSnippet(activeNavItem));\r\n+\r\n+  // reset dropdown to index 0\r\n+  let scriptType = document.getElementById(\"dropdown1\");\r\n+  if (scriptType) scriptType.selectedIndex = 0;\r\n+})\r\n+\r\n+const copyBtn = document.getElementById(\"copyBtn\");\r\n+\r\n+copyBtn?.addEventListener(\"click\", function () {\r\n+  if (!editor) return;\r\n+\r\n+  // Get the current editor content\r\n+  const code = editor.getValue();\r\n+\r\n+  // Use navigator clipboard API to copy\r\n+  navigator.clipboard.writeText(code)\r\n+    .then(() => {\r\n+      alert(\"Code copied to clipboard!\");\r\n+    })\r\n+    .catch(err => {\r\n+      console.error(\"Failed to copy: \", err);\r\n+    });\r\n+});\r\n+\r\n+function upsertJson(key, value) {\r\n+  if (!editor) return;\r\n+\r\n+  let code = editor.getValue();\r\n+  let obj;\r\n+\r\n+  try {\r\n+    obj = JSON.parse(code);\r\n+  } catch (e) {\r\n+    console.error(\"Invalid JSON in editor:\", e);\r\n+    return;\r\n+  }\r\n+\r\n+  if (value === \"\" || value == null) {\r\n+    delete obj[key]; // remove key if empty\r\n+  } else {\r\n+    let parsedVal;\r\n+\r\n+    if (value === \"true\") parsedVal = true;\r\n+    else if (value === \"false\") parsedVal = false;\r\n+    else if (value === \"null\") parsedVal = null;\r\n+    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n+    else parsedVal = value; // string\r\n+\r\n+    obj[key] = parsedVal;\r\n+  }\r\n+\r\n+  editor.setValue(JSON.stringify(obj, null, 2));\r\n+}\r\n+\r\n+\r\n+//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n+\r\n+\r\n+// helper function if you need it elsewhere\r\n+//   function getActiveNav() {\r\n+//     return activeNav;\r\n+//   }\r\n+\r\n+//   console.log(getActiveNav())\r\n+\r\n+// dependency mapping\r\n+const dependencies = [\r\n+  \r\n+  {\r\n+    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n+      {container:'#scriptsearchbox' , field:\"#search\"},\r\n+      {container:\"#productType\",field:\"#productDropdown\"},\r\n+      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n+      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" } ,\r\n+      { container: \"#BtnGroup\", field: null } \r\n+\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#atmdropdown\",\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#premiumbox\",\r\n+    event: \"input\",\r\n+    targets: [\r\n+      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n+\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger:\"productDropdown\",\r\n+    event:\"change\",\r\n+    targets:[\r\n+      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger:\"quantityBox\",\r\n+    event:\"input\",\r\n+    targets:[\r\n+     { container: \"#toggleSwitchGroup\", field: \".form-check-input\" }  \r\n+    ]\r\n+  }\r\n+];\r\n+\r\n+function hideAndReset(triggerSelector, eventType = null) {\r\n+  dependencies.forEach(dep => {\r\n+    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+      dep.targets.forEach((t, index) => {\r\n+        const container = document.querySelector(t.container);\r\n+        if (container) {\r\n+          // If it's the *direct child* (first dependent) → only reset value\r\n+          if (index === 0) {\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+              }\r\n+            }\r\n+          } else {\r\n+            // Other deeper dependents → hide + reset\r\n+            container.style.display = \"none\";\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                 else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n+                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n+                    field.checked = false;   \r\n+                  } else {\r\n+                    field.value = \"\";\r\n+                  }\r\n+                }\r\n+                else if (field.tagName === \"BUTTON\") {\r\n+                 field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n+                }\r\n+              }\r\n+            }\r\n+          }\r\n+        }\r\n+      });\r\n+    }\r\n+  });\r\n+}\r\n+function syncEditorWithUI() {\r\n+    if (!editor) return;\r\n+\r\n+    let currentJSON;\r\n+    try { \r\n+        currentJSON = JSON.parse(editor.getValue()); \r\n+    } catch { \r\n+        currentJSON = {}; \r\n+    }\r\n+\r\n+    const uiFields = document.querySelectorAll(\"[data-field]\");\r\n+\r\n+    uiFields.forEach(field => {\r\n+        const key = field.dataset.field;\r\n+\r\n+        // Never remove main parent\r\n+        if (key === \"script_type\") return;\r\n+\r\n+        const container = field.closest(\".field-container\") || field.parentElement;\r\n+        const isVisible = container && container.offsetParent !== null;\r\n+\r\n+        if (!isVisible) {\r\n+            // Field hidden → remove or reset boolean\r\n+            if (typeof currentJSON[key] === \"boolean\") currentJSON[key] = false;\r\n+            else delete currentJSON[key];\r\n+        }\r\n+        // visible fields → keep as-is\r\n+    });\r\n+\r\n+    editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n+}\r\n+\r\n+\r\n+// function hideAndReset(triggerSelector, eventType = null) {\r\n+//   dependencies.forEach(dep => {\r\n+//     // match trigger, ignore eventType if null\r\n+//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+//       dep.targets.forEach(t => {\r\n+//         const container = document.querySelector(t.container);\r\n+//         if (container) {\r\n+//           // hide the container\r\n+//           container.style.display = \"none\";\r\n+\r\n+//           // reset child field if provided\r\n+//           if (t.field) {\r\n+//             const field = container.querySelector(t.field);\r\n+//             if (field) {\r\n+//               if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+//               else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+//             }\r\n+//           }\r\n+//         }\r\n+//       });\r\n+//     }\r\n+//   });\r\n+// }\r\n+\r\n+\r\n+// document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n+//     hideAndReset(\"#atmdropdown\",change)\r\n+// })\r\n+\r\n+let scriptType = document.getElementById(\"dropdown1\");\r\n+dropdown1.addEventListener(\"change\", function () {\r\n+  upsertJson(\"script_type\",this.value,true);\r\n+  upsertJson(\"is_rollover\",\"false\",false);\r\n+  hideAndReset(\"#dropdown1\",\"change\")\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" ||JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\" ) {\r\n+        document.getElementById(\"optionSelection\").style.display = \"block\";\r\n+        document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n+    }\r\n+    else {\r\n+        document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n+        document.getElementById(\"optionSelection\").style.display = \"none\";\r\n+    }\r\n+})\r\n+\r\n+let searchInput=document.getElementById(\"search\");\r\n+const dropdown = document.getElementById('dropdown');\r\n+let token=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n+document.addEventListener('click', (e) => {\r\n+  // Check if click is outside the input and dropdown\r\n+  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n+    dropdown.style.display = 'none';\r\n+  }\r\n+});\r\n+\r\n+// Simple debounce function\r\n+function debounce(func, delay) {\r\n+  let timer;\r\n+  return function (...args) {\r\n+    clearTimeout(timer);\r\n+    timer = setTimeout(() => func.apply(this, args), delay);\r\n+  };\r\n+}\r\n+\r\n+// Fetch API suggestions\r\n+async function fetchSuggestions(query) {\r\n+  if (!query) {\r\n+    dropdown.style.display = 'none';\r\n+    dropdown.innerHTML = '';\r\n+    return;\r\n+  }\r\n+\r\n+  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n+  try {\r\n+    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n+      method: \"POST\",\r\n+      headers: {\r\n+        \"Content-Type\": \"application/json\",\r\n+        \"Authorization\": token\r\n+      },\r\n+      body: JSON.stringify({\r\n+        script: query,\r\n+        type: scriptType\r\n+      })\r\n+    });\r\n+\r\n+    const data = await res.json();\r\n+    const suggestions = data.data;\r\n+\r\n+\r\n+    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n+    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n+\r\n+  }\r\n+  catch (err) {\r\n+    console.error(err);\r\n+  }\r\n+}\r\n+\r\n+// Add click selection\r\n+dropdown?.addEventListener('click', e => {\r\n+  if (e.target.tagName === 'LI') {\r\n+    let selectedText = e.target.textContent;\r\n+    searchInput.value = selectedText;\r\n+    // remove everything after \"(\"\r\n+    if (selectedText.includes(\"(\")) {\r\n+      selectedText = selectedText.split(\"(\")[0];\r\n+    }\r\n+    dropdown.style.display = 'none';\r\n+    upsertJson(\"script\",selectedText,true);\r\n+    if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n+      document.getElementById(\"productType\").style.display=\"block\";\r\n+    }\r\n+  }\r\n+});\r\n+\r\n+searchInput.addEventListener('input', debounce(e => {\r\n+  fetchSuggestions(e.target.value);\r\n+}, 300));\r\n+\r\n+\r\n+\r\n+  console.log(\"enter\");\r\n+ document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n+  upsertJson(\"product\",this.value,true);\r\n+  hideAndReset(\"#productDropdown\",\"change\");\r\n+  if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n+  document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n+  document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n+    upsertJson(\"quantity\",this.value,false)\r\n+    if(document.getElementById(\"quantityBox\")?.value<=0){\r\n+      document.getElementById(\"quantityError\").style.display=\"block\";\r\n+    document.getElementById(\"BtnGroup\").style.display=\"none\";\r\n+    document.getElementById(\"toggleSwitchGroup\").style.display=\"none\";\r\n+    }\r\n+    else{\r\n+    document.getElementById(\"quantityError\").style.display=\"none\";\r\n+    document.getElementById(\"BtnGroup\").style.display=\"block\";\r\n+    document.getElementById(\"toggleSwitchGroup\").style.display=\"block\";\r\n+    }\r\n+    let buy=document.getElementsByClassName(\"buyBtn\")[0];\r\n+    let sell=document.getElementsByClassName(\"sellBtn\")[0];\r\n+    \r\n+      buy.addEventListener(\"click\",function(){\r\n+        buy.style.background=\"green\";\r\n+        sell.style.background=\"\";\r\n+        upsertJson(\"transaction_type\",\"BUY\",true)\r\n+      })\r\n+      sell.addEventListener(\"click\",function(){\r\n+        sell.style.background=\"red\";\r\n+        buy.style.background=\"\";\r\n+        upsertJson(\"transaction_type\",\"SELL\",true)\r\n+      })\r\n+\r\n+  })\r\n+}\r\n+})\r\n"
                },
                {
                    "date": 1756332896775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -319,9 +319,10 @@\n let scriptType = document.getElementById(\"dropdown1\");\r\n dropdown1.addEventListener(\"change\", function () {\r\n   upsertJson(\"script_type\",this.value,true);\r\n   upsertJson(\"is_rollover\",\"false\",false);\r\n-  hideAndReset(\"#dropdown1\",\"change\")\r\n+  hideAndReset(\"#dropdown1\",\"change\");\r\n+  syncEditorWithUI();\r\n     if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" ||JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\" ) {\r\n         document.getElementById(\"optionSelection\").style.display = \"block\";\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n     }\r\n"
                },
                {
                    "date": 1756333114767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -272,457 +272,15 @@\n         // Never remove main parent\r\n         if (key === \"script_type\") return;\r\n \r\n         const container = field.closest(\".field-container\") || field.parentElement;\r\n-        const isVisible = container && container.offsetParent !== null;\r\n \r\n-        if (!isVisible) {\r\n-            // Field hidden → remove or reset boolean\r\n-            if (typeof currentJSON[key] === \"boolean\") currentJSON[key] = false;\r\n-            else delete currentJSON[key];\r\n-        }\r\n-        // visible fields → keep as-is\r\n-    });\r\n-\r\n-    editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n-}\r\n-\r\n-\r\n-// function hideAndReset(triggerSelector, eventType = null) {\r\n-//   dependencies.forEach(dep => {\r\n-//     // match trigger, ignore eventType if null\r\n-//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-//       dep.targets.forEach(t => {\r\n-//         const container = document.querySelector(t.container);\r\n-//         if (container) {\r\n-//           // hide the container\r\n-//           container.style.display = \"none\";\r\n-\r\n-//           // reset child field if provided\r\n-//           if (t.field) {\r\n-//             const field = container.querySelector(t.field);\r\n-//             if (field) {\r\n-//               if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-//               else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-//             }\r\n-//           }\r\n-//         }\r\n-//       });\r\n-//     }\r\n-//   });\r\n-// }\r\n-\r\n-\r\n-// document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n-//     hideAndReset(\"#atmdropdown\",change)\r\n-// })\r\n-\r\n-let scriptType = document.getElementById(\"dropdown1\");\r\n-dropdown1.addEventListener(\"change\", function () {\r\n-  upsertJson(\"script_type\",this.value,true);\r\n-  upsertJson(\"is_rollover\",\"false\",false);\r\n-  hideAndReset(\"#dropdown1\",\"change\");\r\n-  syncEditorWithUI();\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" ||JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\" ) {\r\n-        document.getElementById(\"optionSelection\").style.display = \"block\";\r\n-        document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n-    }\r\n-    else {\r\n-        document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n-        document.getElementById(\"optionSelection\").style.display = \"none\";\r\n-    }\r\n-})\r\n-\r\n-let searchInput=document.getElementById(\"search\");\r\n-const dropdown = document.getElementById('dropdown');\r\n-let token=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n-document.addEventListener('click', (e) => {\r\n-  // Check if click is outside the input and dropdown\r\n-  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n-    dropdown.style.display = 'none';\r\n-  }\r\n-});\r\n-\r\n-// Simple debounce function\r\n-function debounce(func, delay) {\r\n-  let timer;\r\n-  return function (...args) {\r\n-    clearTimeout(timer);\r\n-    timer = setTimeout(() => func.apply(this, args), delay);\r\n-  };\r\n-}\r\n-\r\n-// Fetch API suggestions\r\n-async function fetchSuggestions(query) {\r\n-  if (!query) {\r\n-    dropdown.style.display = 'none';\r\n-    dropdown.innerHTML = '';\r\n-    return;\r\n-  }\r\n-\r\n-  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n-  try {\r\n-    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n-      method: \"POST\",\r\n-      headers: {\r\n-        \"Content-Type\": \"application/json\",\r\n-        \"Authorization\": token\r\n-      },\r\n-      body: JSON.stringify({\r\n-        script: query,\r\n-        type: scriptType\r\n-      })\r\n-    });\r\n-\r\n-    const data = await res.json();\r\n-    const suggestions = data.data;\r\n-\r\n-\r\n-    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n-    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n-\r\n-  }\r\n-  catch (err) {\r\n-    console.error(err);\r\n-  }\r\n-}\r\n-\r\n-// Add click selection\r\n-dropdown?.addEventListener('click', e => {\r\n-  if (e.target.tagName === 'LI') {\r\n-    let selectedText = e.target.textContent;\r\n-    searchInput.value = selectedText;\r\n-    // remove everything after \"(\"\r\n-    if (selectedText.includes(\"(\")) {\r\n-      selectedText = selectedText.split(\"(\")[0];\r\n-    }\r\n-    dropdown.style.display = 'none';\r\n-    upsertJson(\"script\",selectedText,true);\r\n-    if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n-      document.getElementById(\"productType\").style.display=\"block\";\r\n-    }\r\n-  }\r\n-});\r\n-\r\n-searchInput.addEventListener('input', debounce(e => {\r\n-  fetchSuggestions(e.target.value);\r\n-}, 300));\r\n-\r\n-\r\n-\r\n-  console.log(\"enter\");\r\n- document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n-  upsertJson(\"product\",this.value,true);\r\n-  hideAndReset(\"#productDropdown\",\"change\");\r\n-  if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n-  document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n-  document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n-    upsertJson(\"quantity\",this.value,false)\r\n-    if(document.getElementById(\"quantityBox\")?.value<=0){\r\n-      document.getElementById(\"quantityError\").style.display=\"block\";\r\n-    document.getElementById(\"BtnGroup\").style.display=\"none\";\r\n-    document.getElementById(\"toggleSwitchGroup\").style.display=\"none\";\r\n-    }\r\n-    else{\r\n-    document.getElementById(\"quantityError\").style.display=\"none\";\r\n-    document.getElementById(\"BtnGroup\").style.display=\"block\";\r\n-    document.getElementById(\"toggleSwitchGroup\").style.display=\"block\";\r\n-    }\r\n-    let buy=document.getElementsByClassName(\"buyBtn\")[0];\r\n-    let sell=document.getElementsByClassName(\"sellBtn\")[0];\r\n-    \r\n-      buy.addEventListener(\"click\",function(){\r\n-        buy.style.background=\"green\";\r\n-        sell.style.background=\"\";\r\n-        upsertJson(\"transaction_type\",\"BUY\",true)\r\n-      })\r\n-      sell.addEventListener(\"click\",function(){\r\n-        sell.style.background=\"red\";\r\n-        buy.style.background=\"\";\r\n-        upsertJson(\"transaction_type\",\"SELL\",true)\r\n-      })\r\n-\r\n-  })\r\n-}\r\n-})\r\n-var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n-var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n-    return new bootstrap.Tooltip(tooltipTriggerEl)\r\n-\r\n-});\r\n-\r\n-let editor;\r\n-\r\n-require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n-\r\n-require([\"vs/editor/editor.main\"], function () {\r\n-    window.getCodeSnippet = getCodeSnippet;\r\n-\r\n-    const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n-\r\n-    function getCodeSnippet(activeType) {\r\n-if (activeType === \"strategy_order\") {\r\n-    return `{\r\n-    \"type\": \"strategy_order\",\r\n-    \"exit_on_opposite\": false,\r\n-    \"is_tgt\": false,\r\n-    \"is_sl\": false,\r\n-    \"is_trail_set\": false,\r\n-    \"position_size\": \"{{strategy.position_size}}\",\r\n-    \"transaction_type\": \"{{strategy.order.action}}\"\r\n-}`;\r\n-} \r\n-else {\r\n-    return `{\r\n-    \"type\": \"${activeType}\"\r\n-}`;\r\n-}\r\n-    }\r\n-\r\n-    editor = monaco.editor.create(container, {\r\n-    value: getCodeSnippet(\"strategy_order\"),\r\n-    language: \"json\",\r\n-    theme: \"vs-dark\",\r\n-    automaticLayout: true,\r\n-    suggestOnTriggerCharacters: false,\r\n-    quickSuggestions: false,\r\n-    wordBasedSuggestions: false,\r\n-    parameterHints: { enabled: false },\r\n-    inlineSuggest: { enabled: false },\r\n-    fontSize: 18,\r\n-    minimap: { enabled: false },\r\n-    wordWrap: \"on\",\r\n-    scrollbar: {\r\n-    vertical: \"hidden\",\r\n-    horizontal: \"hidden\",\r\n-    handleMouseWheel: false\r\n-        },\r\n-    });    \r\n-    \r\n-});\r\n-\r\n-\r\n-\r\n-\r\n-let activeNav = \"strategy\"; // default active\r\n-\r\n-const navLinks = document.querySelectorAll(\" .nav-link\");\r\n-\r\n-\r\n-navLinks.forEach(link => {\r\n-    link.addEventListener(\"click\", (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        // remove active from all\r\n-        navLinks.forEach(l => l.classList.remove(\"active\"));\r\n-\r\n-        // set active on clicked\r\n-        link.classList.add(\"active\");\r\n-        // update global variable\r\n-        activeNav = link.getAttribute(\"data-type\");\r\n-        localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n-        console.log(\"Active Nav:\", activeNav);\r\n-        editor.setValue(getCodeSnippet(activeNav));\r\n-    });\r\n-});\r\n-\r\n-// let originalcode;\r\n-\r\n-// if(activeNavItem===\"strategy_order\"){\r\n-//     originalcode=`{\r\n-//     \"type\": \"strategy_order\",\r\n-//     \"exit_on_opposite\": false,\r\n-//     \"is_tgt\": false,\r\n-//     \"is_sl\": false,\r\n-//     \"is_trail_set\": false,\r\n-//     \"position_size\": \"{{strategy.position_size}}\",\r\n-//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n-\r\n-// }`\r\n-// }\r\n-// else{\r\n-//     originalcode=`{\r\n-//     \"type\": \"${activeNavItem}\"\r\n-// }`\r\n-// }\r\n-\r\n-document.getElementById(\"deleteBtn\").addEventListener(\"click\",function(){\r\n-  let activeNavItem=JSON.parse(localStorage.getItem(\"activenav\"))\r\n-  editor.setValue(getCodeSnippet(activeNavItem));\r\n-\r\n-  // reset dropdown to index 0\r\n-  let scriptType = document.getElementById(\"dropdown1\");\r\n-  if (scriptType) scriptType.selectedIndex = 0;\r\n-})\r\n-\r\n-const copyBtn = document.getElementById(\"copyBtn\");\r\n-\r\n-copyBtn?.addEventListener(\"click\", function () {\r\n-  if (!editor) return;\r\n-\r\n-  // Get the current editor content\r\n-  const code = editor.getValue();\r\n-\r\n-  // Use navigator clipboard API to copy\r\n-  navigator.clipboard.writeText(code)\r\n-    .then(() => {\r\n-      alert(\"Code copied to clipboard!\");\r\n-    })\r\n-    .catch(err => {\r\n-      console.error(\"Failed to copy: \", err);\r\n-    });\r\n-});\r\n-\r\n-function upsertJson(key, value) {\r\n-  if (!editor) return;\r\n-\r\n-  let code = editor.getValue();\r\n-  let obj;\r\n-\r\n-  try {\r\n-    obj = JSON.parse(code);\r\n-  } catch (e) {\r\n-    console.error(\"Invalid JSON in editor:\", e);\r\n-    return;\r\n-  }\r\n-\r\n-  if (value === \"\" || value == null) {\r\n-    delete obj[key]; // remove key if empty\r\n-  } else {\r\n-    let parsedVal;\r\n-\r\n-    if (value === \"true\") parsedVal = true;\r\n-    else if (value === \"false\") parsedVal = false;\r\n-    else if (value === \"null\") parsedVal = null;\r\n-    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n-    else parsedVal = value; // string\r\n-\r\n-    obj[key] = parsedVal;\r\n-  }\r\n-\r\n-  editor.setValue(JSON.stringify(obj, null, 2));\r\n-}\r\n-\r\n-\r\n-//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n-\r\n-\r\n-// helper function if you need it elsewhere\r\n-//   function getActiveNav() {\r\n-//     return activeNav;\r\n-//   }\r\n-\r\n-//   console.log(getActiveNav())\r\n-\r\n-// dependency mapping\r\n-const dependencies = [\r\n-  \r\n-  {\r\n-    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n-      {container:'#scriptsearchbox' , field:\"#search\"},\r\n-      {container:\"#productType\",field:\"#productDropdown\"},\r\n-      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n-      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" } ,\r\n-      { container: \"#BtnGroup\", field: null } \r\n-\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#atmdropdown\",\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#premiumbox\",\r\n-    event: \"input\",\r\n-    targets: [\r\n-      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n-\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger:\"productDropdown\",\r\n-    event:\"change\",\r\n-    targets:[\r\n-      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger:\"quantityBox\",\r\n-    event:\"input\",\r\n-    targets:[\r\n-     { container: \"#toggleSwitchGroup\", field: \".form-check-input\" }  \r\n-    ]\r\n-  }\r\n-];\r\n-\r\n-function hideAndReset(triggerSelector, eventType = null) {\r\n-  dependencies.forEach(dep => {\r\n-    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-      dep.targets.forEach((t, index) => {\r\n-        const container = document.querySelector(t.container);\r\n+        let isVisible = true;\r\n         if (container) {\r\n-          // If it's the *direct child* (first dependent) → only reset value\r\n-          if (index === 0) {\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-              }\r\n-            }\r\n-          } else {\r\n-            // Other deeper dependents → hide + reset\r\n-            container.style.display = \"none\";\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                 else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n-                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-                    field.checked = false;   \r\n-                  } else {\r\n-                    field.value = \"\";\r\n-                  }\r\n-                }\r\n-                else if (field.tagName === \"BUTTON\") {\r\n-                 field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n-                }\r\n-              }\r\n-            }\r\n-          }\r\n+            const style = window.getComputedStyle(container);\r\n+            isVisible = style.display !== \"none\" && style.visibility !== \"hidden\";\r\n         }\r\n-      });\r\n-    }\r\n-  });\r\n-  syncEditorWithUI();\r\n-}\r\n-function syncEditorWithUI() {\r\n-    if (!editor) return;\r\n \r\n-    let currentJSON;\r\n-    try { \r\n-        currentJSON = JSON.parse(editor.getValue()); \r\n-    } catch { \r\n-        currentJSON = {}; \r\n-    }\r\n-\r\n-    const uiFields = document.querySelectorAll(\"[data-field]\");\r\n-\r\n-    uiFields.forEach(field => {\r\n-        const key = field.dataset.field;\r\n-\r\n-        // Never remove main parent\r\n-        if (key === \"script_type\") return;\r\n-\r\n-        const container = field.closest(\".field-container\") || field.parentElement;\r\n-        const isVisible = container && container.offsetParent !== null;\r\n-\r\n         if (!isVisible) {\r\n             // Field hidden → remove or reset boolean\r\n             if (typeof currentJSON[key] === \"boolean\") currentJSON[key] = false;\r\n             else delete currentJSON[key];\r\n@@ -732,9 +290,8 @@\n \r\n     editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n }\r\n \r\n-\r\n // function hideAndReset(triggerSelector, eventType = null) {\r\n //   dependencies.forEach(dep => {\r\n //     // match trigger, ignore eventType if null\r\n //     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n@@ -766,9 +323,10 @@\n let scriptType = document.getElementById(\"dropdown1\");\r\n dropdown1.addEventListener(\"change\", function () {\r\n   upsertJson(\"script_type\",this.value,true);\r\n   upsertJson(\"is_rollover\",\"false\",false);\r\n-  hideAndReset(\"#dropdown1\",\"change\")\r\n+  hideAndReset(\"#dropdown1\",\"change\");\r\n+  syncEditorWithUI();\r\n     if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" ||JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\" ) {\r\n         document.getElementById(\"optionSelection\").style.display = \"block\";\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n     }\r\n@@ -889,417 +447,4 @@\n \r\n   })\r\n }\r\n })\r\n-var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n-var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n-    return new bootstrap.Tooltip(tooltipTriggerEl)\r\n-\r\n-});\r\n-\r\n-let editor;\r\n-\r\n-require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n-\r\n-require([\"vs/editor/editor.main\"], function () {\r\n-    window.getCodeSnippet = getCodeSnippet;\r\n-\r\n-    const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n-\r\n-    function getCodeSnippet(activeType) {\r\n-if (activeType === \"strategy_order\") {\r\n-    return `{\r\n-    \"type\": \"strategy_order\",\r\n-    \"exit_on_opposite\": false,\r\n-    \"is_tgt\": false,\r\n-    \"is_sl\": false,\r\n-    \"is_trail_set\": false,\r\n-    \"position_size\": \"{{strategy.position_size}}\",\r\n-    \"transaction_type\": \"{{strategy.order.action}}\"\r\n-}`;\r\n-} \r\n-else {\r\n-    return `{\r\n-    \"type\": \"${activeType}\"\r\n-}`;\r\n-}\r\n-    }\r\n-\r\n-    editor = monaco.editor.create(container, {\r\n-    value: getCodeSnippet(\"strategy_order\"),\r\n-    language: \"json\",\r\n-    theme: \"vs-dark\",\r\n-    automaticLayout: true,\r\n-    suggestOnTriggerCharacters: false,\r\n-    quickSuggestions: false,\r\n-    wordBasedSuggestions: false,\r\n-    parameterHints: { enabled: false },\r\n-    inlineSuggest: { enabled: false },\r\n-    fontSize: 18,\r\n-    minimap: { enabled: false },\r\n-    wordWrap: \"on\",\r\n-    scrollbar: {\r\n-    vertical: \"hidden\",\r\n-    horizontal: \"hidden\",\r\n-    handleMouseWheel: false\r\n-        },\r\n-    });    \r\n-    \r\n-});\r\n-\r\n-\r\n-\r\n-\r\n-let activeNav = \"strategy\"; // default active\r\n-\r\n-const navLinks = document.querySelectorAll(\" .nav-link\");\r\n-\r\n-\r\n-navLinks.forEach(link => {\r\n-    link.addEventListener(\"click\", (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        // remove active from all\r\n-        navLinks.forEach(l => l.classList.remove(\"active\"));\r\n-\r\n-        // set active on clicked\r\n-        link.classList.add(\"active\");\r\n-        // update global variable\r\n-        activeNav = link.getAttribute(\"data-type\");\r\n-        localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n-        console.log(\"Active Nav:\", activeNav);\r\n-        editor.setValue(getCodeSnippet(activeNav));\r\n-    });\r\n-});\r\n-\r\n-// let originalcode;\r\n-\r\n-// if(activeNavItem===\"strategy_order\"){\r\n-//     originalcode=`{\r\n-//     \"type\": \"strategy_order\",\r\n-//     \"exit_on_opposite\": false,\r\n-//     \"is_tgt\": false,\r\n-//     \"is_sl\": false,\r\n-//     \"is_trail_set\": false,\r\n-//     \"position_size\": \"{{strategy.position_size}}\",\r\n-//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n-\r\n-// }`\r\n-// }\r\n-// else{\r\n-//     originalcode=`{\r\n-//     \"type\": \"${activeNavItem}\"\r\n-// }`\r\n-// }\r\n-\r\n-document.getElementById(\"deleteBtn\").addEventListener(\"click\",function(){\r\n-  let activeNavItem=JSON.parse(localStorage.getItem(\"activenav\"))\r\n-  editor.setValue(getCodeSnippet(activeNavItem));\r\n-\r\n-  // reset dropdown to index 0\r\n-  let scriptType = document.getElementById(\"dropdown1\");\r\n-  if (scriptType) scriptType.selectedIndex = 0;\r\n-})\r\n-\r\n-const copyBtn = document.getElementById(\"copyBtn\");\r\n-\r\n-copyBtn?.addEventListener(\"click\", function () {\r\n-  if (!editor) return;\r\n-\r\n-  // Get the current editor content\r\n-  const code = editor.getValue();\r\n-\r\n-  // Use navigator clipboard API to copy\r\n-  navigator.clipboard.writeText(code)\r\n-    .then(() => {\r\n-      alert(\"Code copied to clipboard!\");\r\n-    })\r\n-    .catch(err => {\r\n-      console.error(\"Failed to copy: \", err);\r\n-    });\r\n-});\r\n-\r\n-function upsertJson(key, value) {\r\n-  if (!editor) return;\r\n-\r\n-  let code = editor.getValue();\r\n-  let obj;\r\n-\r\n-  try {\r\n-    obj = JSON.parse(code);\r\n-  } catch (e) {\r\n-    console.error(\"Invalid JSON in editor:\", e);\r\n-    return;\r\n-  }\r\n-\r\n-  if (value === \"\" || value == null) {\r\n-    delete obj[key]; // remove key if empty\r\n-  } else {\r\n-    let parsedVal;\r\n-\r\n-    if (value === \"true\") parsedVal = true;\r\n-    else if (value === \"false\") parsedVal = false;\r\n-    else if (value === \"null\") parsedVal = null;\r\n-    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n-    else parsedVal = value; // string\r\n-\r\n-    obj[key] = parsedVal;\r\n-  }\r\n-\r\n-  editor.setValue(JSON.stringify(obj, null, 2));\r\n-}\r\n-\r\n-\r\n-//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n-\r\n-\r\n-// helper function if you need it elsewhere\r\n-//   function getActiveNav() {\r\n-//     return activeNav;\r\n-//   }\r\n-\r\n-//   console.log(getActiveNav())\r\n-\r\n-// dependency mapping\r\n-const dependencies = [\r\n-  \r\n-  {\r\n-    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n-      {container:'#scriptsearchbox' , field:\"#search\"},\r\n-      {container:\"#productType\",field:\"#productDropdown\"},\r\n-      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n-      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" } ,\r\n-      { container: \"#BtnGroup\", field: null } \r\n-\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#atmdropdown\",\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#premiumbox\",\r\n-    event: \"input\",\r\n-    targets: [\r\n-      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n-\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger:\"productDropdown\",\r\n-    event:\"change\",\r\n-    targets:[\r\n-      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger:\"quantityBox\",\r\n-    event:\"input\",\r\n-    targets:[\r\n-     { container: \"#toggleSwitchGroup\", field: \".form-check-input\" }  \r\n-    ]\r\n-  }\r\n-];\r\n-\r\n-function hideAndReset(triggerSelector, eventType = null) {\r\n-  dependencies.forEach(dep => {\r\n-    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-      dep.targets.forEach((t, index) => {\r\n-        const container = document.querySelector(t.container);\r\n-        if (container) {\r\n-          // If it's the *direct child* (first dependent) → only reset value\r\n-          if (index === 0) {\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-              }\r\n-            }\r\n-          } else {\r\n-            // Other deeper dependents → hide + reset\r\n-            container.style.display = \"none\";\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                 else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n-                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-                    field.checked = false;   \r\n-                  } else {\r\n-                    field.value = \"\";\r\n-                  }\r\n-                }\r\n-                else if (field.tagName === \"BUTTON\") {\r\n-                 field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n-                }\r\n-              }\r\n-            }\r\n-          }\r\n-        }\r\n-      });\r\n-    }\r\n-  });\r\n-}\r\n-\r\n-// function hideAndReset(triggerSelector, eventType = null) {\r\n-//   dependencies.forEach(dep => {\r\n-//     // match trigger, ignore eventType if null\r\n-//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-//       dep.targets.forEach(t => {\r\n-//         const container = document.querySelector(t.container);\r\n-//         if (container) {\r\n-//           // hide the container\r\n-//           container.style.display = \"none\";\r\n-\r\n-//           // reset child field if provided\r\n-//           if (t.field) {\r\n-//             const field = container.querySelector(t.field);\r\n-//             if (field) {\r\n-//               if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-//               else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-//             }\r\n-//           }\r\n-//         }\r\n-//       });\r\n-//     }\r\n-//   });\r\n-// }\r\n-\r\n-\r\n-// document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n-//     hideAndReset(\"#atmdropdown\",change)\r\n-// })\r\n-\r\n-let scriptType = document.getElementById(\"dropdown1\");\r\n-dropdown1.addEventListener(\"change\", function () {\r\n-  upsertJson(\"script_type\",this.value,true);\r\n-  upsertJson(\"is_rollover\",\"false\",false);\r\n-  hideAndReset(\"#dropdown1\",\"change\")\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" ||JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\" ) {\r\n-        document.getElementById(\"optionSelection\").style.display = \"block\";\r\n-        document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n-    }\r\n-    else {\r\n-        document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n-        document.getElementById(\"optionSelection\").style.display = \"none\";\r\n-    }\r\n-})\r\n-\r\n-let searchInput=document.getElementById(\"search\");\r\n-const dropdown = document.getElementById('dropdown');\r\n-let token=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n-document.addEventListener('click', (e) => {\r\n-  // Check if click is outside the input and dropdown\r\n-  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n-    dropdown.style.display = 'none';\r\n-  }\r\n-});\r\n-\r\n-// Simple debounce function\r\n-function debounce(func, delay) {\r\n-  let timer;\r\n-  return function (...args) {\r\n-    clearTimeout(timer);\r\n-    timer = setTimeout(() => func.apply(this, args), delay);\r\n-  };\r\n-}\r\n-\r\n-// Fetch API suggestions\r\n-async function fetchSuggestions(query) {\r\n-  if (!query) {\r\n-    dropdown.style.display = 'none';\r\n-    dropdown.innerHTML = '';\r\n-    return;\r\n-  }\r\n-\r\n-  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n-  try {\r\n-    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n-      method: \"POST\",\r\n-      headers: {\r\n-        \"Content-Type\": \"application/json\",\r\n-        \"Authorization\": token\r\n-      },\r\n-      body: JSON.stringify({\r\n-        script: query,\r\n-        type: scriptType\r\n-      })\r\n-    });\r\n-\r\n-    const data = await res.json();\r\n-    const suggestions = data.data;\r\n-\r\n-\r\n-    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n-    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n-\r\n-  }\r\n-  catch (err) {\r\n-    console.error(err);\r\n-  }\r\n-}\r\n-\r\n-// Add click selection\r\n-dropdown?.addEventListener('click', e => {\r\n-  if (e.target.tagName === 'LI') {\r\n-    let selectedText = e.target.textContent;\r\n-    searchInput.value = selectedText;\r\n-    // remove everything after \"(\"\r\n-    if (selectedText.includes(\"(\")) {\r\n-      selectedText = selectedText.split(\"(\")[0];\r\n-    }\r\n-    dropdown.style.display = 'none';\r\n-    upsertJson(\"script\",selectedText,true);\r\n-    if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n-      document.getElementById(\"productType\").style.display=\"block\";\r\n-    }\r\n-  }\r\n-});\r\n-\r\n-searchInput.addEventListener('input', debounce(e => {\r\n-  fetchSuggestions(e.target.value);\r\n-}, 300));\r\n-\r\n-\r\n-\r\n-  console.log(\"enter\");\r\n- document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n-  upsertJson(\"product\",this.value,true);\r\n-  hideAndReset(\"#productDropdown\",\"change\");\r\n-  if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n-  document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n-  document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n-    upsertJson(\"quantity\",this.value,false)\r\n-    if(document.getElementById(\"quantityBox\")?.value<=0){\r\n-      document.getElementById(\"quantityError\").style.display=\"block\";\r\n-    document.getElementById(\"BtnGroup\").style.display=\"none\";\r\n-    document.getElementById(\"toggleSwitchGroup\").style.display=\"none\";\r\n-    }\r\n-    else{\r\n-    document.getElementById(\"quantityError\").style.display=\"none\";\r\n-    document.getElementById(\"BtnGroup\").style.display=\"block\";\r\n-    document.getElementById(\"toggleSwitchGroup\").style.display=\"block\";\r\n-    }\r\n-    let buy=document.getElementsByClassName(\"buyBtn\")[0];\r\n-    let sell=document.getElementsByClassName(\"sellBtn\")[0];\r\n-    \r\n-      buy.addEventListener(\"click\",function(){\r\n-        buy.style.background=\"green\";\r\n-        sell.style.background=\"\";\r\n-        upsertJson(\"transaction_type\",\"BUY\",true)\r\n-      })\r\n-      sell.addEventListener(\"click\",function(){\r\n-        sell.style.background=\"red\";\r\n-        buy.style.background=\"\";\r\n-        upsertJson(\"transaction_type\",\"SELL\",true)\r\n-      })\r\n-\r\n-  })\r\n-}\r\n-})\r\n"
                },
                {
                    "date": 1756333264766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -268,25 +268,20 @@\n \r\n     uiFields.forEach(field => {\r\n         const key = field.dataset.field;\r\n \r\n-        // Never remove main parent\r\n+        // Always keep main parent\r\n         if (key === \"script_type\") return;\r\n \r\n         const container = field.closest(\".field-container\") || field.parentElement;\r\n+        const isVisible = container ? container.style.display !== \"none\" : true;\r\n \r\n-        let isVisible = true;\r\n-        if (container) {\r\n-            const style = window.getComputedStyle(container);\r\n-            isVisible = style.display !== \"none\" && style.visibility !== \"hidden\";\r\n-        }\r\n-\r\n         if (!isVisible) {\r\n-            // Field hidden → remove or reset boolean\r\n+            // Hidden → remove or reset boolean\r\n             if (typeof currentJSON[key] === \"boolean\") currentJSON[key] = false;\r\n             else delete currentJSON[key];\r\n         }\r\n-        // visible fields → keep as-is\r\n+        // visible → leave as-is\r\n     });\r\n \r\n     editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n }\r\n"
                },
                {
                    "date": 1756333474515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -256,34 +256,39 @@\n }\r\n function syncEditorWithUI() {\r\n     if (!editor) return;\r\n \r\n+    const activeNavItem = JSON.parse(localStorage.getItem(\"activenav\")) || \"strategy_order\";\r\n+    let defaultJSON;\r\n+    try { defaultJSON = JSON.parse(getCodeSnippet(activeNavItem)); } catch { defaultJSON = {}; }\r\n+\r\n     let currentJSON;\r\n-    try { \r\n-        currentJSON = JSON.parse(editor.getValue()); \r\n-    } catch { \r\n-        currentJSON = {}; \r\n-    }\r\n+    try { currentJSON = JSON.parse(editor.getValue()); } catch { currentJSON = {}; }\r\n \r\n-    const uiFields = document.querySelectorAll(\"[data-field]\");\r\n+    // Loop through dependencies to detect hidden fields\r\n+    dependencies.forEach(dep => {\r\n+        dep.targets.forEach(t => {\r\n+            const container = document.querySelector(t.container);\r\n+            if (!container) return;\r\n \r\n-    uiFields.forEach(field => {\r\n-        const key = field.dataset.field;\r\n+            const key = t.field ? t.field.replace(\"#\",\"\").replace(\".\",\"\") : null; // map id/class to key\r\n+            if (!key || key === \"script_type\") return; // never remove main parent\r\n \r\n-        // Always keep main parent\r\n-        if (key === \"script_type\") return;\r\n+            const isVisible = container.style.display !== \"none\";\r\n+            if (!isVisible) {\r\n+                // Hidden → remove/reset\r\n+                if (typeof defaultJSON[key] === \"boolean\") currentJSON[key] = false;\r\n+                else delete currentJSON[key];\r\n+            } else {\r\n+                // Visible → keep current or default\r\n+                if (!(key in currentJSON) && key in defaultJSON) currentJSON[key] = defaultJSON[key];\r\n+            }\r\n+        });\r\n+    });\r\n \r\n-        const container = field.closest(\".field-container\") || field.parentElement;\r\n-        const isVisible = container ? container.style.display !== \"none\" : true;\r\n+    // Always ensure script_type exists\r\n+    if (!currentJSON[\"script_type\"]) currentJSON[\"script_type\"] = defaultJSON[\"type\"] || \"strategy_order\";\r\n \r\n-        if (!isVisible) {\r\n-            // Hidden → remove or reset boolean\r\n-            if (typeof currentJSON[key] === \"boolean\") currentJSON[key] = false;\r\n-            else delete currentJSON[key];\r\n-        }\r\n-        // visible → leave as-is\r\n-    });\r\n-\r\n     editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n }\r\n \r\n // function hideAndReset(triggerSelector, eventType = null) {\r\n"
                },
                {
                    "date": 1756333532073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -253,45 +253,9 @@\n       });\r\n     }\r\n   });\r\n }\r\n-function syncEditorWithUI() {\r\n-    if (!editor) return;\r\n \r\n-    const activeNavItem = JSON.parse(localStorage.getItem(\"activenav\")) || \"strategy_order\";\r\n-    let defaultJSON;\r\n-    try { defaultJSON = JSON.parse(getCodeSnippet(activeNavItem)); } catch { defaultJSON = {}; }\r\n-\r\n-    let currentJSON;\r\n-    try { currentJSON = JSON.parse(editor.getValue()); } catch { currentJSON = {}; }\r\n-\r\n-    // Loop through dependencies to detect hidden fields\r\n-    dependencies.forEach(dep => {\r\n-        dep.targets.forEach(t => {\r\n-            const container = document.querySelector(t.container);\r\n-            if (!container) return;\r\n-\r\n-            const key = t.field ? t.field.replace(\"#\",\"\").replace(\".\",\"\") : null; // map id/class to key\r\n-            if (!key || key === \"script_type\") return; // never remove main parent\r\n-\r\n-            const isVisible = container.style.display !== \"none\";\r\n-            if (!isVisible) {\r\n-                // Hidden → remove/reset\r\n-                if (typeof defaultJSON[key] === \"boolean\") currentJSON[key] = false;\r\n-                else delete currentJSON[key];\r\n-            } else {\r\n-                // Visible → keep current or default\r\n-                if (!(key in currentJSON) && key in defaultJSON) currentJSON[key] = defaultJSON[key];\r\n-            }\r\n-        });\r\n-    });\r\n-\r\n-    // Always ensure script_type exists\r\n-    if (!currentJSON[\"script_type\"]) currentJSON[\"script_type\"] = defaultJSON[\"type\"] || \"strategy_order\";\r\n-\r\n-    editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n-}\r\n-\r\n // function hideAndReset(triggerSelector, eventType = null) {\r\n //   dependencies.forEach(dep => {\r\n //     // match trigger, ignore eventType if null\r\n //     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n"
                },
                {
                    "date": 1756333562827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -254,8 +254,61 @@\n     }\r\n   });\r\n }\r\n \r\n+function syncEditorWithUI() {\r\n+    if (!editor) return;\r\n+\r\n+    const activeNavItem = JSON.parse(localStorage.getItem(\"activenav\")) || \"strategy_order\";\r\n+    let defaultJSON;\r\n+\r\n+    try {\r\n+        defaultJSON = JSON.parse(getCodeSnippet(activeNavItem));\r\n+    } catch {\r\n+        defaultJSON = {};\r\n+    }\r\n+\r\n+    let currentJSON;\r\n+    try { \r\n+        currentJSON = JSON.parse(editor.getValue()); \r\n+    } catch { \r\n+        currentJSON = {};\r\n+    }\r\n+\r\n+    const uiFields = document.querySelectorAll(\"[data-field]\");\r\n+\r\n+    uiFields.forEach(field => {\r\n+        const key = field.dataset.field;\r\n+\r\n+        if (key === \"script_type\") return; // always keep main parent\r\n+\r\n+        const container = field.closest(\".field-container\") || field.parentElement;\r\n+        const isVisible = container ? container.style.display !== \"none\" : true;\r\n+\r\n+        if (!isVisible) {\r\n+            // Remove hidden fields from user JSON but keep default if exists\r\n+            if (typeof defaultJSON[key] === \"boolean\") {\r\n+                currentJSON[key] = false;\r\n+            } else {\r\n+                delete currentJSON[key];\r\n+            }\r\n+        } else {\r\n+            // Visible → keep current value if exists, else default\r\n+            if (!(key in currentJSON) && key in defaultJSON) {\r\n+                currentJSON[key] = defaultJSON[key];\r\n+            }\r\n+        }\r\n+    });\r\n+\r\n+    // Ensure main parent always exists\r\n+    if (!currentJSON[\"script_type\"]) {\r\n+        currentJSON[\"script_type\"] = defaultJSON[\"type\"] || \"strategy_order\";\r\n+    }\r\n+\r\n+    editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n+}\r\n+\r\n+\r\n // function hideAndReset(triggerSelector, eventType = null) {\r\n //   dependencies.forEach(dep => {\r\n //     // match trigger, ignore eventType if null\r\n //     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n"
                },
                {
                    "date": 1756333580966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -254,8 +254,10 @@\n     }\r\n   });\r\n }\r\n \r\n+\r\n+//add data fields to make it work\r\n function syncEditorWithUI() {\r\n     if (!editor) return;\r\n \r\n     const activeNavItem = JSON.parse(localStorage.getItem(\"activenav\")) || \"strategy_order\";\r\n@@ -341,9 +343,8 @@\n dropdown1.addEventListener(\"change\", function () {\r\n   upsertJson(\"script_type\",this.value,true);\r\n   upsertJson(\"is_rollover\",\"false\",false);\r\n   hideAndReset(\"#dropdown1\",\"change\");\r\n-  syncEditorWithUI();\r\n     if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" ||JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\" ) {\r\n         document.getElementById(\"optionSelection\").style.display = \"block\";\r\n         document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n     }\r\n"
                },
                {
                    "date": 1756333962826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -461,8 +461,35 @@\n         sell.style.background=\"red\";\r\n         buy.style.background=\"\";\r\n         upsertJson(\"transaction_type\",\"SELL\",true)\r\n       })\r\n+      function setupValueInput(inputId, jsonKey, showId) {\r\n+    const input = document.getElementById(inputId);\r\n+    const showEl = document.getElementById(showId); // element to show/hide\r\n+    const error = document.getElementById(`${inputId}Error`);\r\n \r\n+    input?.addEventListener(\"input\", () => {\r\n+        const val = input.value.trim();\r\n+\r\n+        // Show/hide the related box\r\n+        showEl.style.display = val && val >= 0 ? \"block\" : \"none\";\r\n+\r\n+        // Show error if negative\r\n+        if (val < 0) error.style.display = \"block\";\r\n+        else error.style.display = \"none\";\r\n+\r\n+        // Update editor JSON\r\n+        upsertJson(jsonKey, val ? Number(val) : \"\", true);\r\n+    });\r\n+}\r\n+\r\n+// Example usage\r\n+setupValueInput(\"targetValbox\", \"tgt_value\", \"target_value\");\r\n+setupValueInput(\"stoplossValbox\", \"sl_value\", \"stoploss_value\");\r\n+setupValueInput(\"trailtriggerValbox\", \"trail_trigger\", \"trailingtrigger_value\");\r\n+setupValueInput(\"trailGapValbox\", \"trail_gap\", \"trailinggap_value\");\r\n+setupValueInput(\"trailPointValbox\", \"trail_point\", \"trailingpoint_value\");\r\n+\r\n+\r\n   })\r\n }\r\n })\r\n"
                },
                {
                    "date": 1756333988565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -461,35 +461,9 @@\n         sell.style.background=\"red\";\r\n         buy.style.background=\"\";\r\n         upsertJson(\"transaction_type\",\"SELL\",true)\r\n       })\r\n-      function setupValueInput(inputId, jsonKey, showId) {\r\n-    const input = document.getElementById(inputId);\r\n-    const showEl = document.getElementById(showId); // element to show/hide\r\n-    const error = document.getElementById(`${inputId}Error`);\r\n+      \r\n \r\n-    input?.addEventListener(\"input\", () => {\r\n-        const val = input.value.trim();\r\n-\r\n-        // Show/hide the related box\r\n-        showEl.style.display = val && val >= 0 ? \"block\" : \"none\";\r\n-\r\n-        // Show error if negative\r\n-        if (val < 0) error.style.display = \"block\";\r\n-        else error.style.display = \"none\";\r\n-\r\n-        // Update editor JSON\r\n-        upsertJson(jsonKey, val ? Number(val) : \"\", true);\r\n-    });\r\n-}\r\n-\r\n-// Example usage\r\n-setupValueInput(\"targetValbox\", \"tgt_value\", \"target_value\");\r\n-setupValueInput(\"stoplossValbox\", \"sl_value\", \"stoploss_value\");\r\n-setupValueInput(\"trailtriggerValbox\", \"trail_trigger\", \"trailingtrigger_value\");\r\n-setupValueInput(\"trailGapValbox\", \"trail_gap\", \"trailinggap_value\");\r\n-setupValueInput(\"trailPointValbox\", \"trail_point\", \"trailingpoint_value\");\r\n-\r\n-\r\n   })\r\n }\r\n })\r\n"
                },
                {
                    "date": 1756334066522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -461,9 +461,103 @@\n         sell.style.background=\"red\";\r\n         buy.style.background=\"\";\r\n         upsertJson(\"transaction_type\",\"SELL\",true)\r\n       })\r\n-      \r\n+      function setupSwitch({ checkboxId, jsonKey, containerId, valueInputs = [], nestedInputs = {} }) {\r\n+    const checkbox = document.getElementById(checkboxId);\r\n+    const container = containerId ? document.getElementById(containerId) : null;\r\n \r\n+    function updateEditor() {\r\n+        upsertJson(jsonKey, checkbox.checked, true);\r\n+        if (!checkbox.checked) {\r\n+            if (container) container.style.display = \"none\";\r\n+            valueInputs.forEach(id => document.getElementById(id)?.value = \"\");\r\n+            Object.keys(nestedInputs).forEach(k => {\r\n+                nestedInputs[k].forEach(id => document.getElementById(id)?.value = \"\");\r\n+            });\r\n+        }\r\n+    }\r\n+\r\n+    function reflectDropdown() {\r\n+        if (!container) return;\r\n+        container.style.display = checkbox.checked ? \"block\" : \"none\";\r\n+        if (!checkbox.checked) return;\r\n+\r\n+        // Setup value inputs\r\n+        valueInputs.forEach(id => setupValueInput(id, id.replace(/Valbox$/, \"\").toLowerCase(), id + \"_show\"));\r\n+\r\n+        // Setup nested inputs\r\n+        Object.keys(nestedInputs).forEach(parentId => {\r\n+            const parentInput = document.getElementById(parentId);\r\n+            const children = nestedInputs[parentId];\r\n+            parentInput?.addEventListener(\"input\", () => {\r\n+                const val = parentInput.value.trim();\r\n+                children.forEach(childId => {\r\n+                    const el = document.getElementById(childId);\r\n+                    if (el) el.style.display = val && val >= 0 ? \"block\" : \"none\";\r\n+                });\r\n+                upsertJson(parentId.replace(/Valbox$/, \"\").toLowerCase(), val ? Number(val) : \"\", true);\r\n+            });\r\n+        });\r\n+    }\r\n+\r\n+    checkbox?.addEventListener(\"change\", () => {\r\n+        updateEditor();\r\n+        reflectDropdown();\r\n+    });\r\n+}\r\n+\r\n+// --- Generic value input handler ---\r\n+function setupValueInput(inputId, jsonKey, showId) {\r\n+    const input = document.getElementById(inputId);\r\n+    const showEl = showId ? document.getElementById(showId) : null;\r\n+    const error = document.getElementById(`${inputId}Error`);\r\n+    input?.addEventListener(\"input\", () => {\r\n+        const val = input.value.trim();\r\n+        if (val < 0) error?.style.display = \"block\";\r\n+        else error?.style.display = \"none\";\r\n+        if (showEl) showEl.style.display = val && val >= 0 ? \"block\" : \"none\";\r\n+        upsertJson(jsonKey, val ? Number(val) : \"\", true);\r\n+    });\r\n+}\r\n+\r\n+// --- Setup switches ---\r\n+// exit_on_opposite\r\n+setupSwitch({ checkboxId: 'flexSwitchCheck1', jsonKey: 'exit_on_opposite' });\r\n+\r\n+// is_tgt\r\n+setupSwitch({\r\n+    checkboxId: 'flexSwitchCheck2',\r\n+    jsonKey: 'is_tgt',\r\n+    containerId: 'targetDropdownCtn',\r\n+    valueInputs: ['targetValbox']\r\n+});\r\n+\r\n+// is_sl\r\n+setupSwitch({\r\n+    checkboxId: 'flexSwitchCheck3',\r\n+    jsonKey: 'is_sl',\r\n+    containerId: 'stoplossDropdownCtn',\r\n+    valueInputs: ['stoplossValbox']\r\n+});\r\n+\r\n+// is_trail_set\r\n+setupSwitch({\r\n+    checkboxId: 'flexSwitchCheck4',\r\n+    jsonKey: 'is_trail_set',\r\n+    containerId: 'trailingDropdownCtn',\r\n+    valueInputs: ['trailtriggerValbox'],\r\n+    nestedInputs: {\r\n+        'trailtriggerValbox': ['trailGapValbox', 'trailPointValbox']\r\n+    }\r\n+});\r\n+\r\n+// --- Setup individual value inputs (for standalone show elements) ---\r\n+setupValueInput(\"targetValbox\", \"tgt_value\", \"target_value\");\r\n+setupValueInput(\"stoplossValbox\", \"sl_value\", \"stoploss_value\");\r\n+setupValueInput(\"trailtriggerValbox\", \"trail_trigger\", \"trailingtrigger_value\");\r\n+setupValueInput(\"trailGapValbox\", \"trail_gap\", \"trailinggap_value\");\r\n+setupValueInput(\"trailPointValbox\", \"trail_point\", \"trailingpoint_value\");\r\n+\r\n   })\r\n }\r\n })\r\n"
                },
                {
                    "date": 1756334089048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -469,9 +469,9 @@\n     function updateEditor() {\r\n         upsertJson(jsonKey, checkbox.checked, true);\r\n         if (!checkbox.checked) {\r\n             if (container) container.style.display = \"none\";\r\n-            valueInputs.forEach(id => document.getElementById(id)?.value = \"\");\r\n+            valueInputs.forEach(id => document.getElementById(id).value = \"\");\r\n             Object.keys(nestedInputs).forEach(k => {\r\n                 nestedInputs[k].forEach(id => document.getElementById(id)?.value = \"\");\r\n             });\r\n         }\r\n"
                },
                {
                    "date": 1756334100971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -471,9 +471,9 @@\n         if (!checkbox.checked) {\r\n             if (container) container.style.display = \"none\";\r\n             valueInputs.forEach(id => document.getElementById(id).value = \"\");\r\n             Object.keys(nestedInputs).forEach(k => {\r\n-                nestedInputs[k].forEach(id => document.getElementById(id)?.value = \"\");\r\n+                nestedInputs[k].forEach(id => document.getElementById(id).value = \"\");\r\n             });\r\n         }\r\n     }\r\n \r\n"
                },
                {
                    "date": 1756334110858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -512,9 +512,9 @@\n     const showEl = showId ? document.getElementById(showId) : null;\r\n     const error = document.getElementById(`${inputId}Error`);\r\n     input?.addEventListener(\"input\", () => {\r\n         const val = input.value.trim();\r\n-        if (val < 0) error?.style.display = \"block\";\r\n+        if (val < 0) error.style.display = \"block\";\r\n         else error?.style.display = \"none\";\r\n         if (showEl) showEl.style.display = val && val >= 0 ? \"block\" : \"none\";\r\n         upsertJson(jsonKey, val ? Number(val) : \"\", true);\r\n     });\r\n"
                },
                {
                    "date": 1756334130204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -513,9 +513,9 @@\n     const error = document.getElementById(`${inputId}Error`);\r\n     input?.addEventListener(\"input\", () => {\r\n         const val = input.value.trim();\r\n         if (val < 0) error.style.display = \"block\";\r\n-        else error?.style.display = \"none\";\r\n+        else error.style.display = \"none\";\r\n         if (showEl) showEl.style.display = val && val >= 0 ? \"block\" : \"none\";\r\n         upsertJson(jsonKey, val ? Number(val) : \"\", true);\r\n     });\r\n }\r\n"
                },
                {
                    "date": 1756334445863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -461,99 +461,56 @@\n         sell.style.background=\"red\";\r\n         buy.style.background=\"\";\r\n         upsertJson(\"transaction_type\",\"SELL\",true)\r\n       })\r\n-      function setupSwitch({ checkboxId, jsonKey, containerId, valueInputs = [], nestedInputs = {} }) {\r\n+      function setupSwitch({ checkboxId, jsonKey, containerId, showInputsOnTrue = [] }) {\r\n     const checkbox = document.getElementById(checkboxId);\r\n     const container = containerId ? document.getElementById(containerId) : null;\r\n \r\n-    function updateEditor() {\r\n-        upsertJson(jsonKey, checkbox.checked, true);\r\n+    checkbox?.addEventListener(\"change\", () => {\r\n+        upsertJson(jsonKey, checkbox.checked.toString()); // always boolean as \"true\"/\"false\"\r\n+\r\n+        // Show/hide container\r\n+        if (container) container.style.display = checkbox.checked ? \"block\" : \"none\";\r\n+\r\n+        // Reset child inputs if unchecked\r\n         if (!checkbox.checked) {\r\n-            if (container) container.style.display = \"none\";\r\n-            valueInputs.forEach(id => document.getElementById(id).value = \"\");\r\n-            Object.keys(nestedInputs).forEach(k => {\r\n-                nestedInputs[k].forEach(id => document.getElementById(id).value = \"\");\r\n-            });\r\n+            showInputsOnTrue.forEach(id => document.getElementById(id)?.value = \"\");\r\n         }\r\n-    }\r\n+    });\r\n+}\r\n \r\n-    function reflectDropdown() {\r\n-        if (!container) return;\r\n-        container.style.display = checkbox.checked ? \"block\" : \"none\";\r\n-        if (!checkbox.checked) return;\r\n+// --- Setup switches ---\r\n+// exit_on_opposite\r\n+setupSwitch({ checkboxId: 'flexSwitchCheck1', jsonKey: 'exit_on_opposite' });\r\n \r\n-        // Setup value inputs\r\n-        valueInputs.forEach(id => setupValueInput(id, id.replace(/Valbox$/, \"\").toLowerCase(), id + \"_show\"));\r\n+// is_tgt — only shows dropdown when true, no value input by default\r\n+setupSwitch({ checkboxId: 'flexSwitchCheck2', jsonKey: 'is_tgt', containerId: 'targetDropdownCtn' });\r\n \r\n-        // Setup nested inputs\r\n-        Object.keys(nestedInputs).forEach(parentId => {\r\n-            const parentInput = document.getElementById(parentId);\r\n-            const children = nestedInputs[parentId];\r\n-            parentInput?.addEventListener(\"input\", () => {\r\n-                const val = parentInput.value.trim();\r\n-                children.forEach(childId => {\r\n-                    const el = document.getElementById(childId);\r\n-                    if (el) el.style.display = val && val >= 0 ? \"block\" : \"none\";\r\n-                });\r\n-                upsertJson(parentId.replace(/Valbox$/, \"\").toLowerCase(), val ? Number(val) : \"\", true);\r\n-            });\r\n-        });\r\n-    }\r\n+// is_sl\r\n+setupSwitch({ checkboxId: 'flexSwitchCheck3', jsonKey: 'is_sl', containerId: 'stoplossDropdownCtn', showInputsOnTrue: ['stoplossValbox'] });\r\n \r\n-    checkbox?.addEventListener(\"change\", () => {\r\n-        updateEditor();\r\n-        reflectDropdown();\r\n-    });\r\n-}\r\n+// is_trail_set — nested inputs\r\n+setupSwitch({ checkboxId: 'flexSwitchCheck4', jsonKey: 'is_trail_set', containerId: 'trailingDropdownCtn', showInputsOnTrue: ['trailtriggerValbox','trailGapValbox','trailPointValbox'] });\r\n \r\n-// --- Generic value input handler ---\r\n+// --- Value inputs handler ---\r\n function setupValueInput(inputId, jsonKey, showId) {\r\n     const input = document.getElementById(inputId);\r\n     const showEl = showId ? document.getElementById(showId) : null;\r\n     const error = document.getElementById(`${inputId}Error`);\r\n+\r\n     input?.addEventListener(\"input\", () => {\r\n         const val = input.value.trim();\r\n-        if (val < 0) error.style.display = \"block\";\r\n-        else error.style.display = \"none\";\r\n+        if (val < 0) error?.style.display = \"block\";\r\n+        else error?.style.display = \"none\";\r\n+\r\n         if (showEl) showEl.style.display = val && val >= 0 ? \"block\" : \"none\";\r\n-        upsertJson(jsonKey, val ? Number(val) : \"\", true);\r\n+\r\n+        upsertJson(jsonKey, val ? val : \"\"); // value handled by robust upsertJson\r\n     });\r\n }\r\n \r\n-// --- Setup switches ---\r\n-// exit_on_opposite\r\n-setupSwitch({ checkboxId: 'flexSwitchCheck1', jsonKey: 'exit_on_opposite' });\r\n-\r\n-// is_tgt\r\n-setupSwitch({\r\n-    checkboxId: 'flexSwitchCheck2',\r\n-    jsonKey: 'is_tgt',\r\n-    containerId: 'targetDropdownCtn',\r\n-    valueInputs: ['targetValbox']\r\n-});\r\n-\r\n-// is_sl\r\n-setupSwitch({\r\n-    checkboxId: 'flexSwitchCheck3',\r\n-    jsonKey: 'is_sl',\r\n-    containerId: 'stoplossDropdownCtn',\r\n-    valueInputs: ['stoplossValbox']\r\n-});\r\n-\r\n-// is_trail_set\r\n-setupSwitch({\r\n-    checkboxId: 'flexSwitchCheck4',\r\n-    jsonKey: 'is_trail_set',\r\n-    containerId: 'trailingDropdownCtn',\r\n-    valueInputs: ['trailtriggerValbox'],\r\n-    nestedInputs: {\r\n-        'trailtriggerValbox': ['trailGapValbox', 'trailPointValbox']\r\n-    }\r\n-});\r\n-\r\n-// --- Setup individual value inputs (for standalone show elements) ---\r\n-setupValueInput(\"targetValbox\", \"tgt_value\", \"target_value\");\r\n+// --- Setup value inputs ---\r\n setupValueInput(\"stoplossValbox\", \"sl_value\", \"stoploss_value\");\r\n setupValueInput(\"trailtriggerValbox\", \"trail_trigger\", \"trailingtrigger_value\");\r\n setupValueInput(\"trailGapValbox\", \"trail_gap\", \"trailinggap_value\");\r\n setupValueInput(\"trailPointValbox\", \"trail_point\", \"trailingpoint_value\");\r\n"
                },
                {
                    "date": 1756334465016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -473,9 +473,9 @@\n         if (container) container.style.display = checkbox.checked ? \"block\" : \"none\";\r\n \r\n         // Reset child inputs if unchecked\r\n         if (!checkbox.checked) {\r\n-            showInputsOnTrue.forEach(id => document.getElementById(id)?.value = \"\");\r\n+            showInputsOnTrue.forEach(id => document.getElementById(id).value = \"\");\r\n         }\r\n     });\r\n }\r\n \r\n"
                },
                {
                    "date": 1756334482216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -499,9 +499,9 @@\n     const error = document.getElementById(`${inputId}Error`);\r\n \r\n     input?.addEventListener(\"input\", () => {\r\n         const val = input.value.trim();\r\n-        if (val < 0) error?.style.display = \"block\";\r\n+        if (val < 0) error.style.display = \"block\";\r\n         else error?.style.display = \"none\";\r\n \r\n         if (showEl) showEl.style.display = val && val >= 0 ? \"block\" : \"none\";\r\n \r\n"
                },
                {
                    "date": 1756334487593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -500,9 +500,9 @@\n \r\n     input?.addEventListener(\"input\", () => {\r\n         const val = input.value.trim();\r\n         if (val < 0) error.style.display = \"block\";\r\n-        else error?.style.display = \"none\";\r\n+        else error.style.display = \"none\";\r\n \r\n         if (showEl) showEl.style.display = val && val >= 0 ? \"block\" : \"none\";\r\n \r\n         upsertJson(jsonKey, val ? val : \"\"); // value handled by robust upsertJson\r\n"
                },
                {
                    "date": 1756334577681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -429,10 +429,8 @@\n   fetchSuggestions(e.target.value);\r\n }, 300));\r\n \r\n \r\n-\r\n-  console.log(\"enter\");\r\n  document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n   upsertJson(\"product\",this.value,true);\r\n   hideAndReset(\"#productDropdown\",\"change\");\r\n   if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n"
                },
                {
                    "date": 1756334773172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -459,60 +459,11 @@\n         sell.style.background=\"red\";\r\n         buy.style.background=\"\";\r\n         upsertJson(\"transaction_type\",\"SELL\",true)\r\n       })\r\n-      function setupSwitch({ checkboxId, jsonKey, containerId, showInputsOnTrue = [] }) {\r\n-    const checkbox = document.getElementById(checkboxId);\r\n-    const container = containerId ? document.getElementById(containerId) : null;\r\n+      document.getElementById(\"flexSwitchCheck1\")?.addEventListener(\"change\", (e) => {\r\n+    upsertJson(\"exit_on_opposite\", e.target.checked.toString());\r\n+});\r\n \r\n-    checkbox?.addEventListener(\"change\", () => {\r\n-        upsertJson(jsonKey, checkbox.checked.toString()); // always boolean as \"true\"/\"false\"\r\n-\r\n-        // Show/hide container\r\n-        if (container) container.style.display = checkbox.checked ? \"block\" : \"none\";\r\n-\r\n-        // Reset child inputs if unchecked\r\n-        if (!checkbox.checked) {\r\n-            showInputsOnTrue.forEach(id => document.getElementById(id).value = \"\");\r\n-        }\r\n-    });\r\n-}\r\n-\r\n-// --- Setup switches ---\r\n-// exit_on_opposite\r\n-setupSwitch({ checkboxId: 'flexSwitchCheck1', jsonKey: 'exit_on_opposite' });\r\n-\r\n-// is_tgt — only shows dropdown when true, no value input by default\r\n-setupSwitch({ checkboxId: 'flexSwitchCheck2', jsonKey: 'is_tgt', containerId: 'targetDropdownCtn' });\r\n-\r\n-// is_sl\r\n-setupSwitch({ checkboxId: 'flexSwitchCheck3', jsonKey: 'is_sl', containerId: 'stoplossDropdownCtn', showInputsOnTrue: ['stoplossValbox'] });\r\n-\r\n-// is_trail_set — nested inputs\r\n-setupSwitch({ checkboxId: 'flexSwitchCheck4', jsonKey: 'is_trail_set', containerId: 'trailingDropdownCtn', showInputsOnTrue: ['trailtriggerValbox','trailGapValbox','trailPointValbox'] });\r\n-\r\n-// --- Value inputs handler ---\r\n-function setupValueInput(inputId, jsonKey, showId) {\r\n-    const input = document.getElementById(inputId);\r\n-    const showEl = showId ? document.getElementById(showId) : null;\r\n-    const error = document.getElementById(`${inputId}Error`);\r\n-\r\n-    input?.addEventListener(\"input\", () => {\r\n-        const val = input.value.trim();\r\n-        if (val < 0) error.style.display = \"block\";\r\n-        else error.style.display = \"none\";\r\n-\r\n-        if (showEl) showEl.style.display = val && val >= 0 ? \"block\" : \"none\";\r\n-\r\n-        upsertJson(jsonKey, val ? val : \"\"); // value handled by robust upsertJson\r\n-    });\r\n-}\r\n-\r\n-// --- Setup value inputs ---\r\n-setupValueInput(\"stoplossValbox\", \"sl_value\", \"stoploss_value\");\r\n-setupValueInput(\"trailtriggerValbox\", \"trail_trigger\", \"trailingtrigger_value\");\r\n-setupValueInput(\"trailGapValbox\", \"trail_gap\", \"trailinggap_value\");\r\n-setupValueInput(\"trailPointValbox\", \"trail_point\", \"trailingpoint_value\");\r\n-\r\n   })\r\n }\r\n })\r\n"
                },
                {
                    "date": 1756334778428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -461,9 +461,9 @@\n         upsertJson(\"transaction_type\",\"SELL\",true)\r\n       })\r\n       document.getElementById(\"flexSwitchCheck1\")?.addEventListener(\"change\", (e) => {\r\n     upsertJson(\"exit_on_opposite\", e.target.checked.toString());\r\n-});\r\n+     });\r\n \r\n   })\r\n }\r\n })\r\n"
                },
                {
                    "date": 1756335016761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -459,11 +459,530 @@\n         sell.style.background=\"red\";\r\n         buy.style.background=\"\";\r\n         upsertJson(\"transaction_type\",\"SELL\",true)\r\n       })\r\n-      document.getElementById(\"flexSwitchCheck1\")?.addEventListener(\"change\", (e) => {\r\n-    upsertJson(\"exit_on_opposite\", e.target.checked.toString());\r\n-     });\r\n+      const exitOnPurposeSwitch = document.getElementById('flexSwitchCheck1');\r\n+                \r\n+                function toggleExitOnOpposite() {\r\n+                    let code = editor.getValue();\r\n+                    code = code.replace(\r\n+                        /(\"exit_on_opposite\"\\s*:\\s*)(true|false)/,\r\n+                        `$1${exitOnPurposeSwitch.checked}`\r\n+                    );\r\n+                    \r\n+                    editor.setValue(code);\r\n+                }\r\n+                exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n \r\n+                //target switch toggle\r\n+                const   targetSwitch = document.getElementById('flexSwitchCheck2');\r\n+                function toggleIsTgt() {\r\n+                    let code = editor.getValue();\r\n+\r\n+                    // Toggle exit_on_opposite in the JSON string\r\n+                     code = code.replace(\r\n+                        /(\"is_tgt\"\\s*:\\s*)(true|false)/,\r\n+                        `$1${targetSwitch.checked}`\r\n+                    );\r\n+                    editor.setValue(code);\r\n+                    if(!(targetSwitch.checked)){\r\n+                      document.getElementById(\"targetdropdown\").selectedIndex=0;\r\n+                      document.getElementById(\"target_value\").value=\"\";\r\n+                    }\r\n+                }\r\n+\r\n+                //onchange toggles the switch, call the function and also shows dropdown\r\n+                let dropdownofTarget=document.getElementById(\"targetDropdownCtn\");\r\n+                \r\n+                function targerSwitchReflect(){\r\n+                  dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n+                  if(dropdownofTarget.style.display===\"block\"){\r\n+                            document.getElementById(\"targetdropdown\")?.addEventListener(\"change\",function(){\r\n+\r\n+                                         let selectedtargetValue = this.value;\r\n+                                            if (!selectedtargetValue || !editor) return;\r\n+\r\n+                                            //this will add or replace in code snippet\r\n+                                            let currentValue = editor.getValue();\r\n+                                            if (/\"tgt_type\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n+                                              currentValue = currentValue.replace(\r\n+                                                /(\"tgt_type\"\\s*:\\s*\").*?(\")/,\r\n+                                                `$1${selectedtargetValue}$2`\r\n+                                              );\r\n+                                            } \r\n+                                              else {\r\n+                                              // Remove the last closing brace\r\n+                                              currentValue = currentValue.trim();\r\n+                                              if (currentValue.endsWith(\"}\")) {\r\n+                                                currentValue = currentValue.slice(0, -1);\r\n+                                              }\r\n+                                              currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n+\r\n+                                                  // Append new script value\r\n+                                                  currentValue+= `,\\n \\t\"tgt_type\":\"${selectedtargetValue}\" \\n}`;\r\n+                                              }\r\n+                                            \r\n+                                            editor.setValue(currentValue);\r\n+\r\n+\r\n+                              document.getElementById(\"target_value\").style.display=\"block\";\r\n+\r\n+                                          var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n+                                           tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n+                                            return new bootstrap.Tooltip(tooltipTriggerEl)\r\n+                                            \r\n+                                          })\r\n+\r\n+                                           let targetValBox = document.getElementById(\"targetValbox\");\r\n+                                           let targetErr = document.getElementById(\"targetError\");\r\n+\r\n+\r\n+                                            targetValBox?.addEventListener(\"input\", function () {\r\n+                                              let targetValue=this.value.trim();\r\n+                                              let currentValue=editor.getValue().trim();\r\n+\r\n+                                                if(targetValue<0){\r\n+                                                  targetErr.style.display=\"block\";\r\n+                                                }\r\n+                                                else{\r\n+                                                  targetErr.style.display=\"none\";\r\n+                                                }\r\n+\r\n+                                              if(!targetValue){\r\n+                                                currentValue = currentValue.replace(/,?\\s*\"tgt_value\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n+                                                // Also clean up trailing commas before }\r\n+                                                currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n+                                                editor.setValue(currentValue);\r\n+                                                return;\r\n+                                              }\r\n+\r\n+                                              if(/\\\"tgt_value\\\"\\s*:\\s*\\d*/.test(currentValue)){\r\n+                                                currentValue = currentValue.replace(\r\n+                                                /(\"tgt_value\"\\s*:\\s*)\\d*/,\r\n+                                                `$1${targetValue}`\r\n+                                                ); \r\n+                                              }\r\n+                                              else{\r\n+                                                if (currentValue.endsWith(\"}\")) {\r\n+                                                        currentValue = currentValue.slice(0, -1).trim();\r\n+                                                      }\r\n+                                                      currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n+                                                      currentValue = currentValue + `,\\n\\t\"tgt_value\":${targetValue}\\n}`;\r\n+                                                }\r\n+\r\n+                                              editor.setValue(currentValue);\r\n+\r\n+                                                \r\n+                                            });\r\n+      \r\n+                                 \r\n+                                      });\r\n+                  }\r\n+                  else{\r\n+                    document.getElementById(\"target_value\").style.display=\"none\";\r\n+                    let code = editor.getValue();\r\n+                        code = code.replace(/,\\s*\"tgt_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n+                        code = code.replace(/,\\s*\"tgt_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n+                        editor.setValue(code);\r\n+                  }\r\n+\r\n+                };\r\n+                targetSwitch.addEventListener(\"change\",function(){\r\n+                  toggleIsTgt();\r\n+                  targerSwitchReflect();\r\n+                })\r\n+\r\n+\r\n+\r\n+                //check the val true or false and shows box according\r\n+\r\n+                //stoploss switch\r\n+                const   stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n+                function toggleIsSl() {\r\n+                    let code = editor.getValue();\r\n+\r\n+                    // Toggle stoploss in the JSON string\r\n+                              code = code.replace(\r\n+                              /(\"is_sl\"\\s*:\\s*)(true|false)/,\r\n+                              `$1${stoplossSwitch.checked}`\r\n+                              );\r\n+                          editor.setValue(code);\r\n+                          if(!(stoplossSwitch.checked)){\r\n+                            document.getElementById(\"stoplossdropdown\").selectedIndex=0;\r\n+                            document.getElementById(\"stoploss_value\").value=\"\";\r\n+                          }\r\n+\r\n+                }\r\n+\r\n+                //onchange toggles the switch, call the function and also shows dropdown\r\n+                function stoplossSwitchReflect(){\r\n+                  let dropdownOfStoploss=document.getElementById(\"stoplossDropdownCtn\");\r\n+                  dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n+\r\n+                  if(dropdownOfStoploss.style.display===\"block\"){\r\n+                            document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\",function(){\r\n+\r\n+                                         let selectedstoplossValue = this.value;\r\n+                                            if (!selectedstoplossValue || !editor) return;\r\n+\r\n+                                            //this will add or replace in code snippet\r\n+                                            let currentValue = editor.getValue();\r\n+                                            if (/\"sl_type\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n+                                              currentValue = currentValue.replace(\r\n+                                                /(\"sl_type\"\\s*:\\s*\").*?(\")/,\r\n+                                                `$1${selectedstoplossValue}$2`\r\n+                                              );\r\n+                                            } \r\n+                                              else {\r\n+                                              // Remove the last closing brace\r\n+                                              currentValue = currentValue.trim();\r\n+                                              if (currentValue.endsWith(\"}\")) {\r\n+                                                currentValue = currentValue.slice(0, -1);\r\n+                                              }\r\n+                                              currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n+\r\n+                                                  // Append new script value\r\n+                                                  currentValue+= `,\\n \\t\"sl_type\":\"${selectedstoplossValue}\" \\n}`;\r\n+                                              }\r\n+                                            \r\n+                                            editor.setValue(currentValue);\r\n+\r\n+\r\n+                              document.getElementById(\"stoploss_value\").style.display=\"block\";\r\n+                                           let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n+                                           let stoplossErr = document.getElementById(\"stoplossError\");\r\n+\r\n+\r\n+                                            stoplossValbox?.addEventListener(\"input\", function () {\r\n+                                              let stoplossValue=this.value.trim();\r\n+                                              let currentValue=editor.getValue().trim();\r\n+\r\n+                                                if(stoplossValue<0){\r\n+                                                  stoplossErr.style.display=\"block\";\r\n+                                                }\r\n+                                                else{\r\n+                                                  stoplossErr.style.display=\"none\";\r\n+                                                }\r\n+\r\n+                                              if(!stoplossValue){\r\n+                                                currentValue = currentValue.replace(/,?\\s*\"sl_value\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n+                                                // Also clean up trailing commas before }\r\n+                                                currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n+                                                editor.setValue(currentValue);\r\n+                                                return;\r\n+                                              }\r\n+\r\n+                                              if(/\\\"sl_value\\\"\\s*:\\s*\\d*/.test(currentValue)){\r\n+                                                currentValue = currentValue.replace(\r\n+                                                /(\"sl_value\"\\s*:\\s*)\\d*/,\r\n+                                                `$1${stoplossValue}`\r\n+                                                ); \r\n+                                              }\r\n+                                              else{\r\n+                                                if (currentValue.endsWith(\"}\")) {\r\n+                                                        currentValue = currentValue.slice(0, -1).trim();\r\n+                                                      }\r\n+                                                      currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n+                                                      currentValue = currentValue + `,\\n\\t\"sl_value\":${stoplossValue}\\n}`;\r\n+                                                }\r\n+\r\n+                                              editor.setValue(currentValue);\r\n+\r\n+                                                \r\n+                                            });\r\n+      \r\n+                                 \r\n+                                      });\r\n+                  }\r\n+                  else{\r\n+                    document.getElementById(\"stoploss_value\").style.display=\"none\";\r\n+                    let code = editor.getValue();\r\n+\r\n+                        code = code.replace(/,\\s*\"sl_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n+                        code = code.replace(/,\\s*\"sl_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n+                        editor.setValue(code);\r\n+                  }\r\n+\r\n+\r\n+                };\r\n+\r\n+                stoplossSwitch.addEventListener(\"change\",function(){\r\n+                  toggleIsSl();\r\n+                  stoplossSwitchReflect();\r\n+                  \r\n+                })\r\n+\r\n+                //trailing switch\r\n+                const   trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n+                \r\n+                function toggleIsTrailSet() {\r\n+                    let code = editor.getValue();\r\n+                      code = code.replace(\r\n+                      /(\"is_trail_set\"\\s*:\\s*)(true|false)/,\r\n+                      `$1${trailingSwitch.checked}`\r\n+                      );\r\n+\r\n+                    editor.setValue(code);\r\n+\r\n+                    if(!(trailingSwitch.checked)){\r\n+                    document.getElementById(\"trailingdropdown\").selectedIndex=0;\r\n+                    document.getElementById(\"trailingtrigger_value\").value=\"\";\r\n+                    document.getElementById(\"trailinggap_value\").value=\"\";\r\n+                    document.getElementById(\"trailingpoint_value\").value=\"\";\r\n+                    }\r\n+                }\r\n+                function trailswitchReflect(){\r\n+                  let dropdownOfTrailing=document.getElementById(\"trailingDropdownCtn\");\r\n+                  dropdownOfTrailing.style.display = trailingSwitch.checked ? 'block' : 'none';\r\n+\r\n+                      if(dropdownOfTrailing.style.display===\"block\"){\r\n+\r\n+                                document.getElementById(\"trailingdropdown\")?.addEventListener(\"change\",function(){\r\n+\r\n+                                            let selectedtrailingValue = this.value;\r\n+                                                if (!selectedtrailingValue || !editor) return;\r\n+\r\n+                                                //this will add or replace in code snippet\r\n+                                                let currentValue = editor.getValue();\r\n+                                                if (/\"trail_type\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n+                                                  currentValue = currentValue.replace(\r\n+                                                    /(\"trail_type\"\\s*:\\s*\").*?(\")/,\r\n+                                                    `$1${selectedtrailingValue}$2`\r\n+                                                  );\r\n+                                                } \r\n+                                                  else {\r\n+                                                  // Remove the last closing brace\r\n+                                                  currentValue = currentValue.trim();\r\n+                                                  if (currentValue.endsWith(\"}\")) {\r\n+                                                    currentValue = currentValue.slice(0, -1);\r\n+                                                  }\r\n+                                                  currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n+\r\n+                                                      // Append new script value\r\n+                                                      currentValue+= `,\\n \\t\"trail_type\":\"${selectedtrailingValue}\" \\n}`;\r\n+                                                  }\r\n+                                                \r\n+                                                editor.setValue(currentValue);\r\n+\r\n+\r\n+                                              document.getElementById(\"trailingtrigger_value\").style.display=\"block\";\r\n+                                              let  trailtriggerValbox= document.getElementById(\"trailtriggerValbox\");\r\n+                                              let trailTriggerError = document.getElementById(\"trailTriggerError\");\r\n+\r\n+\r\n+                                                trailtriggerValbox?.addEventListener(\"input\", function () {\r\n+\r\n+                                                  let trailTriggerValue=this.value.trim();\r\n+                                                  let currentValue=editor.getValue().trim();\r\n+\r\n+                                                    if(trailTriggerValue<0){\r\n+                                                      trailTriggerError.style.display=\"block\";\r\n+\r\n+                                                      document.getElementById(\"trailinggap_value\").style.display=\"none\";\r\n+\r\n+                                                    }\r\n+                                                    else{\r\n+                                                      trailTriggerError.style.display=\"none\";\r\n+                                                      document.getElementById(\"trailinggap_value\").style.display=\"block\";\r\n+                                                    }\r\n+\r\n+                                                  if(!trailTriggerValue){\r\n+                                                    currentValue = currentValue.replace(/,?\\s*\"trail_trigger\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n+                                                    // Also clean up trailing commas before }\r\n+                                                    currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n+                                                    editor.setValue(currentValue);\r\n+                                                    return;\r\n+                                                  }\r\n+\r\n+                                                  if(/\\\"trail_trigger\\\"\\s*:\\s*\\d*/.test(currentValue)){\r\n+                                                    currentValue = currentValue.replace(\r\n+                                                    /(\"trail_trigger\"\\s*:\\s*)\\d*/,\r\n+                                                    `$1${trailTriggerValue}`\r\n+                                                    ); \r\n+                                                  }\r\n+                                                  else{\r\n+                                                    if (currentValue.endsWith(\"}\")) {\r\n+                                                            currentValue = currentValue.slice(0, -1).trim();\r\n+                                                          }\r\n+                                                          currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n+                                                          currentValue = currentValue + `,\\n\\t\"trail_trigger\":${trailTriggerValue}\\n}`;\r\n+                                                    }\r\n+\r\n+                                                  editor.setValue(currentValue);\r\n+                                                 \r\n+                                                 \r\n+                                                  //trail gap number box show\r\n+                                                document.getElementById(\"trailGapValbox\")?.addEventListener(\"input\",function(){\r\n+                                                  let trailgapError=document.getElementById(\"trailGapError\");\r\n+                                                  let trailGapValue=this.value.trim();\r\n+                                                  let currentValue=editor.getValue().trim();\r\n+\r\n+                                                    if(trailGapValue<0){\r\n+                                                      trailgapError.style.display=\"block\";\r\n+                                                      document.getElementById(\"trailingpoint_value\").style.display=\"none\";\r\n+\r\n+                                                    }\r\n+                                                    else{\r\n+                                                      trailgapError.style.display=\"none\";\r\n+                                                      document.getElementById(\"trailingpoint_value\").style.display=\"block\";\r\n+                                                    }\r\n+\r\n+                                                  if(!trailGapValue){\r\n+                                                    currentValue = currentValue.replace(/,?\\s*\"trail_gap\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n+                                                    // Also clean up trailing commas before }\r\n+                                                    currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n+                                                    editor.setValue(currentValue);\r\n+                                                    return;\r\n+                                                  }\r\n+\r\n+                                                  if(/\\\"trail_gap\\\"\\s*:\\s*\\d*/.test(currentValue)){\r\n+                                                    currentValue = currentValue.replace(\r\n+                                                    /(\"trail_gap\"\\s*:\\s*)\\d*/,\r\n+                                                    `$1${trailGapValue}`\r\n+                                                    ); \r\n+                                                  }\r\n+                                                  else{\r\n+                                                    if (currentValue.endsWith(\"}\")) {\r\n+                                                            currentValue = currentValue.slice(0, -1).trim();\r\n+                                                          }\r\n+                                                          currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n+                                                          currentValue = currentValue + `,\\n\\t\"trail_gap\":${trailGapValue}\\n}`;\r\n+                                                    }\r\n+\r\n+                                                  editor.setValue(currentValue);\r\n+                                                  })   \r\n+\r\n+                                                  //document.getElementById(\"trailingpoint_value\").style.display=\"block\"\r\n+\r\n+                                                  //trail point input box\r\n+                                                  document.getElementById(\"trailPointValbox\")?.addEventListener(\"input\",function(){\r\n+                                                  let trailpointError=document.getElementById(\"trailPointError\");\r\n+                                                  let trailpointVal=this.value.trim();\r\n+                                                  let currentValue=editor.getValue().trim();\r\n+\r\n+                                                    if(trailpointVal<0){\r\n+                                                      trailpointError.style.display=\"block\";\r\n+\r\n+                                                    }\r\n+                                                    else{\r\n+                                                      trailpointError.style.display=\"none\";\r\n+                                                      }\r\n+\r\n+                                                  if(!trailpointVal){\r\n+                                                    currentValue = currentValue.replace(/,?\\s*\"trail_point\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n+                                                    // Also clean up trailing commas before }\r\n+                                                    currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n+                                                    editor.setValue(currentValue);\r\n+                                                    return;\r\n+                                                  }\r\n+\r\n+                                                  if(/\\\"trail_point\\\"\\s*:\\s*\\d*/.test(currentValue)){\r\n+                                                    currentValue = currentValue.replace(\r\n+                                                    /(\"trail_point\"\\s*:\\s*)\\d*/,\r\n+                                                    `$1${trailpointVal}`\r\n+                                                    ); \r\n+                                                  }\r\n+                                                  else{\r\n+                                                    if (currentValue.endsWith(\"}\")) {\r\n+                                                            currentValue = currentValue.slice(0, -1).trim();\r\n+                                                          }\r\n+                                                          currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n+                                                          currentValue = currentValue + `,\\n\\t\"trail_point\":${trailpointVal}\\n}`;\r\n+                                                    }\r\n+\r\n+                                                  editor.setValue(currentValue);\r\n+                                                  })   \r\n+\r\n+\r\n+                                                  \r\n+                                                });\r\n+                                        });\r\n+\r\n+\r\n+                      }\r\n+                      else{\r\n+                        document.getElementById(\"trailingtrigger_value\").style.display=\"none\";\r\n+                        document.getElementById(\"trailinggap_value\").style.display=\"none\";\r\n+                        document.getElementById(\"trailingpoint_value\").style.display=\"none\";\r\n+                        let code = editor.getValue();\r\n+\r\n+                            code = code.replace(/,\\s*\"trail_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n+                            code = code.replace(/,\\s*\"trail_trigger\"\\s*:\\s*[^,}]+/g, \"\");\r\n+                            code = code.replace(/,\\s*\"trail_gap\"\\s*:\\s*[^,}]+/g, \"\");\r\n+                            code = code.replace(/,\\s*\"trail_point\"\\s*:\\s*[^,}]+/g, \"\");\r\n+\r\n+                            editor.setValue(code);\r\n+                      }\r\n+                }\r\n+                trailingSwitch.addEventListener(\"change\",function(){\r\n+                  toggleIsTrailSet();\r\n+                  trailswitchReflect();\r\n+                })\r\n+              } \r\n+\r\n+              //it adds and modifyes in code snippet\r\n+            let quantityValue = this.value.trim();\r\n+            let currentValue = editor.getValue().trim();\r\n+            if (!quantityValue) {\r\n+              currentValue = currentValue.replace(/,?\\s*\"quantity\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n+              // Also clean up trailing commas before }\r\n+              currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n+              editor.setValue(currentValue);\r\n+              return;\r\n+            }\r\n+\r\n+            if (/\\\"quantity\\\"\\s*:\\s*\\d*/.test(currentValue)) {\r\n+              // If already present => replace value only\r\n+              currentValue = currentValue.replace(\r\n+                /(\"quantity\"\\s*:\\s*)\\d*/,\r\n+                `$1${quantityValue}`\r\n+              );\r\n+            } \r\n+            else {\r\n+              // If not present then add it at the end\r\n+              if (currentValue.endsWith(\"}\")) {\r\n+                currentValue = currentValue.slice(0, -1).trim();\r\n+              }\r\n+              currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n+              currentValue = currentValue + `,\\n\\t\"quantity\":${quantityValue}\\n}`;\r\n+            }\r\n+\r\n+           \r\n+\r\n+            document.querySelectorAll('input[type=\"checkbox\"]').forEach(toggleBtn => {\r\n+              toggleBtn.checked = false; // turn off all switches\r\n+              document.getElementById(\"targetdropdown\").selectedIndex=0;\r\n+              document.getElementById(\"stoplossdropdown\").selectedIndex=0;\r\n+              document.getElementById(\"trailingdropdown\").selectedIndex=0;\r\n+              document.getElementById(\"target_value\").value=\"\";\r\n+              document.getElementById(\"stoploss_value\").value=\"\";\r\n+              document.getElementById(\"trailingtrigger_value\").value=\"\";\r\n+              document.getElementById(\"trailinggap_value\").value=\"\";\r\n+              document.getElementById(\"trailingpoint_value\").value=\"\";\r\n+               targerSwitchReflect();\r\n+               stoplossSwitchReflect();\r\n+               trailswitchReflect();\r\n+\r\n+            });\r\n+\r\n+            document.getElementById(\"targetdropdown\").style.selectedValue=\"Select Target Type\";\r\n+              \r\n+\r\n+            // Remove related switch values from JSON\r\n+            currentValue = currentValue\r\n+              .replace(/\"exit_on_opposite\"\\s*:\\s*(true|false),?/g, '\"exit_on_opposite\": false,')\r\n+              .replace(/\"is_tgt\"\\s*:\\s*(true|false),?/g, '\"is_tgt\": false,')\r\n+              .replace(/\"tgt_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n+              .replace(/\"tgt_value\"\\s*:\\s*\\d*/, \"\")\r\n+              .replace(/\"is_sl\"\\s*:\\s*(true|false),?/g, '\"is_sl\": false,')\r\n+              .replace(/\"sl_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n+              .replace(/\"sl_value\"\\s*:\\s*\\d*/, \"\")\r\n+              .replace(/\"is_trail_set\"\\s*:\\s*(true|false),?/g, '\"is_trail_set\": false,')\r\n+              .replace(/\"trail_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n+              .replace(/\"trail_trigger\"\\s*:\\s*\\d*/, \"\")\r\n+              .replace(/\"trail_gap\"\\s*:\\s*\\d*/, \"\")\r\n+              .replace(/\"trail_point\"\\s*:\\s*\\d*/, \"\");\r\n+                        \r\n+               editor.setValue(currentValue);\r\n+               \r\n   })\r\n-}\r\n })\r\n"
                },
                {
                    "date": 1756335107514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,39 +1,39 @@\n var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n-    return new bootstrap.Tooltip(tooltipTriggerEl)\r\n+  return new bootstrap.Tooltip(tooltipTriggerEl)\r\n \r\n });\r\n \r\n let editor;\r\n \r\n require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n \r\n require([\"vs/editor/editor.main\"], function () {\r\n-    window.getCodeSnippet = getCodeSnippet;\r\n+  window.getCodeSnippet = getCodeSnippet;\r\n \r\n-    const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n+  const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n \r\n-    function getCodeSnippet(activeType) {\r\n-if (activeType === \"strategy_order\") {\r\n-    return `{\r\n+  function getCodeSnippet(activeType) {\r\n+    if (activeType === \"strategy_order\") {\r\n+      return `{\r\n     \"type\": \"strategy_order\",\r\n     \"exit_on_opposite\": false,\r\n     \"is_tgt\": false,\r\n     \"is_sl\": false,\r\n     \"is_trail_set\": false,\r\n     \"position_size\": \"{{strategy.position_size}}\",\r\n     \"transaction_type\": \"{{strategy.order.action}}\"\r\n }`;\r\n-} \r\n-else {\r\n-    return `{\r\n+    }\r\n+    else {\r\n+      return `{\r\n     \"type\": \"${activeType}\"\r\n }`;\r\n-}\r\n     }\r\n+  }\r\n \r\n-    editor = monaco.editor.create(container, {\r\n+  editor = monaco.editor.create(container, {\r\n     value: getCodeSnippet(\"strategy_order\"),\r\n     language: \"json\",\r\n     theme: \"vs-dark\",\r\n     automaticLayout: true,\r\n@@ -45,14 +45,14 @@\n     fontSize: 18,\r\n     minimap: { enabled: false },\r\n     wordWrap: \"on\",\r\n     scrollbar: {\r\n-    vertical: \"hidden\",\r\n-    horizontal: \"hidden\",\r\n-    handleMouseWheel: false\r\n-        },\r\n-    });    \r\n-    \r\n+      vertical: \"hidden\",\r\n+      horizontal: \"hidden\",\r\n+      handleMouseWheel: false\r\n+    },\r\n+  });\r\n+\r\n });\r\n \r\n \r\n \r\n@@ -62,22 +62,22 @@\n const navLinks = document.querySelectorAll(\" .nav-link\");\r\n \r\n \r\n navLinks.forEach(link => {\r\n-    link.addEventListener(\"click\", (e) => {\r\n-        e.preventDefault();\r\n+  link.addEventListener(\"click\", (e) => {\r\n+    e.preventDefault();\r\n \r\n-        // remove active from all\r\n-        navLinks.forEach(l => l.classList.remove(\"active\"));\r\n+    // remove active from all\r\n+    navLinks.forEach(l => l.classList.remove(\"active\"));\r\n \r\n-        // set active on clicked\r\n-        link.classList.add(\"active\");\r\n-        // update global variable\r\n-        activeNav = link.getAttribute(\"data-type\");\r\n-        localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n-        console.log(\"Active Nav:\", activeNav);\r\n-        editor.setValue(getCodeSnippet(activeNav));\r\n-    });\r\n+    // set active on clicked\r\n+    link.classList.add(\"active\");\r\n+    // update global variable\r\n+    activeNav = link.getAttribute(\"data-type\");\r\n+    localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n+    console.log(\"Active Nav:\", activeNav);\r\n+    editor.setValue(getCodeSnippet(activeNav));\r\n+  });\r\n });\r\n \r\n // let originalcode;\r\n \r\n@@ -98,10 +98,10 @@\n //     \"type\": \"${activeNavItem}\"\r\n // }`\r\n // }\r\n \r\n-document.getElementById(\"deleteBtn\").addEventListener(\"click\",function(){\r\n-  let activeNavItem=JSON.parse(localStorage.getItem(\"activenav\"))\r\n+document.getElementById(\"deleteBtn\").addEventListener(\"click\", function () {\r\n+  let activeNavItem = JSON.parse(localStorage.getItem(\"activenav\"))\r\n   editor.setValue(getCodeSnippet(activeNavItem));\r\n \r\n   // reset dropdown to index 0\r\n   let scriptType = document.getElementById(\"dropdown1\");\r\n@@ -168,19 +168,19 @@\n //   console.log(getActiveNav())\r\n \r\n // dependency mapping\r\n const dependencies = [\r\n-  \r\n+\r\n   {\r\n     trigger: \"#dropdown1\", // event trigger (class or ID)\r\n     event: \"change\",\r\n     targets: [\r\n       { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n-      {container:'#scriptsearchbox' , field:\"#search\"},\r\n-      {container:\"#productType\",field:\"#productDropdown\"},\r\n-      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n-      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" } ,\r\n-      { container: \"#BtnGroup\", field: null } \r\n+      { container: '#scriptsearchbox', field: \"#search\" },\r\n+      { container: \"#productType\", field: \"#productDropdown\" },\r\n+      { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n+      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n+      { container: \"#BtnGroup\", field: null }\r\n \r\n     ]\r\n   },\r\n   {\r\n@@ -198,19 +198,19 @@\n \r\n     ]\r\n   },\r\n   {\r\n-    trigger:\"productDropdown\",\r\n-    event:\"change\",\r\n-    targets:[\r\n-      {container:\"#quantityBlock\",field:\"#quantityBox\"},\r\n+    trigger: \"productDropdown\",\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n     ]\r\n   },\r\n   {\r\n-    trigger:\"quantityBox\",\r\n-    event:\"input\",\r\n-    targets:[\r\n-     { container: \"#toggleSwitchGroup\", field: \".form-check-input\" }  \r\n+    trigger: \"quantityBox\",\r\n+    event: \"input\",\r\n+    targets: [\r\n+      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" }\r\n     ]\r\n   }\r\n ];\r\n \r\n@@ -235,17 +235,17 @@\n             if (t.field) {\r\n               const field = container.querySelector(t.field);\r\n               if (field) {\r\n                 if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                 else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n                   if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-                    field.checked = false;   \r\n+                    field.checked = false;\r\n                   } else {\r\n                     field.value = \"\";\r\n                   }\r\n                 }\r\n                 else if (field.tagName === \"BUTTON\") {\r\n-                 field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n+                  field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n                 }\r\n               }\r\n             }\r\n           }\r\n@@ -257,57 +257,57 @@\n \r\n \r\n //add data fields to make it work\r\n function syncEditorWithUI() {\r\n-    if (!editor) return;\r\n+  if (!editor) return;\r\n \r\n-    const activeNavItem = JSON.parse(localStorage.getItem(\"activenav\")) || \"strategy_order\";\r\n-    let defaultJSON;\r\n+  const activeNavItem = JSON.parse(localStorage.getItem(\"activenav\")) || \"strategy_order\";\r\n+  let defaultJSON;\r\n \r\n-    try {\r\n-        defaultJSON = JSON.parse(getCodeSnippet(activeNavItem));\r\n-    } catch {\r\n-        defaultJSON = {};\r\n-    }\r\n+  try {\r\n+    defaultJSON = JSON.parse(getCodeSnippet(activeNavItem));\r\n+  } catch {\r\n+    defaultJSON = {};\r\n+  }\r\n \r\n-    let currentJSON;\r\n-    try { \r\n-        currentJSON = JSON.parse(editor.getValue()); \r\n-    } catch { \r\n-        currentJSON = {};\r\n-    }\r\n+  let currentJSON;\r\n+  try {\r\n+    currentJSON = JSON.parse(editor.getValue());\r\n+  } catch {\r\n+    currentJSON = {};\r\n+  }\r\n \r\n-    const uiFields = document.querySelectorAll(\"[data-field]\");\r\n+  const uiFields = document.querySelectorAll(\"[data-field]\");\r\n \r\n-    uiFields.forEach(field => {\r\n-        const key = field.dataset.field;\r\n+  uiFields.forEach(field => {\r\n+    const key = field.dataset.field;\r\n \r\n-        if (key === \"script_type\") return; // always keep main parent\r\n+    if (key === \"script_type\") return; // always keep main parent\r\n \r\n-        const container = field.closest(\".field-container\") || field.parentElement;\r\n-        const isVisible = container ? container.style.display !== \"none\" : true;\r\n+    const container = field.closest(\".field-container\") || field.parentElement;\r\n+    const isVisible = container ? container.style.display !== \"none\" : true;\r\n \r\n-        if (!isVisible) {\r\n-            // Remove hidden fields from user JSON but keep default if exists\r\n-            if (typeof defaultJSON[key] === \"boolean\") {\r\n-                currentJSON[key] = false;\r\n-            } else {\r\n-                delete currentJSON[key];\r\n-            }\r\n-        } else {\r\n-            // Visible → keep current value if exists, else default\r\n-            if (!(key in currentJSON) && key in defaultJSON) {\r\n-                currentJSON[key] = defaultJSON[key];\r\n-            }\r\n-        }\r\n-    });\r\n-\r\n-    // Ensure main parent always exists\r\n-    if (!currentJSON[\"script_type\"]) {\r\n-        currentJSON[\"script_type\"] = defaultJSON[\"type\"] || \"strategy_order\";\r\n+    if (!isVisible) {\r\n+      // Remove hidden fields from user JSON but keep default if exists\r\n+      if (typeof defaultJSON[key] === \"boolean\") {\r\n+        currentJSON[key] = false;\r\n+      } else {\r\n+        delete currentJSON[key];\r\n+      }\r\n+    } else {\r\n+      // Visible → keep current value if exists, else default\r\n+      if (!(key in currentJSON) && key in defaultJSON) {\r\n+        currentJSON[key] = defaultJSON[key];\r\n+      }\r\n     }\r\n+  });\r\n \r\n-    editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n+  // Ensure main parent always exists\r\n+  if (!currentJSON[\"script_type\"]) {\r\n+    currentJSON[\"script_type\"] = defaultJSON[\"type\"] || \"strategy_order\";\r\n+  }\r\n+\r\n+  editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n }\r\n \r\n \r\n // function hideAndReset(triggerSelector, eventType = null) {\r\n@@ -340,24 +340,24 @@\n // })\r\n \r\n let scriptType = document.getElementById(\"dropdown1\");\r\n dropdown1.addEventListener(\"change\", function () {\r\n-  upsertJson(\"script_type\",this.value,true);\r\n-  upsertJson(\"is_rollover\",\"false\",false);\r\n-  hideAndReset(\"#dropdown1\",\"change\");\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" ||JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\" ) {\r\n-        document.getElementById(\"optionSelection\").style.display = \"block\";\r\n-        document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n-    }\r\n-    else {\r\n-        document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n-        document.getElementById(\"optionSelection\").style.display = \"none\";\r\n-    }\r\n+  upsertJson(\"script_type\", this.value, true);\r\n+  upsertJson(\"is_rollover\", \"false\", false);\r\n+  hideAndReset(\"#dropdown1\", \"change\");\r\n+  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" || JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\") {\r\n+    document.getElementById(\"optionSelection\").style.display = \"block\";\r\n+    document.getElementById(\"scriptsearchbox\").style.display = \"none\";\r\n+  }\r\n+  else {\r\n+    document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n+    document.getElementById(\"optionSelection\").style.display = \"none\";\r\n+  }\r\n })\r\n \r\n-let searchInput=document.getElementById(\"search\");\r\n+let searchInput = document.getElementById(\"search\");\r\n const dropdown = document.getElementById('dropdown');\r\n-let token=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n+let token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n document.addEventListener('click', (e) => {\r\n   // Check if click is outside the input and dropdown\r\n   if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n     dropdown.style.display = 'none';\r\n@@ -417,11 +417,11 @@\n     if (selectedText.includes(\"(\")) {\r\n       selectedText = selectedText.split(\"(\")[0];\r\n     }\r\n     dropdown.style.display = 'none';\r\n-    upsertJson(\"script\",selectedText,true);\r\n-    if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value===\"EQ\"){\r\n-      document.getElementById(\"productType\").style.display=\"block\";\r\n+    upsertJson(\"script\", selectedText, true);\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\") {\r\n+      document.getElementById(\"productType\").style.display = \"block\";\r\n     }\r\n   }\r\n });\r\n \r\n@@ -429,560 +429,532 @@\n   fetchSuggestions(e.target.value);\r\n }, 300));\r\n \r\n \r\n- document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n-  upsertJson(\"product\",this.value,true);\r\n-  hideAndReset(\"#productDropdown\",\"change\");\r\n-  if(JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\"){\r\n-  document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n-  document.getElementById(\"quantityBox\").addEventListener(\"input\",function(){\r\n-    upsertJson(\"quantity\",this.value,false)\r\n-    if(document.getElementById(\"quantityBox\")?.value<=0){\r\n-      document.getElementById(\"quantityError\").style.display=\"block\";\r\n-    document.getElementById(\"BtnGroup\").style.display=\"none\";\r\n-    document.getElementById(\"toggleSwitchGroup\").style.display=\"none\";\r\n-    }\r\n-    else{\r\n-    document.getElementById(\"quantityError\").style.display=\"none\";\r\n-    document.getElementById(\"BtnGroup\").style.display=\"block\";\r\n-    document.getElementById(\"toggleSwitchGroup\").style.display=\"block\";\r\n-    }\r\n-    let buy=document.getElementsByClassName(\"buyBtn\")[0];\r\n-    let sell=document.getElementsByClassName(\"sellBtn\")[0];\r\n-    \r\n-      buy.addEventListener(\"click\",function(){\r\n-        buy.style.background=\"green\";\r\n-        sell.style.background=\"\";\r\n-        upsertJson(\"transaction_type\",\"BUY\",true)\r\n+document.getElementById(\"productDropdown\").addEventListener(\"change\", function () {\r\n+  upsertJson(\"product\", this.value, true);\r\n+  hideAndReset(\"#productDropdown\", \"change\");\r\n+  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\") {\r\n+    document.getElementById(\"quantityBlock\").style.display = \"block\";\r\n+    document.getElementById(\"quantityBox\").addEventListener(\"input\", function () {\r\n+      upsertJson(\"quantity\", this.value, false)\r\n+      if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n+        document.getElementById(\"quantityError\").style.display = \"block\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"none\";\r\n+      }\r\n+      else {\r\n+        document.getElementById(\"quantityError\").style.display = \"none\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"block\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"block\";\r\n+      }\r\n+      let buy = document.getElementsByClassName(\"buyBtn\")[0];\r\n+      let sell = document.getElementsByClassName(\"sellBtn\")[0];\r\n+\r\n+      buy.addEventListener(\"click\", function () {\r\n+        buy.style.background = \"green\";\r\n+        sell.style.background = \"\";\r\n+        upsertJson(\"transaction_type\", \"BUY\", true)\r\n       })\r\n-      sell.addEventListener(\"click\",function(){\r\n-        sell.style.background=\"red\";\r\n-        buy.style.background=\"\";\r\n-        upsertJson(\"transaction_type\",\"SELL\",true)\r\n+      sell.addEventListener(\"click\", function () {\r\n+        sell.style.background = \"red\";\r\n+        buy.style.background = \"\";\r\n+        upsertJson(\"transaction_type\", \"SELL\", true)\r\n       })\r\n       const exitOnPurposeSwitch = document.getElementById('flexSwitchCheck1');\r\n-                \r\n-                function toggleExitOnOpposite() {\r\n-                    let code = editor.getValue();\r\n-                    code = code.replace(\r\n-                        /(\"exit_on_opposite\"\\s*:\\s*)(true|false)/,\r\n-                        `$1${exitOnPurposeSwitch.checked}`\r\n-                    );\r\n-                    \r\n-                    editor.setValue(code);\r\n-                }\r\n-                exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n \r\n-                //target switch toggle\r\n-                const   targetSwitch = document.getElementById('flexSwitchCheck2');\r\n-                function toggleIsTgt() {\r\n-                    let code = editor.getValue();\r\n+      function toggleExitOnOpposite() {\r\n+        let code = editor.getValue();\r\n+        code = code.replace(\r\n+          /(\"exit_on_opposite\"\\s*:\\s*)(true|false)/,\r\n+          `$1${exitOnPurposeSwitch.checked}`\r\n+        );\r\n \r\n-                    // Toggle exit_on_opposite in the JSON string\r\n-                     code = code.replace(\r\n-                        /(\"is_tgt\"\\s*:\\s*)(true|false)/,\r\n-                        `$1${targetSwitch.checked}`\r\n-                    );\r\n-                    editor.setValue(code);\r\n-                    if(!(targetSwitch.checked)){\r\n-                      document.getElementById(\"targetdropdown\").selectedIndex=0;\r\n-                      document.getElementById(\"target_value\").value=\"\";\r\n-                    }\r\n-                }\r\n+        editor.setValue(code);\r\n+      }\r\n+      exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n \r\n-                //onchange toggles the switch, call the function and also shows dropdown\r\n-                let dropdownofTarget=document.getElementById(\"targetDropdownCtn\");\r\n-                \r\n-                function targerSwitchReflect(){\r\n-                  dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n-                  if(dropdownofTarget.style.display===\"block\"){\r\n-                            document.getElementById(\"targetdropdown\")?.addEventListener(\"change\",function(){\r\n+      //target switch toggle\r\n+      const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n+      function toggleIsTgt() {\r\n+        let code = editor.getValue();\r\n \r\n-                                         let selectedtargetValue = this.value;\r\n-                                            if (!selectedtargetValue || !editor) return;\r\n+        // Toggle exit_on_opposite in the JSON string\r\n+        code = code.replace(\r\n+          /(\"is_tgt\"\\s*:\\s*)(true|false)/,\r\n+          `$1${targetSwitch.checked}`\r\n+        );\r\n+        editor.setValue(code);\r\n+        if (!(targetSwitch.checked)) {\r\n+          document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"target_value\").value = \"\";\r\n+        }\r\n+      }\r\n \r\n-                                            //this will add or replace in code snippet\r\n-                                            let currentValue = editor.getValue();\r\n-                                            if (/\"tgt_type\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n-                                              currentValue = currentValue.replace(\r\n-                                                /(\"tgt_type\"\\s*:\\s*\").*?(\")/,\r\n-                                                `$1${selectedtargetValue}$2`\r\n-                                              );\r\n-                                            } \r\n-                                              else {\r\n-                                              // Remove the last closing brace\r\n-                                              currentValue = currentValue.trim();\r\n-                                              if (currentValue.endsWith(\"}\")) {\r\n-                                                currentValue = currentValue.slice(0, -1);\r\n-                                              }\r\n-                                              currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n+      //onchange toggles the switch, call the function and also shows dropdown\r\n+      let dropdownofTarget = document.getElementById(\"targetDropdownCtn\");\r\n \r\n-                                                  // Append new script value\r\n-                                                  currentValue+= `,\\n \\t\"tgt_type\":\"${selectedtargetValue}\" \\n}`;\r\n-                                              }\r\n-                                            \r\n-                                            editor.setValue(currentValue);\r\n+      function targerSwitchReflect() {\r\n+        dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n+        if (dropdownofTarget.style.display === \"block\") {\r\n+          document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n \r\n+            let selectedtargetValue = this.value;\r\n+            if (!selectedtargetValue || !editor) return;\r\n \r\n-                              document.getElementById(\"target_value\").style.display=\"block\";\r\n+            //this will add or replace in code snippet\r\n+            let currentValue = editor.getValue();\r\n+            if (/\"tgt_type\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n+              currentValue = currentValue.replace(\r\n+                /(\"tgt_type\"\\s*:\\s*\").*?(\")/,\r\n+                `$1${selectedtargetValue}$2`\r\n+              );\r\n+            }\r\n+            else {\r\n+              // Remove the last closing brace\r\n+              currentValue = currentValue.trim();\r\n+              if (currentValue.endsWith(\"}\")) {\r\n+                currentValue = currentValue.slice(0, -1);\r\n+              }\r\n+              currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n \r\n-                                          var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n-                                           tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n-                                            return new bootstrap.Tooltip(tooltipTriggerEl)\r\n-                                            \r\n-                                          })\r\n+              // Append new script value\r\n+              currentValue += `,\\n \\t\"tgt_type\":\"${selectedtargetValue}\" \\n}`;\r\n+            }\r\n \r\n-                                           let targetValBox = document.getElementById(\"targetValbox\");\r\n-                                           let targetErr = document.getElementById(\"targetError\");\r\n+            editor.setValue(currentValue);\r\n \r\n \r\n-                                            targetValBox?.addEventListener(\"input\", function () {\r\n-                                              let targetValue=this.value.trim();\r\n-                                              let currentValue=editor.getValue().trim();\r\n+            document.getElementById(\"target_value\").style.display = \"block\";\r\n \r\n-                                                if(targetValue<0){\r\n-                                                  targetErr.style.display=\"block\";\r\n-                                                }\r\n-                                                else{\r\n-                                                  targetErr.style.display=\"none\";\r\n-                                                }\r\n+            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n+            tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n+              return new bootstrap.Tooltip(tooltipTriggerEl)\r\n \r\n-                                              if(!targetValue){\r\n-                                                currentValue = currentValue.replace(/,?\\s*\"tgt_value\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n-                                                // Also clean up trailing commas before }\r\n-                                                currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n-                                                editor.setValue(currentValue);\r\n-                                                return;\r\n-                                              }\r\n+            })\r\n \r\n-                                              if(/\\\"tgt_value\\\"\\s*:\\s*\\d*/.test(currentValue)){\r\n-                                                currentValue = currentValue.replace(\r\n-                                                /(\"tgt_value\"\\s*:\\s*)\\d*/,\r\n-                                                `$1${targetValue}`\r\n-                                                ); \r\n-                                              }\r\n-                                              else{\r\n-                                                if (currentValue.endsWith(\"}\")) {\r\n-                                                        currentValue = currentValue.slice(0, -1).trim();\r\n-                                                      }\r\n-                                                      currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n-                                                      currentValue = currentValue + `,\\n\\t\"tgt_value\":${targetValue}\\n}`;\r\n-                                                }\r\n+            let targetValBox = document.getElementById(\"targetValbox\");\r\n+            let targetErr = document.getElementById(\"targetError\");\r\n \r\n-                                              editor.setValue(currentValue);\r\n \r\n-                                                \r\n-                                            });\r\n-      \r\n-                                 \r\n-                                      });\r\n-                  }\r\n-                  else{\r\n-                    document.getElementById(\"target_value\").style.display=\"none\";\r\n-                    let code = editor.getValue();\r\n-                        code = code.replace(/,\\s*\"tgt_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n-                        code = code.replace(/,\\s*\"tgt_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n-                        editor.setValue(code);\r\n-                  }\r\n+            targetValBox?.addEventListener(\"input\", function () {\r\n+              let targetValue = this.value.trim();\r\n+              let currentValue = editor.getValue().trim();\r\n \r\n-                };\r\n-                targetSwitch.addEventListener(\"change\",function(){\r\n-                  toggleIsTgt();\r\n-                  targerSwitchReflect();\r\n-                })\r\n+              if (targetValue < 0) {\r\n+                targetErr.style.display = \"block\";\r\n+              }\r\n+              else {\r\n+                targetErr.style.display = \"none\";\r\n+              }\r\n \r\n+              if (!targetValue) {\r\n+                currentValue = currentValue.replace(/,?\\s*\"tgt_value\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n+                // Also clean up trailing commas before }\r\n+                currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n+                editor.setValue(currentValue);\r\n+                return;\r\n+              }\r\n \r\n+              if (/\\\"tgt_value\\\"\\s*:\\s*\\d*/.test(currentValue)) {\r\n+                currentValue = currentValue.replace(\r\n+                  /(\"tgt_value\"\\s*:\\s*)\\d*/,\r\n+                  `$1${targetValue}`\r\n+                );\r\n+              }\r\n+              else {\r\n+                if (currentValue.endsWith(\"}\")) {\r\n+                  currentValue = currentValue.slice(0, -1).trim();\r\n+                }\r\n+                currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n+                currentValue = currentValue + `,\\n\\t\"tgt_value\":${targetValue}\\n}`;\r\n+              }\r\n \r\n-                //check the val true or false and shows box according\r\n+              editor.setValue(currentValue);\r\n \r\n-                //stoploss switch\r\n-                const   stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n-                function toggleIsSl() {\r\n-                    let code = editor.getValue();\r\n \r\n-                    // Toggle stoploss in the JSON string\r\n-                              code = code.replace(\r\n-                              /(\"is_sl\"\\s*:\\s*)(true|false)/,\r\n-                              `$1${stoplossSwitch.checked}`\r\n-                              );\r\n-                          editor.setValue(code);\r\n-                          if(!(stoplossSwitch.checked)){\r\n-                            document.getElementById(\"stoplossdropdown\").selectedIndex=0;\r\n-                            document.getElementById(\"stoploss_value\").value=\"\";\r\n-                          }\r\n+            });\r\n \r\n-                }\r\n \r\n-                //onchange toggles the switch, call the function and also shows dropdown\r\n-                function stoplossSwitchReflect(){\r\n-                  let dropdownOfStoploss=document.getElementById(\"stoplossDropdownCtn\");\r\n-                  dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n+          });\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"target_value\").style.display = \"none\";\r\n+          let code = editor.getValue();\r\n+          code = code.replace(/,\\s*\"tgt_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n+          code = code.replace(/,\\s*\"tgt_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n+          editor.setValue(code);\r\n+        }\r\n \r\n-                  if(dropdownOfStoploss.style.display===\"block\"){\r\n-                            document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\",function(){\r\n+      };\r\n+      targetSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTgt();\r\n+        targerSwitchReflect();\r\n+      })\r\n \r\n-                                         let selectedstoplossValue = this.value;\r\n-                                            if (!selectedstoplossValue || !editor) return;\r\n \r\n-                                            //this will add or replace in code snippet\r\n-                                            let currentValue = editor.getValue();\r\n-                                            if (/\"sl_type\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n-                                              currentValue = currentValue.replace(\r\n-                                                /(\"sl_type\"\\s*:\\s*\").*?(\")/,\r\n-                                                `$1${selectedstoplossValue}$2`\r\n-                                              );\r\n-                                            } \r\n-                                              else {\r\n-                                              // Remove the last closing brace\r\n-                                              currentValue = currentValue.trim();\r\n-                                              if (currentValue.endsWith(\"}\")) {\r\n-                                                currentValue = currentValue.slice(0, -1);\r\n-                                              }\r\n-                                              currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n \r\n-                                                  // Append new script value\r\n-                                                  currentValue+= `,\\n \\t\"sl_type\":\"${selectedstoplossValue}\" \\n}`;\r\n-                                              }\r\n-                                            \r\n-                                            editor.setValue(currentValue);\r\n+      //check the val true or false and shows box according\r\n \r\n+      //stoploss switch\r\n+      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n+      function toggleIsSl() {\r\n+        let code = editor.getValue();\r\n \r\n-                              document.getElementById(\"stoploss_value\").style.display=\"block\";\r\n-                                           let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n-                                           let stoplossErr = document.getElementById(\"stoplossError\");\r\n+        // Toggle stoploss in the JSON string\r\n+        code = code.replace(\r\n+          /(\"is_sl\"\\s*:\\s*)(true|false)/,\r\n+          `$1${stoplossSwitch.checked}`\r\n+        );\r\n+        editor.setValue(code);\r\n+        if (!(stoplossSwitch.checked)) {\r\n+          document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"stoploss_value\").value = \"\";\r\n+        }\r\n \r\n+      }\r\n \r\n-                                            stoplossValbox?.addEventListener(\"input\", function () {\r\n-                                              let stoplossValue=this.value.trim();\r\n-                                              let currentValue=editor.getValue().trim();\r\n+      //onchange toggles the switch, call the function and also shows dropdown\r\n+      function stoplossSwitchReflect() {\r\n+        let dropdownOfStoploss = document.getElementById(\"stoplossDropdownCtn\");\r\n+        dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n \r\n-                                                if(stoplossValue<0){\r\n-                                                  stoplossErr.style.display=\"block\";\r\n-                                                }\r\n-                                                else{\r\n-                                                  stoplossErr.style.display=\"none\";\r\n-                                                }\r\n+        if (dropdownOfStoploss.style.display === \"block\") {\r\n+          document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\", function () {\r\n \r\n-                                              if(!stoplossValue){\r\n-                                                currentValue = currentValue.replace(/,?\\s*\"sl_value\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n-                                                // Also clean up trailing commas before }\r\n-                                                currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n-                                                editor.setValue(currentValue);\r\n-                                                return;\r\n-                                              }\r\n+            let selectedstoplossValue = this.value;\r\n+            if (!selectedstoplossValue || !editor) return;\r\n \r\n-                                              if(/\\\"sl_value\\\"\\s*:\\s*\\d*/.test(currentValue)){\r\n-                                                currentValue = currentValue.replace(\r\n-                                                /(\"sl_value\"\\s*:\\s*)\\d*/,\r\n-                                                `$1${stoplossValue}`\r\n-                                                ); \r\n-                                              }\r\n-                                              else{\r\n-                                                if (currentValue.endsWith(\"}\")) {\r\n-                                                        currentValue = currentValue.slice(0, -1).trim();\r\n-                                                      }\r\n-                                                      currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n-                                                      currentValue = currentValue + `,\\n\\t\"sl_value\":${stoplossValue}\\n}`;\r\n-                                                }\r\n+            //this will add or replace in code snippet\r\n+            let currentValue = editor.getValue();\r\n+            if (/\"sl_type\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n+              currentValue = currentValue.replace(\r\n+                /(\"sl_type\"\\s*:\\s*\").*?(\")/,\r\n+                `$1${selectedstoplossValue}$2`\r\n+              );\r\n+            }\r\n+            else {\r\n+              // Remove the last closing brace\r\n+              currentValue = currentValue.trim();\r\n+              if (currentValue.endsWith(\"}\")) {\r\n+                currentValue = currentValue.slice(0, -1);\r\n+              }\r\n+              currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n \r\n-                                              editor.setValue(currentValue);\r\n+              // Append new script value\r\n+              currentValue += `,\\n \\t\"sl_type\":\"${selectedstoplossValue}\" \\n}`;\r\n+            }\r\n \r\n-                                                \r\n-                                            });\r\n-      \r\n-                                 \r\n-                                      });\r\n-                  }\r\n-                  else{\r\n-                    document.getElementById(\"stoploss_value\").style.display=\"none\";\r\n-                    let code = editor.getValue();\r\n+            editor.setValue(currentValue);\r\n \r\n-                        code = code.replace(/,\\s*\"sl_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n-                        code = code.replace(/,\\s*\"sl_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n-                        editor.setValue(code);\r\n-                  }\r\n \r\n+            document.getElementById(\"stoploss_value\").style.display = \"block\";\r\n+            let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n+            let stoplossErr = document.getElementById(\"stoplossError\");\r\n \r\n-                };\r\n \r\n-                stoplossSwitch.addEventListener(\"change\",function(){\r\n-                  toggleIsSl();\r\n-                  stoplossSwitchReflect();\r\n-                  \r\n-                })\r\n+            stoplossValbox?.addEventListener(\"input\", function () {\r\n+              let stoplossValue = this.value.trim();\r\n+              let currentValue = editor.getValue().trim();\r\n \r\n-                //trailing switch\r\n-                const   trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n-                \r\n-                function toggleIsTrailSet() {\r\n-                    let code = editor.getValue();\r\n-                      code = code.replace(\r\n-                      /(\"is_trail_set\"\\s*:\\s*)(true|false)/,\r\n-                      `$1${trailingSwitch.checked}`\r\n-                      );\r\n+              if (stoplossValue < 0) {\r\n+                stoplossErr.style.display = \"block\";\r\n+              }\r\n+              else {\r\n+                stoplossErr.style.display = \"none\";\r\n+              }\r\n \r\n-                    editor.setValue(code);\r\n+              if (!stoplossValue) {\r\n+                currentValue = currentValue.replace(/,?\\s*\"sl_value\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n+                // Also clean up trailing commas before }\r\n+                currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n+                editor.setValue(currentValue);\r\n+                return;\r\n+              }\r\n \r\n-                    if(!(trailingSwitch.checked)){\r\n-                    document.getElementById(\"trailingdropdown\").selectedIndex=0;\r\n-                    document.getElementById(\"trailingtrigger_value\").value=\"\";\r\n-                    document.getElementById(\"trailinggap_value\").value=\"\";\r\n-                    document.getElementById(\"trailingpoint_value\").value=\"\";\r\n-                    }\r\n+              if (/\\\"sl_value\\\"\\s*:\\s*\\d*/.test(currentValue)) {\r\n+                currentValue = currentValue.replace(\r\n+                  /(\"sl_value\"\\s*:\\s*)\\d*/,\r\n+                  `$1${stoplossValue}`\r\n+                );\r\n+              }\r\n+              else {\r\n+                if (currentValue.endsWith(\"}\")) {\r\n+                  currentValue = currentValue.slice(0, -1).trim();\r\n                 }\r\n-                function trailswitchReflect(){\r\n-                  let dropdownOfTrailing=document.getElementById(\"trailingDropdownCtn\");\r\n-                  dropdownOfTrailing.style.display = trailingSwitch.checked ? 'block' : 'none';\r\n+                currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n+                currentValue = currentValue + `,\\n\\t\"sl_value\":${stoplossValue}\\n}`;\r\n+              }\r\n \r\n-                      if(dropdownOfTrailing.style.display===\"block\"){\r\n+              editor.setValue(currentValue);\r\n \r\n-                                document.getElementById(\"trailingdropdown\")?.addEventListener(\"change\",function(){\r\n \r\n-                                            let selectedtrailingValue = this.value;\r\n-                                                if (!selectedtrailingValue || !editor) return;\r\n+            });\r\n \r\n-                                                //this will add or replace in code snippet\r\n-                                                let currentValue = editor.getValue();\r\n-                                                if (/\"trail_type\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n-                                                  currentValue = currentValue.replace(\r\n-                                                    /(\"trail_type\"\\s*:\\s*\").*?(\")/,\r\n-                                                    `$1${selectedtrailingValue}$2`\r\n-                                                  );\r\n-                                                } \r\n-                                                  else {\r\n-                                                  // Remove the last closing brace\r\n-                                                  currentValue = currentValue.trim();\r\n-                                                  if (currentValue.endsWith(\"}\")) {\r\n-                                                    currentValue = currentValue.slice(0, -1);\r\n-                                                  }\r\n-                                                  currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n \r\n-                                                      // Append new script value\r\n-                                                      currentValue+= `,\\n \\t\"trail_type\":\"${selectedtrailingValue}\" \\n}`;\r\n-                                                  }\r\n-                                                \r\n-                                                editor.setValue(currentValue);\r\n+          });\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"stoploss_value\").style.display = \"none\";\r\n+          let code = editor.getValue();\r\n \r\n+          code = code.replace(/,\\s*\"sl_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n+          code = code.replace(/,\\s*\"sl_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n+          editor.setValue(code);\r\n+        }\r\n \r\n-                                              document.getElementById(\"trailingtrigger_value\").style.display=\"block\";\r\n-                                              let  trailtriggerValbox= document.getElementById(\"trailtriggerValbox\");\r\n-                                              let trailTriggerError = document.getElementById(\"trailTriggerError\");\r\n \r\n+      };\r\n \r\n-                                                trailtriggerValbox?.addEventListener(\"input\", function () {\r\n+      stoplossSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsSl();\r\n+        stoplossSwitchReflect();\r\n \r\n-                                                  let trailTriggerValue=this.value.trim();\r\n-                                                  let currentValue=editor.getValue().trim();\r\n+      })\r\n \r\n-                                                    if(trailTriggerValue<0){\r\n-                                                      trailTriggerError.style.display=\"block\";\r\n+      //trailing switch\r\n+      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n \r\n-                                                      document.getElementById(\"trailinggap_value\").style.display=\"none\";\r\n+      function toggleIsTrailSet() {\r\n+        let code = editor.getValue();\r\n+        code = code.replace(\r\n+          /(\"is_trail_set\"\\s*:\\s*)(true|false)/,\r\n+          `$1${trailingSwitch.checked}`\r\n+        );\r\n \r\n-                                                    }\r\n-                                                    else{\r\n-                                                      trailTriggerError.style.display=\"none\";\r\n-                                                      document.getElementById(\"trailinggap_value\").style.display=\"block\";\r\n-                                                    }\r\n+        editor.setValue(code);\r\n \r\n-                                                  if(!trailTriggerValue){\r\n-                                                    currentValue = currentValue.replace(/,?\\s*\"trail_trigger\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n-                                                    // Also clean up trailing commas before }\r\n-                                                    currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n-                                                    editor.setValue(currentValue);\r\n-                                                    return;\r\n-                                                  }\r\n+        if (!(trailingSwitch.checked)) {\r\n+          document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n+          document.getElementById(\"trailinggap_value\").value = \"\";\r\n+          document.getElementById(\"trailingpoint_value\").value = \"\";\r\n+        }\r\n+      }\r\n+      function trailswitchReflect() {\r\n+        let dropdownOfTrailing = document.getElementById(\"trailingDropdownCtn\");\r\n+        dropdownOfTrailing.style.display = trailingSwitch.checked ? 'block' : 'none';\r\n \r\n-                                                  if(/\\\"trail_trigger\\\"\\s*:\\s*\\d*/.test(currentValue)){\r\n-                                                    currentValue = currentValue.replace(\r\n-                                                    /(\"trail_trigger\"\\s*:\\s*)\\d*/,\r\n-                                                    `$1${trailTriggerValue}`\r\n-                                                    ); \r\n-                                                  }\r\n-                                                  else{\r\n-                                                    if (currentValue.endsWith(\"}\")) {\r\n-                                                            currentValue = currentValue.slice(0, -1).trim();\r\n-                                                          }\r\n-                                                          currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n-                                                          currentValue = currentValue + `,\\n\\t\"trail_trigger\":${trailTriggerValue}\\n}`;\r\n-                                                    }\r\n+        if (dropdownOfTrailing.style.display === \"block\") {\r\n \r\n-                                                  editor.setValue(currentValue);\r\n-                                                 \r\n-                                                 \r\n-                                                  //trail gap number box show\r\n-                                                document.getElementById(\"trailGapValbox\")?.addEventListener(\"input\",function(){\r\n-                                                  let trailgapError=document.getElementById(\"trailGapError\");\r\n-                                                  let trailGapValue=this.value.trim();\r\n-                                                  let currentValue=editor.getValue().trim();\r\n+          document.getElementById(\"trailingdropdown\")?.addEventListener(\"change\", function () {\r\n \r\n-                                                    if(trailGapValue<0){\r\n-                                                      trailgapError.style.display=\"block\";\r\n-                                                      document.getElementById(\"trailingpoint_value\").style.display=\"none\";\r\n+            let selectedtrailingValue = this.value;\r\n+            if (!selectedtrailingValue || !editor) return;\r\n \r\n-                                                    }\r\n-                                                    else{\r\n-                                                      trailgapError.style.display=\"none\";\r\n-                                                      document.getElementById(\"trailingpoint_value\").style.display=\"block\";\r\n-                                                    }\r\n+            //this will add or replace in code snippet\r\n+            let currentValue = editor.getValue();\r\n+            if (/\"trail_type\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n+              currentValue = currentValue.replace(\r\n+                /(\"trail_type\"\\s*:\\s*\").*?(\")/,\r\n+                `$1${selectedtrailingValue}$2`\r\n+              );\r\n+            }\r\n+            else {\r\n+              // Remove the last closing brace\r\n+              currentValue = currentValue.trim();\r\n+              if (currentValue.endsWith(\"}\")) {\r\n+                currentValue = currentValue.slice(0, -1);\r\n+              }\r\n+              currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n \r\n-                                                  if(!trailGapValue){\r\n-                                                    currentValue = currentValue.replace(/,?\\s*\"trail_gap\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n-                                                    // Also clean up trailing commas before }\r\n-                                                    currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n-                                                    editor.setValue(currentValue);\r\n-                                                    return;\r\n-                                                  }\r\n+              // Append new script value\r\n+              currentValue += `,\\n \\t\"trail_type\":\"${selectedtrailingValue}\" \\n}`;\r\n+            }\r\n \r\n-                                                  if(/\\\"trail_gap\\\"\\s*:\\s*\\d*/.test(currentValue)){\r\n-                                                    currentValue = currentValue.replace(\r\n-                                                    /(\"trail_gap\"\\s*:\\s*)\\d*/,\r\n-                                                    `$1${trailGapValue}`\r\n-                                                    ); \r\n-                                                  }\r\n-                                                  else{\r\n-                                                    if (currentValue.endsWith(\"}\")) {\r\n-                                                            currentValue = currentValue.slice(0, -1).trim();\r\n-                                                          }\r\n-                                                          currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n-                                                          currentValue = currentValue + `,\\n\\t\"trail_gap\":${trailGapValue}\\n}`;\r\n-                                                    }\r\n+            editor.setValue(currentValue);\r\n \r\n-                                                  editor.setValue(currentValue);\r\n-                                                  })   \r\n \r\n-                                                  //document.getElementById(\"trailingpoint_value\").style.display=\"block\"\r\n+            document.getElementById(\"trailingtrigger_value\").style.display = \"block\";\r\n+            let trailtriggerValbox = document.getElementById(\"trailtriggerValbox\");\r\n+            let trailTriggerError = document.getElementById(\"trailTriggerError\");\r\n \r\n-                                                  //trail point input box\r\n-                                                  document.getElementById(\"trailPointValbox\")?.addEventListener(\"input\",function(){\r\n-                                                  let trailpointError=document.getElementById(\"trailPointError\");\r\n-                                                  let trailpointVal=this.value.trim();\r\n-                                                  let currentValue=editor.getValue().trim();\r\n \r\n-                                                    if(trailpointVal<0){\r\n-                                                      trailpointError.style.display=\"block\";\r\n+            trailtriggerValbox?.addEventListener(\"input\", function () {\r\n \r\n-                                                    }\r\n-                                                    else{\r\n-                                                      trailpointError.style.display=\"none\";\r\n-                                                      }\r\n+              let trailTriggerValue = this.value.trim();\r\n+              let currentValue = editor.getValue().trim();\r\n \r\n-                                                  if(!trailpointVal){\r\n-                                                    currentValue = currentValue.replace(/,?\\s*\"trail_point\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n-                                                    // Also clean up trailing commas before }\r\n-                                                    currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n-                                                    editor.setValue(currentValue);\r\n-                                                    return;\r\n-                                                  }\r\n+              if (trailTriggerValue < 0) {\r\n+                trailTriggerError.style.display = \"block\";\r\n \r\n-                                                  if(/\\\"trail_point\\\"\\s*:\\s*\\d*/.test(currentValue)){\r\n-                                                    currentValue = currentValue.replace(\r\n-                                                    /(\"trail_point\"\\s*:\\s*)\\d*/,\r\n-                                                    `$1${trailpointVal}`\r\n-                                                    ); \r\n-                                                  }\r\n-                                                  else{\r\n-                                                    if (currentValue.endsWith(\"}\")) {\r\n-                                                            currentValue = currentValue.slice(0, -1).trim();\r\n-                                                          }\r\n-                                                          currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n-                                                          currentValue = currentValue + `,\\n\\t\"trail_point\":${trailpointVal}\\n}`;\r\n-                                                    }\r\n+                document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n \r\n-                                                  editor.setValue(currentValue);\r\n-                                                  })   \r\n+              }\r\n+              else {\r\n+                trailTriggerError.style.display = \"none\";\r\n+                document.getElementById(\"trailinggap_value\").style.display = \"block\";\r\n+              }\r\n \r\n+              if (!trailTriggerValue) {\r\n+                currentValue = currentValue.replace(/,?\\s*\"trail_trigger\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n+                // Also clean up trailing commas before }\r\n+                currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n+                editor.setValue(currentValue);\r\n+                return;\r\n+              }\r\n \r\n-                                                  \r\n-                                                });\r\n-                                        });\r\n+              if (/\\\"trail_trigger\\\"\\s*:\\s*\\d*/.test(currentValue)) {\r\n+                currentValue = currentValue.replace(\r\n+                  /(\"trail_trigger\"\\s*:\\s*)\\d*/,\r\n+                  `$1${trailTriggerValue}`\r\n+                );\r\n+              }\r\n+              else {\r\n+                if (currentValue.endsWith(\"}\")) {\r\n+                  currentValue = currentValue.slice(0, -1).trim();\r\n+                }\r\n+                currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n+                currentValue = currentValue + `,\\n\\t\"trail_trigger\":${trailTriggerValue}\\n}`;\r\n+              }\r\n \r\n+              editor.setValue(currentValue);\r\n \r\n-                      }\r\n-                      else{\r\n-                        document.getElementById(\"trailingtrigger_value\").style.display=\"none\";\r\n-                        document.getElementById(\"trailinggap_value\").style.display=\"none\";\r\n-                        document.getElementById(\"trailingpoint_value\").style.display=\"none\";\r\n-                        let code = editor.getValue();\r\n \r\n-                            code = code.replace(/,\\s*\"trail_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n-                            code = code.replace(/,\\s*\"trail_trigger\"\\s*:\\s*[^,}]+/g, \"\");\r\n-                            code = code.replace(/,\\s*\"trail_gap\"\\s*:\\s*[^,}]+/g, \"\");\r\n-                            code = code.replace(/,\\s*\"trail_point\"\\s*:\\s*[^,}]+/g, \"\");\r\n+              //trail gap number box show\r\n+              document.getElementById(\"trailGapValbox\")?.addEventListener(\"input\", function () {\r\n+                let trailgapError = document.getElementById(\"trailGapError\");\r\n+                let trailGapValue = this.value.trim();\r\n+                let currentValue = editor.getValue().trim();\r\n \r\n-                            editor.setValue(code);\r\n-                      }\r\n+                if (trailGapValue < 0) {\r\n+                  trailgapError.style.display = \"block\";\r\n+                  document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n+\r\n                 }\r\n-                trailingSwitch.addEventListener(\"change\",function(){\r\n-                  toggleIsTrailSet();\r\n-                  trailswitchReflect();\r\n-                })\r\n-              } \r\n+                else {\r\n+                  trailgapError.style.display = \"none\";\r\n+                  document.getElementById(\"trailingpoint_value\").style.display = \"block\";\r\n+                }\r\n \r\n-              //it adds and modifyes in code snippet\r\n-            let quantityValue = this.value.trim();\r\n-            let currentValue = editor.getValue().trim();\r\n-            if (!quantityValue) {\r\n-              currentValue = currentValue.replace(/,?\\s*\"quantity\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n-              // Also clean up trailing commas before }\r\n-              currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n-              editor.setValue(currentValue);\r\n-              return;\r\n-            }\r\n+                if (!trailGapValue) {\r\n+                  currentValue = currentValue.replace(/,?\\s*\"trail_gap\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n+                  // Also clean up trailing commas before }\r\n+                  currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n+                  editor.setValue(currentValue);\r\n+                  return;\r\n+                }\r\n \r\n-            if (/\\\"quantity\\\"\\s*:\\s*\\d*/.test(currentValue)) {\r\n-              // If already present => replace value only\r\n-              currentValue = currentValue.replace(\r\n-                /(\"quantity\"\\s*:\\s*)\\d*/,\r\n-                `$1${quantityValue}`\r\n-              );\r\n-            } \r\n-            else {\r\n-              // If not present then add it at the end\r\n-              if (currentValue.endsWith(\"}\")) {\r\n-                currentValue = currentValue.slice(0, -1).trim();\r\n-              }\r\n-              currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n-              currentValue = currentValue + `,\\n\\t\"quantity\":${quantityValue}\\n}`;\r\n-            }\r\n+                if (/\\\"trail_gap\\\"\\s*:\\s*\\d*/.test(currentValue)) {\r\n+                  currentValue = currentValue.replace(\r\n+                    /(\"trail_gap\"\\s*:\\s*)\\d*/,\r\n+                    `$1${trailGapValue}`\r\n+                  );\r\n+                }\r\n+                else {\r\n+                  if (currentValue.endsWith(\"}\")) {\r\n+                    currentValue = currentValue.slice(0, -1).trim();\r\n+                  }\r\n+                  currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n+                  currentValue = currentValue + `,\\n\\t\"trail_gap\":${trailGapValue}\\n}`;\r\n+                }\r\n \r\n-           \r\n+                editor.setValue(currentValue);\r\n+              })\r\n \r\n-            document.querySelectorAll('input[type=\"checkbox\"]').forEach(toggleBtn => {\r\n-              toggleBtn.checked = false; // turn off all switches\r\n-              document.getElementById(\"targetdropdown\").selectedIndex=0;\r\n-              document.getElementById(\"stoplossdropdown\").selectedIndex=0;\r\n-              document.getElementById(\"trailingdropdown\").selectedIndex=0;\r\n-              document.getElementById(\"target_value\").value=\"\";\r\n-              document.getElementById(\"stoploss_value\").value=\"\";\r\n-              document.getElementById(\"trailingtrigger_value\").value=\"\";\r\n-              document.getElementById(\"trailinggap_value\").value=\"\";\r\n-              document.getElementById(\"trailingpoint_value\").value=\"\";\r\n-               targerSwitchReflect();\r\n-               stoplossSwitchReflect();\r\n-               trailswitchReflect();\r\n+              //document.getElementById(\"trailingpoint_value\").style.display=\"block\"\r\n \r\n+              //trail point input box\r\n+              document.getElementById(\"trailPointValbox\")?.addEventListener(\"input\", function () {\r\n+                let trailpointError = document.getElementById(\"trailPointError\");\r\n+                let trailpointVal = this.value.trim();\r\n+                let currentValue = editor.getValue().trim();\r\n+\r\n+                if (trailpointVal < 0) {\r\n+                  trailpointError.style.display = \"block\";\r\n+\r\n+                }\r\n+                else {\r\n+                  trailpointError.style.display = \"none\";\r\n+                }\r\n+\r\n+                if (!trailpointVal) {\r\n+                  currentValue = currentValue.replace(/,?\\s*\"trail_point\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n+                  // Also clean up trailing commas before }\r\n+                  currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n+                  editor.setValue(currentValue);\r\n+                  return;\r\n+                }\r\n+\r\n+                if (/\\\"trail_point\\\"\\s*:\\s*\\d*/.test(currentValue)) {\r\n+                  currentValue = currentValue.replace(\r\n+                    /(\"trail_point\"\\s*:\\s*)\\d*/,\r\n+                    `$1${trailpointVal}`\r\n+                  );\r\n+                }\r\n+                else {\r\n+                  if (currentValue.endsWith(\"}\")) {\r\n+                    currentValue = currentValue.slice(0, -1).trim();\r\n+                  }\r\n+                  currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n+                  currentValue = currentValue + `,\\n\\t\"trail_point\":${trailpointVal}\\n}`;\r\n+                }\r\n+\r\n+                editor.setValue(currentValue);\r\n+              })\r\n+\r\n+\r\n+\r\n             });\r\n+          });\r\n \r\n-            document.getElementById(\"targetdropdown\").style.selectedValue=\"Select Target Type\";\r\n-              \r\n \r\n-            // Remove related switch values from JSON\r\n-            currentValue = currentValue\r\n-              .replace(/\"exit_on_opposite\"\\s*:\\s*(true|false),?/g, '\"exit_on_opposite\": false,')\r\n-              .replace(/\"is_tgt\"\\s*:\\s*(true|false),?/g, '\"is_tgt\": false,')\r\n-              .replace(/\"tgt_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n-              .replace(/\"tgt_value\"\\s*:\\s*\\d*/, \"\")\r\n-              .replace(/\"is_sl\"\\s*:\\s*(true|false),?/g, '\"is_sl\": false,')\r\n-              .replace(/\"sl_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n-              .replace(/\"sl_value\"\\s*:\\s*\\d*/, \"\")\r\n-              .replace(/\"is_trail_set\"\\s*:\\s*(true|false),?/g, '\"is_trail_set\": false,')\r\n-              .replace(/\"trail_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n-              .replace(/\"trail_trigger\"\\s*:\\s*\\d*/, \"\")\r\n-              .replace(/\"trail_gap\"\\s*:\\s*\\d*/, \"\")\r\n-              .replace(/\"trail_point\"\\s*:\\s*\\d*/, \"\");\r\n-                        \r\n-               editor.setValue(currentValue);\r\n-               \r\n-  })\r\n-})\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"trailingtrigger_value\").style.display = \"none\";\r\n+          document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n+          document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n+          let code = editor.getValue();\r\n+\r\n+          code = code.replace(/,\\s*\"trail_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n+          code = code.replace(/,\\s*\"trail_trigger\"\\s*:\\s*[^,}]+/g, \"\");\r\n+          code = code.replace(/,\\s*\"trail_gap\"\\s*:\\s*[^,}]+/g, \"\");\r\n+          code = code.replace(/,\\s*\"trail_point\"\\s*:\\s*[^,}]+/g, \"\");\r\n+\r\n+          editor.setValue(code);\r\n+        }\r\n+      }\r\n+      trailingSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTrailSet();\r\n+        trailswitchReflect();\r\n+      })\r\n+    });\r\n+  \r\n+\r\n+\r\n+    document.querySelectorAll('input[type=\"checkbox\"]').forEach(toggleBtn => {\r\n+      toggleBtn.checked = false; // turn off all switches\r\n+      document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"target_value\").value = \"\";\r\n+      document.getElementById(\"stoploss_value\").value = \"\";\r\n+      document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n+      document.getElementById(\"trailinggap_value\").value = \"\";\r\n+      document.getElementById(\"trailingpoint_value\").value = \"\";\r\n+      targerSwitchReflect();\r\n+      stoplossSwitchReflect();\r\n+      trailswitchReflect();\r\n+\r\n+    });\r\n+\r\n+    document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n+\r\n+\r\n+    // Remove related switch values from JSON\r\n+    currentValue = currentValue\r\n+      .replace(/\"exit_on_opposite\"\\s*:\\s*(true|false),?/g, '\"exit_on_opposite\": false,')\r\n+      .replace(/\"is_tgt\"\\s*:\\s*(true|false),?/g, '\"is_tgt\": false,')\r\n+      .replace(/\"tgt_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n+      .replace(/\"tgt_value\"\\s*:\\s*\\d*/, \"\")\r\n+      .replace(/\"is_sl\"\\s*:\\s*(true|false),?/g, '\"is_sl\": false,')\r\n+      .replace(/\"sl_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n+      .replace(/\"sl_value\"\\s*:\\s*\\d*/, \"\")\r\n+      .replace(/\"is_trail_set\"\\s*:\\s*(true|false),?/g, '\"is_trail_set\": false,')\r\n+      .replace(/\"trail_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n+      .replace(/\"trail_trigger\"\\s*:\\s*\\d*/, \"\")\r\n+      .replace(/\"trail_gap\"\\s*:\\s*\\d*/, \"\")\r\n+      .replace(/\"trail_point\"\\s*:\\s*\\d*/, \"\");\r\n+\r\n+    editor.setValue(currentValue);\r\n+  });\r\n+\r\n"
                },
                {
                    "date": 1756335116399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -955,6 +955,8 @@\n       .replace(/\"trail_gap\"\\s*:\\s*\\d*/, \"\")\r\n       .replace(/\"trail_point\"\\s*:\\s*\\d*/, \"\");\r\n \r\n     editor.setValue(currentValue);\r\n+  }\r\n   });\r\n \r\n+\r\n"
                },
                {
                    "date": 1756335171542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -475,16 +475,9 @@\n \r\n       //target switch toggle\r\n       const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n       function toggleIsTgt() {\r\n-        let code = editor.getValue();\r\n-\r\n-        // Toggle exit_on_opposite in the JSON string\r\n-        code = code.replace(\r\n-          /(\"is_tgt\"\\s*:\\s*)(true|false)/,\r\n-          `$1${targetSwitch.checked}`\r\n-        );\r\n-        editor.setValue(code);\r\n+         upsertJson(\"exit_on_opposite\", e.target.checked.toString());\r\n         if (!(targetSwitch.checked)) {\r\n           document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n           document.getElementById(\"target_value\").value = \"\";\r\n         }\r\n"
                },
                {
                    "date": 1756335205868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -462,22 +462,16 @@\n       })\r\n       const exitOnPurposeSwitch = document.getElementById('flexSwitchCheck1');\r\n \r\n       function toggleExitOnOpposite() {\r\n-        let code = editor.getValue();\r\n-        code = code.replace(\r\n-          /(\"exit_on_opposite\"\\s*:\\s*)(true|false)/,\r\n-          `$1${exitOnPurposeSwitch.checked}`\r\n-        );\r\n-\r\n-        editor.setValue(code);\r\n+        upsertJson(\"exit_on_opposite\", e.target.checked.toString());\r\n       }\r\n       exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n \r\n       //target switch toggle\r\n       const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n       function toggleIsTgt() {\r\n-         upsertJson(\"exit_on_opposite\", e.target.checked.toString());\r\n+         upsertJson(\"is_tgt\", e.target.checked.toString());\r\n         if (!(targetSwitch.checked)) {\r\n           document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n           document.getElementById(\"target_value\").value = \"\";\r\n         }\r\n"
                },
                {
                    "date": 1756335237530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -484,34 +484,10 @@\n         dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n         if (dropdownofTarget.style.display === \"block\") {\r\n           document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n \r\n-            let selectedtargetValue = this.value;\r\n-            if (!selectedtargetValue || !editor) return;\r\n-\r\n-            //this will add or replace in code snippet\r\n-            let currentValue = editor.getValue();\r\n-            if (/\"tgt_type\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n-              currentValue = currentValue.replace(\r\n-                /(\"tgt_type\"\\s*:\\s*\").*?(\")/,\r\n-                `$1${selectedtargetValue}$2`\r\n-              );\r\n-            }\r\n-            else {\r\n-              // Remove the last closing brace\r\n-              currentValue = currentValue.trim();\r\n-              if (currentValue.endsWith(\"}\")) {\r\n-                currentValue = currentValue.slice(0, -1);\r\n-              }\r\n-              currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n-\r\n-              // Append new script value\r\n-              currentValue += `,\\n \\t\"tgt_type\":\"${selectedtargetValue}\" \\n}`;\r\n-            }\r\n-\r\n-            editor.setValue(currentValue);\r\n-\r\n-\r\n+            \r\n+            \r\n             document.getElementById(\"target_value\").style.display = \"block\";\r\n \r\n             var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n             tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n"
                },
                {
                    "date": 1756335268201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -483,9 +483,9 @@\n       function targerSwitchReflect() {\r\n         dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n         if (dropdownofTarget.style.display === \"block\") {\r\n           document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n-\r\n+            upsertJson(\"tgt_type\",this.value)\r\n             \r\n             \r\n             document.getElementById(\"target_value\").style.display = \"block\";\r\n \r\n"
                },
                {
                    "date": 1756335273808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -483,9 +483,9 @@\n       function targerSwitchReflect() {\r\n         dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n         if (dropdownofTarget.style.display === \"block\") {\r\n           document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n-            upsertJson(\"tgt_type\",this.value)\r\n+            upsertJson(\"tgt_type\",this.value,true)\r\n             \r\n             \r\n             document.getElementById(\"target_value\").style.display = \"block\";\r\n \r\n"
                },
                {
                    "date": 1756335285492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -483,9 +483,9 @@\n       function targerSwitchReflect() {\r\n         dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n         if (dropdownofTarget.style.display === \"block\") {\r\n           document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n-            upsertJson(\"tgt_type\",this.value,true)\r\n+            upsertJson(\"tgt_type\",this.value,true);\r\n             \r\n             \r\n             document.getElementById(\"target_value\").style.display = \"block\";\r\n \r\n"
                },
                {
                    "date": 1756335426386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -462,9 +462,9 @@\n       })\r\n       const exitOnPurposeSwitch = document.getElementById('flexSwitchCheck1');\r\n \r\n       function toggleExitOnOpposite() {\r\n-        upsertJson(\"exit_on_opposite\", e.target.checked.toString());\r\n+        upsertJson(\"exit_on_opposite\", exitOnPurposeSwitch.checked.toString());\r\n       }\r\n       exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n \r\n       //target switch toggle\r\n"
                },
                {
                    "date": 1756335491900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -469,9 +469,9 @@\n \r\n       //target switch toggle\r\n       const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n       function toggleIsTgt() {\r\n-         upsertJson(\"is_tgt\", e.target.checked.toString());\r\n+         upsertJson(\"is_tgt\", targetSwitch.checked.toString());\r\n         if (!(targetSwitch.checked)) {\r\n           document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n           document.getElementById(\"target_value\").value = \"\";\r\n         }\r\n"
                },
                {
                    "date": 1756335501279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -484,10 +484,8 @@\n         dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n         if (dropdownofTarget.style.display === \"block\") {\r\n           document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n             upsertJson(\"tgt_type\",this.value,true);\r\n-            \r\n-            \r\n             document.getElementById(\"target_value\").style.display = \"block\";\r\n \r\n             var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n             tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n"
                },
                {
                    "date": 1756335516560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -485,15 +485,8 @@\n         if (dropdownofTarget.style.display === \"block\") {\r\n           document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n             upsertJson(\"tgt_type\",this.value,true);\r\n             document.getElementById(\"target_value\").style.display = \"block\";\r\n-\r\n-            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n-            tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n-              return new bootstrap.Tooltip(tooltipTriggerEl)\r\n-\r\n-            })\r\n-\r\n             let targetValBox = document.getElementById(\"targetValbox\");\r\n             let targetErr = document.getElementById(\"targetError\");\r\n \r\n \r\n"
                },
                {
                    "date": 1756335530555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -485,8 +485,15 @@\n         if (dropdownofTarget.style.display === \"block\") {\r\n           document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n             upsertJson(\"tgt_type\",this.value,true);\r\n             document.getElementById(\"target_value\").style.display = \"block\";\r\n+\r\n+            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n+            tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n+              return new bootstrap.Tooltip(tooltipTriggerEl)\r\n+\r\n+            })\r\n+\r\n             let targetValBox = document.getElementById(\"targetValbox\");\r\n             let targetErr = document.getElementById(\"targetError\");\r\n \r\n \r\n"
                },
                {
                    "date": 1756335537195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -486,13 +486,13 @@\n           document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n             upsertJson(\"tgt_type\",this.value,true);\r\n             document.getElementById(\"target_value\").style.display = \"block\";\r\n \r\n-            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n-            tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n-              return new bootstrap.Tooltip(tooltipTriggerEl)\r\n+            // var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n+            // tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n+            //   return new bootstrap.Tooltip(tooltipTriggerEl)\r\n \r\n-            })\r\n+            // })\r\n \r\n             let targetValBox = document.getElementById(\"targetValbox\");\r\n             let targetErr = document.getElementById(\"targetError\");\r\n \r\n"
                },
                {
                    "date": 1756335604300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -497,43 +497,18 @@\n             let targetErr = document.getElementById(\"targetError\");\r\n \r\n \r\n             targetValBox?.addEventListener(\"input\", function () {\r\n+              upsertJson(\"tgt_value\",this.value,true)\r\n               let targetValue = this.value.trim();\r\n-              let currentValue = editor.getValue().trim();\r\n \r\n               if (targetValue < 0) {\r\n                 targetErr.style.display = \"block\";\r\n               }\r\n               else {\r\n                 targetErr.style.display = \"none\";\r\n               }\r\n \r\n-              if (!targetValue) {\r\n-                currentValue = currentValue.replace(/,?\\s*\"tgt_value\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n-                // Also clean up trailing commas before }\r\n-                currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n-                editor.setValue(currentValue);\r\n-                return;\r\n-              }\r\n-\r\n-              if (/\\\"tgt_value\\\"\\s*:\\s*\\d*/.test(currentValue)) {\r\n-                currentValue = currentValue.replace(\r\n-                  /(\"tgt_value\"\\s*:\\s*)\\d*/,\r\n-                  `$1${targetValue}`\r\n-                );\r\n-              }\r\n-              else {\r\n-                if (currentValue.endsWith(\"}\")) {\r\n-                  currentValue = currentValue.slice(0, -1).trim();\r\n-                }\r\n-                currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n-                currentValue = currentValue + `,\\n\\t\"tgt_value\":${targetValue}\\n}`;\r\n-              }\r\n-\r\n-              editor.setValue(currentValue);\r\n-\r\n-\r\n             });\r\n \r\n \r\n           });\r\n"
                },
                {
                    "date": 1756336398450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -533,16 +533,9 @@\n \r\n       //stoploss switch\r\n       const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n       function toggleIsSl() {\r\n-        let code = editor.getValue();\r\n-\r\n-        // Toggle stoploss in the JSON string\r\n-        code = code.replace(\r\n-          /(\"is_sl\"\\s*:\\s*)(true|false)/,\r\n-          `$1${stoplossSwitch.checked}`\r\n-        );\r\n-        editor.setValue(code);\r\n+        upsertJson(\"is_sl\",stoplossSwitch.checked.toString())\r\n         if (!(stoplossSwitch.checked)) {\r\n           document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n           document.getElementById(\"stoploss_value\").value = \"\";\r\n         }\r\n"
                },
                {
                    "date": 1756351548632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -508,10 +508,8 @@\n                 targetErr.style.display = \"none\";\r\n               }\r\n \r\n             });\r\n-\r\n-\r\n           });\r\n         }\r\n         else {\r\n           document.getElementById(\"target_value\").style.display = \"none\";\r\n"
                },
                {
                    "date": 1756351656841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -178,9 +178,9 @@\n       { container: '#scriptsearchbox', field: \"#search\" },\r\n       { container: \"#productType\", field: \"#productDropdown\" },\r\n       { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n       { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n-      { container: \"#BtnGroup\", field: null }\r\n+      { container: \"#BtnGroup\", field: null },\r\n \r\n     ]\r\n   },\r\n   {\r\n"
                },
                {
                    "date": 1756352114754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -254,9 +254,33 @@\n     }\r\n   });\r\n }\r\n \r\n+function resetEditorFields(keysToReset = []) {\r\n+  try {\r\n+    // Get JSON string from editor\r\n+    let code = editor.getValue();\r\n+    let jsonObj = JSON.parse(code);\r\n \r\n+    // Reset fields\r\n+    keysToReset.forEach(key => {\r\n+      if (jsonObj.hasOwnProperty(key)) {\r\n+        if (typeof jsonObj[key] === \"boolean\") {\r\n+          jsonObj[key] = false; // reset boolean\r\n+        } else {\r\n+          delete jsonObj[key]; // remove string/number\r\n+        }\r\n+      }\r\n+    });\r\n+\r\n+    // Update editor\r\n+    editor.setValue(JSON.stringify(jsonObj, null, 2));\r\n+  } catch (err) {\r\n+    console.error(\"Invalid JSON in editor:\", err);\r\n+  }\r\n+}\r\n+\r\n+\r\n //add data fields to make it work\r\n function syncEditorWithUI() {\r\n   if (!editor) return;\r\n \r\n"
                },
                {
                    "date": 1756352517912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -456,8 +456,9 @@\n \r\n document.getElementById(\"productDropdown\").addEventListener(\"change\", function () {\r\n   upsertJson(\"product\", this.value, true);\r\n   hideAndReset(\"#productDropdown\", \"change\");\r\n+  resetEditorFields([\"script\", \"product\", \"quantity\",, \"is_tgt\",])\r\n   if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\") {\r\n     document.getElementById(\"quantityBlock\").style.display = \"block\";\r\n     document.getElementById(\"quantityBox\").addEventListener(\"input\", function () {\r\n       upsertJson(\"quantity\", this.value, false)\r\n"
                },
                {
                    "date": 1756352918102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -456,9 +456,9 @@\n \r\n document.getElementById(\"productDropdown\").addEventListener(\"change\", function () {\r\n   upsertJson(\"product\", this.value, true);\r\n   hideAndReset(\"#productDropdown\", \"change\");\r\n-  resetEditorFields([\"script\", \"product\", \"quantity\",, \"is_tgt\",])\r\n+  resetEditorFields([\"script\", \"product\", \"quantity\", \"is_tgt\",])\r\n   if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\") {\r\n     document.getElementById(\"quantityBlock\").style.display = \"block\";\r\n     document.getElementById(\"quantityBox\").addEventListener(\"input\", function () {\r\n       upsertJson(\"quantity\", this.value, false)\r\n"
                },
                {
                    "date": 1756353934774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -179,8 +179,9 @@\n       { container: \"#productType\", field: \"#productDropdown\" },\r\n       { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n       { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n       { container: \"#BtnGroup\", field: null },\r\n+      {container:\"#rollover_value\",field:\"#rollovervalbox\"}\r\n \r\n     ]\r\n   },\r\n   {\r\n"
                },
                {
                    "date": 1756353972711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -179,9 +179,12 @@\n       { container: \"#productType\", field: \"#productDropdown\" },\r\n       { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n       { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n       { container: \"#BtnGroup\", field: null },\r\n-      {container:\"#rollover_value\",field:\"#rollovervalbox\"}\r\n+      {container:\"#rollover_value\",field:\"#rollovervalbox\"},\r\n+      {container:\"#rollover_time\",field:\"#timeBox\"},\r\n+      {container:\"#rollover_value\",field:\"#rollovervalbox\"},\r\n+      {container:\"#rollover_value\",field:\"#rollovervalbox\"},\r\n \r\n     ]\r\n   },\r\n   {\r\n"
                },
                {
                    "date": 1756354199091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,11 +181,18 @@\n       { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n       { container: \"#BtnGroup\", field: null },\r\n       {container:\"#rollover_value\",field:\"#rollovervalbox\"},\r\n       {container:\"#rollover_time\",field:\"#timeBox\"},\r\n-      {container:\"#rollover_value\",field:\"#rollovervalbox\"},\r\n-      {container:\"#rollover_value\",field:\"#rollovervalbox\"},\r\n+      {container:\"#targetDropdownCtn\",field:\"#targetdropdown\"},\r\n+      {container:\"#target_value\",field:\"#targetValbox\"},\r\n+      {container:\"#stoplossDropdownCtn\",field:\"#stoplossdropdown\"},\r\n+      {container:\"#stoploss_value\",field:\"#stoplossValbox\"},\r\n+      {container:\"#trailingDropdownCtn\",field:\"#trailingdropdown\"},\r\n+      {container:\"#trailingtrigger_value\",field:\"#trailtriggerValbox\"},\r\n+      {container:\"#trailinggap_value\",field:\"#trailGapValbox\"},\r\n+      {container:\"#trailingpoint_value\",field:\"#trailPointValbox\"}\r\n \r\n+\r\n     ]\r\n   },\r\n   {\r\n     trigger: \"#atmdropdown\",\r\n"
                },
                {
                    "date": 1756354275368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -548,8 +548,9 @@\n           });\r\n         }\r\n         else {\r\n           document.getElementById(\"target_value\").style.display = \"none\";\r\n+          resetEditorFields([\"tgt_type\",\"tgt_value\"])\r\n           let code = editor.getValue();\r\n           code = code.replace(/,\\s*\"tgt_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n           code = code.replace(/,\\s*\"tgt_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n           editor.setValue(code);\r\n"
                },
                {
                    "date": 1756354314612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -548,9 +548,9 @@\n           });\r\n         }\r\n         else {\r\n           document.getElementById(\"target_value\").style.display = \"none\";\r\n-          resetEditorFields([\"tgt_type\",\"tgt_value\"])\r\n+          resetEditorFields([\"tgt_type\",\"tgt_value\",\"is_tgt\"])\r\n           let code = editor.getValue();\r\n           code = code.replace(/,\\s*\"tgt_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n           code = code.replace(/,\\s*\"tgt_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n           editor.setValue(code);\r\n"
                },
                {
                    "date": 1756354415532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -580,9 +580,8 @@\n       //onchange toggles the switch, call the function and also shows dropdown\r\n       function stoplossSwitchReflect() {\r\n         let dropdownOfStoploss = document.getElementById(\"stoplossDropdownCtn\");\r\n         dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n-\r\n         if (dropdownOfStoploss.style.display === \"block\") {\r\n           document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\", function () {\r\n \r\n             let selectedstoplossValue = this.value;\r\n"
                },
                {
                    "date": 1756354497160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -549,12 +549,12 @@\n         }\r\n         else {\r\n           document.getElementById(\"target_value\").style.display = \"none\";\r\n           resetEditorFields([\"tgt_type\",\"tgt_value\",\"is_tgt\"])\r\n-          let code = editor.getValue();\r\n-          code = code.replace(/,\\s*\"tgt_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n-          code = code.replace(/,\\s*\"tgt_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n-          editor.setValue(code);\r\n+          // let code = editor.getValue();\r\n+          // code = code.replace(/,\\s*\"tgt_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n+          // code = code.replace(/,\\s*\"tgt_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n+          // editor.setValue(code);\r\n         }\r\n \r\n       };\r\n       targetSwitch.addEventListener(\"change\", function () {\r\n@@ -582,8 +582,9 @@\n         let dropdownOfStoploss = document.getElementById(\"stoplossDropdownCtn\");\r\n         dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n         if (dropdownOfStoploss.style.display === \"block\") {\r\n           document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\", function () {\r\n+            upsertJson(\"sl\",this.value,true)\r\n \r\n             let selectedstoplossValue = this.value;\r\n             if (!selectedstoplossValue || !editor) return;\r\n \r\n"
                },
                {
                    "date": 1756354547651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -582,44 +582,18 @@\n         let dropdownOfStoploss = document.getElementById(\"stoplossDropdownCtn\");\r\n         dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n         if (dropdownOfStoploss.style.display === \"block\") {\r\n           document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\", function () {\r\n-            upsertJson(\"sl\",this.value,true)\r\n+            upsertJson(\"sl_type\",this.value,true)\r\n \r\n-            let selectedstoplossValue = this.value;\r\n-            if (!selectedstoplossValue || !editor) return;\r\n-\r\n-            //this will add or replace in code snippet\r\n-            let currentValue = editor.getValue();\r\n-            if (/\"sl_type\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n-              currentValue = currentValue.replace(\r\n-                /(\"sl_type\"\\s*:\\s*\").*?(\")/,\r\n-                `$1${selectedstoplossValue}$2`\r\n-              );\r\n-            }\r\n-            else {\r\n-              // Remove the last closing brace\r\n-              currentValue = currentValue.trim();\r\n-              if (currentValue.endsWith(\"}\")) {\r\n-                currentValue = currentValue.slice(0, -1);\r\n-              }\r\n-              currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n-\r\n-              // Append new script value\r\n-              currentValue += `,\\n \\t\"sl_type\":\"${selectedstoplossValue}\" \\n}`;\r\n-            }\r\n-\r\n-            editor.setValue(currentValue);\r\n-\r\n-\r\n             document.getElementById(\"stoploss_value\").style.display = \"block\";\r\n             let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n             let stoplossErr = document.getElementById(\"stoplossError\");\r\n \r\n \r\n             stoplossValbox?.addEventListener(\"input\", function () {\r\n               let stoplossValue = this.value.trim();\r\n-              let currentValue = editor.getValue().trim();\r\n+              upsertJson(\"sl_value\",this.value,false)\r\n \r\n               if (stoplossValue < 0) {\r\n                 stoplossErr.style.display = \"block\";\r\n               }\r\n"
                },
                {
                    "date": 1756354583748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -595,38 +595,14 @@\n               upsertJson(\"sl_value\",this.value,false)\r\n \r\n               if (stoplossValue < 0) {\r\n                 stoplossErr.style.display = \"block\";\r\n+                resetEditorFields([\"sl_value\"])\r\n               }\r\n               else {\r\n                 stoplossErr.style.display = \"none\";\r\n               }\r\n \r\n-              if (!stoplossValue) {\r\n-                currentValue = currentValue.replace(/,?\\s*\"sl_value\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n-                // Also clean up trailing commas before }\r\n-                currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n-                editor.setValue(currentValue);\r\n-                return;\r\n-              }\r\n-\r\n-              if (/\\\"sl_value\\\"\\s*:\\s*\\d*/.test(currentValue)) {\r\n-                currentValue = currentValue.replace(\r\n-                  /(\"sl_value\"\\s*:\\s*)\\d*/,\r\n-                  `$1${stoplossValue}`\r\n-                );\r\n-              }\r\n-              else {\r\n-                if (currentValue.endsWith(\"}\")) {\r\n-                  currentValue = currentValue.slice(0, -1).trim();\r\n-                }\r\n-                currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n-                currentValue = currentValue + `,\\n\\t\"sl_value\":${stoplossValue}\\n}`;\r\n-              }\r\n-\r\n-              editor.setValue(currentValue);\r\n-\r\n-\r\n             });\r\n \r\n \r\n           });\r\n"
                },
                {
                    "date": 1756354655922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -595,9 +595,9 @@\n               upsertJson(\"sl_value\",this.value,false)\r\n \r\n               if (stoplossValue < 0) {\r\n                 stoplossErr.style.display = \"block\";\r\n-                resetEditorFields([\"sl_value\"])\r\n+                resetEditorFields([\"sl_value\"]);\r\n               }\r\n               else {\r\n                 stoplossErr.style.display = \"none\";\r\n               }\r\n@@ -608,13 +608,14 @@\n           });\r\n         }\r\n         else {\r\n           document.getElementById(\"stoploss_value\").style.display = \"none\";\r\n-          let code = editor.getValue();\r\n+          resetEditorFields([\"sl_type\",\"sl_value\",\"is_sl\"])\r\n+          // let code = editor.getValue();\r\n \r\n-          code = code.replace(/,\\s*\"sl_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n-          code = code.replace(/,\\s*\"sl_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n-          editor.setValue(code);\r\n+          // code = code.replace(/,\\s*\"sl_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n+          // code = code.replace(/,\\s*\"sl_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n+          // editor.setValue(code);\r\n         }\r\n \r\n \r\n       };\r\n"
                },
                {
                    "date": 1756354734275,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -629,57 +629,10 @@\n       //trailing switch\r\n       const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n \r\n       function toggleIsTrailSet() {\r\n-        let code = editor.getValue();\r\n-        code = code.replace(\r\n-          /(\"is_trail_set\"\\s*:\\s*)(true|false)/,\r\n-          `$1${trailingSwitch.checked}`\r\n-        );\r\n+        upsertJson(\"is_trail\",trailingSwitch.checked.toString())\r\n \r\n-        editor.setValue(code);\r\n-\r\n-        if (!(trailingSwitch.checked)) {\r\n-          document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n-          document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n-          document.getElementById(\"trailinggap_value\").value = \"\";\r\n-          document.getElementById(\"trailingpoint_value\").value = \"\";\r\n-        }\r\n-      }\r\n-      function trailswitchReflect() {\r\n-        let dropdownOfTrailing = document.getElementById(\"trailingDropdownCtn\");\r\n-        dropdownOfTrailing.style.display = trailingSwitch.checked ? 'block' : 'none';\r\n-\r\n-        if (dropdownOfTrailing.style.display === \"block\") {\r\n-\r\n-          document.getElementById(\"trailingdropdown\")?.addEventListener(\"change\", function () {\r\n-\r\n-            let selectedtrailingValue = this.value;\r\n-            if (!selectedtrailingValue || !editor) return;\r\n-\r\n-            //this will add or replace in code snippet\r\n-            let currentValue = editor.getValue();\r\n-            if (/\"trail_type\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n-              currentValue = currentValue.replace(\r\n-                /(\"trail_type\"\\s*:\\s*\").*?(\")/,\r\n-                `$1${selectedtrailingValue}$2`\r\n-              );\r\n-            }\r\n-            else {\r\n-              // Remove the last closing brace\r\n-              currentValue = currentValue.trim();\r\n-              if (currentValue.endsWith(\"}\")) {\r\n-                currentValue = currentValue.slice(0, -1);\r\n-              }\r\n-              currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n-\r\n-              // Append new script value\r\n-              currentValue += `,\\n \\t\"trail_type\":\"${selectedtrailingValue}\" \\n}`;\r\n-            }\r\n-\r\n-            editor.setValue(currentValue);\r\n-\r\n-\r\n             document.getElementById(\"trailingtrigger_value\").style.display = \"block\";\r\n             let trailtriggerValbox = document.getElementById(\"trailtriggerValbox\");\r\n             let trailTriggerError = document.getElementById(\"trailTriggerError\");\r\n \r\n"
                },
                {
                    "date": 1756354839991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -629,10 +629,50 @@\n       //trailing switch\r\n       const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n \r\n       function toggleIsTrailSet() {\r\n-        upsertJson(\"is_trail\",trailingSwitch.checked.toString())\r\n+        upsertJson(\"is_trail\",this.value,true)\r\n+        if (!(trailingSwitch.checked)) {\r\n+          document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n+          document.getElementById(\"trailinggap_value\").value = \"\";\r\n+          document.getElementById(\"trailingpoint_value\").value = \"\";\r\n+        }\r\n+      }\r\n+      function trailswitchReflect() {\r\n+        let dropdownOfTrailing = document.getElementById(\"trailingDropdownCtn\");\r\n+        dropdownOfTrailing.style.display = trailingSwitch.checked ? 'block' : 'none';\r\n \r\n+        if (dropdownOfTrailing.style.display === \"block\") {\r\n+\r\n+          document.getElementById(\"trailingdropdown\")?.addEventListener(\"change\", function () {\r\n+\r\n+            let selectedtrailingValue = this.value;\r\n+            if (!selectedtrailingValue || !editor) return;\r\n+\r\n+            //this will add or replace in code snippet\r\n+            let currentValue = editor.getValue();\r\n+            if (/\"trail_type\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n+              currentValue = currentValue.replace(\r\n+                /(\"trail_type\"\\s*:\\s*\").*?(\")/,\r\n+                `$1${selectedtrailingValue}$2`\r\n+              );\r\n+            }\r\n+            else {\r\n+              // Remove the last closing brace\r\n+              currentValue = currentValue.trim();\r\n+              if (currentValue.endsWith(\"}\")) {\r\n+                currentValue = currentValue.slice(0, -1);\r\n+              }\r\n+              currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n+\r\n+              // Append new script value\r\n+              currentValue += `,\\n \\t\"trail_type\":\"${selectedtrailingValue}\" \\n}`;\r\n+            }\r\n+\r\n+            editor.setValue(currentValue);\r\n+\r\n+\r\n             document.getElementById(\"trailingtrigger_value\").style.display = \"block\";\r\n             let trailtriggerValbox = document.getElementById(\"trailtriggerValbox\");\r\n             let trailTriggerError = document.getElementById(\"trailTriggerError\");\r\n \r\n"
                },
                {
                    "date": 1756354856466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -629,9 +629,9 @@\n       //trailing switch\r\n       const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n \r\n       function toggleIsTrailSet() {\r\n-        upsertJson(\"is_trail\",this.value,true)\r\n+        upsertJson(\"is_trail\",trailingSwitch.checked.toString())\r\n         if (!(trailingSwitch.checked)) {\r\n           document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n           document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n           document.getElementById(\"trailinggap_value\").value = \"\";\r\n"
                },
                {
                    "date": 1756354916372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -629,9 +629,9 @@\n       //trailing switch\r\n       const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n \r\n       function toggleIsTrailSet() {\r\n-        upsertJson(\"is_trail\",trailingSwitch.checked.toString())\r\n+        upsertJson(\"is_trail\",trailingSwitch.checked.toString());\r\n         if (!(trailingSwitch.checked)) {\r\n           document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n           document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n           document.getElementById(\"trailinggap_value\").value = \"\";\r\n@@ -644,35 +644,10 @@\n \r\n         if (dropdownOfTrailing.style.display === \"block\") {\r\n \r\n           document.getElementById(\"trailingdropdown\")?.addEventListener(\"change\", function () {\r\n+            upsertJson(\"trail_type\",this.value,true)\r\n \r\n-            let selectedtrailingValue = this.value;\r\n-            if (!selectedtrailingValue || !editor) return;\r\n-\r\n-            //this will add or replace in code snippet\r\n-            let currentValue = editor.getValue();\r\n-            if (/\"trail_type\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n-              currentValue = currentValue.replace(\r\n-                /(\"trail_type\"\\s*:\\s*\").*?(\")/,\r\n-                `$1${selectedtrailingValue}$2`\r\n-              );\r\n-            }\r\n-            else {\r\n-              // Remove the last closing brace\r\n-              currentValue = currentValue.trim();\r\n-              if (currentValue.endsWith(\"}\")) {\r\n-                currentValue = currentValue.slice(0, -1);\r\n-              }\r\n-              currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n-\r\n-              // Append new script value\r\n-              currentValue += `,\\n \\t\"trail_type\":\"${selectedtrailingValue}\" \\n}`;\r\n-            }\r\n-\r\n-            editor.setValue(currentValue);\r\n-\r\n-\r\n             document.getElementById(\"trailingtrigger_value\").style.display = \"block\";\r\n             let trailtriggerValbox = document.getElementById(\"trailtriggerValbox\");\r\n             let trailTriggerError = document.getElementById(\"trailTriggerError\");\r\n \r\n"
                },
                {
                    "date": 1756354935452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -654,13 +654,12 @@\n \r\n             trailtriggerValbox?.addEventListener(\"input\", function () {\r\n \r\n               let trailTriggerValue = this.value.trim();\r\n-              let currentValue = editor.getValue().trim();\r\n+              //let currentValue = editor.getValue().trim();\r\n \r\n               if (trailTriggerValue < 0) {\r\n                 trailTriggerError.style.display = \"block\";\r\n-\r\n                 document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n \r\n               }\r\n               else {\r\n"
                },
                {
                    "date": 1756355017498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -655,8 +655,9 @@\n             trailtriggerValbox?.addEventListener(\"input\", function () {\r\n \r\n               let trailTriggerValue = this.value.trim();\r\n               //let currentValue = editor.getValue().trim();\r\n+              upsertJson(\"trail_trigger\",trailTriggerValue,false)\r\n \r\n               if (trailTriggerValue < 0) {\r\n                 trailTriggerError.style.display = \"block\";\r\n                 document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n"
                },
                {
                    "date": 1756355134188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -655,9 +655,9 @@\n             trailtriggerValbox?.addEventListener(\"input\", function () {\r\n \r\n               let trailTriggerValue = this.value.trim();\r\n               //let currentValue = editor.getValue().trim();\r\n-              upsertJson(\"trail_trigger\",trailTriggerValue,false)\r\n+              upsertJson(\"trail_trigger\",trailTriggerValue,false);\r\n \r\n               if (trailTriggerValue < 0) {\r\n                 trailTriggerError.style.display = \"block\";\r\n                 document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n@@ -668,13 +668,14 @@\n                 document.getElementById(\"trailinggap_value\").style.display = \"block\";\r\n               }\r\n \r\n               if (!trailTriggerValue) {\r\n-                currentValue = currentValue.replace(/,?\\s*\"trail_trigger\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n-                // Also clean up trailing commas before }\r\n-                currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n-                editor.setValue(currentValue);\r\n-                return;\r\n+                resetEditorFields([\"trail_trigger\",\"trail_gap\"])\r\n+                // currentValue = currentValue.replace(/,?\\s*\"trail_trigger\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n+                // // Also clean up trailing commas before }\r\n+                // currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n+                // editor.setValue(currentValue);\r\n+                // return;\r\n               }\r\n \r\n               if (/\\\"trail_trigger\\\"\\s*:\\s*\\d*/.test(currentValue)) {\r\n                 currentValue = currentValue.replace(\r\n"
                },
                {
                    "date": 1756355172149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -668,9 +668,9 @@\n                 document.getElementById(\"trailinggap_value\").style.display = \"block\";\r\n               }\r\n \r\n               if (!trailTriggerValue) {\r\n-                resetEditorFields([\"trail_trigger\",\"trail_gap\"])\r\n+                resetEditorFields([\"trail_trigger\",\"trail_gap\",\"trail_point\"])\r\n                 // currentValue = currentValue.replace(/,?\\s*\"trail_trigger\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n                 // // Also clean up trailing commas before }\r\n                 // currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n                 // editor.setValue(currentValue);\r\n"
                },
                {
                    "date": 1756355188406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -668,9 +668,9 @@\n                 document.getElementById(\"trailinggap_value\").style.display = \"block\";\r\n               }\r\n \r\n               if (!trailTriggerValue) {\r\n-                resetEditorFields([\"trail_trigger\",\"trail_gap\",\"trail_point\"])\r\n+                resetEditorFields([\"trail_trigger\",\"trail_gap\",\"trail_point\"]);\r\n                 // currentValue = currentValue.replace(/,?\\s*\"trail_trigger\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n                 // // Also clean up trailing commas before }\r\n                 // currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n                 // editor.setValue(currentValue);\r\n"
                },
                {
                    "date": 1756355276958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -676,25 +676,9 @@\n                 // editor.setValue(currentValue);\r\n                 // return;\r\n               }\r\n \r\n-              if (/\\\"trail_trigger\\\"\\s*:\\s*\\d*/.test(currentValue)) {\r\n-                currentValue = currentValue.replace(\r\n-                  /(\"trail_trigger\"\\s*:\\s*)\\d*/,\r\n-                  `$1${trailTriggerValue}`\r\n-                );\r\n-              }\r\n-              else {\r\n-                if (currentValue.endsWith(\"}\")) {\r\n-                  currentValue = currentValue.slice(0, -1).trim();\r\n-                }\r\n-                currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n-                currentValue = currentValue + `,\\n\\t\"trail_trigger\":${trailTriggerValue}\\n}`;\r\n-              }\r\n \r\n-              editor.setValue(currentValue);\r\n-\r\n-\r\n               //trail gap number box show\r\n               document.getElementById(\"trailGapValbox\")?.addEventListener(\"input\", function () {\r\n                 let trailgapError = document.getElementById(\"trailGapError\");\r\n                 let trailGapValue = this.value.trim();\r\n"
                },
                {
                    "date": 1756355303201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -681,10 +681,10 @@\n               //trail gap number box show\r\n               document.getElementById(\"trailGapValbox\")?.addEventListener(\"input\", function () {\r\n                 let trailgapError = document.getElementById(\"trailGapError\");\r\n                 let trailGapValue = this.value.trim();\r\n-                let currentValue = editor.getValue().trim();\r\n-\r\n+                //let currentValue = editor.getValue().trim();\r\n+                upsertJson(\"trail_gap\",this.value,false)\r\n                 if (trailGapValue < 0) {\r\n                   trailgapError.style.display = \"block\";\r\n                   document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n \r\n"
                },
                {
                    "date": 1756355370500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -694,14 +694,10 @@\n                   document.getElementById(\"trailingpoint_value\").style.display = \"block\";\r\n                 }\r\n \r\n                 if (!trailGapValue) {\r\n-                  currentValue = currentValue.replace(/,?\\s*\"trail_gap\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n-                  // Also clean up trailing commas before }\r\n-                  currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n-                  editor.setValue(currentValue);\r\n-                  return;\r\n-                }\r\n+                  resetEditorFields([\"trail_gap\",\"trail_point\",\"trail_trigger\"])\r\n+                   }\r\n \r\n                 if (/\\\"trail_gap\\\"\\s*:\\s*\\d*/.test(currentValue)) {\r\n                   currentValue = currentValue.replace(\r\n                     /(\"trail_gap\"\\s*:\\s*)\\d*/,\r\n"
                },
                {
                    "date": 1756355381219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -694,9 +694,9 @@\n                   document.getElementById(\"trailingpoint_value\").style.display = \"block\";\r\n                 }\r\n \r\n                 if (!trailGapValue) {\r\n-                  resetEditorFields([\"trail_gap\",\"trail_point\",\"trail_trigger\"])\r\n+                  resetEditorFields([\"trail_gap\",\"trail_point\"])\r\n                    }\r\n \r\n                 if (/\\\"trail_gap\\\"\\s*:\\s*\\d*/.test(currentValue)) {\r\n                   currentValue = currentValue.replace(\r\n"
                },
                {
                    "date": 1756355399568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -696,24 +696,8 @@\n \r\n                 if (!trailGapValue) {\r\n                   resetEditorFields([\"trail_gap\",\"trail_point\"])\r\n                    }\r\n-\r\n-                if (/\\\"trail_gap\\\"\\s*:\\s*\\d*/.test(currentValue)) {\r\n-                  currentValue = currentValue.replace(\r\n-                    /(\"trail_gap\"\\s*:\\s*)\\d*/,\r\n-                    `$1${trailGapValue}`\r\n-                  );\r\n-                }\r\n-                else {\r\n-                  if (currentValue.endsWith(\"}\")) {\r\n-                    currentValue = currentValue.slice(0, -1).trim();\r\n-                  }\r\n-                  currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n-                  currentValue = currentValue + `,\\n\\t\"trail_gap\":${trailGapValue}\\n}`;\r\n-                }\r\n-\r\n-                editor.setValue(currentValue);\r\n               })\r\n \r\n               //document.getElementById(\"trailingpoint_value\").style.display=\"block\"\r\n \r\n"
                },
                {
                    "date": 1756355426388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -704,9 +704,10 @@\n               //trail point input box\r\n               document.getElementById(\"trailPointValbox\")?.addEventListener(\"input\", function () {\r\n                 let trailpointError = document.getElementById(\"trailPointError\");\r\n                 let trailpointVal = this.value.trim();\r\n-                let currentValue = editor.getValue().trim();\r\n+                //let currentValue = editor.getValue().trim();\r\n+                upsertJson(\"trail_point\",this.value,false)\r\n \r\n                 if (trailpointVal < 0) {\r\n                   trailpointError.style.display = \"block\";\r\n \r\n"
                },
                {
                    "date": 1756355444541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,811 @@\n+var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n+var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n+  return new bootstrap.Tooltip(tooltipTriggerEl)\r\n+\r\n+});\r\n+\r\n+let editor;\r\n+\r\n+require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n+\r\n+require([\"vs/editor/editor.main\"], function () {\r\n+  window.getCodeSnippet = getCodeSnippet;\r\n+\r\n+  const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n+\r\n+  function getCodeSnippet(activeType) {\r\n+    if (activeType === \"strategy_order\") {\r\n+      return `{\r\n+    \"type\": \"strategy_order\",\r\n+    \"exit_on_opposite\": false,\r\n+    \"is_tgt\": false,\r\n+    \"is_sl\": false,\r\n+    \"is_trail_set\": false,\r\n+    \"position_size\": \"{{strategy.position_size}}\",\r\n+    \"transaction_type\": \"{{strategy.order.action}}\"\r\n+}`;\r\n+    }\r\n+    else {\r\n+      return `{\r\n+    \"type\": \"${activeType}\"\r\n+}`;\r\n+    }\r\n+  }\r\n+\r\n+  editor = monaco.editor.create(container, {\r\n+    value: getCodeSnippet(\"strategy_order\"),\r\n+    language: \"json\",\r\n+    theme: \"vs-dark\",\r\n+    automaticLayout: true,\r\n+    suggestOnTriggerCharacters: false,\r\n+    quickSuggestions: false,\r\n+    wordBasedSuggestions: false,\r\n+    parameterHints: { enabled: false },\r\n+    inlineSuggest: { enabled: false },\r\n+    fontSize: 18,\r\n+    minimap: { enabled: false },\r\n+    wordWrap: \"on\",\r\n+    scrollbar: {\r\n+      vertical: \"hidden\",\r\n+      horizontal: \"hidden\",\r\n+      handleMouseWheel: false\r\n+    },\r\n+  });\r\n+\r\n+});\r\n+\r\n+\r\n+\r\n+\r\n+let activeNav = \"strategy\"; // default active\r\n+\r\n+const navLinks = document.querySelectorAll(\" .nav-link\");\r\n+\r\n+\r\n+navLinks.forEach(link => {\r\n+  link.addEventListener(\"click\", (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    // remove active from all\r\n+    navLinks.forEach(l => l.classList.remove(\"active\"));\r\n+\r\n+    // set active on clicked\r\n+    link.classList.add(\"active\");\r\n+    // update global variable\r\n+    activeNav = link.getAttribute(\"data-type\");\r\n+    localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n+    console.log(\"Active Nav:\", activeNav);\r\n+    editor.setValue(getCodeSnippet(activeNav));\r\n+  });\r\n+});\r\n+\r\n+// let originalcode;\r\n+\r\n+// if(activeNavItem===\"strategy_order\"){\r\n+//     originalcode=`{\r\n+//     \"type\": \"strategy_order\",\r\n+//     \"exit_on_opposite\": false,\r\n+//     \"is_tgt\": false,\r\n+//     \"is_sl\": false,\r\n+//     \"is_trail_set\": false,\r\n+//     \"position_size\": \"{{strategy.position_size}}\",\r\n+//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n+\r\n+// }`\r\n+// }\r\n+// else{\r\n+//     originalcode=`{\r\n+//     \"type\": \"${activeNavItem}\"\r\n+// }`\r\n+// }\r\n+\r\n+document.getElementById(\"deleteBtn\").addEventListener(\"click\", function () {\r\n+  let activeNavItem = JSON.parse(localStorage.getItem(\"activenav\"))\r\n+  editor.setValue(getCodeSnippet(activeNavItem));\r\n+\r\n+  // reset dropdown to index 0\r\n+  let scriptType = document.getElementById(\"dropdown1\");\r\n+  if (scriptType) scriptType.selectedIndex = 0;\r\n+})\r\n+\r\n+const copyBtn = document.getElementById(\"copyBtn\");\r\n+\r\n+copyBtn?.addEventListener(\"click\", function () {\r\n+  if (!editor) return;\r\n+\r\n+  // Get the current editor content\r\n+  const code = editor.getValue();\r\n+\r\n+  // Use navigator clipboard API to copy\r\n+  navigator.clipboard.writeText(code)\r\n+    .then(() => {\r\n+      alert(\"Code copied to clipboard!\");\r\n+    })\r\n+    .catch(err => {\r\n+      console.error(\"Failed to copy: \", err);\r\n+    });\r\n+});\r\n+\r\n+function upsertJson(key, value) {\r\n+  if (!editor) return;\r\n+\r\n+  let code = editor.getValue();\r\n+  let obj;\r\n+\r\n+  try {\r\n+    obj = JSON.parse(code);\r\n+  } catch (e) {\r\n+    console.error(\"Invalid JSON in editor:\", e);\r\n+    return;\r\n+  }\r\n+\r\n+  if (value === \"\" || value == null) {\r\n+    delete obj[key]; // remove key if empty\r\n+  } else {\r\n+    let parsedVal;\r\n+\r\n+    if (value === \"true\") parsedVal = true;\r\n+    else if (value === \"false\") parsedVal = false;\r\n+    else if (value === \"null\") parsedVal = null;\r\n+    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n+    else parsedVal = value; // string\r\n+\r\n+    obj[key] = parsedVal;\r\n+  }\r\n+\r\n+  editor.setValue(JSON.stringify(obj, null, 2));\r\n+}\r\n+\r\n+\r\n+//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n+\r\n+\r\n+// helper function if you need it elsewhere\r\n+//   function getActiveNav() {\r\n+//     return activeNav;\r\n+//   }\r\n+\r\n+//   console.log(getActiveNav())\r\n+\r\n+// dependency mapping\r\n+const dependencies = [\r\n+\r\n+  {\r\n+    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n+      { container: '#scriptsearchbox', field: \"#search\" },\r\n+      { container: \"#productType\", field: \"#productDropdown\" },\r\n+      { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n+      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n+      { container: \"#BtnGroup\", field: null },\r\n+      {container:\"#rollover_value\",field:\"#rollovervalbox\"},\r\n+      {container:\"#rollover_time\",field:\"#timeBox\"},\r\n+      {container:\"#targetDropdownCtn\",field:\"#targetdropdown\"},\r\n+      {container:\"#target_value\",field:\"#targetValbox\"},\r\n+      {container:\"#stoplossDropdownCtn\",field:\"#stoplossdropdown\"},\r\n+      {container:\"#stoploss_value\",field:\"#stoplossValbox\"},\r\n+      {container:\"#trailingDropdownCtn\",field:\"#trailingdropdown\"},\r\n+      {container:\"#trailingtrigger_value\",field:\"#trailtriggerValbox\"},\r\n+      {container:\"#trailinggap_value\",field:\"#trailGapValbox\"},\r\n+      {container:\"#trailingpoint_value\",field:\"#trailPointValbox\"}\r\n+\r\n+\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#atmdropdown\",\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#premiumbox\",\r\n+    event: \"input\",\r\n+    targets: [\r\n+      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n+\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"productDropdown\",\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"quantityBox\",\r\n+    event: \"input\",\r\n+    targets: [\r\n+      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" }\r\n+    ]\r\n+  }\r\n+];\r\n+\r\n+function hideAndReset(triggerSelector, eventType = null) {\r\n+  dependencies.forEach(dep => {\r\n+    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+      dep.targets.forEach((t, index) => {\r\n+        const container = document.querySelector(t.container);\r\n+        if (container) {\r\n+          // If it's the *direct child* (first dependent) → only reset value\r\n+          if (index === 0) {\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+              }\r\n+            }\r\n+          } else {\r\n+            // Other deeper dependents → hide + reset\r\n+            container.style.display = \"none\";\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n+                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n+                    field.checked = false;\r\n+                  } else {\r\n+                    field.value = \"\";\r\n+                  }\r\n+                }\r\n+                else if (field.tagName === \"BUTTON\") {\r\n+                  field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n+                }\r\n+              }\r\n+            }\r\n+          }\r\n+        }\r\n+      });\r\n+    }\r\n+  });\r\n+}\r\n+\r\n+function resetEditorFields(keysToReset = []) {\r\n+  try {\r\n+    // Get JSON string from editor\r\n+    let code = editor.getValue();\r\n+    let jsonObj = JSON.parse(code);\r\n+\r\n+    // Reset fields\r\n+    keysToReset.forEach(key => {\r\n+      if (jsonObj.hasOwnProperty(key)) {\r\n+        if (typeof jsonObj[key] === \"boolean\") {\r\n+          jsonObj[key] = false; // reset boolean\r\n+        } else {\r\n+          delete jsonObj[key]; // remove string/number\r\n+        }\r\n+      }\r\n+    });\r\n+\r\n+    // Update editor\r\n+    editor.setValue(JSON.stringify(jsonObj, null, 2));\r\n+  } catch (err) {\r\n+    console.error(\"Invalid JSON in editor:\", err);\r\n+  }\r\n+}\r\n+\r\n+\r\n+//add data fields to make it work\r\n+function syncEditorWithUI() {\r\n+  if (!editor) return;\r\n+\r\n+  const activeNavItem = JSON.parse(localStorage.getItem(\"activenav\")) || \"strategy_order\";\r\n+  let defaultJSON;\r\n+\r\n+  try {\r\n+    defaultJSON = JSON.parse(getCodeSnippet(activeNavItem));\r\n+  } catch {\r\n+    defaultJSON = {};\r\n+  }\r\n+\r\n+  let currentJSON;\r\n+  try {\r\n+    currentJSON = JSON.parse(editor.getValue());\r\n+  } catch {\r\n+    currentJSON = {};\r\n+  }\r\n+\r\n+  const uiFields = document.querySelectorAll(\"[data-field]\");\r\n+\r\n+  uiFields.forEach(field => {\r\n+    const key = field.dataset.field;\r\n+\r\n+    if (key === \"script_type\") return; // always keep main parent\r\n+\r\n+    const container = field.closest(\".field-container\") || field.parentElement;\r\n+    const isVisible = container ? container.style.display !== \"none\" : true;\r\n+\r\n+    if (!isVisible) {\r\n+      // Remove hidden fields from user JSON but keep default if exists\r\n+      if (typeof defaultJSON[key] === \"boolean\") {\r\n+        currentJSON[key] = false;\r\n+      } else {\r\n+        delete currentJSON[key];\r\n+      }\r\n+    } else {\r\n+      // Visible → keep current value if exists, else default\r\n+      if (!(key in currentJSON) && key in defaultJSON) {\r\n+        currentJSON[key] = defaultJSON[key];\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+  // Ensure main parent always exists\r\n+  if (!currentJSON[\"script_type\"]) {\r\n+    currentJSON[\"script_type\"] = defaultJSON[\"type\"] || \"strategy_order\";\r\n+  }\r\n+\r\n+  editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n+}\r\n+\r\n+\r\n+// function hideAndReset(triggerSelector, eventType = null) {\r\n+//   dependencies.forEach(dep => {\r\n+//     // match trigger, ignore eventType if null\r\n+//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+//       dep.targets.forEach(t => {\r\n+//         const container = document.querySelector(t.container);\r\n+//         if (container) {\r\n+//           // hide the container\r\n+//           container.style.display = \"none\";\r\n+\r\n+//           // reset child field if provided\r\n+//           if (t.field) {\r\n+//             const field = container.querySelector(t.field);\r\n+//             if (field) {\r\n+//               if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+//               else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+//             }\r\n+//           }\r\n+//         }\r\n+//       });\r\n+//     }\r\n+//   });\r\n+// }\r\n+\r\n+\r\n+// document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n+//     hideAndReset(\"#atmdropdown\",change)\r\n+// })\r\n+\r\n+let scriptType = document.getElementById(\"dropdown1\");\r\n+dropdown1.addEventListener(\"change\", function () {\r\n+  upsertJson(\"script_type\", this.value, true);\r\n+  upsertJson(\"is_rollover\", \"false\", false);\r\n+  hideAndReset(\"#dropdown1\", \"change\");\r\n+  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" || JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\") {\r\n+    document.getElementById(\"optionSelection\").style.display = \"block\";\r\n+    document.getElementById(\"scriptsearchbox\").style.display = \"none\";\r\n+  }\r\n+  else {\r\n+    document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n+    document.getElementById(\"optionSelection\").style.display = \"none\";\r\n+  }\r\n+})\r\n+\r\n+let searchInput = document.getElementById(\"search\");\r\n+const dropdown = document.getElementById('dropdown');\r\n+let token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n+document.addEventListener('click', (e) => {\r\n+  // Check if click is outside the input and dropdown\r\n+  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n+    dropdown.style.display = 'none';\r\n+  }\r\n+});\r\n+\r\n+// Simple debounce function\r\n+function debounce(func, delay) {\r\n+  let timer;\r\n+  return function (...args) {\r\n+    clearTimeout(timer);\r\n+    timer = setTimeout(() => func.apply(this, args), delay);\r\n+  };\r\n+}\r\n+\r\n+// Fetch API suggestions\r\n+async function fetchSuggestions(query) {\r\n+  if (!query) {\r\n+    dropdown.style.display = 'none';\r\n+    dropdown.innerHTML = '';\r\n+    return;\r\n+  }\r\n+\r\n+  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n+  try {\r\n+    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n+      method: \"POST\",\r\n+      headers: {\r\n+        \"Content-Type\": \"application/json\",\r\n+        \"Authorization\": token\r\n+      },\r\n+      body: JSON.stringify({\r\n+        script: query,\r\n+        type: scriptType\r\n+      })\r\n+    });\r\n+\r\n+    const data = await res.json();\r\n+    const suggestions = data.data;\r\n+\r\n+\r\n+    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n+    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n+\r\n+  }\r\n+  catch (err) {\r\n+    console.error(err);\r\n+  }\r\n+}\r\n+\r\n+// Add click selection\r\n+dropdown?.addEventListener('click', e => {\r\n+  if (e.target.tagName === 'LI') {\r\n+    let selectedText = e.target.textContent;\r\n+    searchInput.value = selectedText;\r\n+    // remove everything after \"(\"\r\n+    if (selectedText.includes(\"(\")) {\r\n+      selectedText = selectedText.split(\"(\")[0];\r\n+    }\r\n+    dropdown.style.display = 'none';\r\n+    upsertJson(\"script\", selectedText, true);\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\") {\r\n+      document.getElementById(\"productType\").style.display = \"block\";\r\n+    }\r\n+  }\r\n+});\r\n+\r\n+searchInput.addEventListener('input', debounce(e => {\r\n+  fetchSuggestions(e.target.value);\r\n+}, 300));\r\n+\r\n+\r\n+document.getElementById(\"productDropdown\").addEventListener(\"change\", function () {\r\n+  upsertJson(\"product\", this.value, true);\r\n+  hideAndReset(\"#productDropdown\", \"change\");\r\n+  resetEditorFields([\"script\", \"product\", \"quantity\", \"is_tgt\",])\r\n+  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\") {\r\n+    document.getElementById(\"quantityBlock\").style.display = \"block\";\r\n+    document.getElementById(\"quantityBox\").addEventListener(\"input\", function () {\r\n+      upsertJson(\"quantity\", this.value, false)\r\n+      if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n+        document.getElementById(\"quantityError\").style.display = \"block\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"none\";\r\n+      }\r\n+      else {\r\n+        document.getElementById(\"quantityError\").style.display = \"none\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"block\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"block\";\r\n+      }\r\n+      let buy = document.getElementsByClassName(\"buyBtn\")[0];\r\n+      let sell = document.getElementsByClassName(\"sellBtn\")[0];\r\n+\r\n+      buy.addEventListener(\"click\", function () {\r\n+        buy.style.background = \"green\";\r\n+        sell.style.background = \"\";\r\n+        upsertJson(\"transaction_type\", \"BUY\", true)\r\n+      })\r\n+      sell.addEventListener(\"click\", function () {\r\n+        sell.style.background = \"red\";\r\n+        buy.style.background = \"\";\r\n+        upsertJson(\"transaction_type\", \"SELL\", true)\r\n+      })\r\n+      const exitOnPurposeSwitch = document.getElementById('flexSwitchCheck1');\r\n+\r\n+      function toggleExitOnOpposite() {\r\n+        upsertJson(\"exit_on_opposite\", exitOnPurposeSwitch.checked.toString());\r\n+      }\r\n+      exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n+\r\n+      //target switch toggle\r\n+      const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n+      function toggleIsTgt() {\r\n+         upsertJson(\"is_tgt\", targetSwitch.checked.toString());\r\n+        if (!(targetSwitch.checked)) {\r\n+          document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"target_value\").value = \"\";\r\n+        }\r\n+      }\r\n+\r\n+      //onchange toggles the switch, call the function and also shows dropdown\r\n+      let dropdownofTarget = document.getElementById(\"targetDropdownCtn\");\r\n+\r\n+      function targerSwitchReflect() {\r\n+        dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n+        if (dropdownofTarget.style.display === \"block\") {\r\n+          document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n+            upsertJson(\"tgt_type\",this.value,true);\r\n+            document.getElementById(\"target_value\").style.display = \"block\";\r\n+\r\n+            // var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n+            // tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n+            //   return new bootstrap.Tooltip(tooltipTriggerEl)\r\n+\r\n+            // })\r\n+\r\n+            let targetValBox = document.getElementById(\"targetValbox\");\r\n+            let targetErr = document.getElementById(\"targetError\");\r\n+\r\n+\r\n+            targetValBox?.addEventListener(\"input\", function () {\r\n+              upsertJson(\"tgt_value\",this.value,true)\r\n+              let targetValue = this.value.trim();\r\n+\r\n+              if (targetValue < 0) {\r\n+                targetErr.style.display = \"block\";\r\n+              }\r\n+              else {\r\n+                targetErr.style.display = \"none\";\r\n+              }\r\n+\r\n+            });\r\n+          });\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"target_value\").style.display = \"none\";\r\n+          resetEditorFields([\"tgt_type\",\"tgt_value\",\"is_tgt\"])\r\n+          // let code = editor.getValue();\r\n+          // code = code.replace(/,\\s*\"tgt_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n+          // code = code.replace(/,\\s*\"tgt_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n+          // editor.setValue(code);\r\n+        }\r\n+\r\n+      };\r\n+      targetSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTgt();\r\n+        targerSwitchReflect();\r\n+      })\r\n+\r\n+\r\n+\r\n+      //check the val true or false and shows box according\r\n+\r\n+      //stoploss switch\r\n+      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n+      function toggleIsSl() {\r\n+        upsertJson(\"is_sl\",stoplossSwitch.checked.toString())\r\n+        if (!(stoplossSwitch.checked)) {\r\n+          document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"stoploss_value\").value = \"\";\r\n+        }\r\n+\r\n+      }\r\n+\r\n+      //onchange toggles the switch, call the function and also shows dropdown\r\n+      function stoplossSwitchReflect() {\r\n+        let dropdownOfStoploss = document.getElementById(\"stoplossDropdownCtn\");\r\n+        dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n+        if (dropdownOfStoploss.style.display === \"block\") {\r\n+          document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\", function () {\r\n+            upsertJson(\"sl_type\",this.value,true)\r\n+\r\n+            document.getElementById(\"stoploss_value\").style.display = \"block\";\r\n+            let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n+            let stoplossErr = document.getElementById(\"stoplossError\");\r\n+\r\n+\r\n+            stoplossValbox?.addEventListener(\"input\", function () {\r\n+              let stoplossValue = this.value.trim();\r\n+              upsertJson(\"sl_value\",this.value,false)\r\n+\r\n+              if (stoplossValue < 0) {\r\n+                stoplossErr.style.display = \"block\";\r\n+                resetEditorFields([\"sl_value\"]);\r\n+              }\r\n+              else {\r\n+                stoplossErr.style.display = \"none\";\r\n+              }\r\n+\r\n+            });\r\n+\r\n+\r\n+          });\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"stoploss_value\").style.display = \"none\";\r\n+          resetEditorFields([\"sl_type\",\"sl_value\",\"is_sl\"])\r\n+          // let code = editor.getValue();\r\n+\r\n+          // code = code.replace(/,\\s*\"sl_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n+          // code = code.replace(/,\\s*\"sl_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n+          // editor.setValue(code);\r\n+        }\r\n+\r\n+\r\n+      };\r\n+\r\n+      stoplossSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsSl();\r\n+        stoplossSwitchReflect();\r\n+\r\n+      })\r\n+\r\n+      //trailing switch\r\n+      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n+\r\n+      function toggleIsTrailSet() {\r\n+        upsertJson(\"is_trail\",trailingSwitch.checked.toString());\r\n+        if (!(trailingSwitch.checked)) {\r\n+          document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n+          document.getElementById(\"trailinggap_value\").value = \"\";\r\n+          document.getElementById(\"trailingpoint_value\").value = \"\";\r\n+        }\r\n+      }\r\n+      function trailswitchReflect() {\r\n+        let dropdownOfTrailing = document.getElementById(\"trailingDropdownCtn\");\r\n+        dropdownOfTrailing.style.display = trailingSwitch.checked ? 'block' : 'none';\r\n+\r\n+        if (dropdownOfTrailing.style.display === \"block\") {\r\n+\r\n+          document.getElementById(\"trailingdropdown\")?.addEventListener(\"change\", function () {\r\n+            upsertJson(\"trail_type\",this.value,true)\r\n+\r\n+            document.getElementById(\"trailingtrigger_value\").style.display = \"block\";\r\n+            let trailtriggerValbox = document.getElementById(\"trailtriggerValbox\");\r\n+            let trailTriggerError = document.getElementById(\"trailTriggerError\");\r\n+\r\n+\r\n+            trailtriggerValbox?.addEventListener(\"input\", function () {\r\n+\r\n+              let trailTriggerValue = this.value.trim();\r\n+              //let currentValue = editor.getValue().trim();\r\n+              upsertJson(\"trail_trigger\",trailTriggerValue,false);\r\n+\r\n+              if (trailTriggerValue < 0) {\r\n+                trailTriggerError.style.display = \"block\";\r\n+                document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n+\r\n+              }\r\n+              else {\r\n+                trailTriggerError.style.display = \"none\";\r\n+                document.getElementById(\"trailinggap_value\").style.display = \"block\";\r\n+              }\r\n+\r\n+              if (!trailTriggerValue) {\r\n+                resetEditorFields([\"trail_trigger\",\"trail_gap\",\"trail_point\"]);\r\n+                // currentValue = currentValue.replace(/,?\\s*\"trail_trigger\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n+                // // Also clean up trailing commas before }\r\n+                // currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n+                // editor.setValue(currentValue);\r\n+                // return;\r\n+              }\r\n+\r\n+\r\n+              //trail gap number box show\r\n+              document.getElementById(\"trailGapValbox\")?.addEventListener(\"input\", function () {\r\n+                let trailgapError = document.getElementById(\"trailGapError\");\r\n+                let trailGapValue = this.value.trim();\r\n+                //let currentValue = editor.getValue().trim();\r\n+                upsertJson(\"trail_gap\",this.value,false)\r\n+                if (trailGapValue < 0) {\r\n+                  trailgapError.style.display = \"block\";\r\n+                  document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n+\r\n+                }\r\n+                else {\r\n+                  trailgapError.style.display = \"none\";\r\n+                  document.getElementById(\"trailingpoint_value\").style.display = \"block\";\r\n+                }\r\n+\r\n+                if (!trailGapValue) {\r\n+                  resetEditorFields([\"trail_gap\",\"trail_point\"])\r\n+                   }\r\n+              })\r\n+\r\n+              //document.getElementById(\"trailingpoint_value\").style.display=\"block\"\r\n+\r\n+              //trail point input box\r\n+              document.getElementById(\"trailPointValbox\")?.addEventListener(\"input\", function () {\r\n+                let trailpointError = document.getElementById(\"trailPointError\");\r\n+                let trailpointVal = this.value.trim();\r\n+                //let currentValue = editor.getValue().trim();\r\n+                upsertJson(\"trail_point\",trailpointVal,false);\r\n+\r\n+                if (trailpointVal < 0) {\r\n+                  trailpointError.style.display = \"block\";\r\n+\r\n+                }\r\n+                else {\r\n+                  trailpointError.style.display = \"none\";\r\n+                }\r\n+\r\n+                if (!trailpointVal) {\r\n+                  currentValue = currentValue.replace(/,?\\s*\"trail_point\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n+                  // Also clean up trailing commas before }\r\n+                  currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n+                  editor.setValue(currentValue);\r\n+                  return;\r\n+                }\r\n+\r\n+                if (/\\\"trail_point\\\"\\s*:\\s*\\d*/.test(currentValue)) {\r\n+                  currentValue = currentValue.replace(\r\n+                    /(\"trail_point\"\\s*:\\s*)\\d*/,\r\n+                    `$1${trailpointVal}`\r\n+                  );\r\n+                }\r\n+                else {\r\n+                  if (currentValue.endsWith(\"}\")) {\r\n+                    currentValue = currentValue.slice(0, -1).trim();\r\n+                  }\r\n+                  currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n+                  currentValue = currentValue + `,\\n\\t\"trail_point\":${trailpointVal}\\n}`;\r\n+                }\r\n+\r\n+                editor.setValue(currentValue);\r\n+              })\r\n+\r\n+\r\n+\r\n+            });\r\n+          });\r\n+\r\n+\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"trailingtrigger_value\").style.display = \"none\";\r\n+          document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n+          document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n+          let code = editor.getValue();\r\n+\r\n+          code = code.replace(/,\\s*\"trail_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n+          code = code.replace(/,\\s*\"trail_trigger\"\\s*:\\s*[^,}]+/g, \"\");\r\n+          code = code.replace(/,\\s*\"trail_gap\"\\s*:\\s*[^,}]+/g, \"\");\r\n+          code = code.replace(/,\\s*\"trail_point\"\\s*:\\s*[^,}]+/g, \"\");\r\n+\r\n+          editor.setValue(code);\r\n+        }\r\n+      }\r\n+      trailingSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTrailSet();\r\n+        trailswitchReflect();\r\n+      })\r\n+    });\r\n+  \r\n+\r\n+\r\n+    document.querySelectorAll('input[type=\"checkbox\"]').forEach(toggleBtn => {\r\n+      toggleBtn.checked = false; // turn off all switches\r\n+      document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"target_value\").value = \"\";\r\n+      document.getElementById(\"stoploss_value\").value = \"\";\r\n+      document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n+      document.getElementById(\"trailinggap_value\").value = \"\";\r\n+      document.getElementById(\"trailingpoint_value\").value = \"\";\r\n+      targerSwitchReflect();\r\n+      stoplossSwitchReflect();\r\n+      trailswitchReflect();\r\n+\r\n+    });\r\n+\r\n+    document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n+\r\n+\r\n+    // Remove related switch values from JSON\r\n+    currentValue = currentValue\r\n+      .replace(/\"exit_on_opposite\"\\s*:\\s*(true|false),?/g, '\"exit_on_opposite\": false,')\r\n+      .replace(/\"is_tgt\"\\s*:\\s*(true|false),?/g, '\"is_tgt\": false,')\r\n+      .replace(/\"tgt_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n+      .replace(/\"tgt_value\"\\s*:\\s*\\d*/, \"\")\r\n+      .replace(/\"is_sl\"\\s*:\\s*(true|false),?/g, '\"is_sl\": false,')\r\n+      .replace(/\"sl_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n+      .replace(/\"sl_value\"\\s*:\\s*\\d*/, \"\")\r\n+      .replace(/\"is_trail_set\"\\s*:\\s*(true|false),?/g, '\"is_trail_set\": false,')\r\n+      .replace(/\"trail_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n+      .replace(/\"trail_trigger\"\\s*:\\s*\\d*/, \"\")\r\n+      .replace(/\"trail_gap\"\\s*:\\s*\\d*/, \"\")\r\n+      .replace(/\"trail_point\"\\s*:\\s*\\d*/, \"\");\r\n+\r\n+    editor.setValue(currentValue);\r\n+  }\r\n+  });\r\n+\r\n+\r\n"
                },
                {
                    "date": 1756355513179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -682,9 +682,9 @@\n               document.getElementById(\"trailGapValbox\")?.addEventListener(\"input\", function () {\r\n                 let trailgapError = document.getElementById(\"trailGapError\");\r\n                 let trailGapValue = this.value.trim();\r\n                 //let currentValue = editor.getValue().trim();\r\n-                upsertJson(\"trail_gap\",this.value,false)\r\n+                upsertJson(\"trail_gap\",trailGapValue,false)\r\n                 if (trailGapValue < 0) {\r\n                   trailgapError.style.display = \"block\";\r\n                   document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n \r\n@@ -808,815 +808,4 @@\n   }\r\n   });\r\n \r\n \r\n-var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n-var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n-  return new bootstrap.Tooltip(tooltipTriggerEl)\r\n-\r\n-});\r\n-\r\n-let editor;\r\n-\r\n-require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n-\r\n-require([\"vs/editor/editor.main\"], function () {\r\n-  window.getCodeSnippet = getCodeSnippet;\r\n-\r\n-  const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n-\r\n-  function getCodeSnippet(activeType) {\r\n-    if (activeType === \"strategy_order\") {\r\n-      return `{\r\n-    \"type\": \"strategy_order\",\r\n-    \"exit_on_opposite\": false,\r\n-    \"is_tgt\": false,\r\n-    \"is_sl\": false,\r\n-    \"is_trail_set\": false,\r\n-    \"position_size\": \"{{strategy.position_size}}\",\r\n-    \"transaction_type\": \"{{strategy.order.action}}\"\r\n-}`;\r\n-    }\r\n-    else {\r\n-      return `{\r\n-    \"type\": \"${activeType}\"\r\n-}`;\r\n-    }\r\n-  }\r\n-\r\n-  editor = monaco.editor.create(container, {\r\n-    value: getCodeSnippet(\"strategy_order\"),\r\n-    language: \"json\",\r\n-    theme: \"vs-dark\",\r\n-    automaticLayout: true,\r\n-    suggestOnTriggerCharacters: false,\r\n-    quickSuggestions: false,\r\n-    wordBasedSuggestions: false,\r\n-    parameterHints: { enabled: false },\r\n-    inlineSuggest: { enabled: false },\r\n-    fontSize: 18,\r\n-    minimap: { enabled: false },\r\n-    wordWrap: \"on\",\r\n-    scrollbar: {\r\n-      vertical: \"hidden\",\r\n-      horizontal: \"hidden\",\r\n-      handleMouseWheel: false\r\n-    },\r\n-  });\r\n-\r\n-});\r\n-\r\n-\r\n-\r\n-\r\n-let activeNav = \"strategy\"; // default active\r\n-\r\n-const navLinks = document.querySelectorAll(\" .nav-link\");\r\n-\r\n-\r\n-navLinks.forEach(link => {\r\n-  link.addEventListener(\"click\", (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    // remove active from all\r\n-    navLinks.forEach(l => l.classList.remove(\"active\"));\r\n-\r\n-    // set active on clicked\r\n-    link.classList.add(\"active\");\r\n-    // update global variable\r\n-    activeNav = link.getAttribute(\"data-type\");\r\n-    localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n-    console.log(\"Active Nav:\", activeNav);\r\n-    editor.setValue(getCodeSnippet(activeNav));\r\n-  });\r\n-});\r\n-\r\n-// let originalcode;\r\n-\r\n-// if(activeNavItem===\"strategy_order\"){\r\n-//     originalcode=`{\r\n-//     \"type\": \"strategy_order\",\r\n-//     \"exit_on_opposite\": false,\r\n-//     \"is_tgt\": false,\r\n-//     \"is_sl\": false,\r\n-//     \"is_trail_set\": false,\r\n-//     \"position_size\": \"{{strategy.position_size}}\",\r\n-//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n-\r\n-// }`\r\n-// }\r\n-// else{\r\n-//     originalcode=`{\r\n-//     \"type\": \"${activeNavItem}\"\r\n-// }`\r\n-// }\r\n-\r\n-document.getElementById(\"deleteBtn\").addEventListener(\"click\", function () {\r\n-  let activeNavItem = JSON.parse(localStorage.getItem(\"activenav\"))\r\n-  editor.setValue(getCodeSnippet(activeNavItem));\r\n-\r\n-  // reset dropdown to index 0\r\n-  let scriptType = document.getElementById(\"dropdown1\");\r\n-  if (scriptType) scriptType.selectedIndex = 0;\r\n-})\r\n-\r\n-const copyBtn = document.getElementById(\"copyBtn\");\r\n-\r\n-copyBtn?.addEventListener(\"click\", function () {\r\n-  if (!editor) return;\r\n-\r\n-  // Get the current editor content\r\n-  const code = editor.getValue();\r\n-\r\n-  // Use navigator clipboard API to copy\r\n-  navigator.clipboard.writeText(code)\r\n-    .then(() => {\r\n-      alert(\"Code copied to clipboard!\");\r\n-    })\r\n-    .catch(err => {\r\n-      console.error(\"Failed to copy: \", err);\r\n-    });\r\n-});\r\n-\r\n-function upsertJson(key, value) {\r\n-  if (!editor) return;\r\n-\r\n-  let code = editor.getValue();\r\n-  let obj;\r\n-\r\n-  try {\r\n-    obj = JSON.parse(code);\r\n-  } catch (e) {\r\n-    console.error(\"Invalid JSON in editor:\", e);\r\n-    return;\r\n-  }\r\n-\r\n-  if (value === \"\" || value == null) {\r\n-    delete obj[key]; // remove key if empty\r\n-  } else {\r\n-    let parsedVal;\r\n-\r\n-    if (value === \"true\") parsedVal = true;\r\n-    else if (value === \"false\") parsedVal = false;\r\n-    else if (value === \"null\") parsedVal = null;\r\n-    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n-    else parsedVal = value; // string\r\n-\r\n-    obj[key] = parsedVal;\r\n-  }\r\n-\r\n-  editor.setValue(JSON.stringify(obj, null, 2));\r\n-}\r\n-\r\n-\r\n-//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n-\r\n-\r\n-// helper function if you need it elsewhere\r\n-//   function getActiveNav() {\r\n-//     return activeNav;\r\n-//   }\r\n-\r\n-//   console.log(getActiveNav())\r\n-\r\n-// dependency mapping\r\n-const dependencies = [\r\n-\r\n-  {\r\n-    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n-      { container: '#scriptsearchbox', field: \"#search\" },\r\n-      { container: \"#productType\", field: \"#productDropdown\" },\r\n-      { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n-      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n-      { container: \"#BtnGroup\", field: null },\r\n-      {container:\"#rollover_value\",field:\"#rollovervalbox\"},\r\n-      {container:\"#rollover_time\",field:\"#timeBox\"},\r\n-      {container:\"#targetDropdownCtn\",field:\"#targetdropdown\"},\r\n-      {container:\"#target_value\",field:\"#targetValbox\"},\r\n-      {container:\"#stoplossDropdownCtn\",field:\"#stoplossdropdown\"},\r\n-      {container:\"#stoploss_value\",field:\"#stoplossValbox\"},\r\n-      {container:\"#trailingDropdownCtn\",field:\"#trailingdropdown\"},\r\n-      {container:\"#trailingtrigger_value\",field:\"#trailtriggerValbox\"},\r\n-      {container:\"#trailinggap_value\",field:\"#trailGapValbox\"},\r\n-      {container:\"#trailingpoint_value\",field:\"#trailPointValbox\"}\r\n-\r\n-\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#atmdropdown\",\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#premiumbox\",\r\n-    event: \"input\",\r\n-    targets: [\r\n-      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n-\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"productDropdown\",\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"quantityBox\",\r\n-    event: \"input\",\r\n-    targets: [\r\n-      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" }\r\n-    ]\r\n-  }\r\n-];\r\n-\r\n-function hideAndReset(triggerSelector, eventType = null) {\r\n-  dependencies.forEach(dep => {\r\n-    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-      dep.targets.forEach((t, index) => {\r\n-        const container = document.querySelector(t.container);\r\n-        if (container) {\r\n-          // If it's the *direct child* (first dependent) → only reset value\r\n-          if (index === 0) {\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-              }\r\n-            }\r\n-          } else {\r\n-            // Other deeper dependents → hide + reset\r\n-            container.style.display = \"none\";\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n-                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-                    field.checked = false;\r\n-                  } else {\r\n-                    field.value = \"\";\r\n-                  }\r\n-                }\r\n-                else if (field.tagName === \"BUTTON\") {\r\n-                  field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n-                }\r\n-              }\r\n-            }\r\n-          }\r\n-        }\r\n-      });\r\n-    }\r\n-  });\r\n-}\r\n-\r\n-function resetEditorFields(keysToReset = []) {\r\n-  try {\r\n-    // Get JSON string from editor\r\n-    let code = editor.getValue();\r\n-    let jsonObj = JSON.parse(code);\r\n-\r\n-    // Reset fields\r\n-    keysToReset.forEach(key => {\r\n-      if (jsonObj.hasOwnProperty(key)) {\r\n-        if (typeof jsonObj[key] === \"boolean\") {\r\n-          jsonObj[key] = false; // reset boolean\r\n-        } else {\r\n-          delete jsonObj[key]; // remove string/number\r\n-        }\r\n-      }\r\n-    });\r\n-\r\n-    // Update editor\r\n-    editor.setValue(JSON.stringify(jsonObj, null, 2));\r\n-  } catch (err) {\r\n-    console.error(\"Invalid JSON in editor:\", err);\r\n-  }\r\n-}\r\n-\r\n-\r\n-//add data fields to make it work\r\n-function syncEditorWithUI() {\r\n-  if (!editor) return;\r\n-\r\n-  const activeNavItem = JSON.parse(localStorage.getItem(\"activenav\")) || \"strategy_order\";\r\n-  let defaultJSON;\r\n-\r\n-  try {\r\n-    defaultJSON = JSON.parse(getCodeSnippet(activeNavItem));\r\n-  } catch {\r\n-    defaultJSON = {};\r\n-  }\r\n-\r\n-  let currentJSON;\r\n-  try {\r\n-    currentJSON = JSON.parse(editor.getValue());\r\n-  } catch {\r\n-    currentJSON = {};\r\n-  }\r\n-\r\n-  const uiFields = document.querySelectorAll(\"[data-field]\");\r\n-\r\n-  uiFields.forEach(field => {\r\n-    const key = field.dataset.field;\r\n-\r\n-    if (key === \"script_type\") return; // always keep main parent\r\n-\r\n-    const container = field.closest(\".field-container\") || field.parentElement;\r\n-    const isVisible = container ? container.style.display !== \"none\" : true;\r\n-\r\n-    if (!isVisible) {\r\n-      // Remove hidden fields from user JSON but keep default if exists\r\n-      if (typeof defaultJSON[key] === \"boolean\") {\r\n-        currentJSON[key] = false;\r\n-      } else {\r\n-        delete currentJSON[key];\r\n-      }\r\n-    } else {\r\n-      // Visible → keep current value if exists, else default\r\n-      if (!(key in currentJSON) && key in defaultJSON) {\r\n-        currentJSON[key] = defaultJSON[key];\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-  // Ensure main parent always exists\r\n-  if (!currentJSON[\"script_type\"]) {\r\n-    currentJSON[\"script_type\"] = defaultJSON[\"type\"] || \"strategy_order\";\r\n-  }\r\n-\r\n-  editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n-}\r\n-\r\n-\r\n-// function hideAndReset(triggerSelector, eventType = null) {\r\n-//   dependencies.forEach(dep => {\r\n-//     // match trigger, ignore eventType if null\r\n-//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-//       dep.targets.forEach(t => {\r\n-//         const container = document.querySelector(t.container);\r\n-//         if (container) {\r\n-//           // hide the container\r\n-//           container.style.display = \"none\";\r\n-\r\n-//           // reset child field if provided\r\n-//           if (t.field) {\r\n-//             const field = container.querySelector(t.field);\r\n-//             if (field) {\r\n-//               if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-//               else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-//             }\r\n-//           }\r\n-//         }\r\n-//       });\r\n-//     }\r\n-//   });\r\n-// }\r\n-\r\n-\r\n-// document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n-//     hideAndReset(\"#atmdropdown\",change)\r\n-// })\r\n-\r\n-let scriptType = document.getElementById(\"dropdown1\");\r\n-dropdown1.addEventListener(\"change\", function () {\r\n-  upsertJson(\"script_type\", this.value, true);\r\n-  upsertJson(\"is_rollover\", \"false\", false);\r\n-  hideAndReset(\"#dropdown1\", \"change\");\r\n-  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" || JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\") {\r\n-    document.getElementById(\"optionSelection\").style.display = \"block\";\r\n-    document.getElementById(\"scriptsearchbox\").style.display = \"none\";\r\n-  }\r\n-  else {\r\n-    document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n-    document.getElementById(\"optionSelection\").style.display = \"none\";\r\n-  }\r\n-})\r\n-\r\n-let searchInput = document.getElementById(\"search\");\r\n-const dropdown = document.getElementById('dropdown');\r\n-let token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n-document.addEventListener('click', (e) => {\r\n-  // Check if click is outside the input and dropdown\r\n-  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n-    dropdown.style.display = 'none';\r\n-  }\r\n-});\r\n-\r\n-// Simple debounce function\r\n-function debounce(func, delay) {\r\n-  let timer;\r\n-  return function (...args) {\r\n-    clearTimeout(timer);\r\n-    timer = setTimeout(() => func.apply(this, args), delay);\r\n-  };\r\n-}\r\n-\r\n-// Fetch API suggestions\r\n-async function fetchSuggestions(query) {\r\n-  if (!query) {\r\n-    dropdown.style.display = 'none';\r\n-    dropdown.innerHTML = '';\r\n-    return;\r\n-  }\r\n-\r\n-  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n-  try {\r\n-    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n-      method: \"POST\",\r\n-      headers: {\r\n-        \"Content-Type\": \"application/json\",\r\n-        \"Authorization\": token\r\n-      },\r\n-      body: JSON.stringify({\r\n-        script: query,\r\n-        type: scriptType\r\n-      })\r\n-    });\r\n-\r\n-    const data = await res.json();\r\n-    const suggestions = data.data;\r\n-\r\n-\r\n-    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n-    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n-\r\n-  }\r\n-  catch (err) {\r\n-    console.error(err);\r\n-  }\r\n-}\r\n-\r\n-// Add click selection\r\n-dropdown?.addEventListener('click', e => {\r\n-  if (e.target.tagName === 'LI') {\r\n-    let selectedText = e.target.textContent;\r\n-    searchInput.value = selectedText;\r\n-    // remove everything after \"(\"\r\n-    if (selectedText.includes(\"(\")) {\r\n-      selectedText = selectedText.split(\"(\")[0];\r\n-    }\r\n-    dropdown.style.display = 'none';\r\n-    upsertJson(\"script\", selectedText, true);\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\") {\r\n-      document.getElementById(\"productType\").style.display = \"block\";\r\n-    }\r\n-  }\r\n-});\r\n-\r\n-searchInput.addEventListener('input', debounce(e => {\r\n-  fetchSuggestions(e.target.value);\r\n-}, 300));\r\n-\r\n-\r\n-document.getElementById(\"productDropdown\").addEventListener(\"change\", function () {\r\n-  upsertJson(\"product\", this.value, true);\r\n-  hideAndReset(\"#productDropdown\", \"change\");\r\n-  resetEditorFields([\"script\", \"product\", \"quantity\", \"is_tgt\",])\r\n-  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\") {\r\n-    document.getElementById(\"quantityBlock\").style.display = \"block\";\r\n-    document.getElementById(\"quantityBox\").addEventListener(\"input\", function () {\r\n-      upsertJson(\"quantity\", this.value, false)\r\n-      if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n-        document.getElementById(\"quantityError\").style.display = \"block\";\r\n-        document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n-        document.getElementById(\"toggleSwitchGroup\").style.display = \"none\";\r\n-      }\r\n-      else {\r\n-        document.getElementById(\"quantityError\").style.display = \"none\";\r\n-        document.getElementById(\"BtnGroup\").style.display = \"block\";\r\n-        document.getElementById(\"toggleSwitchGroup\").style.display = \"block\";\r\n-      }\r\n-      let buy = document.getElementsByClassName(\"buyBtn\")[0];\r\n-      let sell = document.getElementsByClassName(\"sellBtn\")[0];\r\n-\r\n-      buy.addEventListener(\"click\", function () {\r\n-        buy.style.background = \"green\";\r\n-        sell.style.background = \"\";\r\n-        upsertJson(\"transaction_type\", \"BUY\", true)\r\n-      })\r\n-      sell.addEventListener(\"click\", function () {\r\n-        sell.style.background = \"red\";\r\n-        buy.style.background = \"\";\r\n-        upsertJson(\"transaction_type\", \"SELL\", true)\r\n-      })\r\n-      const exitOnPurposeSwitch = document.getElementById('flexSwitchCheck1');\r\n-\r\n-      function toggleExitOnOpposite() {\r\n-        upsertJson(\"exit_on_opposite\", exitOnPurposeSwitch.checked.toString());\r\n-      }\r\n-      exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n-\r\n-      //target switch toggle\r\n-      const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n-      function toggleIsTgt() {\r\n-         upsertJson(\"is_tgt\", targetSwitch.checked.toString());\r\n-        if (!(targetSwitch.checked)) {\r\n-          document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n-          document.getElementById(\"target_value\").value = \"\";\r\n-        }\r\n-      }\r\n-\r\n-      //onchange toggles the switch, call the function and also shows dropdown\r\n-      let dropdownofTarget = document.getElementById(\"targetDropdownCtn\");\r\n-\r\n-      function targerSwitchReflect() {\r\n-        dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n-        if (dropdownofTarget.style.display === \"block\") {\r\n-          document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n-            upsertJson(\"tgt_type\",this.value,true);\r\n-            document.getElementById(\"target_value\").style.display = \"block\";\r\n-\r\n-            // var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n-            // tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n-            //   return new bootstrap.Tooltip(tooltipTriggerEl)\r\n-\r\n-            // })\r\n-\r\n-            let targetValBox = document.getElementById(\"targetValbox\");\r\n-            let targetErr = document.getElementById(\"targetError\");\r\n-\r\n-\r\n-            targetValBox?.addEventListener(\"input\", function () {\r\n-              upsertJson(\"tgt_value\",this.value,true)\r\n-              let targetValue = this.value.trim();\r\n-\r\n-              if (targetValue < 0) {\r\n-                targetErr.style.display = \"block\";\r\n-              }\r\n-              else {\r\n-                targetErr.style.display = \"none\";\r\n-              }\r\n-\r\n-            });\r\n-          });\r\n-        }\r\n-        else {\r\n-          document.getElementById(\"target_value\").style.display = \"none\";\r\n-          resetEditorFields([\"tgt_type\",\"tgt_value\",\"is_tgt\"])\r\n-          // let code = editor.getValue();\r\n-          // code = code.replace(/,\\s*\"tgt_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n-          // code = code.replace(/,\\s*\"tgt_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n-          // editor.setValue(code);\r\n-        }\r\n-\r\n-      };\r\n-      targetSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsTgt();\r\n-        targerSwitchReflect();\r\n-      })\r\n-\r\n-\r\n-\r\n-      //check the val true or false and shows box according\r\n-\r\n-      //stoploss switch\r\n-      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n-      function toggleIsSl() {\r\n-        upsertJson(\"is_sl\",stoplossSwitch.checked.toString())\r\n-        if (!(stoplossSwitch.checked)) {\r\n-          document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n-          document.getElementById(\"stoploss_value\").value = \"\";\r\n-        }\r\n-\r\n-      }\r\n-\r\n-      //onchange toggles the switch, call the function and also shows dropdown\r\n-      function stoplossSwitchReflect() {\r\n-        let dropdownOfStoploss = document.getElementById(\"stoplossDropdownCtn\");\r\n-        dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n-        if (dropdownOfStoploss.style.display === \"block\") {\r\n-          document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\", function () {\r\n-            upsertJson(\"sl_type\",this.value,true)\r\n-\r\n-            document.getElementById(\"stoploss_value\").style.display = \"block\";\r\n-            let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n-            let stoplossErr = document.getElementById(\"stoplossError\");\r\n-\r\n-\r\n-            stoplossValbox?.addEventListener(\"input\", function () {\r\n-              let stoplossValue = this.value.trim();\r\n-              upsertJson(\"sl_value\",this.value,false)\r\n-\r\n-              if (stoplossValue < 0) {\r\n-                stoplossErr.style.display = \"block\";\r\n-                resetEditorFields([\"sl_value\"]);\r\n-              }\r\n-              else {\r\n-                stoplossErr.style.display = \"none\";\r\n-              }\r\n-\r\n-            });\r\n-\r\n-\r\n-          });\r\n-        }\r\n-        else {\r\n-          document.getElementById(\"stoploss_value\").style.display = \"none\";\r\n-          resetEditorFields([\"sl_type\",\"sl_value\",\"is_sl\"])\r\n-          // let code = editor.getValue();\r\n-\r\n-          // code = code.replace(/,\\s*\"sl_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n-          // code = code.replace(/,\\s*\"sl_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n-          // editor.setValue(code);\r\n-        }\r\n-\r\n-\r\n-      };\r\n-\r\n-      stoplossSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsSl();\r\n-        stoplossSwitchReflect();\r\n-\r\n-      })\r\n-\r\n-      //trailing switch\r\n-      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n-\r\n-      function toggleIsTrailSet() {\r\n-        upsertJson(\"is_trail\",trailingSwitch.checked.toString());\r\n-        if (!(trailingSwitch.checked)) {\r\n-          document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n-          document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n-          document.getElementById(\"trailinggap_value\").value = \"\";\r\n-          document.getElementById(\"trailingpoint_value\").value = \"\";\r\n-        }\r\n-      }\r\n-      function trailswitchReflect() {\r\n-        let dropdownOfTrailing = document.getElementById(\"trailingDropdownCtn\");\r\n-        dropdownOfTrailing.style.display = trailingSwitch.checked ? 'block' : 'none';\r\n-\r\n-        if (dropdownOfTrailing.style.display === \"block\") {\r\n-\r\n-          document.getElementById(\"trailingdropdown\")?.addEventListener(\"change\", function () {\r\n-            upsertJson(\"trail_type\",this.value,true)\r\n-\r\n-            document.getElementById(\"trailingtrigger_value\").style.display = \"block\";\r\n-            let trailtriggerValbox = document.getElementById(\"trailtriggerValbox\");\r\n-            let trailTriggerError = document.getElementById(\"trailTriggerError\");\r\n-\r\n-\r\n-            trailtriggerValbox?.addEventListener(\"input\", function () {\r\n-\r\n-              let trailTriggerValue = this.value.trim();\r\n-              //let currentValue = editor.getValue().trim();\r\n-              upsertJson(\"trail_trigger\",trailTriggerValue,false);\r\n-\r\n-              if (trailTriggerValue < 0) {\r\n-                trailTriggerError.style.display = \"block\";\r\n-                document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n-\r\n-              }\r\n-              else {\r\n-                trailTriggerError.style.display = \"none\";\r\n-                document.getElementById(\"trailinggap_value\").style.display = \"block\";\r\n-              }\r\n-\r\n-              if (!trailTriggerValue) {\r\n-                resetEditorFields([\"trail_trigger\",\"trail_gap\",\"trail_point\"]);\r\n-                // currentValue = currentValue.replace(/,?\\s*\"trail_trigger\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n-                // // Also clean up trailing commas before }\r\n-                // currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n-                // editor.setValue(currentValue);\r\n-                // return;\r\n-              }\r\n-\r\n-\r\n-              //trail gap number box show\r\n-              document.getElementById(\"trailGapValbox\")?.addEventListener(\"input\", function () {\r\n-                let trailgapError = document.getElementById(\"trailGapError\");\r\n-                let trailGapValue = this.value.trim();\r\n-                //let currentValue = editor.getValue().trim();\r\n-                upsertJson(\"trail_gap\",this.value,false)\r\n-                if (trailGapValue < 0) {\r\n-                  trailgapError.style.display = \"block\";\r\n-                  document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n-\r\n-                }\r\n-                else {\r\n-                  trailgapError.style.display = \"none\";\r\n-                  document.getElementById(\"trailingpoint_value\").style.display = \"block\";\r\n-                }\r\n-\r\n-                if (!trailGapValue) {\r\n-                  resetEditorFields([\"trail_gap\",\"trail_point\"])\r\n-                   }\r\n-              })\r\n-\r\n-              //document.getElementById(\"trailingpoint_value\").style.display=\"block\"\r\n-\r\n-              //trail point input box\r\n-              document.getElementById(\"trailPointValbox\")?.addEventListener(\"input\", function () {\r\n-                let trailpointError = document.getElementById(\"trailPointError\");\r\n-                let trailpointVal = this.value.trim();\r\n-                //let currentValue = editor.getValue().trim();\r\n-                upsertJson(\"trail_point\",this.value,false)\r\n-\r\n-                if (trailpointVal < 0) {\r\n-                  trailpointError.style.display = \"block\";\r\n-\r\n-                }\r\n-                else {\r\n-                  trailpointError.style.display = \"none\";\r\n-                }\r\n-\r\n-                if (!trailpointVal) {\r\n-                  currentValue = currentValue.replace(/,?\\s*\"trail_point\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n-                  // Also clean up trailing commas before }\r\n-                  currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n-                  editor.setValue(currentValue);\r\n-                  return;\r\n-                }\r\n-\r\n-                if (/\\\"trail_point\\\"\\s*:\\s*\\d*/.test(currentValue)) {\r\n-                  currentValue = currentValue.replace(\r\n-                    /(\"trail_point\"\\s*:\\s*)\\d*/,\r\n-                    `$1${trailpointVal}`\r\n-                  );\r\n-                }\r\n-                else {\r\n-                  if (currentValue.endsWith(\"}\")) {\r\n-                    currentValue = currentValue.slice(0, -1).trim();\r\n-                  }\r\n-                  currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n-                  currentValue = currentValue + `,\\n\\t\"trail_point\":${trailpointVal}\\n}`;\r\n-                }\r\n-\r\n-                editor.setValue(currentValue);\r\n-              })\r\n-\r\n-\r\n-\r\n-            });\r\n-          });\r\n-\r\n-\r\n-        }\r\n-        else {\r\n-          document.getElementById(\"trailingtrigger_value\").style.display = \"none\";\r\n-          document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n-          document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n-          let code = editor.getValue();\r\n-\r\n-          code = code.replace(/,\\s*\"trail_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n-          code = code.replace(/,\\s*\"trail_trigger\"\\s*:\\s*[^,}]+/g, \"\");\r\n-          code = code.replace(/,\\s*\"trail_gap\"\\s*:\\s*[^,}]+/g, \"\");\r\n-          code = code.replace(/,\\s*\"trail_point\"\\s*:\\s*[^,}]+/g, \"\");\r\n-\r\n-          editor.setValue(code);\r\n-        }\r\n-      }\r\n-      trailingSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsTrailSet();\r\n-        trailswitchReflect();\r\n-      })\r\n-    });\r\n-  \r\n-\r\n-\r\n-    document.querySelectorAll('input[type=\"checkbox\"]').forEach(toggleBtn => {\r\n-      toggleBtn.checked = false; // turn off all switches\r\n-      document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n-      document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n-      document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n-      document.getElementById(\"target_value\").value = \"\";\r\n-      document.getElementById(\"stoploss_value\").value = \"\";\r\n-      document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n-      document.getElementById(\"trailinggap_value\").value = \"\";\r\n-      document.getElementById(\"trailingpoint_value\").value = \"\";\r\n-      targerSwitchReflect();\r\n-      stoplossSwitchReflect();\r\n-      trailswitchReflect();\r\n-\r\n-    });\r\n-\r\n-    document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n-\r\n-\r\n-    // Remove related switch values from JSON\r\n-    currentValue = currentValue\r\n-      .replace(/\"exit_on_opposite\"\\s*:\\s*(true|false),?/g, '\"exit_on_opposite\": false,')\r\n-      .replace(/\"is_tgt\"\\s*:\\s*(true|false),?/g, '\"is_tgt\": false,')\r\n-      .replace(/\"tgt_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n-      .replace(/\"tgt_value\"\\s*:\\s*\\d*/, \"\")\r\n-      .replace(/\"is_sl\"\\s*:\\s*(true|false),?/g, '\"is_sl\": false,')\r\n-      .replace(/\"sl_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n-      .replace(/\"sl_value\"\\s*:\\s*\\d*/, \"\")\r\n-      .replace(/\"is_trail_set\"\\s*:\\s*(true|false),?/g, '\"is_trail_set\": false,')\r\n-      .replace(/\"trail_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n-      .replace(/\"trail_trigger\"\\s*:\\s*\\d*/, \"\")\r\n-      .replace(/\"trail_gap\"\\s*:\\s*\\d*/, \"\")\r\n-      .replace(/\"trail_point\"\\s*:\\s*\\d*/, \"\");\r\n-\r\n-    editor.setValue(currentValue);\r\n-  }\r\n-  });\r\n-\r\n-\r\n"
                },
                {
                    "date": 1756355536997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -591,9 +591,9 @@\n \r\n \r\n             stoplossValbox?.addEventListener(\"input\", function () {\r\n               let stoplossValue = this.value.trim();\r\n-              upsertJson(\"sl_value\",this.value,false)\r\n+              upsertJson(\"sl_value\",stoplossValue,false)\r\n \r\n               if (stoplossValue < 0) {\r\n                 stoplossErr.style.display = \"block\";\r\n                 resetEditorFields([\"sl_value\"]);\r\n"
                },
                {
                    "date": 1756355630123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -722,24 +722,8 @@\n                   currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n                   editor.setValue(currentValue);\r\n                   return;\r\n                 }\r\n-\r\n-                if (/\\\"trail_point\\\"\\s*:\\s*\\d*/.test(currentValue)) {\r\n-                  currentValue = currentValue.replace(\r\n-                    /(\"trail_point\"\\s*:\\s*)\\d*/,\r\n-                    `$1${trailpointVal}`\r\n-                  );\r\n-                }\r\n-                else {\r\n-                  if (currentValue.endsWith(\"}\")) {\r\n-                    currentValue = currentValue.slice(0, -1).trim();\r\n-                  }\r\n-                  currentValue = currentValue.replace(/,(\\s*})/, \"$1\");\r\n-                  currentValue = currentValue + `,\\n\\t\"trail_point\":${trailpointVal}\\n}`;\r\n-                }\r\n-\r\n-                editor.setValue(currentValue);\r\n               })\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1756355675266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -732,19 +732,19 @@\n \r\n \r\n         }\r\n         else {\r\n-          document.getElementById(\"trailingtrigger_value\").style.display = \"none\";\r\n-          document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n-          document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n-          let code = editor.getValue();\r\n+          // document.getElementById(\"trailingtrigger_value\").style.display = \"none\";\r\n+          // document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n+          // document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n+          // let code = editor.getValue();\r\n \r\n-          code = code.replace(/,\\s*\"trail_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n-          code = code.replace(/,\\s*\"trail_trigger\"\\s*:\\s*[^,}]+/g, \"\");\r\n-          code = code.replace(/,\\s*\"trail_gap\"\\s*:\\s*[^,}]+/g, \"\");\r\n-          code = code.replace(/,\\s*\"trail_point\"\\s*:\\s*[^,}]+/g, \"\");\r\n+          // code = code.replace(/,\\s*\"trail_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n+          // code = code.replace(/,\\s*\"trail_trigger\"\\s*:\\s*[^,}]+/g, \"\");\r\n+          // code = code.replace(/,\\s*\"trail_gap\"\\s*:\\s*[^,}]+/g, \"\");\r\n+          // code = code.replace(/,\\s*\"trail_point\"\\s*:\\s*[^,}]+/g, \"\");\r\n \r\n-          editor.setValue(code);\r\n+          // editor.setValue(code);\r\n         }\r\n       }\r\n       trailingSwitch.addEventListener(\"change\", function () {\r\n         toggleIsTrailSet();\r\n"
                },
                {
                    "date": 1756355698654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -608,9 +608,9 @@\n           });\r\n         }\r\n         else {\r\n           document.getElementById(\"stoploss_value\").style.display = \"none\";\r\n-          resetEditorFields([\"sl_type\",\"sl_value\",\"is_sl\"])\r\n+          resetEditorFields([\"sl_type\",\"sl_value\",\"is_sl\"]);\r\n           // let code = editor.getValue();\r\n \r\n           // code = code.replace(/,\\s*\"sl_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n           // code = code.replace(/,\\s*\"sl_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n"
                },
                {
                    "date": 1756356115925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -716,13 +716,9 @@\n                   trailpointError.style.display = \"none\";\r\n                 }\r\n \r\n                 if (!trailpointVal) {\r\n-                  currentValue = currentValue.replace(/,?\\s*\"trail_point\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n-                  // Also clean up trailing commas before }\r\n-                  currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n-                  editor.setValue(currentValue);\r\n-                  return;\r\n+                  resetEditorFields([\"trail_point\"])\r\n                 }\r\n               })\r\n \r\n \r\n"
                },
                {
                    "date": 1756356189669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -716,9 +716,9 @@\n                   trailpointError.style.display = \"none\";\r\n                 }\r\n \r\n                 if (!trailpointVal) {\r\n-                  resetEditorFields([\"trail_point\"])\r\n+                  resetEditorFields([\"trail_point\"]);\r\n                 }\r\n               })\r\n \r\n \r\n@@ -728,11 +728,14 @@\n \r\n \r\n         }\r\n         else {\r\n-          // document.getElementById(\"trailingtrigger_value\").style.display = \"none\";\r\n-          // document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n-          // document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n+\r\n+          document.getElementById(\"trailingtrigger_value\").style.display = \"none\";\r\n+          document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n+          document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n+          resetEditorFields([\"trail_trigger\",\"trail_gap\",\"trail_point\"]);\r\n+\r\n           // let code = editor.getValue();\r\n \r\n           // code = code.replace(/,\\s*\"trail_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n           // code = code.replace(/,\\s*\"trail_trigger\"\\s*:\\s*[^,}]+/g, \"\");\r\n"
                },
                {
                    "date": 1756356253495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -769,10 +769,8 @@\n \r\n     });\r\n \r\n     document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n-\r\n-\r\n     // Remove related switch values from JSON\r\n     currentValue = currentValue\r\n       .replace(/\"exit_on_opposite\"\\s*:\\s*(true|false),?/g, '\"exit_on_opposite\": false,')\r\n       .replace(/\"is_tgt\"\\s*:\\s*(true|false),?/g, '\"is_tgt\": false,')\r\n"
                },
                {
                    "date": 1756356262512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -768,9 +768,10 @@\n       trailswitchReflect();\r\n \r\n     });\r\n \r\n-    document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n+    //document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n+\r\n     // Remove related switch values from JSON\r\n     currentValue = currentValue\r\n       .replace(/\"exit_on_opposite\"\\s*:\\s*(true|false),?/g, '\"exit_on_opposite\": false,')\r\n       .replace(/\"is_tgt\"\\s*:\\s*(true|false),?/g, '\"is_tgt\": false,')\r\n"
                },
                {
                    "date": 1756356297798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -771,23 +771,23 @@\n \r\n     //document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n \r\n     // Remove related switch values from JSON\r\n-    currentValue = currentValue\r\n-      .replace(/\"exit_on_opposite\"\\s*:\\s*(true|false),?/g, '\"exit_on_opposite\": false,')\r\n-      .replace(/\"is_tgt\"\\s*:\\s*(true|false),?/g, '\"is_tgt\": false,')\r\n-      .replace(/\"tgt_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n-      .replace(/\"tgt_value\"\\s*:\\s*\\d*/, \"\")\r\n-      .replace(/\"is_sl\"\\s*:\\s*(true|false),?/g, '\"is_sl\": false,')\r\n-      .replace(/\"sl_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n-      .replace(/\"sl_value\"\\s*:\\s*\\d*/, \"\")\r\n-      .replace(/\"is_trail_set\"\\s*:\\s*(true|false),?/g, '\"is_trail_set\": false,')\r\n-      .replace(/\"trail_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n-      .replace(/\"trail_trigger\"\\s*:\\s*\\d*/, \"\")\r\n-      .replace(/\"trail_gap\"\\s*:\\s*\\d*/, \"\")\r\n-      .replace(/\"trail_point\"\\s*:\\s*\\d*/, \"\");\r\n+    // currentValue = currentValue\r\n+    //   .replace(/\"exit_on_opposite\"\\s*:\\s*(true|false),?/g, '\"exit_on_opposite\": false,')\r\n+    //   .replace(/\"is_tgt\"\\s*:\\s*(true|false),?/g, '\"is_tgt\": false,')\r\n+    //   .replace(/\"tgt_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n+    //   .replace(/\"tgt_value\"\\s*:\\s*\\d*/, \"\")\r\n+    //   .replace(/\"is_sl\"\\s*:\\s*(true|false),?/g, '\"is_sl\": false,')\r\n+    //   .replace(/\"sl_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n+    //   .replace(/\"sl_value\"\\s*:\\s*\\d*/, \"\")\r\n+    //   .replace(/\"is_trail_set\"\\s*:\\s*(true|false),?/g, '\"is_trail_set\": false,')\r\n+    //   .replace(/\"trail_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n+    //   .replace(/\"trail_trigger\"\\s*:\\s*\\d*/, \"\")\r\n+    //   .replace(/\"trail_gap\"\\s*:\\s*\\d*/, \"\")\r\n+    //   .replace(/\"trail_point\"\\s*:\\s*\\d*/, \"\");\r\n \r\n-    editor.setValue(currentValue);\r\n+    // editor.setValue(currentValue);\r\n   }\r\n   });\r\n \r\n \r\n"
                },
                {
                    "date": 1756356359855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -179,18 +179,18 @@\n       { container: \"#productType\", field: \"#productDropdown\" },\r\n       { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n       { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n       { container: \"#BtnGroup\", field: null },\r\n-      {container:\"#rollover_value\",field:\"#rollovervalbox\"},\r\n-      {container:\"#rollover_time\",field:\"#timeBox\"},\r\n-      {container:\"#targetDropdownCtn\",field:\"#targetdropdown\"},\r\n-      {container:\"#target_value\",field:\"#targetValbox\"},\r\n-      {container:\"#stoplossDropdownCtn\",field:\"#stoplossdropdown\"},\r\n-      {container:\"#stoploss_value\",field:\"#stoplossValbox\"},\r\n-      {container:\"#trailingDropdownCtn\",field:\"#trailingdropdown\"},\r\n-      {container:\"#trailingtrigger_value\",field:\"#trailtriggerValbox\"},\r\n-      {container:\"#trailinggap_value\",field:\"#trailGapValbox\"},\r\n-      {container:\"#trailingpoint_value\",field:\"#trailPointValbox\"}\r\n+      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n+      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n+      { container: \"#targetDropdownCtn\", field: \"#targetdropdown\" },\r\n+      { container: \"#target_value\", field: \"#targetValbox\" },\r\n+      { container: \"#stoplossDropdownCtn\", field: \"#stoplossdropdown\" },\r\n+      { container: \"#stoploss_value\", field: \"#stoplossValbox\" },\r\n+      { container: \"#trailingDropdownCtn\", field: \"#trailingdropdown\" },\r\n+      { container: \"#trailingtrigger_value\", field: \"#trailtriggerValbox\" },\r\n+      { container: \"#trailinggap_value\", field: \"#trailGapValbox\" },\r\n+      { container: \"#trailingpoint_value\", field: \"#trailPointValbox\" }\r\n \r\n \r\n     ]\r\n   },\r\n@@ -505,9 +505,9 @@\n \r\n       //target switch toggle\r\n       const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n       function toggleIsTgt() {\r\n-         upsertJson(\"is_tgt\", targetSwitch.checked.toString());\r\n+        upsertJson(\"is_tgt\", targetSwitch.checked.toString());\r\n         if (!(targetSwitch.checked)) {\r\n           document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n           document.getElementById(\"target_value\").value = \"\";\r\n         }\r\n@@ -519,9 +519,9 @@\n       function targerSwitchReflect() {\r\n         dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n         if (dropdownofTarget.style.display === \"block\") {\r\n           document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n-            upsertJson(\"tgt_type\",this.value,true);\r\n+            upsertJson(\"tgt_type\", this.value, true);\r\n             document.getElementById(\"target_value\").style.display = \"block\";\r\n \r\n             // var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n             // tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n@@ -533,9 +533,9 @@\n             let targetErr = document.getElementById(\"targetError\");\r\n \r\n \r\n             targetValBox?.addEventListener(\"input\", function () {\r\n-              upsertJson(\"tgt_value\",this.value,true)\r\n+              upsertJson(\"tgt_value\", this.value, true)\r\n               let targetValue = this.value.trim();\r\n \r\n               if (targetValue < 0) {\r\n                 targetErr.style.display = \"block\";\r\n@@ -548,9 +548,9 @@\n           });\r\n         }\r\n         else {\r\n           document.getElementById(\"target_value\").style.display = \"none\";\r\n-          resetEditorFields([\"tgt_type\",\"tgt_value\",\"is_tgt\"])\r\n+          resetEditorFields([\"tgt_type\", \"tgt_value\", \"is_tgt\"])\r\n           // let code = editor.getValue();\r\n           // code = code.replace(/,\\s*\"tgt_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n           // code = code.replace(/,\\s*\"tgt_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n           // editor.setValue(code);\r\n@@ -568,9 +568,9 @@\n \r\n       //stoploss switch\r\n       const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n       function toggleIsSl() {\r\n-        upsertJson(\"is_sl\",stoplossSwitch.checked.toString())\r\n+        upsertJson(\"is_sl\", stoplossSwitch.checked.toString())\r\n         if (!(stoplossSwitch.checked)) {\r\n           document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n           document.getElementById(\"stoploss_value\").value = \"\";\r\n         }\r\n@@ -582,18 +582,18 @@\n         let dropdownOfStoploss = document.getElementById(\"stoplossDropdownCtn\");\r\n         dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n         if (dropdownOfStoploss.style.display === \"block\") {\r\n           document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\", function () {\r\n-            upsertJson(\"sl_type\",this.value,true)\r\n+            upsertJson(\"sl_type\", this.value, true)\r\n \r\n             document.getElementById(\"stoploss_value\").style.display = \"block\";\r\n             let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n             let stoplossErr = document.getElementById(\"stoplossError\");\r\n \r\n \r\n             stoplossValbox?.addEventListener(\"input\", function () {\r\n               let stoplossValue = this.value.trim();\r\n-              upsertJson(\"sl_value\",stoplossValue,false)\r\n+              upsertJson(\"sl_value\", stoplossValue, false)\r\n \r\n               if (stoplossValue < 0) {\r\n                 stoplossErr.style.display = \"block\";\r\n                 resetEditorFields([\"sl_value\"]);\r\n@@ -608,9 +608,9 @@\n           });\r\n         }\r\n         else {\r\n           document.getElementById(\"stoploss_value\").style.display = \"none\";\r\n-          resetEditorFields([\"sl_type\",\"sl_value\",\"is_sl\"]);\r\n+          resetEditorFields([\"sl_type\", \"sl_value\", \"is_sl\"]);\r\n           // let code = editor.getValue();\r\n \r\n           // code = code.replace(/,\\s*\"sl_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n           // code = code.replace(/,\\s*\"sl_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n@@ -629,9 +629,9 @@\n       //trailing switch\r\n       const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n \r\n       function toggleIsTrailSet() {\r\n-        upsertJson(\"is_trail\",trailingSwitch.checked.toString());\r\n+        upsertJson(\"is_trail\", trailingSwitch.checked.toString());\r\n         if (!(trailingSwitch.checked)) {\r\n           document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n           document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n           document.getElementById(\"trailinggap_value\").value = \"\";\r\n@@ -644,9 +644,9 @@\n \r\n         if (dropdownOfTrailing.style.display === \"block\") {\r\n \r\n           document.getElementById(\"trailingdropdown\")?.addEventListener(\"change\", function () {\r\n-            upsertJson(\"trail_type\",this.value,true)\r\n+            upsertJson(\"trail_type\", this.value, true)\r\n \r\n             document.getElementById(\"trailingtrigger_value\").style.display = \"block\";\r\n             let trailtriggerValbox = document.getElementById(\"trailtriggerValbox\");\r\n             let trailTriggerError = document.getElementById(\"trailTriggerError\");\r\n@@ -655,9 +655,9 @@\n             trailtriggerValbox?.addEventListener(\"input\", function () {\r\n \r\n               let trailTriggerValue = this.value.trim();\r\n               //let currentValue = editor.getValue().trim();\r\n-              upsertJson(\"trail_trigger\",trailTriggerValue,false);\r\n+              upsertJson(\"trail_trigger\", trailTriggerValue, false);\r\n \r\n               if (trailTriggerValue < 0) {\r\n                 trailTriggerError.style.display = \"block\";\r\n                 document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n@@ -668,9 +668,9 @@\n                 document.getElementById(\"trailinggap_value\").style.display = \"block\";\r\n               }\r\n \r\n               if (!trailTriggerValue) {\r\n-                resetEditorFields([\"trail_trigger\",\"trail_gap\",\"trail_point\"]);\r\n+                resetEditorFields([\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n                 // currentValue = currentValue.replace(/,?\\s*\"trail_trigger\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n                 // // Also clean up trailing commas before }\r\n                 // currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n                 // editor.setValue(currentValue);\r\n@@ -682,9 +682,9 @@\n               document.getElementById(\"trailGapValbox\")?.addEventListener(\"input\", function () {\r\n                 let trailgapError = document.getElementById(\"trailGapError\");\r\n                 let trailGapValue = this.value.trim();\r\n                 //let currentValue = editor.getValue().trim();\r\n-                upsertJson(\"trail_gap\",trailGapValue,false)\r\n+                upsertJson(\"trail_gap\", trailGapValue, false)\r\n                 if (trailGapValue < 0) {\r\n                   trailgapError.style.display = \"block\";\r\n                   document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n \r\n@@ -694,10 +694,10 @@\n                   document.getElementById(\"trailingpoint_value\").style.display = \"block\";\r\n                 }\r\n \r\n                 if (!trailGapValue) {\r\n-                  resetEditorFields([\"trail_gap\",\"trail_point\"])\r\n-                   }\r\n+                  resetEditorFields([\"trail_gap\", \"trail_point\"])\r\n+                }\r\n               })\r\n \r\n               //document.getElementById(\"trailingpoint_value\").style.display=\"block\"\r\n \r\n@@ -705,9 +705,9 @@\n               document.getElementById(\"trailPointValbox\")?.addEventListener(\"input\", function () {\r\n                 let trailpointError = document.getElementById(\"trailPointError\");\r\n                 let trailpointVal = this.value.trim();\r\n                 //let currentValue = editor.getValue().trim();\r\n-                upsertJson(\"trail_point\",trailpointVal,false);\r\n+                upsertJson(\"trail_point\", trailpointVal, false);\r\n \r\n                 if (trailpointVal < 0) {\r\n                   trailpointError.style.display = \"block\";\r\n \r\n@@ -732,9 +732,9 @@\n \r\n           document.getElementById(\"trailingtrigger_value\").style.display = \"none\";\r\n           document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n           document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n-          resetEditorFields([\"trail_trigger\",\"trail_gap\",\"trail_point\"]);\r\n+          resetEditorFields([\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n \r\n           // let code = editor.getValue();\r\n \r\n           // code = code.replace(/,\\s*\"trail_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n@@ -749,11 +749,11 @@\n         toggleIsTrailSet();\r\n         trailswitchReflect();\r\n       })\r\n     });\r\n-  \r\n \r\n \r\n+\r\n     document.querySelectorAll('input[type=\"checkbox\"]').forEach(toggleBtn => {\r\n       toggleBtn.checked = false; // turn off all switches\r\n       document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n       document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n@@ -771,23 +771,23 @@\n \r\n     //document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n \r\n     // Remove related switch values from JSON\r\n-    // currentValue = currentValue\r\n-    //   .replace(/\"exit_on_opposite\"\\s*:\\s*(true|false),?/g, '\"exit_on_opposite\": false,')\r\n-    //   .replace(/\"is_tgt\"\\s*:\\s*(true|false),?/g, '\"is_tgt\": false,')\r\n-    //   .replace(/\"tgt_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n-    //   .replace(/\"tgt_value\"\\s*:\\s*\\d*/, \"\")\r\n-    //   .replace(/\"is_sl\"\\s*:\\s*(true|false),?/g, '\"is_sl\": false,')\r\n-    //   .replace(/\"sl_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n-    //   .replace(/\"sl_value\"\\s*:\\s*\\d*/, \"\")\r\n-    //   .replace(/\"is_trail_set\"\\s*:\\s*(true|false),?/g, '\"is_trail_set\": false,')\r\n-    //   .replace(/\"trail_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n-    //   .replace(/\"trail_trigger\"\\s*:\\s*\\d*/, \"\")\r\n-    //   .replace(/\"trail_gap\"\\s*:\\s*\\d*/, \"\")\r\n-    //   .replace(/\"trail_point\"\\s*:\\s*\\d*/, \"\");\r\n+    currentValue = currentValue\r\n+      .replace(/\"exit_on_opposite\"\\s*:\\s*(true|false),?/g, '\"exit_on_opposite\": false,')\r\n+      .replace(/\"is_tgt\"\\s*:\\s*(true|false),?/g, '\"is_tgt\": false,')\r\n+      .replace(/\"tgt_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n+      .replace(/\"tgt_value\"\\s*:\\s*\\d*/, \"\")\r\n+      .replace(/\"is_sl\"\\s*:\\s*(true|false),?/g, '\"is_sl\": false,')\r\n+      .replace(/\"sl_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n+      .replace(/\"sl_value\"\\s*:\\s*\\d*/, \"\")\r\n+      .replace(/\"is_trail_set\"\\s*:\\s*(true|false),?/g, '\"is_trail_set\": false,')\r\n+      .replace(/\"trail_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n+      .replace(/\"trail_trigger\"\\s*:\\s*\\d*/, \"\")\r\n+      .replace(/\"trail_gap\"\\s*:\\s*\\d*/, \"\")\r\n+      .replace(/\"trail_point\"\\s*:\\s*\\d*/, \"\");\r\n \r\n-    // editor.setValue(currentValue);\r\n+    editor.setValue(currentValue);\r\n   }\r\n-  });\r\n+});\r\n \r\n \r\n"
                },
                {
                    "date": 1756356625805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -771,23 +771,23 @@\n \r\n     //document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n \r\n     // Remove related switch values from JSON\r\n-    currentValue = currentValue\r\n-      .replace(/\"exit_on_opposite\"\\s*:\\s*(true|false),?/g, '\"exit_on_opposite\": false,')\r\n-      .replace(/\"is_tgt\"\\s*:\\s*(true|false),?/g, '\"is_tgt\": false,')\r\n-      .replace(/\"tgt_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n-      .replace(/\"tgt_value\"\\s*:\\s*\\d*/, \"\")\r\n-      .replace(/\"is_sl\"\\s*:\\s*(true|false),?/g, '\"is_sl\": false,')\r\n-      .replace(/\"sl_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n-      .replace(/\"sl_value\"\\s*:\\s*\\d*/, \"\")\r\n-      .replace(/\"is_trail_set\"\\s*:\\s*(true|false),?/g, '\"is_trail_set\": false,')\r\n-      .replace(/\"trail_type\"\\s*:\\s*\".*?\",?/g, \"\")\r\n-      .replace(/\"trail_trigger\"\\s*:\\s*\\d*/, \"\")\r\n-      .replace(/\"trail_gap\"\\s*:\\s*\\d*/, \"\")\r\n-      .replace(/\"trail_point\"\\s*:\\s*\\d*/, \"\");\r\n+   resetEditorFields([\r\n+  \"exit_on_opposite\",\r\n+  \"is_tgt\",\r\n+  \"tgt_type\",\r\n+  \"tgt_value\",\r\n+  \"is_sl\",\r\n+  \"sl_type\",\r\n+  \"sl_value\",\r\n+  \"is_trail_set\",\r\n+  \"trail_type\",\r\n+  \"trail_trigger\",\r\n+  \"trail_gap\",\r\n+  \"trail_point\"\r\n+]);\r\n \r\n-    editor.setValue(currentValue);\r\n   }\r\n });\r\n \r\n \r\n"
                },
                {
                    "date": 1756356795376,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -771,22 +771,9 @@\n \r\n     //document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n \r\n     // Remove related switch values from JSON\r\n-   resetEditorFields([\r\n-  \"exit_on_opposite\",\r\n-  \"is_tgt\",\r\n-  \"tgt_type\",\r\n-  \"tgt_value\",\r\n-  \"is_sl\",\r\n-  \"sl_type\",\r\n-  \"sl_value\",\r\n-  \"is_trail_set\",\r\n-  \"trail_type\",\r\n-  \"trail_trigger\",\r\n-  \"trail_gap\",\r\n-  \"trail_point\"\r\n-]);\r\n+   resetEditorFields([\"exit_on_opposite\",\"is_tgt\",\"tgt_type\",\"tgt_value\",\"is_sl\",\"sl_type\",\"sl_value\",\"is_trail_set\",\"trail_type\",\"trail_trigger\",\"trail_gap\",\"trail_point\"]);\r\n \r\n   }\r\n });\r\n \r\n"
                },
                {
                    "date": 1756356851049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -771,10 +771,13 @@\n \r\n     //document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n \r\n     // Remove related switch values from JSON\r\n-   resetEditorFields([\"exit_on_opposite\",\"is_tgt\",\"tgt_type\",\"tgt_value\",\"is_sl\",\"sl_type\",\"sl_value\",\"is_trail_set\",\"trail_type\",\"trail_trigger\",\"trail_gap\",\"trail_point\"]);\r\n+    resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n \r\n   }\r\n+  else if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"FUT\") {\r\n+\r\n+  }\r\n });\r\n \r\n \r\n"
                },
                {
                    "date": 1756356894287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -468,9 +468,9 @@\n document.getElementById(\"productDropdown\").addEventListener(\"change\", function () {\r\n   upsertJson(\"product\", this.value, true);\r\n   hideAndReset(\"#productDropdown\", \"change\");\r\n   resetEditorFields([\"script\", \"product\", \"quantity\", \"is_tgt\",])\r\n-  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\") {\r\n+  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"EQ\") {\r\n     document.getElementById(\"quantityBlock\").style.display = \"block\";\r\n     document.getElementById(\"quantityBox\").addEventListener(\"input\", function () {\r\n       upsertJson(\"quantity\", this.value, false)\r\n       if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n"
                },
                {
                    "date": 1756357084406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -521,9 +521,11 @@\n         if (dropdownofTarget.style.display === \"block\") {\r\n           document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n             upsertJson(\"tgt_type\", this.value, true);\r\n             document.getElementById(\"target_value\").style.display = \"block\";\r\n+            document.getElementById(\"target_value\").value = \"\";\r\n \r\n+\r\n             // var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n             // tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n             //   return new bootstrap.Tooltip(tooltipTriggerEl)\r\n \r\n"
                },
                {
                    "date": 1756357528826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -515,9 +515,9 @@\n \r\n       //onchange toggles the switch, call the function and also shows dropdown\r\n       let dropdownofTarget = document.getElementById(\"targetDropdownCtn\");\r\n \r\n-      function targerSwitchReflect() {\r\n+      function targetSwitchReflect() {\r\n         dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n         if (dropdownofTarget.style.display === \"block\") {\r\n           document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n             upsertJson(\"tgt_type\", this.value, true);\r\n@@ -560,9 +560,9 @@\n \r\n       };\r\n       targetSwitch.addEventListener(\"change\", function () {\r\n         toggleIsTgt();\r\n-        targerSwitchReflect();\r\n+        targetSwitchReflect();\r\n       })\r\n \r\n \r\n \r\n@@ -764,9 +764,9 @@\n       document.getElementById(\"stoploss_value\").value = \"\";\r\n       document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n       document.getElementById(\"trailinggap_value\").value = \"\";\r\n       document.getElementById(\"trailingpoint_value\").value = \"\";\r\n-      targerSwitchReflect();\r\n+      targetSwitchReflect();\r\n       stoplossSwitchReflect();\r\n       trailswitchReflect();\r\n \r\n     });\r\n"
                },
                {
                    "date": 1756357571370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -463,9 +463,52 @@\n searchInput.addEventListener('input', debounce(e => {\r\n   fetchSuggestions(e.target.value);\r\n }, 300));\r\n \r\n+function targetSwitchReflect() {\r\n+        dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n+        if (dropdownofTarget.style.display === \"block\") {\r\n+          document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n+            upsertJson(\"tgt_type\", this.value, true);\r\n+            document.getElementById(\"target_value\").style.display = \"block\";\r\n+            document.getElementById(\"target_value\").value = \"\";\r\n \r\n+\r\n+            // var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n+            // tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n+            //   return new bootstrap.Tooltip(tooltipTriggerEl)\r\n+\r\n+            // })\r\n+\r\n+            let targetValBox = document.getElementById(\"targetValbox\");\r\n+            let targetErr = document.getElementById(\"targetError\");\r\n+\r\n+\r\n+            targetValBox?.addEventListener(\"input\", function () {\r\n+              upsertJson(\"tgt_value\", this.value, true)\r\n+              let targetValue = this.value.trim();\r\n+\r\n+              if (targetValue < 0) {\r\n+                targetErr.style.display = \"block\";\r\n+              }\r\n+              else {\r\n+                targetErr.style.display = \"none\";\r\n+              }\r\n+\r\n+            });\r\n+          });\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"target_value\").style.display = \"none\";\r\n+          resetEditorFields([\"tgt_type\", \"tgt_value\", \"is_tgt\"])\r\n+          // let code = editor.getValue();\r\n+          // code = code.replace(/,\\s*\"tgt_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n+          // code = code.replace(/,\\s*\"tgt_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n+          // editor.setValue(code);\r\n+        }\r\n+\r\n+      };\r\n+\r\n document.getElementById(\"productDropdown\").addEventListener(\"change\", function () {\r\n   upsertJson(\"product\", this.value, true);\r\n   hideAndReset(\"#productDropdown\", \"change\");\r\n   resetEditorFields([\"script\", \"product\", \"quantity\", \"is_tgt\",])\r\n@@ -515,51 +558,52 @@\n \r\n       //onchange toggles the switch, call the function and also shows dropdown\r\n       let dropdownofTarget = document.getElementById(\"targetDropdownCtn\");\r\n \r\n-      function targetSwitchReflect() {\r\n-        dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n-        if (dropdownofTarget.style.display === \"block\") {\r\n-          document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n-            upsertJson(\"tgt_type\", this.value, true);\r\n-            document.getElementById(\"target_value\").style.display = \"block\";\r\n-            document.getElementById(\"target_value\").value = \"\";\r\n+      // function targetSwitchReflect() {\r\n+      //   dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n+      //   if (dropdownofTarget.style.display === \"block\") {\r\n+      //     document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n+      //       upsertJson(\"tgt_type\", this.value, true);\r\n+      //       document.getElementById(\"target_value\").style.display = \"block\";\r\n+      //       document.getElementById(\"target_value\").value = \"\";\r\n \r\n \r\n-            // var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n-            // tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n-            //   return new bootstrap.Tooltip(tooltipTriggerEl)\r\n+      //       // var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n+      //       // tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n+      //       //   return new bootstrap.Tooltip(tooltipTriggerEl)\r\n \r\n-            // })\r\n+      //       // })\r\n \r\n-            let targetValBox = document.getElementById(\"targetValbox\");\r\n-            let targetErr = document.getElementById(\"targetError\");\r\n+      //       let targetValBox = document.getElementById(\"targetValbox\");\r\n+      //       let targetErr = document.getElementById(\"targetError\");\r\n \r\n \r\n-            targetValBox?.addEventListener(\"input\", function () {\r\n-              upsertJson(\"tgt_value\", this.value, true)\r\n-              let targetValue = this.value.trim();\r\n+      //       targetValBox?.addEventListener(\"input\", function () {\r\n+      //         upsertJson(\"tgt_value\", this.value, true)\r\n+      //         let targetValue = this.value.trim();\r\n \r\n-              if (targetValue < 0) {\r\n-                targetErr.style.display = \"block\";\r\n-              }\r\n-              else {\r\n-                targetErr.style.display = \"none\";\r\n-              }\r\n+      //         if (targetValue < 0) {\r\n+      //           targetErr.style.display = \"block\";\r\n+      //         }\r\n+      //         else {\r\n+      //           targetErr.style.display = \"none\";\r\n+      //         }\r\n \r\n-            });\r\n-          });\r\n-        }\r\n-        else {\r\n-          document.getElementById(\"target_value\").style.display = \"none\";\r\n-          resetEditorFields([\"tgt_type\", \"tgt_value\", \"is_tgt\"])\r\n-          // let code = editor.getValue();\r\n-          // code = code.replace(/,\\s*\"tgt_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n-          // code = code.replace(/,\\s*\"tgt_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n-          // editor.setValue(code);\r\n-        }\r\n+      //       });\r\n+      //     });\r\n+      //   }\r\n+      //   else {\r\n+      //     document.getElementById(\"target_value\").style.display = \"none\";\r\n+      //     resetEditorFields([\"tgt_type\", \"tgt_value\", \"is_tgt\"])\r\n+      //     // let code = editor.getValue();\r\n+      //     // code = code.replace(/,\\s*\"tgt_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n+      //     // code = code.replace(/,\\s*\"tgt_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n+      //     // editor.setValue(code);\r\n+      //   }\r\n \r\n-      };\r\n+      // };\r\n+\r\n       targetSwitch.addEventListener(\"change\", function () {\r\n         toggleIsTgt();\r\n         targetSwitchReflect();\r\n       })\r\n"
                },
                {
                    "date": 1756357651296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -499,12 +499,9 @@\n         }\r\n         else {\r\n           document.getElementById(\"target_value\").style.display = \"none\";\r\n           resetEditorFields([\"tgt_type\", \"tgt_value\", \"is_tgt\"])\r\n-          // let code = editor.getValue();\r\n-          // code = code.replace(/,\\s*\"tgt_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n-          // code = code.replace(/,\\s*\"tgt_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n-          // editor.setValue(code);\r\n+          document.getElementById(\"targetValbox\").value=\"\";\r\n         }\r\n \r\n       };\r\n \r\n"
                },
                {
                    "date": 1756357668260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -548,9 +548,9 @@\n       function toggleIsTgt() {\r\n         upsertJson(\"is_tgt\", targetSwitch.checked.toString());\r\n         if (!(targetSwitch.checked)) {\r\n           document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n-          document.getElementById(\"target_value\").value = \"\";\r\n+          document.getElementById(\"targetValbox\").value = \"\";\r\n         }\r\n       }\r\n \r\n       //onchange toggles the switch, call the function and also shows dropdown\r\n"
                },
                {
                    "date": 1756357690549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -469,9 +469,9 @@\n         if (dropdownofTarget.style.display === \"block\") {\r\n           document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n             upsertJson(\"tgt_type\", this.value, true);\r\n             document.getElementById(\"target_value\").style.display = \"block\";\r\n-            document.getElementById(\"target_value\").value = \"\";\r\n+            document.getElementById(\"targetValbox\").value = \"\";\r\n \r\n \r\n             // var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n             // tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n"
                },
                {
                    "date": 1756357752211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -463,8 +463,9 @@\n searchInput.addEventListener('input', debounce(e => {\r\n   fetchSuggestions(e.target.value);\r\n }, 300));\r\n \r\n+ let dropdownofTarget = document.getElementById(\"targetDropdownCtn\");\r\n function targetSwitchReflect() {\r\n         dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n         if (dropdownofTarget.style.display === \"block\") {\r\n           document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n@@ -553,9 +554,9 @@\n         }\r\n       }\r\n \r\n       //onchange toggles the switch, call the function and also shows dropdown\r\n-      let dropdownofTarget = document.getElementById(\"targetDropdownCtn\");\r\n+     \r\n \r\n       // function targetSwitchReflect() {\r\n       //   dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n       //   if (dropdownofTarget.style.display === \"block\") {\r\n"
                },
                {
                    "date": 1756357813193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -463,9 +463,10 @@\n searchInput.addEventListener('input', debounce(e => {\r\n   fetchSuggestions(e.target.value);\r\n }, 300));\r\n \r\n- let dropdownofTarget = document.getElementById(\"targetDropdownCtn\");\r\n+ let dropdownofTarget = document.getElementById(\"targetDropdownCtn\"); \r\n+ const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n function targetSwitchReflect() {\r\n         dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n         if (dropdownofTarget.style.display === \"block\") {\r\n           document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n@@ -544,9 +545,9 @@\n       }\r\n       exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n \r\n       //target switch toggle\r\n-      const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n+      \r\n       function toggleIsTgt() {\r\n         upsertJson(\"is_tgt\", targetSwitch.checked.toString());\r\n         if (!(targetSwitch.checked)) {\r\n           document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n"
                },
                {
                    "date": 1756357863962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -465,8 +465,9 @@\n }, 300));\r\n \r\n  let dropdownofTarget = document.getElementById(\"targetDropdownCtn\"); \r\n  const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n+ //onchange toggles the switch, call the function and also shows dropdown\r\n function targetSwitchReflect() {\r\n         dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n         if (dropdownofTarget.style.display === \"block\") {\r\n           document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n"
                },
                {
                    "date": 1756357885443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -555,55 +555,8 @@\n           document.getElementById(\"targetValbox\").value = \"\";\r\n         }\r\n       }\r\n \r\n-      //onchange toggles the switch, call the function and also shows dropdown\r\n-     \r\n-\r\n-      // function targetSwitchReflect() {\r\n-      //   dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n-      //   if (dropdownofTarget.style.display === \"block\") {\r\n-      //     document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n-      //       upsertJson(\"tgt_type\", this.value, true);\r\n-      //       document.getElementById(\"target_value\").style.display = \"block\";\r\n-      //       document.getElementById(\"target_value\").value = \"\";\r\n-\r\n-\r\n-      //       // var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n-      //       // tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n-      //       //   return new bootstrap.Tooltip(tooltipTriggerEl)\r\n-\r\n-      //       // })\r\n-\r\n-      //       let targetValBox = document.getElementById(\"targetValbox\");\r\n-      //       let targetErr = document.getElementById(\"targetError\");\r\n-\r\n-\r\n-      //       targetValBox?.addEventListener(\"input\", function () {\r\n-      //         upsertJson(\"tgt_value\", this.value, true)\r\n-      //         let targetValue = this.value.trim();\r\n-\r\n-      //         if (targetValue < 0) {\r\n-      //           targetErr.style.display = \"block\";\r\n-      //         }\r\n-      //         else {\r\n-      //           targetErr.style.display = \"none\";\r\n-      //         }\r\n-\r\n-      //       });\r\n-      //     });\r\n-      //   }\r\n-      //   else {\r\n-      //     document.getElementById(\"target_value\").style.display = \"none\";\r\n-      //     resetEditorFields([\"tgt_type\", \"tgt_value\", \"is_tgt\"])\r\n-      //     // let code = editor.getValue();\r\n-      //     // code = code.replace(/,\\s*\"tgt_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n-      //     // code = code.replace(/,\\s*\"tgt_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n-      //     // editor.setValue(code);\r\n-      //   }\r\n-\r\n-      // };\r\n-\r\n       targetSwitch.addEventListener(\"change\", function () {\r\n         toggleIsTgt();\r\n         targetSwitchReflect();\r\n       })\r\n"
                },
                {
                    "date": 1756357920542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -574,52 +574,8 @@\n           document.getElementById(\"stoploss_value\").value = \"\";\r\n         }\r\n \r\n       }\r\n-\r\n-      //onchange toggles the switch, call the function and also shows dropdown\r\n-      function stoplossSwitchReflect() {\r\n-        let dropdownOfStoploss = document.getElementById(\"stoplossDropdownCtn\");\r\n-        dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n-        if (dropdownOfStoploss.style.display === \"block\") {\r\n-          document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\", function () {\r\n-            upsertJson(\"sl_type\", this.value, true)\r\n-\r\n-            document.getElementById(\"stoploss_value\").style.display = \"block\";\r\n-            let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n-            let stoplossErr = document.getElementById(\"stoplossError\");\r\n-\r\n-\r\n-            stoplossValbox?.addEventListener(\"input\", function () {\r\n-              let stoplossValue = this.value.trim();\r\n-              upsertJson(\"sl_value\", stoplossValue, false)\r\n-\r\n-              if (stoplossValue < 0) {\r\n-                stoplossErr.style.display = \"block\";\r\n-                resetEditorFields([\"sl_value\"]);\r\n-              }\r\n-              else {\r\n-                stoplossErr.style.display = \"none\";\r\n-              }\r\n-\r\n-            });\r\n-\r\n-\r\n-          });\r\n-        }\r\n-        else {\r\n-          document.getElementById(\"stoploss_value\").style.display = \"none\";\r\n-          resetEditorFields([\"sl_type\", \"sl_value\", \"is_sl\"]);\r\n-          // let code = editor.getValue();\r\n-\r\n-          // code = code.replace(/,\\s*\"sl_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n-          // code = code.replace(/,\\s*\"sl_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n-          // editor.setValue(code);\r\n-        }\r\n-\r\n-\r\n-      };\r\n-\r\n       stoplossSwitch.addEventListener(\"change\", function () {\r\n         toggleIsSl();\r\n         stoplossSwitchReflect();\r\n \r\n"
                },
                {
                    "date": 1756357957320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -555,8 +555,9 @@\n           document.getElementById(\"targetValbox\").value = \"\";\r\n         }\r\n       }\r\n \r\n+      \r\n       targetSwitch.addEventListener(\"change\", function () {\r\n         toggleIsTgt();\r\n         targetSwitchReflect();\r\n       })\r\n@@ -574,8 +575,52 @@\n           document.getElementById(\"stoploss_value\").value = \"\";\r\n         }\r\n \r\n       }\r\n+\r\n+      //onchange toggles the switch, call the function and also shows dropdown\r\n+      function stoplossSwitchReflect() {\r\n+        let dropdownOfStoploss = document.getElementById(\"stoplossDropdownCtn\");\r\n+        dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n+        if (dropdownOfStoploss.style.display === \"block\") {\r\n+          document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\", function () {\r\n+            upsertJson(\"sl_type\", this.value, true)\r\n+\r\n+            document.getElementById(\"stoploss_value\").style.display = \"block\";\r\n+            let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n+            let stoplossErr = document.getElementById(\"stoplossError\");\r\n+\r\n+\r\n+            stoplossValbox?.addEventListener(\"input\", function () {\r\n+              let stoplossValue = this.value.trim();\r\n+              upsertJson(\"sl_value\", stoplossValue, false)\r\n+\r\n+              if (stoplossValue < 0) {\r\n+                stoplossErr.style.display = \"block\";\r\n+                resetEditorFields([\"sl_value\"]);\r\n+              }\r\n+              else {\r\n+                stoplossErr.style.display = \"none\";\r\n+              }\r\n+\r\n+            });\r\n+\r\n+\r\n+          });\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"stoploss_value\").style.display = \"none\";\r\n+          resetEditorFields([\"sl_type\", \"sl_value\", \"is_sl\"]);\r\n+          // let code = editor.getValue();\r\n+\r\n+          // code = code.replace(/,\\s*\"sl_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n+          // code = code.replace(/,\\s*\"sl_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n+          // editor.setValue(code);\r\n+        }\r\n+\r\n+\r\n+      };\r\n+\r\n       stoplossSwitch.addEventListener(\"change\", function () {\r\n         toggleIsSl();\r\n         stoplossSwitchReflect();\r\n \r\n"
                },
                {
                    "date": 1756357964902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -507,8 +507,10 @@\n         }\r\n \r\n       };\r\n \r\n+      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n+\r\n document.getElementById(\"productDropdown\").addEventListener(\"change\", function () {\r\n   upsertJson(\"product\", this.value, true);\r\n   hideAndReset(\"#productDropdown\", \"change\");\r\n   resetEditorFields([\"script\", \"product\", \"quantity\", \"is_tgt\",])\r\n"
                },
                {
                    "date": 1756358063398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -508,9 +508,51 @@\n \r\n       };\r\n \r\n       const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n+      function stoplossSwitchReflect() {\r\n+        let dropdownOfStoploss = document.getElementById(\"stoplossDropdownCtn\");\r\n+        dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n+        if (dropdownOfStoploss.style.display === \"block\") {\r\n+          document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\", function () {\r\n+            upsertJson(\"sl_type\", this.value, true)\r\n \r\n+            document.getElementById(\"stoploss_value\").style.display = \"block\";\r\n+            let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n+            let stoplossErr = document.getElementById(\"stoplossError\");\r\n+\r\n+\r\n+            stoplossValbox?.addEventListener(\"input\", function () {\r\n+              let stoplossValue = this.value.trim();\r\n+              upsertJson(\"sl_value\", stoplossValue, false)\r\n+\r\n+              if (stoplossValue < 0) {\r\n+                stoplossErr.style.display = \"block\";\r\n+                resetEditorFields([\"sl_value\"]);\r\n+              }\r\n+              else {\r\n+                stoplossErr.style.display = \"none\";\r\n+              }\r\n+\r\n+            });\r\n+\r\n+\r\n+          });\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"stoploss_value\").style.display = \"none\";\r\n+          resetEditorFields([\"sl_type\", \"sl_value\", \"is_sl\"]);\r\n+          // let code = editor.getValue();\r\n+\r\n+          // code = code.replace(/,\\s*\"sl_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n+          // code = code.replace(/,\\s*\"sl_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n+          // editor.setValue(code);\r\n+        }\r\n+\r\n+\r\n+      };\r\n+\r\n+\r\n document.getElementById(\"productDropdown\").addEventListener(\"change\", function () {\r\n   upsertJson(\"product\", this.value, true);\r\n   hideAndReset(\"#productDropdown\", \"change\");\r\n   resetEditorFields([\"script\", \"product\", \"quantity\", \"is_tgt\",])\r\n@@ -578,51 +620,9 @@\n         }\r\n \r\n       }\r\n \r\n-      //onchange toggles the switch, call the function and also shows dropdown\r\n-      function stoplossSwitchReflect() {\r\n-        let dropdownOfStoploss = document.getElementById(\"stoplossDropdownCtn\");\r\n-        dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n-        if (dropdownOfStoploss.style.display === \"block\") {\r\n-          document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\", function () {\r\n-            upsertJson(\"sl_type\", this.value, true)\r\n-\r\n-            document.getElementById(\"stoploss_value\").style.display = \"block\";\r\n-            let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n-            let stoplossErr = document.getElementById(\"stoplossError\");\r\n-\r\n-\r\n-            stoplossValbox?.addEventListener(\"input\", function () {\r\n-              let stoplossValue = this.value.trim();\r\n-              upsertJson(\"sl_value\", stoplossValue, false)\r\n-\r\n-              if (stoplossValue < 0) {\r\n-                stoplossErr.style.display = \"block\";\r\n-                resetEditorFields([\"sl_value\"]);\r\n-              }\r\n-              else {\r\n-                stoplossErr.style.display = \"none\";\r\n-              }\r\n-\r\n-            });\r\n-\r\n-\r\n-          });\r\n-        }\r\n-        else {\r\n-          document.getElementById(\"stoploss_value\").style.display = \"none\";\r\n-          resetEditorFields([\"sl_type\", \"sl_value\", \"is_sl\"]);\r\n-          // let code = editor.getValue();\r\n-\r\n-          // code = code.replace(/,\\s*\"sl_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n-          // code = code.replace(/,\\s*\"sl_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n-          // editor.setValue(code);\r\n-        }\r\n-\r\n-\r\n-      };\r\n-\r\n+     \r\n       stoplossSwitch.addEventListener(\"change\", function () {\r\n         toggleIsSl();\r\n         stoplossSwitchReflect();\r\n \r\n@@ -639,115 +639,9 @@\n           document.getElementById(\"trailinggap_value\").value = \"\";\r\n           document.getElementById(\"trailingpoint_value\").value = \"\";\r\n         }\r\n       }\r\n-      function trailswitchReflect() {\r\n-        let dropdownOfTrailing = document.getElementById(\"trailingDropdownCtn\");\r\n-        dropdownOfTrailing.style.display = trailingSwitch.checked ? 'block' : 'none';\r\n-\r\n-        if (dropdownOfTrailing.style.display === \"block\") {\r\n-\r\n-          document.getElementById(\"trailingdropdown\")?.addEventListener(\"change\", function () {\r\n-            upsertJson(\"trail_type\", this.value, true)\r\n-\r\n-            document.getElementById(\"trailingtrigger_value\").style.display = \"block\";\r\n-            let trailtriggerValbox = document.getElementById(\"trailtriggerValbox\");\r\n-            let trailTriggerError = document.getElementById(\"trailTriggerError\");\r\n-\r\n-\r\n-            trailtriggerValbox?.addEventListener(\"input\", function () {\r\n-\r\n-              let trailTriggerValue = this.value.trim();\r\n-              //let currentValue = editor.getValue().trim();\r\n-              upsertJson(\"trail_trigger\", trailTriggerValue, false);\r\n-\r\n-              if (trailTriggerValue < 0) {\r\n-                trailTriggerError.style.display = \"block\";\r\n-                document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n-\r\n-              }\r\n-              else {\r\n-                trailTriggerError.style.display = \"none\";\r\n-                document.getElementById(\"trailinggap_value\").style.display = \"block\";\r\n-              }\r\n-\r\n-              if (!trailTriggerValue) {\r\n-                resetEditorFields([\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n-                // currentValue = currentValue.replace(/,?\\s*\"trail_trigger\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n-                // // Also clean up trailing commas before }\r\n-                // currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n-                // editor.setValue(currentValue);\r\n-                // return;\r\n-              }\r\n-\r\n-\r\n-              //trail gap number box show\r\n-              document.getElementById(\"trailGapValbox\")?.addEventListener(\"input\", function () {\r\n-                let trailgapError = document.getElementById(\"trailGapError\");\r\n-                let trailGapValue = this.value.trim();\r\n-                //let currentValue = editor.getValue().trim();\r\n-                upsertJson(\"trail_gap\", trailGapValue, false)\r\n-                if (trailGapValue < 0) {\r\n-                  trailgapError.style.display = \"block\";\r\n-                  document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n-\r\n-                }\r\n-                else {\r\n-                  trailgapError.style.display = \"none\";\r\n-                  document.getElementById(\"trailingpoint_value\").style.display = \"block\";\r\n-                }\r\n-\r\n-                if (!trailGapValue) {\r\n-                  resetEditorFields([\"trail_gap\", \"trail_point\"])\r\n-                }\r\n-              })\r\n-\r\n-              //document.getElementById(\"trailingpoint_value\").style.display=\"block\"\r\n-\r\n-              //trail point input box\r\n-              document.getElementById(\"trailPointValbox\")?.addEventListener(\"input\", function () {\r\n-                let trailpointError = document.getElementById(\"trailPointError\");\r\n-                let trailpointVal = this.value.trim();\r\n-                //let currentValue = editor.getValue().trim();\r\n-                upsertJson(\"trail_point\", trailpointVal, false);\r\n-\r\n-                if (trailpointVal < 0) {\r\n-                  trailpointError.style.display = \"block\";\r\n-\r\n-                }\r\n-                else {\r\n-                  trailpointError.style.display = \"none\";\r\n-                }\r\n-\r\n-                if (!trailpointVal) {\r\n-                  resetEditorFields([\"trail_point\"]);\r\n-                }\r\n-              })\r\n-\r\n-\r\n-\r\n-            });\r\n-          });\r\n-\r\n-\r\n-        }\r\n-        else {\r\n-\r\n-          document.getElementById(\"trailingtrigger_value\").style.display = \"none\";\r\n-          document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n-          document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n-          resetEditorFields([\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n-\r\n-          // let code = editor.getValue();\r\n-\r\n-          // code = code.replace(/,\\s*\"trail_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n-          // code = code.replace(/,\\s*\"trail_trigger\"\\s*:\\s*[^,}]+/g, \"\");\r\n-          // code = code.replace(/,\\s*\"trail_gap\"\\s*:\\s*[^,}]+/g, \"\");\r\n-          // code = code.replace(/,\\s*\"trail_point\"\\s*:\\s*[^,}]+/g, \"\");\r\n-\r\n-          // editor.setValue(code);\r\n-        }\r\n-      }\r\n+      \r\n       trailingSwitch.addEventListener(\"change\", function () {\r\n         toggleIsTrailSet();\r\n         trailswitchReflect();\r\n       })\r\n"
                },
                {
                    "date": 1756358074936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -550,9 +550,117 @@\n \r\n \r\n       };\r\n \r\n+      function trailswitchReflect() {\r\n+        let dropdownOfTrailing = document.getElementById(\"trailingDropdownCtn\");\r\n+        dropdownOfTrailing.style.display = trailingSwitch.checked ? 'block' : 'none';\r\n \r\n+        if (dropdownOfTrailing.style.display === \"block\") {\r\n+\r\n+          document.getElementById(\"trailingdropdown\")?.addEventListener(\"change\", function () {\r\n+            upsertJson(\"trail_type\", this.value, true)\r\n+\r\n+            document.getElementById(\"trailingtrigger_value\").style.display = \"block\";\r\n+            let trailtriggerValbox = document.getElementById(\"trailtriggerValbox\");\r\n+            let trailTriggerError = document.getElementById(\"trailTriggerError\");\r\n+\r\n+\r\n+            trailtriggerValbox?.addEventListener(\"input\", function () {\r\n+\r\n+              let trailTriggerValue = this.value.trim();\r\n+              //let currentValue = editor.getValue().trim();\r\n+              upsertJson(\"trail_trigger\", trailTriggerValue, false);\r\n+\r\n+              if (trailTriggerValue < 0) {\r\n+                trailTriggerError.style.display = \"block\";\r\n+                document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n+\r\n+              }\r\n+              else {\r\n+                trailTriggerError.style.display = \"none\";\r\n+                document.getElementById(\"trailinggap_value\").style.display = \"block\";\r\n+              }\r\n+\r\n+              if (!trailTriggerValue) {\r\n+                resetEditorFields([\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n+                // currentValue = currentValue.replace(/,?\\s*\"trail_trigger\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n+                // // Also clean up trailing commas before }\r\n+                // currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n+                // editor.setValue(currentValue);\r\n+                // return;\r\n+              }\r\n+\r\n+\r\n+              //trail gap number box show\r\n+              document.getElementById(\"trailGapValbox\")?.addEventListener(\"input\", function () {\r\n+                let trailgapError = document.getElementById(\"trailGapError\");\r\n+                let trailGapValue = this.value.trim();\r\n+                //let currentValue = editor.getValue().trim();\r\n+                upsertJson(\"trail_gap\", trailGapValue, false)\r\n+                if (trailGapValue < 0) {\r\n+                  trailgapError.style.display = \"block\";\r\n+                  document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n+\r\n+                }\r\n+                else {\r\n+                  trailgapError.style.display = \"none\";\r\n+                  document.getElementById(\"trailingpoint_value\").style.display = \"block\";\r\n+                }\r\n+\r\n+                if (!trailGapValue) {\r\n+                  resetEditorFields([\"trail_gap\", \"trail_point\"])\r\n+                }\r\n+              })\r\n+\r\n+              //document.getElementById(\"trailingpoint_value\").style.display=\"block\"\r\n+\r\n+              //trail point input box\r\n+              document.getElementById(\"trailPointValbox\")?.addEventListener(\"input\", function () {\r\n+                let trailpointError = document.getElementById(\"trailPointError\");\r\n+                let trailpointVal = this.value.trim();\r\n+                //let currentValue = editor.getValue().trim();\r\n+                upsertJson(\"trail_point\", trailpointVal, false);\r\n+\r\n+                if (trailpointVal < 0) {\r\n+                  trailpointError.style.display = \"block\";\r\n+\r\n+                }\r\n+                else {\r\n+                  trailpointError.style.display = \"none\";\r\n+                }\r\n+\r\n+                if (!trailpointVal) {\r\n+                  resetEditorFields([\"trail_point\"]);\r\n+                }\r\n+              })\r\n+\r\n+\r\n+\r\n+            });\r\n+          });\r\n+\r\n+\r\n+        }\r\n+        else {\r\n+\r\n+          document.getElementById(\"trailingtrigger_value\").style.display = \"none\";\r\n+          document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n+          document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n+          resetEditorFields([\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n+\r\n+          // let code = editor.getValue();\r\n+\r\n+          // code = code.replace(/,\\s*\"trail_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n+          // code = code.replace(/,\\s*\"trail_trigger\"\\s*:\\s*[^,}]+/g, \"\");\r\n+          // code = code.replace(/,\\s*\"trail_gap\"\\s*:\\s*[^,}]+/g, \"\");\r\n+          // code = code.replace(/,\\s*\"trail_point\"\\s*:\\s*[^,}]+/g, \"\");\r\n+\r\n+          // editor.setValue(code);\r\n+        }\r\n+      }\r\n+\r\n+\r\n document.getElementById(\"productDropdown\").addEventListener(\"change\", function () {\r\n   upsertJson(\"product\", this.value, true);\r\n   hideAndReset(\"#productDropdown\", \"change\");\r\n   resetEditorFields([\"script\", \"product\", \"quantity\", \"is_tgt\",])\r\n"
                },
                {
                    "date": 1756358082881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -637,13 +637,10 @@\n \r\n \r\n             });\r\n           });\r\n-\r\n-\r\n         }\r\n         else {\r\n-\r\n           document.getElementById(\"trailingtrigger_value\").style.display = \"none\";\r\n           document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n           document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n           resetEditorFields([\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n"
                },
                {
                    "date": 1756358107794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -642,9 +642,9 @@\n         else {\r\n           document.getElementById(\"trailingtrigger_value\").style.display = \"none\";\r\n           document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n           document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n-          resetEditorFields([\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n+          resetEditorFields([\"trail_type\",\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n \r\n           // let code = editor.getValue();\r\n \r\n           // code = code.replace(/,\\s*\"trail_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n"
                },
                {
                    "date": 1756358148154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -642,9 +642,9 @@\n         else {\r\n           document.getElementById(\"trailingtrigger_value\").style.display = \"none\";\r\n           document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n           document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n-          resetEditorFields([\"trail_type\",\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n+          resetEditorFields([\"is_trail\",\"trail_type\",\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n \r\n           // let code = editor.getValue();\r\n \r\n           // code = code.replace(/,\\s*\"trail_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n"
                },
                {
                    "date": 1756358155938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -643,17 +643,8 @@\n           document.getElementById(\"trailingtrigger_value\").style.display = \"none\";\r\n           document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n           document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n           resetEditorFields([\"is_trail\",\"trail_type\",\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n-\r\n-          // let code = editor.getValue();\r\n-\r\n-          // code = code.replace(/,\\s*\"trail_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n-          // code = code.replace(/,\\s*\"trail_trigger\"\\s*:\\s*[^,}]+/g, \"\");\r\n-          // code = code.replace(/,\\s*\"trail_gap\"\\s*:\\s*[^,}]+/g, \"\");\r\n-          // code = code.replace(/,\\s*\"trail_point\"\\s*:\\s*[^,}]+/g, \"\");\r\n-\r\n-          // editor.setValue(code);\r\n         }\r\n       }\r\n \r\n \r\n"
                },
                {
                    "date": 1756358190806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -550,8 +550,9 @@\n \r\n \r\n       };\r\n \r\n+      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n       function trailswitchReflect() {\r\n         let dropdownOfTrailing = document.getElementById(\"trailingDropdownCtn\");\r\n         dropdownOfTrailing.style.display = trailingSwitch.checked ? 'block' : 'none';\r\n \r\n"
                },
                {
                    "date": 1756359213342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -766,8 +766,28 @@\n \r\n     // Remove related switch values from JSON\r\n     resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n \r\n+    const switches = document.querySelectorAll(\"#toggleSwitchGroup .form-check-input\");\r\n+    switches.forEach(sw => sw.checked = false);\r\n+\r\n+    // Hide related dropdowns\r\n+    const relatedDropdowns = [\r\n+        \"targetDropdownCtn\",\r\n+        \"target_value\",\r\n+        \"stoplossDropdownCtn\",\r\n+        \"stoploss_value\",\r\n+        \"trailingDropdownCtn\",\r\n+        \"trailingtrigger_value\",\r\n+        \"trailinggap_value\",\r\n+        \"trailingpoint_value\"\r\n+    ];\r\n+    \r\n+    relatedDropdowns.forEach(id => {\r\n+        const el = document.getElementById(id);\r\n+        if(el) el.style.display = \"none\";\r\n+    });\r\n+\r\n   }\r\n   else if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"FUT\") {\r\n \r\n   }\r\n"
                },
                {
                    "date": 1756359294825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -655,8 +655,27 @@\n   resetEditorFields([\"script\", \"product\", \"quantity\", \"is_tgt\",])\r\n   if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"EQ\") {\r\n     document.getElementById(\"quantityBlock\").style.display = \"block\";\r\n     document.getElementById(\"quantityBox\").addEventListener(\"input\", function () {\r\n+      const switches = document.querySelectorAll(\"#toggleSwitchGroup .form-check-input\");\r\n+    switches.forEach(sw => sw.checked = false);\r\n+\r\n+    // Hide related dropdowns\r\n+    const relatedDropdowns = [\r\n+        \"targetDropdownCtn\",\r\n+        \"target_value\",\r\n+        \"stoplossDropdownCtn\",\r\n+        \"stoploss_value\",\r\n+        \"trailingDropdownCtn\",\r\n+        \"trailingtrigger_value\",\r\n+        \"trailinggap_value\",\r\n+        \"trailingpoint_value\"\r\n+    ];\r\n+    \r\n+    relatedDropdowns.forEach(id => {\r\n+        const el = document.getElementById(id);\r\n+        if(el) el.style.display = \"none\";\r\n+    });\r\n       upsertJson(\"quantity\", this.value, false)\r\n       if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n         document.getElementById(\"quantityError\").style.display = \"block\";\r\n         document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n@@ -766,27 +785,9 @@\n \r\n     // Remove related switch values from JSON\r\n     resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n \r\n-    const switches = document.querySelectorAll(\"#toggleSwitchGroup .form-check-input\");\r\n-    switches.forEach(sw => sw.checked = false);\r\n-\r\n-    // Hide related dropdowns\r\n-    const relatedDropdowns = [\r\n-        \"targetDropdownCtn\",\r\n-        \"target_value\",\r\n-        \"stoplossDropdownCtn\",\r\n-        \"stoploss_value\",\r\n-        \"trailingDropdownCtn\",\r\n-        \"trailingtrigger_value\",\r\n-        \"trailinggap_value\",\r\n-        \"trailingpoint_value\"\r\n-    ];\r\n     \r\n-    relatedDropdowns.forEach(id => {\r\n-        const el = document.getElementById(id);\r\n-        if(el) el.style.display = \"none\";\r\n-    });\r\n \r\n   }\r\n   else if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"FUT\") {\r\n \r\n"
                },
                {
                    "date": 1756359341518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -659,23 +659,16 @@\n       const switches = document.querySelectorAll(\"#toggleSwitchGroup .form-check-input\");\r\n     switches.forEach(sw => sw.checked = false);\r\n \r\n     // Hide related dropdowns\r\n-    const relatedDropdowns = [\r\n-        \"targetDropdownCtn\",\r\n-        \"target_value\",\r\n-        \"stoplossDropdownCtn\",\r\n-        \"stoploss_value\",\r\n-        \"trailingDropdownCtn\",\r\n-        \"trailingtrigger_value\",\r\n-        \"trailinggap_value\",\r\n-        \"trailingpoint_value\"\r\n-    ];\r\n-    \r\n-    relatedDropdowns.forEach(id => {\r\n-        const el = document.getElementById(id);\r\n-        if(el) el.style.display = \"none\";\r\n-    });\r\n+    hideAndReset(\"#targetDropdownCtn\");\r\n+    hideAndReset(\"#target_value\");\r\n+    hideAndReset(\"#stoplossDropdownCtn\");\r\n+    hideAndReset(\"#stoploss_value\");\r\n+    hideAndReset(\"#trailingDropdownCtn\");\r\n+    hideAndReset(\"#trailingtrigger_value\");\r\n+    hideAndReset(\"#trailinggap_value\");\r\n+    hideAndReset(\"#trailingpoint_value\");\r\n       upsertJson(\"quantity\", this.value, false)\r\n       if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n         document.getElementById(\"quantityError\").style.display = \"block\";\r\n         document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n"
                },
                {
                    "date": 1756359441378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -659,16 +659,19 @@\n       const switches = document.querySelectorAll(\"#toggleSwitchGroup .form-check-input\");\r\n     switches.forEach(sw => sw.checked = false);\r\n \r\n     // Hide related dropdowns\r\n+    hideAndReset(\"#quantityBox\", \"change\");\r\n+\r\n     hideAndReset(\"#targetDropdownCtn\");\r\n     hideAndReset(\"#target_value\");\r\n     hideAndReset(\"#stoplossDropdownCtn\");\r\n     hideAndReset(\"#stoploss_value\");\r\n     hideAndReset(\"#trailingDropdownCtn\");\r\n     hideAndReset(\"#trailingtrigger_value\");\r\n     hideAndReset(\"#trailinggap_value\");\r\n     hideAndReset(\"#trailingpoint_value\");\r\n+\r\n       upsertJson(\"quantity\", this.value, false)\r\n       if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n         document.getElementById(\"quantityError\").style.display = \"block\";\r\n         document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n"
                },
                {
                    "date": 1756359446680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -661,16 +661,16 @@\n \r\n     // Hide related dropdowns\r\n     hideAndReset(\"#quantityBox\", \"change\");\r\n \r\n-    hideAndReset(\"#targetDropdownCtn\");\r\n-    hideAndReset(\"#target_value\");\r\n-    hideAndReset(\"#stoplossDropdownCtn\");\r\n-    hideAndReset(\"#stoploss_value\");\r\n-    hideAndReset(\"#trailingDropdownCtn\");\r\n-    hideAndReset(\"#trailingtrigger_value\");\r\n-    hideAndReset(\"#trailinggap_value\");\r\n-    hideAndReset(\"#trailingpoint_value\");\r\n+    // hideAndReset(\"#targetDropdownCtn\");\r\n+    // hideAndReset(\"#target_value\");\r\n+    // hideAndReset(\"#stoplossDropdownCtn\");\r\n+    // hideAndReset(\"#stoploss_value\");\r\n+    // hideAndReset(\"#trailingDropdownCtn\");\r\n+    // hideAndReset(\"#trailingtrigger_value\");\r\n+    // hideAndReset(\"#trailinggap_value\");\r\n+    // hideAndReset(\"#trailingpoint_value\");\r\n \r\n       upsertJson(\"quantity\", this.value, false)\r\n       if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n         document.getElementById(\"quantityError\").style.display = \"block\";\r\n"
                },
                {
                    "date": 1756359531722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,9 +219,20 @@\n   {\r\n     trigger: \"quantityBox\",\r\n     event: \"input\",\r\n     targets: [\r\n-      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" }\r\n+      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n+      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n+      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n+      { container: \"#targetDropdownCtn\", field: \"#targetdropdown\" },\r\n+      { container: \"#target_value\", field: \"#targetValbox\" },\r\n+      { container: \"#stoplossDropdownCtn\", field: \"#stoplossdropdown\" },\r\n+      { container: \"#stoploss_value\", field: \"#stoplossValbox\" },\r\n+      { container: \"#trailingDropdownCtn\", field: \"#trailingdropdown\" },\r\n+      { container: \"#trailingtrigger_value\", field: \"#trailtriggerValbox\" },\r\n+      { container: \"#trailinggap_value\", field: \"#trailGapValbox\" },\r\n+      { container: \"#trailingpoint_value\", field: \"#trailPointValbox\" }\r\n+\r\n     ]\r\n   }\r\n ];\r\n \r\n"
                },
                {
                    "date": 1756359603192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -670,9 +670,9 @@\n       const switches = document.querySelectorAll(\"#toggleSwitchGroup .form-check-input\");\r\n     switches.forEach(sw => sw.checked = false);\r\n \r\n     // Hide related dropdowns\r\n-    hideAndReset(\"#quantityBox\", \"change\");\r\n+    hideAndReset(\"#quantityBox\", \"input\");\r\n \r\n     // hideAndReset(\"#targetDropdownCtn\");\r\n     // hideAndReset(\"#target_value\");\r\n     // hideAndReset(\"#stoplossDropdownCtn\");\r\n"
                },
                {
                    "date": 1756359679353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,804 @@\n+var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n+var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n+  return new bootstrap.Tooltip(tooltipTriggerEl)\r\n+\r\n+});\r\n+\r\n+let editor;\r\n+\r\n+require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n+\r\n+require([\"vs/editor/editor.main\"], function () {\r\n+  window.getCodeSnippet = getCodeSnippet;\r\n+\r\n+  const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n+\r\n+  function getCodeSnippet(activeType) {\r\n+    if (activeType === \"strategy_order\") {\r\n+      return `{\r\n+    \"type\": \"strategy_order\",\r\n+    \"exit_on_opposite\": false,\r\n+    \"is_tgt\": false,\r\n+    \"is_sl\": false,\r\n+    \"is_trail_set\": false,\r\n+    \"position_size\": \"{{strategy.position_size}}\",\r\n+    \"transaction_type\": \"{{strategy.order.action}}\"\r\n+}`;\r\n+    }\r\n+    else {\r\n+      return `{\r\n+    \"type\": \"${activeType}\"\r\n+}`;\r\n+    }\r\n+  }\r\n+\r\n+  editor = monaco.editor.create(container, {\r\n+    value: getCodeSnippet(\"strategy_order\"),\r\n+    language: \"json\",\r\n+    theme: \"vs-dark\",\r\n+    automaticLayout: true,\r\n+    suggestOnTriggerCharacters: false,\r\n+    quickSuggestions: false,\r\n+    wordBasedSuggestions: false,\r\n+    parameterHints: { enabled: false },\r\n+    inlineSuggest: { enabled: false },\r\n+    fontSize: 18,\r\n+    minimap: { enabled: false },\r\n+    wordWrap: \"on\",\r\n+    scrollbar: {\r\n+      vertical: \"hidden\",\r\n+      horizontal: \"hidden\",\r\n+      handleMouseWheel: false\r\n+    },\r\n+  });\r\n+\r\n+});\r\n+\r\n+\r\n+\r\n+\r\n+let activeNav = \"strategy\"; // default active\r\n+\r\n+const navLinks = document.querySelectorAll(\" .nav-link\");\r\n+\r\n+\r\n+navLinks.forEach(link => {\r\n+  link.addEventListener(\"click\", (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    // remove active from all\r\n+    navLinks.forEach(l => l.classList.remove(\"active\"));\r\n+\r\n+    // set active on clicked\r\n+    link.classList.add(\"active\");\r\n+    // update global variable\r\n+    activeNav = link.getAttribute(\"data-type\");\r\n+    localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n+    console.log(\"Active Nav:\", activeNav);\r\n+    editor.setValue(getCodeSnippet(activeNav));\r\n+  });\r\n+});\r\n+\r\n+// let originalcode;\r\n+\r\n+// if(activeNavItem===\"strategy_order\"){\r\n+//     originalcode=`{\r\n+//     \"type\": \"strategy_order\",\r\n+//     \"exit_on_opposite\": false,\r\n+//     \"is_tgt\": false,\r\n+//     \"is_sl\": false,\r\n+//     \"is_trail_set\": false,\r\n+//     \"position_size\": \"{{strategy.position_size}}\",\r\n+//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n+\r\n+// }`\r\n+// }\r\n+// else{\r\n+//     originalcode=`{\r\n+//     \"type\": \"${activeNavItem}\"\r\n+// }`\r\n+// }\r\n+\r\n+document.getElementById(\"deleteBtn\").addEventListener(\"click\", function () {\r\n+  let activeNavItem = JSON.parse(localStorage.getItem(\"activenav\"))\r\n+  editor.setValue(getCodeSnippet(activeNavItem));\r\n+\r\n+  // reset dropdown to index 0\r\n+  let scriptType = document.getElementById(\"dropdown1\");\r\n+  if (scriptType) scriptType.selectedIndex = 0;\r\n+})\r\n+\r\n+const copyBtn = document.getElementById(\"copyBtn\");\r\n+\r\n+copyBtn?.addEventListener(\"click\", function () {\r\n+  if (!editor) return;\r\n+\r\n+  // Get the current editor content\r\n+  const code = editor.getValue();\r\n+\r\n+  // Use navigator clipboard API to copy\r\n+  navigator.clipboard.writeText(code)\r\n+    .then(() => {\r\n+      alert(\"Code copied to clipboard!\");\r\n+    })\r\n+    .catch(err => {\r\n+      console.error(\"Failed to copy: \", err);\r\n+    });\r\n+});\r\n+\r\n+function upsertJson(key, value) {\r\n+  if (!editor) return;\r\n+\r\n+  let code = editor.getValue();\r\n+  let obj;\r\n+\r\n+  try {\r\n+    obj = JSON.parse(code);\r\n+  } catch (e) {\r\n+    console.error(\"Invalid JSON in editor:\", e);\r\n+    return;\r\n+  }\r\n+\r\n+  if (value === \"\" || value == null) {\r\n+    delete obj[key]; // remove key if empty\r\n+  } else {\r\n+    let parsedVal;\r\n+\r\n+    if (value === \"true\") parsedVal = true;\r\n+    else if (value === \"false\") parsedVal = false;\r\n+    else if (value === \"null\") parsedVal = null;\r\n+    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n+    else parsedVal = value; // string\r\n+\r\n+    obj[key] = parsedVal;\r\n+  }\r\n+\r\n+  editor.setValue(JSON.stringify(obj, null, 2));\r\n+}\r\n+\r\n+\r\n+//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n+\r\n+\r\n+// helper function if you need it elsewhere\r\n+//   function getActiveNav() {\r\n+//     return activeNav;\r\n+//   }\r\n+\r\n+//   console.log(getActiveNav())\r\n+\r\n+// dependency mapping\r\n+const dependencies = [\r\n+\r\n+  {\r\n+    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n+      { container: '#scriptsearchbox', field: \"#search\" },\r\n+      { container: \"#productType\", field: \"#productDropdown\" },\r\n+      { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n+      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n+      { container: \"#BtnGroup\", field: null },\r\n+      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n+      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n+      { container: \"#targetDropdownCtn\", field: \"#targetdropdown\" },\r\n+      { container: \"#target_value\", field: \"#targetValbox\" },\r\n+      { container: \"#stoplossDropdownCtn\", field: \"#stoplossdropdown\" },\r\n+      { container: \"#stoploss_value\", field: \"#stoplossValbox\" },\r\n+      { container: \"#trailingDropdownCtn\", field: \"#trailingdropdown\" },\r\n+      { container: \"#trailingtrigger_value\", field: \"#trailtriggerValbox\" },\r\n+      { container: \"#trailinggap_value\", field: \"#trailGapValbox\" },\r\n+      { container: \"#trailingpoint_value\", field: \"#trailPointValbox\" }\r\n+\r\n+\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#atmdropdown\",\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#premiumbox\",\r\n+    event: \"input\",\r\n+    targets: [\r\n+      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n+\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#productDropdown\",\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#quantityBox\",\r\n+    event: \"input\",\r\n+    targets: [\r\n+      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n+      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n+      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n+      { container: \"#targetDropdownCtn\", field: \"#targetdropdown\" },\r\n+      { container: \"#target_value\", field: \"#targetValbox\" },\r\n+      { container: \"#stoplossDropdownCtn\", field: \"#stoplossdropdown\" },\r\n+      { container: \"#stoploss_value\", field: \"#stoplossValbox\" },\r\n+      { container: \"#trailingDropdownCtn\", field: \"#trailingdropdown\" },\r\n+      { container: \"#trailingtrigger_value\", field: \"#trailtriggerValbox\" },\r\n+      { container: \"#trailinggap_value\", field: \"#trailGapValbox\" },\r\n+      { container: \"#trailingpoint_value\", field: \"#trailPointValbox\" }\r\n+\r\n+    ]\r\n+  }\r\n+];\r\n+\r\n+function hideAndReset(triggerSelector, eventType = null) {\r\n+  dependencies.forEach(dep => {\r\n+    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+      dep.targets.forEach((t, index) => {\r\n+        const container = document.querySelector(t.container);\r\n+        if (container) {\r\n+          // If it's the *direct child* (first dependent) → only reset value\r\n+          if (index === 0) {\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+              }\r\n+            }\r\n+          } else {\r\n+            // Other deeper dependents → hide + reset\r\n+            container.style.display = \"none\";\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n+                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n+                    field.checked = false;\r\n+                  } else {\r\n+                    field.value = \"\";\r\n+                  }\r\n+                }\r\n+                else if (field.tagName === \"BUTTON\") {\r\n+                  field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n+                }\r\n+              }\r\n+            }\r\n+          }\r\n+        }\r\n+      });\r\n+    }\r\n+  });\r\n+}\r\n+\r\n+function resetEditorFields(keysToReset = []) {\r\n+  try {\r\n+    // Get JSON string from editor\r\n+    let code = editor.getValue();\r\n+    let jsonObj = JSON.parse(code);\r\n+\r\n+    // Reset fields\r\n+    keysToReset.forEach(key => {\r\n+      if (jsonObj.hasOwnProperty(key)) {\r\n+        if (typeof jsonObj[key] === \"boolean\") {\r\n+          jsonObj[key] = false; // reset boolean\r\n+        } else {\r\n+          delete jsonObj[key]; // remove string/number\r\n+        }\r\n+      }\r\n+    });\r\n+\r\n+    // Update editor\r\n+    editor.setValue(JSON.stringify(jsonObj, null, 2));\r\n+  } catch (err) {\r\n+    console.error(\"Invalid JSON in editor:\", err);\r\n+  }\r\n+}\r\n+\r\n+\r\n+//add data fields to make it work\r\n+function syncEditorWithUI() {\r\n+  if (!editor) return;\r\n+\r\n+  const activeNavItem = JSON.parse(localStorage.getItem(\"activenav\")) || \"strategy_order\";\r\n+  let defaultJSON;\r\n+\r\n+  try {\r\n+    defaultJSON = JSON.parse(getCodeSnippet(activeNavItem));\r\n+  } catch {\r\n+    defaultJSON = {};\r\n+  }\r\n+\r\n+  let currentJSON;\r\n+  try {\r\n+    currentJSON = JSON.parse(editor.getValue());\r\n+  } catch {\r\n+    currentJSON = {};\r\n+  }\r\n+\r\n+  const uiFields = document.querySelectorAll(\"[data-field]\");\r\n+\r\n+  uiFields.forEach(field => {\r\n+    const key = field.dataset.field;\r\n+\r\n+    if (key === \"script_type\") return; // always keep main parent\r\n+\r\n+    const container = field.closest(\".field-container\") || field.parentElement;\r\n+    const isVisible = container ? container.style.display !== \"none\" : true;\r\n+\r\n+    if (!isVisible) {\r\n+      // Remove hidden fields from user JSON but keep default if exists\r\n+      if (typeof defaultJSON[key] === \"boolean\") {\r\n+        currentJSON[key] = false;\r\n+      } else {\r\n+        delete currentJSON[key];\r\n+      }\r\n+    } else {\r\n+      // Visible → keep current value if exists, else default\r\n+      if (!(key in currentJSON) && key in defaultJSON) {\r\n+        currentJSON[key] = defaultJSON[key];\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+  // Ensure main parent always exists\r\n+  if (!currentJSON[\"script_type\"]) {\r\n+    currentJSON[\"script_type\"] = defaultJSON[\"type\"] || \"strategy_order\";\r\n+  }\r\n+\r\n+  editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n+}\r\n+\r\n+\r\n+// function hideAndReset(triggerSelector, eventType = null) {\r\n+//   dependencies.forEach(dep => {\r\n+//     // match trigger, ignore eventType if null\r\n+//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+//       dep.targets.forEach(t => {\r\n+//         const container = document.querySelector(t.container);\r\n+//         if (container) {\r\n+//           // hide the container\r\n+//           container.style.display = \"none\";\r\n+\r\n+//           // reset child field if provided\r\n+//           if (t.field) {\r\n+//             const field = container.querySelector(t.field);\r\n+//             if (field) {\r\n+//               if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+//               else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+//             }\r\n+//           }\r\n+//         }\r\n+//       });\r\n+//     }\r\n+//   });\r\n+// }\r\n+\r\n+\r\n+// document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n+//     hideAndReset(\"#atmdropdown\",change)\r\n+// })\r\n+\r\n+let scriptType = document.getElementById(\"dropdown1\");\r\n+dropdown1.addEventListener(\"change\", function () {\r\n+  upsertJson(\"script_type\", this.value, true);\r\n+  upsertJson(\"is_rollover\", \"false\", false);\r\n+  hideAndReset(\"#dropdown1\", \"change\");\r\n+  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" || JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\") {\r\n+    document.getElementById(\"optionSelection\").style.display = \"block\";\r\n+    document.getElementById(\"scriptsearchbox\").style.display = \"none\";\r\n+  }\r\n+  else {\r\n+    document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n+    document.getElementById(\"optionSelection\").style.display = \"none\";\r\n+  }\r\n+})\r\n+\r\n+let searchInput = document.getElementById(\"search\");\r\n+const dropdown = document.getElementById('dropdown');\r\n+let token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n+document.addEventListener('click', (e) => {\r\n+  // Check if click is outside the input and dropdown\r\n+  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n+    dropdown.style.display = 'none';\r\n+  }\r\n+});\r\n+\r\n+// Simple debounce function\r\n+function debounce(func, delay) {\r\n+  let timer;\r\n+  return function (...args) {\r\n+    clearTimeout(timer);\r\n+    timer = setTimeout(() => func.apply(this, args), delay);\r\n+  };\r\n+}\r\n+\r\n+// Fetch API suggestions\r\n+async function fetchSuggestions(query) {\r\n+  if (!query) {\r\n+    dropdown.style.display = 'none';\r\n+    dropdown.innerHTML = '';\r\n+    return;\r\n+  }\r\n+\r\n+  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n+  try {\r\n+    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n+      method: \"POST\",\r\n+      headers: {\r\n+        \"Content-Type\": \"application/json\",\r\n+        \"Authorization\": token\r\n+      },\r\n+      body: JSON.stringify({\r\n+        script: query,\r\n+        type: scriptType\r\n+      })\r\n+    });\r\n+\r\n+    const data = await res.json();\r\n+    const suggestions = data.data;\r\n+\r\n+\r\n+    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n+    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n+\r\n+  }\r\n+  catch (err) {\r\n+    console.error(err);\r\n+  }\r\n+}\r\n+\r\n+// Add click selection\r\n+dropdown?.addEventListener('click', e => {\r\n+  if (e.target.tagName === 'LI') {\r\n+    let selectedText = e.target.textContent;\r\n+    searchInput.value = selectedText;\r\n+    // remove everything after \"(\"\r\n+    if (selectedText.includes(\"(\")) {\r\n+      selectedText = selectedText.split(\"(\")[0];\r\n+    }\r\n+    dropdown.style.display = 'none';\r\n+    upsertJson(\"script\", selectedText, true);\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\") {\r\n+      document.getElementById(\"productType\").style.display = \"block\";\r\n+    }\r\n+  }\r\n+});\r\n+\r\n+searchInput.addEventListener('input', debounce(e => {\r\n+  fetchSuggestions(e.target.value);\r\n+}, 300));\r\n+\r\n+ let dropdownofTarget = document.getElementById(\"targetDropdownCtn\"); \r\n+ const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n+ //onchange toggles the switch, call the function and also shows dropdown\r\n+function targetSwitchReflect() {\r\n+        dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n+        if (dropdownofTarget.style.display === \"block\") {\r\n+          document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n+            upsertJson(\"tgt_type\", this.value, true);\r\n+            document.getElementById(\"target_value\").style.display = \"block\";\r\n+            document.getElementById(\"targetValbox\").value = \"\";\r\n+\r\n+\r\n+            // var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n+            // tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n+            //   return new bootstrap.Tooltip(tooltipTriggerEl)\r\n+\r\n+            // })\r\n+\r\n+            let targetValBox = document.getElementById(\"targetValbox\");\r\n+            let targetErr = document.getElementById(\"targetError\");\r\n+\r\n+\r\n+            targetValBox?.addEventListener(\"input\", function () {\r\n+              upsertJson(\"tgt_value\", this.value, true)\r\n+              let targetValue = this.value.trim();\r\n+\r\n+              if (targetValue < 0) {\r\n+                targetErr.style.display = \"block\";\r\n+              }\r\n+              else {\r\n+                targetErr.style.display = \"none\";\r\n+              }\r\n+\r\n+            });\r\n+          });\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"target_value\").style.display = \"none\";\r\n+          resetEditorFields([\"tgt_type\", \"tgt_value\", \"is_tgt\"])\r\n+          document.getElementById(\"targetValbox\").value=\"\";\r\n+        }\r\n+\r\n+      };\r\n+\r\n+      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n+      function stoplossSwitchReflect() {\r\n+        let dropdownOfStoploss = document.getElementById(\"stoplossDropdownCtn\");\r\n+        dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n+        if (dropdownOfStoploss.style.display === \"block\") {\r\n+          document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\", function () {\r\n+            upsertJson(\"sl_type\", this.value, true)\r\n+\r\n+            document.getElementById(\"stoploss_value\").style.display = \"block\";\r\n+            let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n+            let stoplossErr = document.getElementById(\"stoplossError\");\r\n+\r\n+\r\n+            stoplossValbox?.addEventListener(\"input\", function () {\r\n+              let stoplossValue = this.value.trim();\r\n+              upsertJson(\"sl_value\", stoplossValue, false)\r\n+\r\n+              if (stoplossValue < 0) {\r\n+                stoplossErr.style.display = \"block\";\r\n+                resetEditorFields([\"sl_value\"]);\r\n+              }\r\n+              else {\r\n+                stoplossErr.style.display = \"none\";\r\n+              }\r\n+\r\n+            });\r\n+\r\n+\r\n+          });\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"stoploss_value\").style.display = \"none\";\r\n+          resetEditorFields([\"sl_type\", \"sl_value\", \"is_sl\"]);\r\n+          // let code = editor.getValue();\r\n+\r\n+          // code = code.replace(/,\\s*\"sl_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n+          // code = code.replace(/,\\s*\"sl_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n+          // editor.setValue(code);\r\n+        }\r\n+\r\n+\r\n+      };\r\n+\r\n+      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n+      function trailswitchReflect() {\r\n+        let dropdownOfTrailing = document.getElementById(\"trailingDropdownCtn\");\r\n+        dropdownOfTrailing.style.display = trailingSwitch.checked ? 'block' : 'none';\r\n+\r\n+        if (dropdownOfTrailing.style.display === \"block\") {\r\n+\r\n+          document.getElementById(\"trailingdropdown\")?.addEventListener(\"change\", function () {\r\n+            upsertJson(\"trail_type\", this.value, true)\r\n+\r\n+            document.getElementById(\"trailingtrigger_value\").style.display = \"block\";\r\n+            let trailtriggerValbox = document.getElementById(\"trailtriggerValbox\");\r\n+            let trailTriggerError = document.getElementById(\"trailTriggerError\");\r\n+\r\n+\r\n+            trailtriggerValbox?.addEventListener(\"input\", function () {\r\n+\r\n+              let trailTriggerValue = this.value.trim();\r\n+              //let currentValue = editor.getValue().trim();\r\n+              upsertJson(\"trail_trigger\", trailTriggerValue, false);\r\n+\r\n+              if (trailTriggerValue < 0) {\r\n+                trailTriggerError.style.display = \"block\";\r\n+                document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n+\r\n+              }\r\n+              else {\r\n+                trailTriggerError.style.display = \"none\";\r\n+                document.getElementById(\"trailinggap_value\").style.display = \"block\";\r\n+              }\r\n+\r\n+              if (!trailTriggerValue) {\r\n+                resetEditorFields([\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n+                // currentValue = currentValue.replace(/,?\\s*\"trail_trigger\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n+                // // Also clean up trailing commas before }\r\n+                // currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n+                // editor.setValue(currentValue);\r\n+                // return;\r\n+              }\r\n+\r\n+\r\n+              //trail gap number box show\r\n+              document.getElementById(\"trailGapValbox\")?.addEventListener(\"input\", function () {\r\n+                let trailgapError = document.getElementById(\"trailGapError\");\r\n+                let trailGapValue = this.value.trim();\r\n+                //let currentValue = editor.getValue().trim();\r\n+                upsertJson(\"trail_gap\", trailGapValue, false)\r\n+                if (trailGapValue < 0) {\r\n+                  trailgapError.style.display = \"block\";\r\n+                  document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n+\r\n+                }\r\n+                else {\r\n+                  trailgapError.style.display = \"none\";\r\n+                  document.getElementById(\"trailingpoint_value\").style.display = \"block\";\r\n+                }\r\n+\r\n+                if (!trailGapValue) {\r\n+                  resetEditorFields([\"trail_gap\", \"trail_point\"])\r\n+                }\r\n+              })\r\n+\r\n+              //document.getElementById(\"trailingpoint_value\").style.display=\"block\"\r\n+\r\n+              //trail point input box\r\n+              document.getElementById(\"trailPointValbox\")?.addEventListener(\"input\", function () {\r\n+                let trailpointError = document.getElementById(\"trailPointError\");\r\n+                let trailpointVal = this.value.trim();\r\n+                //let currentValue = editor.getValue().trim();\r\n+                upsertJson(\"trail_point\", trailpointVal, false);\r\n+\r\n+                if (trailpointVal < 0) {\r\n+                  trailpointError.style.display = \"block\";\r\n+\r\n+                }\r\n+                else {\r\n+                  trailpointError.style.display = \"none\";\r\n+                }\r\n+\r\n+                if (!trailpointVal) {\r\n+                  resetEditorFields([\"trail_point\"]);\r\n+                }\r\n+              })\r\n+\r\n+\r\n+\r\n+            });\r\n+          });\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"trailingtrigger_value\").style.display = \"none\";\r\n+          document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n+          document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n+          resetEditorFields([\"is_trail\",\"trail_type\",\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n+        }\r\n+      }\r\n+\r\n+\r\n+document.getElementById(\"productDropdown\").addEventListener(\"change\", function () {\r\n+  upsertJson(\"product\", this.value, true);\r\n+  hideAndReset(\"#productDropdown\", \"change\");\r\n+  resetEditorFields([\"script\", \"product\", \"quantity\", \"is_tgt\",])\r\n+  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"EQ\") {\r\n+    document.getElementById(\"quantityBlock\").style.display = \"block\";\r\n+    document.getElementById(\"quantityBox\").addEventListener(\"input\", function () {\r\n+      const switches = document.querySelectorAll(\"#toggleSwitchGroup .form-check-input\");\r\n+    switches.forEach(sw => sw.checked = false);\r\n+\r\n+    // Hide related dropdowns\r\n+    hideAndReset(\"#quantityBox\", \"input\");\r\n+\r\n+    // hideAndReset(\"#targetDropdownCtn\");\r\n+    // hideAndReset(\"#target_value\");\r\n+    // hideAndReset(\"#stoplossDropdownCtn\");\r\n+    // hideAndReset(\"#stoploss_value\");\r\n+    // hideAndReset(\"#trailingDropdownCtn\");\r\n+    // hideAndReset(\"#trailingtrigger_value\");\r\n+    // hideAndReset(\"#trailinggap_value\");\r\n+    // hideAndReset(\"#trailingpoint_value\");\r\n+\r\n+      upsertJson(\"quantity\", this.value, false)\r\n+      if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n+        document.getElementById(\"quantityError\").style.display = \"block\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"none\";\r\n+      }\r\n+      else {\r\n+        document.getElementById(\"quantityError\").style.display = \"none\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"block\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"block\";\r\n+      }\r\n+      let buy = document.getElementsByClassName(\"buyBtn\")[0];\r\n+      let sell = document.getElementsByClassName(\"sellBtn\")[0];\r\n+\r\n+      buy.addEventListener(\"click\", function () {\r\n+        buy.style.background = \"green\";\r\n+        sell.style.background = \"\";\r\n+        upsertJson(\"transaction_type\", \"BUY\", true)\r\n+      })\r\n+      sell.addEventListener(\"click\", function () {\r\n+        sell.style.background = \"red\";\r\n+        buy.style.background = \"\";\r\n+        upsertJson(\"transaction_type\", \"SELL\", true)\r\n+      })\r\n+      const exitOnPurposeSwitch = document.getElementById('flexSwitchCheck1');\r\n+\r\n+      function toggleExitOnOpposite() {\r\n+        upsertJson(\"exit_on_opposite\", exitOnPurposeSwitch.checked.toString());\r\n+      }\r\n+      exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n+\r\n+      //target switch toggle\r\n+      \r\n+      function toggleIsTgt() {\r\n+        upsertJson(\"is_tgt\", targetSwitch.checked.toString());\r\n+        if (!(targetSwitch.checked)) {\r\n+          document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"targetValbox\").value = \"\";\r\n+        }\r\n+      }\r\n+\r\n+      \r\n+      targetSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTgt();\r\n+        targetSwitchReflect();\r\n+      })\r\n+\r\n+\r\n+\r\n+      //check the val true or false and shows box according\r\n+\r\n+      //stoploss switch\r\n+      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n+      function toggleIsSl() {\r\n+        upsertJson(\"is_sl\", stoplossSwitch.checked.toString())\r\n+        if (!(stoplossSwitch.checked)) {\r\n+          document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"stoploss_value\").value = \"\";\r\n+        }\r\n+\r\n+      }\r\n+\r\n+     \r\n+      stoplossSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsSl();\r\n+        stoplossSwitchReflect();\r\n+\r\n+      })\r\n+\r\n+      //trailing switch\r\n+      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n+\r\n+      function toggleIsTrailSet() {\r\n+        upsertJson(\"is_trail\", trailingSwitch.checked.toString());\r\n+        if (!(trailingSwitch.checked)) {\r\n+          document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n+          document.getElementById(\"trailinggap_value\").value = \"\";\r\n+          document.getElementById(\"trailingpoint_value\").value = \"\";\r\n+        }\r\n+      }\r\n+      \r\n+      trailingSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTrailSet();\r\n+        trailswitchReflect();\r\n+      })\r\n+    });\r\n+\r\n+\r\n+\r\n+    document.querySelectorAll('input[type=\"checkbox\"]').forEach(toggleBtn => {\r\n+      toggleBtn.checked = false; // turn off all switches\r\n+      document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"target_value\").value = \"\";\r\n+      document.getElementById(\"stoploss_value\").value = \"\";\r\n+      document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n+      document.getElementById(\"trailinggap_value\").value = \"\";\r\n+      document.getElementById(\"trailingpoint_value\").value = \"\";\r\n+      targetSwitchReflect();\r\n+      stoplossSwitchReflect();\r\n+      trailswitchReflect();\r\n+\r\n+    });\r\n+\r\n+    //document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n+\r\n+    // Remove related switch values from JSON\r\n+    resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n+\r\n+    \r\n+\r\n+  }\r\n+  else if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"FUT\") {\r\n+\r\n+  }\r\n+});\r\n+\r\n+\r\n"
                },
                {
                    "date": 1756359856502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -654,9 +654,9 @@\n         else {\r\n           document.getElementById(\"trailingtrigger_value\").style.display = \"none\";\r\n           document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n           document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n-          resetEditorFields([\"is_trail\",\"trail_type\",\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n+          resetEditorFields([\"is_trail_set\",\"trail_type\",\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n         }\r\n       }\r\n \r\n \r\n@@ -671,18 +671,11 @@\n     switches.forEach(sw => sw.checked = false);\r\n \r\n     // Hide related dropdowns\r\n     hideAndReset(\"#quantityBox\", \"input\");\r\n+      resetEditorFields([\"\"])\r\n+   \r\n \r\n-    // hideAndReset(\"#targetDropdownCtn\");\r\n-    // hideAndReset(\"#target_value\");\r\n-    // hideAndReset(\"#stoplossDropdownCtn\");\r\n-    // hideAndReset(\"#stoploss_value\");\r\n-    // hideAndReset(\"#trailingDropdownCtn\");\r\n-    // hideAndReset(\"#trailingtrigger_value\");\r\n-    // hideAndReset(\"#trailinggap_value\");\r\n-    // hideAndReset(\"#trailingpoint_value\");\r\n-\r\n       upsertJson(\"quantity\", this.value, false)\r\n       if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n         document.getElementById(\"quantityError\").style.display = \"block\";\r\n         document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n@@ -754,9 +747,9 @@\n       //trailing switch\r\n       const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n \r\n       function toggleIsTrailSet() {\r\n-        upsertJson(\"is_trail\", trailingSwitch.checked.toString());\r\n+        upsertJson(\"is_trail_set\", trailingSwitch.checked.toString());\r\n         if (!(trailingSwitch.checked)) {\r\n           document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n           document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n           document.getElementById(\"trailinggap_value\").value = \"\";\r\n"
                },
                {
                    "date": 1756359904514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -671,9 +671,9 @@\n     switches.forEach(sw => sw.checked = false);\r\n \r\n     // Hide related dropdowns\r\n     hideAndReset(\"#quantityBox\", \"input\");\r\n-      resetEditorFields([\"\"])\r\n+      resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"])\r\n    \r\n \r\n       upsertJson(\"quantity\", this.value, false)\r\n       if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n@@ -794,808 +794,4 @@\n   }\r\n });\r\n \r\n \r\n-var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n-var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n-  return new bootstrap.Tooltip(tooltipTriggerEl)\r\n-\r\n-});\r\n-\r\n-let editor;\r\n-\r\n-require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n-\r\n-require([\"vs/editor/editor.main\"], function () {\r\n-  window.getCodeSnippet = getCodeSnippet;\r\n-\r\n-  const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n-\r\n-  function getCodeSnippet(activeType) {\r\n-    if (activeType === \"strategy_order\") {\r\n-      return `{\r\n-    \"type\": \"strategy_order\",\r\n-    \"exit_on_opposite\": false,\r\n-    \"is_tgt\": false,\r\n-    \"is_sl\": false,\r\n-    \"is_trail_set\": false,\r\n-    \"position_size\": \"{{strategy.position_size}}\",\r\n-    \"transaction_type\": \"{{strategy.order.action}}\"\r\n-}`;\r\n-    }\r\n-    else {\r\n-      return `{\r\n-    \"type\": \"${activeType}\"\r\n-}`;\r\n-    }\r\n-  }\r\n-\r\n-  editor = monaco.editor.create(container, {\r\n-    value: getCodeSnippet(\"strategy_order\"),\r\n-    language: \"json\",\r\n-    theme: \"vs-dark\",\r\n-    automaticLayout: true,\r\n-    suggestOnTriggerCharacters: false,\r\n-    quickSuggestions: false,\r\n-    wordBasedSuggestions: false,\r\n-    parameterHints: { enabled: false },\r\n-    inlineSuggest: { enabled: false },\r\n-    fontSize: 18,\r\n-    minimap: { enabled: false },\r\n-    wordWrap: \"on\",\r\n-    scrollbar: {\r\n-      vertical: \"hidden\",\r\n-      horizontal: \"hidden\",\r\n-      handleMouseWheel: false\r\n-    },\r\n-  });\r\n-\r\n-});\r\n-\r\n-\r\n-\r\n-\r\n-let activeNav = \"strategy\"; // default active\r\n-\r\n-const navLinks = document.querySelectorAll(\" .nav-link\");\r\n-\r\n-\r\n-navLinks.forEach(link => {\r\n-  link.addEventListener(\"click\", (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    // remove active from all\r\n-    navLinks.forEach(l => l.classList.remove(\"active\"));\r\n-\r\n-    // set active on clicked\r\n-    link.classList.add(\"active\");\r\n-    // update global variable\r\n-    activeNav = link.getAttribute(\"data-type\");\r\n-    localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n-    console.log(\"Active Nav:\", activeNav);\r\n-    editor.setValue(getCodeSnippet(activeNav));\r\n-  });\r\n-});\r\n-\r\n-// let originalcode;\r\n-\r\n-// if(activeNavItem===\"strategy_order\"){\r\n-//     originalcode=`{\r\n-//     \"type\": \"strategy_order\",\r\n-//     \"exit_on_opposite\": false,\r\n-//     \"is_tgt\": false,\r\n-//     \"is_sl\": false,\r\n-//     \"is_trail_set\": false,\r\n-//     \"position_size\": \"{{strategy.position_size}}\",\r\n-//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n-\r\n-// }`\r\n-// }\r\n-// else{\r\n-//     originalcode=`{\r\n-//     \"type\": \"${activeNavItem}\"\r\n-// }`\r\n-// }\r\n-\r\n-document.getElementById(\"deleteBtn\").addEventListener(\"click\", function () {\r\n-  let activeNavItem = JSON.parse(localStorage.getItem(\"activenav\"))\r\n-  editor.setValue(getCodeSnippet(activeNavItem));\r\n-\r\n-  // reset dropdown to index 0\r\n-  let scriptType = document.getElementById(\"dropdown1\");\r\n-  if (scriptType) scriptType.selectedIndex = 0;\r\n-})\r\n-\r\n-const copyBtn = document.getElementById(\"copyBtn\");\r\n-\r\n-copyBtn?.addEventListener(\"click\", function () {\r\n-  if (!editor) return;\r\n-\r\n-  // Get the current editor content\r\n-  const code = editor.getValue();\r\n-\r\n-  // Use navigator clipboard API to copy\r\n-  navigator.clipboard.writeText(code)\r\n-    .then(() => {\r\n-      alert(\"Code copied to clipboard!\");\r\n-    })\r\n-    .catch(err => {\r\n-      console.error(\"Failed to copy: \", err);\r\n-    });\r\n-});\r\n-\r\n-function upsertJson(key, value) {\r\n-  if (!editor) return;\r\n-\r\n-  let code = editor.getValue();\r\n-  let obj;\r\n-\r\n-  try {\r\n-    obj = JSON.parse(code);\r\n-  } catch (e) {\r\n-    console.error(\"Invalid JSON in editor:\", e);\r\n-    return;\r\n-  }\r\n-\r\n-  if (value === \"\" || value == null) {\r\n-    delete obj[key]; // remove key if empty\r\n-  } else {\r\n-    let parsedVal;\r\n-\r\n-    if (value === \"true\") parsedVal = true;\r\n-    else if (value === \"false\") parsedVal = false;\r\n-    else if (value === \"null\") parsedVal = null;\r\n-    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n-    else parsedVal = value; // string\r\n-\r\n-    obj[key] = parsedVal;\r\n-  }\r\n-\r\n-  editor.setValue(JSON.stringify(obj, null, 2));\r\n-}\r\n-\r\n-\r\n-//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n-\r\n-\r\n-// helper function if you need it elsewhere\r\n-//   function getActiveNav() {\r\n-//     return activeNav;\r\n-//   }\r\n-\r\n-//   console.log(getActiveNav())\r\n-\r\n-// dependency mapping\r\n-const dependencies = [\r\n-\r\n-  {\r\n-    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n-      { container: '#scriptsearchbox', field: \"#search\" },\r\n-      { container: \"#productType\", field: \"#productDropdown\" },\r\n-      { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n-      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n-      { container: \"#BtnGroup\", field: null },\r\n-      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n-      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n-      { container: \"#targetDropdownCtn\", field: \"#targetdropdown\" },\r\n-      { container: \"#target_value\", field: \"#targetValbox\" },\r\n-      { container: \"#stoplossDropdownCtn\", field: \"#stoplossdropdown\" },\r\n-      { container: \"#stoploss_value\", field: \"#stoplossValbox\" },\r\n-      { container: \"#trailingDropdownCtn\", field: \"#trailingdropdown\" },\r\n-      { container: \"#trailingtrigger_value\", field: \"#trailtriggerValbox\" },\r\n-      { container: \"#trailinggap_value\", field: \"#trailGapValbox\" },\r\n-      { container: \"#trailingpoint_value\", field: \"#trailPointValbox\" }\r\n-\r\n-\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#atmdropdown\",\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#premiumbox\",\r\n-    event: \"input\",\r\n-    targets: [\r\n-      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n-\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"productDropdown\",\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"quantityBox\",\r\n-    event: \"input\",\r\n-    targets: [\r\n-      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n-      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n-      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n-      { container: \"#targetDropdownCtn\", field: \"#targetdropdown\" },\r\n-      { container: \"#target_value\", field: \"#targetValbox\" },\r\n-      { container: \"#stoplossDropdownCtn\", field: \"#stoplossdropdown\" },\r\n-      { container: \"#stoploss_value\", field: \"#stoplossValbox\" },\r\n-      { container: \"#trailingDropdownCtn\", field: \"#trailingdropdown\" },\r\n-      { container: \"#trailingtrigger_value\", field: \"#trailtriggerValbox\" },\r\n-      { container: \"#trailinggap_value\", field: \"#trailGapValbox\" },\r\n-      { container: \"#trailingpoint_value\", field: \"#trailPointValbox\" }\r\n-\r\n-    ]\r\n-  }\r\n-];\r\n-\r\n-function hideAndReset(triggerSelector, eventType = null) {\r\n-  dependencies.forEach(dep => {\r\n-    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-      dep.targets.forEach((t, index) => {\r\n-        const container = document.querySelector(t.container);\r\n-        if (container) {\r\n-          // If it's the *direct child* (first dependent) → only reset value\r\n-          if (index === 0) {\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-              }\r\n-            }\r\n-          } else {\r\n-            // Other deeper dependents → hide + reset\r\n-            container.style.display = \"none\";\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n-                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-                    field.checked = false;\r\n-                  } else {\r\n-                    field.value = \"\";\r\n-                  }\r\n-                }\r\n-                else if (field.tagName === \"BUTTON\") {\r\n-                  field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n-                }\r\n-              }\r\n-            }\r\n-          }\r\n-        }\r\n-      });\r\n-    }\r\n-  });\r\n-}\r\n-\r\n-function resetEditorFields(keysToReset = []) {\r\n-  try {\r\n-    // Get JSON string from editor\r\n-    let code = editor.getValue();\r\n-    let jsonObj = JSON.parse(code);\r\n-\r\n-    // Reset fields\r\n-    keysToReset.forEach(key => {\r\n-      if (jsonObj.hasOwnProperty(key)) {\r\n-        if (typeof jsonObj[key] === \"boolean\") {\r\n-          jsonObj[key] = false; // reset boolean\r\n-        } else {\r\n-          delete jsonObj[key]; // remove string/number\r\n-        }\r\n-      }\r\n-    });\r\n-\r\n-    // Update editor\r\n-    editor.setValue(JSON.stringify(jsonObj, null, 2));\r\n-  } catch (err) {\r\n-    console.error(\"Invalid JSON in editor:\", err);\r\n-  }\r\n-}\r\n-\r\n-\r\n-//add data fields to make it work\r\n-function syncEditorWithUI() {\r\n-  if (!editor) return;\r\n-\r\n-  const activeNavItem = JSON.parse(localStorage.getItem(\"activenav\")) || \"strategy_order\";\r\n-  let defaultJSON;\r\n-\r\n-  try {\r\n-    defaultJSON = JSON.parse(getCodeSnippet(activeNavItem));\r\n-  } catch {\r\n-    defaultJSON = {};\r\n-  }\r\n-\r\n-  let currentJSON;\r\n-  try {\r\n-    currentJSON = JSON.parse(editor.getValue());\r\n-  } catch {\r\n-    currentJSON = {};\r\n-  }\r\n-\r\n-  const uiFields = document.querySelectorAll(\"[data-field]\");\r\n-\r\n-  uiFields.forEach(field => {\r\n-    const key = field.dataset.field;\r\n-\r\n-    if (key === \"script_type\") return; // always keep main parent\r\n-\r\n-    const container = field.closest(\".field-container\") || field.parentElement;\r\n-    const isVisible = container ? container.style.display !== \"none\" : true;\r\n-\r\n-    if (!isVisible) {\r\n-      // Remove hidden fields from user JSON but keep default if exists\r\n-      if (typeof defaultJSON[key] === \"boolean\") {\r\n-        currentJSON[key] = false;\r\n-      } else {\r\n-        delete currentJSON[key];\r\n-      }\r\n-    } else {\r\n-      // Visible → keep current value if exists, else default\r\n-      if (!(key in currentJSON) && key in defaultJSON) {\r\n-        currentJSON[key] = defaultJSON[key];\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-  // Ensure main parent always exists\r\n-  if (!currentJSON[\"script_type\"]) {\r\n-    currentJSON[\"script_type\"] = defaultJSON[\"type\"] || \"strategy_order\";\r\n-  }\r\n-\r\n-  editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n-}\r\n-\r\n-\r\n-// function hideAndReset(triggerSelector, eventType = null) {\r\n-//   dependencies.forEach(dep => {\r\n-//     // match trigger, ignore eventType if null\r\n-//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-//       dep.targets.forEach(t => {\r\n-//         const container = document.querySelector(t.container);\r\n-//         if (container) {\r\n-//           // hide the container\r\n-//           container.style.display = \"none\";\r\n-\r\n-//           // reset child field if provided\r\n-//           if (t.field) {\r\n-//             const field = container.querySelector(t.field);\r\n-//             if (field) {\r\n-//               if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-//               else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-//             }\r\n-//           }\r\n-//         }\r\n-//       });\r\n-//     }\r\n-//   });\r\n-// }\r\n-\r\n-\r\n-// document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n-//     hideAndReset(\"#atmdropdown\",change)\r\n-// })\r\n-\r\n-let scriptType = document.getElementById(\"dropdown1\");\r\n-dropdown1.addEventListener(\"change\", function () {\r\n-  upsertJson(\"script_type\", this.value, true);\r\n-  upsertJson(\"is_rollover\", \"false\", false);\r\n-  hideAndReset(\"#dropdown1\", \"change\");\r\n-  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" || JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\") {\r\n-    document.getElementById(\"optionSelection\").style.display = \"block\";\r\n-    document.getElementById(\"scriptsearchbox\").style.display = \"none\";\r\n-  }\r\n-  else {\r\n-    document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n-    document.getElementById(\"optionSelection\").style.display = \"none\";\r\n-  }\r\n-})\r\n-\r\n-let searchInput = document.getElementById(\"search\");\r\n-const dropdown = document.getElementById('dropdown');\r\n-let token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n-document.addEventListener('click', (e) => {\r\n-  // Check if click is outside the input and dropdown\r\n-  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n-    dropdown.style.display = 'none';\r\n-  }\r\n-});\r\n-\r\n-// Simple debounce function\r\n-function debounce(func, delay) {\r\n-  let timer;\r\n-  return function (...args) {\r\n-    clearTimeout(timer);\r\n-    timer = setTimeout(() => func.apply(this, args), delay);\r\n-  };\r\n-}\r\n-\r\n-// Fetch API suggestions\r\n-async function fetchSuggestions(query) {\r\n-  if (!query) {\r\n-    dropdown.style.display = 'none';\r\n-    dropdown.innerHTML = '';\r\n-    return;\r\n-  }\r\n-\r\n-  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n-  try {\r\n-    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n-      method: \"POST\",\r\n-      headers: {\r\n-        \"Content-Type\": \"application/json\",\r\n-        \"Authorization\": token\r\n-      },\r\n-      body: JSON.stringify({\r\n-        script: query,\r\n-        type: scriptType\r\n-      })\r\n-    });\r\n-\r\n-    const data = await res.json();\r\n-    const suggestions = data.data;\r\n-\r\n-\r\n-    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n-    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n-\r\n-  }\r\n-  catch (err) {\r\n-    console.error(err);\r\n-  }\r\n-}\r\n-\r\n-// Add click selection\r\n-dropdown?.addEventListener('click', e => {\r\n-  if (e.target.tagName === 'LI') {\r\n-    let selectedText = e.target.textContent;\r\n-    searchInput.value = selectedText;\r\n-    // remove everything after \"(\"\r\n-    if (selectedText.includes(\"(\")) {\r\n-      selectedText = selectedText.split(\"(\")[0];\r\n-    }\r\n-    dropdown.style.display = 'none';\r\n-    upsertJson(\"script\", selectedText, true);\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\") {\r\n-      document.getElementById(\"productType\").style.display = \"block\";\r\n-    }\r\n-  }\r\n-});\r\n-\r\n-searchInput.addEventListener('input', debounce(e => {\r\n-  fetchSuggestions(e.target.value);\r\n-}, 300));\r\n-\r\n- let dropdownofTarget = document.getElementById(\"targetDropdownCtn\"); \r\n- const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n- //onchange toggles the switch, call the function and also shows dropdown\r\n-function targetSwitchReflect() {\r\n-        dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n-        if (dropdownofTarget.style.display === \"block\") {\r\n-          document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n-            upsertJson(\"tgt_type\", this.value, true);\r\n-            document.getElementById(\"target_value\").style.display = \"block\";\r\n-            document.getElementById(\"targetValbox\").value = \"\";\r\n-\r\n-\r\n-            // var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n-            // tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n-            //   return new bootstrap.Tooltip(tooltipTriggerEl)\r\n-\r\n-            // })\r\n-\r\n-            let targetValBox = document.getElementById(\"targetValbox\");\r\n-            let targetErr = document.getElementById(\"targetError\");\r\n-\r\n-\r\n-            targetValBox?.addEventListener(\"input\", function () {\r\n-              upsertJson(\"tgt_value\", this.value, true)\r\n-              let targetValue = this.value.trim();\r\n-\r\n-              if (targetValue < 0) {\r\n-                targetErr.style.display = \"block\";\r\n-              }\r\n-              else {\r\n-                targetErr.style.display = \"none\";\r\n-              }\r\n-\r\n-            });\r\n-          });\r\n-        }\r\n-        else {\r\n-          document.getElementById(\"target_value\").style.display = \"none\";\r\n-          resetEditorFields([\"tgt_type\", \"tgt_value\", \"is_tgt\"])\r\n-          document.getElementById(\"targetValbox\").value=\"\";\r\n-        }\r\n-\r\n-      };\r\n-\r\n-      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n-      function stoplossSwitchReflect() {\r\n-        let dropdownOfStoploss = document.getElementById(\"stoplossDropdownCtn\");\r\n-        dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n-        if (dropdownOfStoploss.style.display === \"block\") {\r\n-          document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\", function () {\r\n-            upsertJson(\"sl_type\", this.value, true)\r\n-\r\n-            document.getElementById(\"stoploss_value\").style.display = \"block\";\r\n-            let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n-            let stoplossErr = document.getElementById(\"stoplossError\");\r\n-\r\n-\r\n-            stoplossValbox?.addEventListener(\"input\", function () {\r\n-              let stoplossValue = this.value.trim();\r\n-              upsertJson(\"sl_value\", stoplossValue, false)\r\n-\r\n-              if (stoplossValue < 0) {\r\n-                stoplossErr.style.display = \"block\";\r\n-                resetEditorFields([\"sl_value\"]);\r\n-              }\r\n-              else {\r\n-                stoplossErr.style.display = \"none\";\r\n-              }\r\n-\r\n-            });\r\n-\r\n-\r\n-          });\r\n-        }\r\n-        else {\r\n-          document.getElementById(\"stoploss_value\").style.display = \"none\";\r\n-          resetEditorFields([\"sl_type\", \"sl_value\", \"is_sl\"]);\r\n-          // let code = editor.getValue();\r\n-\r\n-          // code = code.replace(/,\\s*\"sl_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n-          // code = code.replace(/,\\s*\"sl_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n-          // editor.setValue(code);\r\n-        }\r\n-\r\n-\r\n-      };\r\n-\r\n-      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n-      function trailswitchReflect() {\r\n-        let dropdownOfTrailing = document.getElementById(\"trailingDropdownCtn\");\r\n-        dropdownOfTrailing.style.display = trailingSwitch.checked ? 'block' : 'none';\r\n-\r\n-        if (dropdownOfTrailing.style.display === \"block\") {\r\n-\r\n-          document.getElementById(\"trailingdropdown\")?.addEventListener(\"change\", function () {\r\n-            upsertJson(\"trail_type\", this.value, true)\r\n-\r\n-            document.getElementById(\"trailingtrigger_value\").style.display = \"block\";\r\n-            let trailtriggerValbox = document.getElementById(\"trailtriggerValbox\");\r\n-            let trailTriggerError = document.getElementById(\"trailTriggerError\");\r\n-\r\n-\r\n-            trailtriggerValbox?.addEventListener(\"input\", function () {\r\n-\r\n-              let trailTriggerValue = this.value.trim();\r\n-              //let currentValue = editor.getValue().trim();\r\n-              upsertJson(\"trail_trigger\", trailTriggerValue, false);\r\n-\r\n-              if (trailTriggerValue < 0) {\r\n-                trailTriggerError.style.display = \"block\";\r\n-                document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n-\r\n-              }\r\n-              else {\r\n-                trailTriggerError.style.display = \"none\";\r\n-                document.getElementById(\"trailinggap_value\").style.display = \"block\";\r\n-              }\r\n-\r\n-              if (!trailTriggerValue) {\r\n-                resetEditorFields([\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n-                // currentValue = currentValue.replace(/,?\\s*\"trail_trigger\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n-                // // Also clean up trailing commas before }\r\n-                // currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n-                // editor.setValue(currentValue);\r\n-                // return;\r\n-              }\r\n-\r\n-\r\n-              //trail gap number box show\r\n-              document.getElementById(\"trailGapValbox\")?.addEventListener(\"input\", function () {\r\n-                let trailgapError = document.getElementById(\"trailGapError\");\r\n-                let trailGapValue = this.value.trim();\r\n-                //let currentValue = editor.getValue().trim();\r\n-                upsertJson(\"trail_gap\", trailGapValue, false)\r\n-                if (trailGapValue < 0) {\r\n-                  trailgapError.style.display = \"block\";\r\n-                  document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n-\r\n-                }\r\n-                else {\r\n-                  trailgapError.style.display = \"none\";\r\n-                  document.getElementById(\"trailingpoint_value\").style.display = \"block\";\r\n-                }\r\n-\r\n-                if (!trailGapValue) {\r\n-                  resetEditorFields([\"trail_gap\", \"trail_point\"])\r\n-                }\r\n-              })\r\n-\r\n-              //document.getElementById(\"trailingpoint_value\").style.display=\"block\"\r\n-\r\n-              //trail point input box\r\n-              document.getElementById(\"trailPointValbox\")?.addEventListener(\"input\", function () {\r\n-                let trailpointError = document.getElementById(\"trailPointError\");\r\n-                let trailpointVal = this.value.trim();\r\n-                //let currentValue = editor.getValue().trim();\r\n-                upsertJson(\"trail_point\", trailpointVal, false);\r\n-\r\n-                if (trailpointVal < 0) {\r\n-                  trailpointError.style.display = \"block\";\r\n-\r\n-                }\r\n-                else {\r\n-                  trailpointError.style.display = \"none\";\r\n-                }\r\n-\r\n-                if (!trailpointVal) {\r\n-                  resetEditorFields([\"trail_point\"]);\r\n-                }\r\n-              })\r\n-\r\n-\r\n-\r\n-            });\r\n-          });\r\n-        }\r\n-        else {\r\n-          document.getElementById(\"trailingtrigger_value\").style.display = \"none\";\r\n-          document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n-          document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n-          resetEditorFields([\"is_trail\",\"trail_type\",\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n-        }\r\n-      }\r\n-\r\n-\r\n-document.getElementById(\"productDropdown\").addEventListener(\"change\", function () {\r\n-  upsertJson(\"product\", this.value, true);\r\n-  hideAndReset(\"#productDropdown\", \"change\");\r\n-  resetEditorFields([\"script\", \"product\", \"quantity\", \"is_tgt\",])\r\n-  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"EQ\") {\r\n-    document.getElementById(\"quantityBlock\").style.display = \"block\";\r\n-    document.getElementById(\"quantityBox\").addEventListener(\"input\", function () {\r\n-      const switches = document.querySelectorAll(\"#toggleSwitchGroup .form-check-input\");\r\n-    switches.forEach(sw => sw.checked = false);\r\n-\r\n-    // Hide related dropdowns\r\n-    hideAndReset(\"#quantityBox\", \"input\");\r\n-\r\n-    // hideAndReset(\"#targetDropdownCtn\");\r\n-    // hideAndReset(\"#target_value\");\r\n-    // hideAndReset(\"#stoplossDropdownCtn\");\r\n-    // hideAndReset(\"#stoploss_value\");\r\n-    // hideAndReset(\"#trailingDropdownCtn\");\r\n-    // hideAndReset(\"#trailingtrigger_value\");\r\n-    // hideAndReset(\"#trailinggap_value\");\r\n-    // hideAndReset(\"#trailingpoint_value\");\r\n-\r\n-      upsertJson(\"quantity\", this.value, false)\r\n-      if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n-        document.getElementById(\"quantityError\").style.display = \"block\";\r\n-        document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n-        document.getElementById(\"toggleSwitchGroup\").style.display = \"none\";\r\n-      }\r\n-      else {\r\n-        document.getElementById(\"quantityError\").style.display = \"none\";\r\n-        document.getElementById(\"BtnGroup\").style.display = \"block\";\r\n-        document.getElementById(\"toggleSwitchGroup\").style.display = \"block\";\r\n-      }\r\n-      let buy = document.getElementsByClassName(\"buyBtn\")[0];\r\n-      let sell = document.getElementsByClassName(\"sellBtn\")[0];\r\n-\r\n-      buy.addEventListener(\"click\", function () {\r\n-        buy.style.background = \"green\";\r\n-        sell.style.background = \"\";\r\n-        upsertJson(\"transaction_type\", \"BUY\", true)\r\n-      })\r\n-      sell.addEventListener(\"click\", function () {\r\n-        sell.style.background = \"red\";\r\n-        buy.style.background = \"\";\r\n-        upsertJson(\"transaction_type\", \"SELL\", true)\r\n-      })\r\n-      const exitOnPurposeSwitch = document.getElementById('flexSwitchCheck1');\r\n-\r\n-      function toggleExitOnOpposite() {\r\n-        upsertJson(\"exit_on_opposite\", exitOnPurposeSwitch.checked.toString());\r\n-      }\r\n-      exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n-\r\n-      //target switch toggle\r\n-      \r\n-      function toggleIsTgt() {\r\n-        upsertJson(\"is_tgt\", targetSwitch.checked.toString());\r\n-        if (!(targetSwitch.checked)) {\r\n-          document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n-          document.getElementById(\"targetValbox\").value = \"\";\r\n-        }\r\n-      }\r\n-\r\n-      \r\n-      targetSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsTgt();\r\n-        targetSwitchReflect();\r\n-      })\r\n-\r\n-\r\n-\r\n-      //check the val true or false and shows box according\r\n-\r\n-      //stoploss switch\r\n-      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n-      function toggleIsSl() {\r\n-        upsertJson(\"is_sl\", stoplossSwitch.checked.toString())\r\n-        if (!(stoplossSwitch.checked)) {\r\n-          document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n-          document.getElementById(\"stoploss_value\").value = \"\";\r\n-        }\r\n-\r\n-      }\r\n-\r\n-     \r\n-      stoplossSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsSl();\r\n-        stoplossSwitchReflect();\r\n-\r\n-      })\r\n-\r\n-      //trailing switch\r\n-      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n-\r\n-      function toggleIsTrailSet() {\r\n-        upsertJson(\"is_trail\", trailingSwitch.checked.toString());\r\n-        if (!(trailingSwitch.checked)) {\r\n-          document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n-          document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n-          document.getElementById(\"trailinggap_value\").value = \"\";\r\n-          document.getElementById(\"trailingpoint_value\").value = \"\";\r\n-        }\r\n-      }\r\n-      \r\n-      trailingSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsTrailSet();\r\n-        trailswitchReflect();\r\n-      })\r\n-    });\r\n-\r\n-\r\n-\r\n-    document.querySelectorAll('input[type=\"checkbox\"]').forEach(toggleBtn => {\r\n-      toggleBtn.checked = false; // turn off all switches\r\n-      document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n-      document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n-      document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n-      document.getElementById(\"target_value\").value = \"\";\r\n-      document.getElementById(\"stoploss_value\").value = \"\";\r\n-      document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n-      document.getElementById(\"trailinggap_value\").value = \"\";\r\n-      document.getElementById(\"trailingpoint_value\").value = \"\";\r\n-      targetSwitchReflect();\r\n-      stoplossSwitchReflect();\r\n-      trailswitchReflect();\r\n-\r\n-    });\r\n-\r\n-    //document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n-\r\n-    // Remove related switch values from JSON\r\n-    resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n-\r\n-    \r\n-\r\n-  }\r\n-  else if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"FUT\") {\r\n-\r\n-  }\r\n-});\r\n-\r\n-\r\n"
                },
                {
                    "date": 1756359965202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -354,38 +354,8 @@\n \r\n   editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n }\r\n \r\n-\r\n-// function hideAndReset(triggerSelector, eventType = null) {\r\n-//   dependencies.forEach(dep => {\r\n-//     // match trigger, ignore eventType if null\r\n-//     if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-//       dep.targets.forEach(t => {\r\n-//         const container = document.querySelector(t.container);\r\n-//         if (container) {\r\n-//           // hide the container\r\n-//           container.style.display = \"none\";\r\n-\r\n-//           // reset child field if provided\r\n-//           if (t.field) {\r\n-//             const field = container.querySelector(t.field);\r\n-//             if (field) {\r\n-//               if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-//               else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-//             }\r\n-//           }\r\n-//         }\r\n-//       });\r\n-//     }\r\n-//   });\r\n-// }\r\n-\r\n-\r\n-// document.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n-//     hideAndReset(\"#atmdropdown\",change)\r\n-// })\r\n-\r\n let scriptType = document.getElementById(\"dropdown1\");\r\n dropdown1.addEventListener(\"change\", function () {\r\n   upsertJson(\"script_type\", this.value, true);\r\n   upsertJson(\"is_rollover\", \"false\", false);\r\n@@ -484,16 +454,8 @@\n           document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n             upsertJson(\"tgt_type\", this.value, true);\r\n             document.getElementById(\"target_value\").style.display = \"block\";\r\n             document.getElementById(\"targetValbox\").value = \"\";\r\n-\r\n-\r\n-            // var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n-            // tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n-            //   return new bootstrap.Tooltip(tooltipTriggerEl)\r\n-\r\n-            // })\r\n-\r\n             let targetValBox = document.getElementById(\"targetValbox\");\r\n             let targetErr = document.getElementById(\"targetError\");\r\n \r\n \r\n"
                },
                {
                    "date": 1756359974920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -513,13 +513,8 @@\n         }\r\n         else {\r\n           document.getElementById(\"stoploss_value\").style.display = \"none\";\r\n           resetEditorFields([\"sl_type\", \"sl_value\", \"is_sl\"]);\r\n-          // let code = editor.getValue();\r\n-\r\n-          // code = code.replace(/,\\s*\"sl_type\"\\s*:\\s*\".*?\"/g, \"\");\r\n-          // code = code.replace(/,\\s*\"sl_value\"\\s*:\\s*[^,}]+/g, \"\");\r\n-          // editor.setValue(code);\r\n         }\r\n \r\n \r\n       };\r\n"
                },
                {
                    "date": 1756359985479,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -551,13 +551,8 @@\n               }\r\n \r\n               if (!trailTriggerValue) {\r\n                 resetEditorFields([\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n-                // currentValue = currentValue.replace(/,?\\s*\"trail_trigger\"\\s*:\\s*\\d+\\s*/g, \"\");\r\n-                // // Also clean up trailing commas before }\r\n-                // currentValue = currentValue.replace(/,\\s*}/, \"\\n}\");\r\n-                // editor.setValue(currentValue);\r\n-                // return;\r\n               }\r\n \r\n \r\n               //trail gap number box show\r\n"
                },
                {
                    "date": 1756360182184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -437,8 +437,11 @@\n     upsertJson(\"script\", selectedText, true);\r\n     if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\") {\r\n       document.getElementById(\"productType\").style.display = \"block\";\r\n     }\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"FUT\") {\r\n+      document.getElementById(\"productType\").style.display = \"block\";\r\n+    }\r\n   }\r\n });\r\n \r\n searchInput.addEventListener('input', debounce(e => {\r\n"
                },
                {
                    "date": 1756360191638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -434,12 +434,12 @@\n       selectedText = selectedText.split(\"(\")[0];\r\n     }\r\n     dropdown.style.display = 'none';\r\n     upsertJson(\"script\", selectedText, true);\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"EQ\") {\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"EQ\") {\r\n       document.getElementById(\"productType\").style.display = \"block\";\r\n     }\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"FUT\") {\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"FUT\") {\r\n       document.getElementById(\"productType\").style.display = \"block\";\r\n     }\r\n   }\r\n });\r\n"
                },
                {
                    "date": 1756360236750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -438,9 +438,9 @@\n     if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"EQ\") {\r\n       document.getElementById(\"productType\").style.display = \"block\";\r\n     }\r\n     if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"FUT\") {\r\n-      document.getElementById(\"productType\").style.display = \"block\";\r\n+      document.getElementById(\"expiryGap\").style.display = \"block\";\r\n     }\r\n   }\r\n });\r\n \r\n"
                },
                {
                    "date": 1756360277654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -743,10 +743,7 @@\n \r\n     \r\n \r\n   }\r\n-  else if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"FUT\") {\r\n-\r\n-  }\r\n });\r\n \r\n \r\n"
                },
                {
                    "date": 1756360338270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -745,5 +745,11 @@\n \r\n   }\r\n });\r\n \r\n+document.getElementById(\"expiryGap\").addEventListener(\"input\",function(){\r\n+   if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"FUT\") {\r\n \r\n+  }\r\n+})\r\n+\r\n+\r\n"
                },
                {
                    "date": 1756360400913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -439,8 +439,11 @@\n       document.getElementById(\"productType\").style.display = \"block\";\r\n     }\r\n     if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"FUT\") {\r\n       document.getElementById(\"expiryGap\").style.display = \"block\";\r\n+      document.getElementById(\"timelineDropdown\").value = \"monthly\";\r\n+      document.getElementById(\"timelineDropdown\").disabled = true;\r\n+\r\n     }\r\n   }\r\n });\r\n \r\n@@ -748,8 +751,9 @@\n \r\n document.getElementById(\"expiryGap\").addEventListener(\"input\",function(){\r\n    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"FUT\") {\r\n \r\n+\r\n   }\r\n })\r\n \r\n \r\n"
                },
                {
                    "date": 1756360430638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -439,11 +439,8 @@\n       document.getElementById(\"productType\").style.display = \"block\";\r\n     }\r\n     if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"FUT\") {\r\n       document.getElementById(\"expiryGap\").style.display = \"block\";\r\n-      document.getElementById(\"timelineDropdown\").value = \"monthly\";\r\n-      document.getElementById(\"timelineDropdown\").disabled = true;\r\n-\r\n     }\r\n   }\r\n });\r\n \r\n"
                },
                {
                    "date": 1756360482527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -747,10 +747,11 @@\n });\r\n \r\n document.getElementById(\"expiryGap\").addEventListener(\"input\",function(){\r\n    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"FUT\") {\r\n+    document.getElementById(\"productType\").style.display=\"block\";\r\n+    \r\n \r\n-\r\n   }\r\n })\r\n \r\n \r\n"
                },
                {
                    "date": 1756360552070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -745,13 +745,23 @@\n \r\n   }\r\n });\r\n \r\n-document.getElementById(\"expiryGap\").addEventListener(\"input\",function(){\r\n+document.getElementById(\"futExpiryGap\").addEventListener(\"input\",function(){\r\n    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"FUT\") {\r\n     document.getElementById(\"productType\").style.display=\"block\";\r\n-    \r\n+    if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n+        document.getElementById(\"quantityError\").style.display = \"block\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"none\";\r\n+      }\r\n+      else {\r\n+        document.getElementById(\"quantityError\").style.display = \"none\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"block\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"block\";\r\n+      }\r\n \r\n+\r\n   }\r\n })\r\n \r\n \r\n"
                },
                {
                    "date": 1756360591961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -748,12 +748,13 @@\n \r\n document.getElementById(\"futExpiryGap\").addEventListener(\"input\",function(){\r\n    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"FUT\") {\r\n     document.getElementById(\"productType\").style.display=\"block\";\r\n-    if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n-        document.getElementById(\"quantityError\").style.display = \"block\";\r\n-        document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n-        document.getElementById(\"toggleSwitchGroup\").style.display = \"none\";\r\n+    if (document.getElementById(\"futExpiryGap\")?.value <= 0) {\r\n+        document.getElementById(\"futExpiryGapError\").style.display = \"block\";\r\n+        document.getElementById(\"timelineDropdown\").value = \"monthly\";\r\n+        document.getElementById(\"timelineDropdown\").disabled = true;\r\n+\r\n       }\r\n       else {\r\n         document.getElementById(\"quantityError\").style.display = \"none\";\r\n         document.getElementById(\"BtnGroup\").style.display = \"block\";\r\n"
                },
                {
                    "date": 1756360623103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -752,8 +752,9 @@\n     if (document.getElementById(\"futExpiryGap\")?.value <= 0) {\r\n         document.getElementById(\"futExpiryGapError\").style.display = \"block\";\r\n         document.getElementById(\"timelineDropdown\").value = \"monthly\";\r\n         document.getElementById(\"timelineDropdown\").disabled = true;\r\n+        upsertJson(\"expiry_type\",monthly,true)\r\n \r\n       }\r\n       else {\r\n         document.getElementById(\"quantityError\").style.display = \"none\";\r\n"
                },
                {
                    "date": 1756360644669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -752,15 +752,13 @@\n     if (document.getElementById(\"futExpiryGap\")?.value <= 0) {\r\n         document.getElementById(\"futExpiryGapError\").style.display = \"block\";\r\n         document.getElementById(\"timelineDropdown\").value = \"monthly\";\r\n         document.getElementById(\"timelineDropdown\").disabled = true;\r\n-        upsertJson(\"expiry_type\",monthly,true)\r\n+        upsertJson(\"expiry_type\",monthly,true);\r\n \r\n       }\r\n       else {\r\n-        document.getElementById(\"quantityError\").style.display = \"none\";\r\n-        document.getElementById(\"BtnGroup\").style.display = \"block\";\r\n-        document.getElementById(\"toggleSwitchGroup\").style.display = \"block\";\r\n+        document.getElementById(\"futExpiryGapError\").style.display = \"none\";\r\n       }\r\n \r\n \r\n   }\r\n"
                },
                {
                    "date": 1756360699817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -746,8 +746,9 @@\n   }\r\n });\r\n \r\n document.getElementById(\"futExpiryGap\").addEventListener(\"input\",function(){\r\n+  upsertJson(\"expiry_gap\",this.value,false)\r\n    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"FUT\") {\r\n     document.getElementById(\"productType\").style.display=\"block\";\r\n     if (document.getElementById(\"futExpiryGap\")?.value <= 0) {\r\n         document.getElementById(\"futExpiryGapError\").style.display = \"block\";\r\n"
                },
                {
                    "date": 1756360783461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -759,8 +759,11 @@\n       }\r\n       else {\r\n         document.getElementById(\"futExpiryGapError\").style.display = \"none\";\r\n       }\r\n+    document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n+      upsertJson(\"product\",this.value,true)\r\n+    })  \r\n \r\n \r\n   }\r\n })\r\n"
                },
                {
                    "date": 1756360913861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -449,9 +449,19 @@\n }, 300));\r\n \r\n  let dropdownofTarget = document.getElementById(\"targetDropdownCtn\"); \r\n  const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n- //onchange toggles the switch, call the function and also shows dropdown\r\n+ //onchange toggles the switch, call the function and also shows \r\n+\r\n+      function toggleIsTrailSet() {\r\n+        upsertJson(\"is_trail_set\", trailingSwitch.checked.toString());\r\n+        if (!(trailingSwitch.checked)) {\r\n+          document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n+          document.getElementById(\"trailinggap_value\").value = \"\";\r\n+          document.getElementById(\"trailingpoint_value\").value = \"\";\r\n+        }\r\n+      }\r\n function targetSwitchReflect() {\r\n         dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n         if (dropdownofTarget.style.display === \"block\") {\r\n           document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n@@ -760,9 +770,10 @@\n       else {\r\n         document.getElementById(\"futExpiryGapError\").style.display = \"none\";\r\n       }\r\n     document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n-      upsertJson(\"product\",this.value,true)\r\n+      upsertJson(\"product\",this.value,true);\r\n+\r\n     })  \r\n \r\n \r\n   }\r\n"
                },
                {
                    "date": 1756360933867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -449,9 +449,9 @@\n }, 300));\r\n \r\n  let dropdownofTarget = document.getElementById(\"targetDropdownCtn\"); \r\n  const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n- //onchange toggles the switch, call the function and also shows \r\n+ //onchange toggles the switch, call the function and also shows dropdown\r\n \r\n       function toggleIsTrailSet() {\r\n         upsertJson(\"is_trail_set\", trailingSwitch.checked.toString());\r\n         if (!(trailingSwitch.checked)) {\r\n@@ -532,8 +532,18 @@\n \r\n       };\r\n \r\n       const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n+\r\n+      function toggleIsTrailSet() {\r\n+        upsertJson(\"is_trail_set\", trailingSwitch.checked.toString());\r\n+        if (!(trailingSwitch.checked)) {\r\n+          document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n+          document.getElementById(\"trailinggap_value\").value = \"\";\r\n+          document.getElementById(\"trailingpoint_value\").value = \"\";\r\n+        }\r\n+      }\r\n       function trailswitchReflect() {\r\n         let dropdownOfTrailing = document.getElementById(\"trailingDropdownCtn\");\r\n         dropdownOfTrailing.style.display = trailingSwitch.checked ? 'block' : 'none';\r\n \r\n"
                },
                {
                    "date": 1756360951800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -494,8 +494,16 @@\n \r\n       };\r\n \r\n       const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n+      function toggleIsSl() {\r\n+        upsertJson(\"is_sl\", stoplossSwitch.checked.toString())\r\n+        if (!(stoplossSwitch.checked)) {\r\n+          document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"stoploss_value\").value = \"\";\r\n+        }\r\n+\r\n+      }\r\n       function stoplossSwitchReflect() {\r\n         let dropdownOfStoploss = document.getElementById(\"stoplossDropdownCtn\");\r\n         dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n         if (dropdownOfStoploss.style.display === \"block\") {\r\n"
                },
                {
                    "date": 1756360982709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -451,15 +451,13 @@\n  let dropdownofTarget = document.getElementById(\"targetDropdownCtn\"); \r\n  const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n  //onchange toggles the switch, call the function and also shows dropdown\r\n \r\n-      function toggleIsTrailSet() {\r\n-        upsertJson(\"is_trail_set\", trailingSwitch.checked.toString());\r\n-        if (!(trailingSwitch.checked)) {\r\n-          document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n-          document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n-          document.getElementById(\"trailinggap_value\").value = \"\";\r\n-          document.getElementById(\"trailingpoint_value\").value = \"\";\r\n+      function toggleIsTgt() {\r\n+        upsertJson(\"is_tgt\", targetSwitch.checked.toString());\r\n+        if (!(targetSwitch.checked)) {\r\n+          document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"targetValbox\").value = \"\";\r\n         }\r\n       }\r\n function targetSwitchReflect() {\r\n         dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n"
                },
                {
                    "date": 1756361086361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -685,20 +685,9 @@\n       function toggleExitOnOpposite() {\r\n         upsertJson(\"exit_on_opposite\", exitOnPurposeSwitch.checked.toString());\r\n       }\r\n       exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n-\r\n-      //target switch toggle\r\n-      \r\n-      function toggleIsTgt() {\r\n-        upsertJson(\"is_tgt\", targetSwitch.checked.toString());\r\n-        if (!(targetSwitch.checked)) {\r\n-          document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n-          document.getElementById(\"targetValbox\").value = \"\";\r\n-        }\r\n-      }\r\n-\r\n-      \r\n+      const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n       targetSwitch.addEventListener(\"change\", function () {\r\n         toggleIsTgt();\r\n         targetSwitchReflect();\r\n       })\r\n@@ -708,36 +697,16 @@\n       //check the val true or false and shows box according\r\n \r\n       //stoploss switch\r\n       const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n-      function toggleIsSl() {\r\n-        upsertJson(\"is_sl\", stoplossSwitch.checked.toString())\r\n-        if (!(stoplossSwitch.checked)) {\r\n-          document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n-          document.getElementById(\"stoploss_value\").value = \"\";\r\n-        }\r\n-\r\n-      }\r\n-\r\n-     \r\n       stoplossSwitch.addEventListener(\"change\", function () {\r\n         toggleIsSl();\r\n         stoplossSwitchReflect();\r\n \r\n       })\r\n \r\n       //trailing switch\r\n       const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n-\r\n-      function toggleIsTrailSet() {\r\n-        upsertJson(\"is_trail_set\", trailingSwitch.checked.toString());\r\n-        if (!(trailingSwitch.checked)) {\r\n-          document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n-          document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n-          document.getElementById(\"trailinggap_value\").value = \"\";\r\n-          document.getElementById(\"trailingpoint_value\").value = \"\";\r\n-        }\r\n-      }\r\n       \r\n       trailingSwitch.addEventListener(\"change\", function () {\r\n         toggleIsTrailSet();\r\n         trailswitchReflect();\r\n"
                },
                {
                    "date": 1756361158083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -756,8 +756,9 @@\n         document.getElementById(\"futExpiryGapError\").style.display = \"none\";\r\n       }\r\n     document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n       upsertJson(\"product\",this.value,true);\r\n+      document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n \r\n     })  \r\n \r\n \r\n"
                },
                {
                    "date": 1756361272342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -746,20 +746,110 @@\n    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"FUT\") {\r\n     document.getElementById(\"productType\").style.display=\"block\";\r\n     if (document.getElementById(\"futExpiryGap\")?.value <= 0) {\r\n         document.getElementById(\"futExpiryGapError\").style.display = \"block\";\r\n+        \r\n+      }\r\n+      else {\r\n+        document.getElementById(\"futExpiryGapError\").style.display = \"none\";\r\n         document.getElementById(\"timelineDropdown\").value = \"monthly\";\r\n         document.getElementById(\"timelineDropdown\").disabled = true;\r\n         upsertJson(\"expiry_type\",monthly,true);\r\n \r\n       }\r\n-      else {\r\n-        document.getElementById(\"futExpiryGapError\").style.display = \"none\";\r\n-      }\r\n     document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n       upsertJson(\"product\",this.value,true);\r\n       document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n+      document.getElementById(\"quantityBox\").addEventListener(\"input\", function () {\r\n+      const switches = document.querySelectorAll(\"#toggleSwitchGroup .form-check-input\");\r\n+    switches.forEach(sw => sw.checked = false);\r\n \r\n+    // Hide related dropdowns\r\n+    hideAndReset(\"#quantityBox\", \"input\");\r\n+      resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"])\r\n+   \r\n+\r\n+      upsertJson(\"quantity\", this.value, false)\r\n+      if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n+        document.getElementById(\"quantityError\").style.display = \"block\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"none\";\r\n+      }\r\n+      else {\r\n+        document.getElementById(\"quantityError\").style.display = \"none\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"block\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"block\";\r\n+      }\r\n+      let buy = document.getElementsByClassName(\"buyBtn\")[0];\r\n+      let sell = document.getElementsByClassName(\"sellBtn\")[0];\r\n+\r\n+      buy.addEventListener(\"click\", function () {\r\n+        buy.style.background = \"green\";\r\n+        sell.style.background = \"\";\r\n+        upsertJson(\"transaction_type\", \"BUY\", true)\r\n+      })\r\n+      sell.addEventListener(\"click\", function () {\r\n+        sell.style.background = \"red\";\r\n+        buy.style.background = \"\";\r\n+        upsertJson(\"transaction_type\", \"SELL\", true)\r\n+      })\r\n+      const exitOnPurposeSwitch = document.getElementById('flexSwitchCheck1');\r\n+\r\n+      function toggleExitOnOpposite() {\r\n+        upsertJson(\"exit_on_opposite\", exitOnPurposeSwitch.checked.toString());\r\n+      }\r\n+      exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n+      const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n+      targetSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTgt();\r\n+        targetSwitchReflect();\r\n+      })\r\n+\r\n+\r\n+\r\n+      //check the val true or false and shows box according\r\n+\r\n+      //stoploss switch\r\n+      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n+      stoplossSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsSl();\r\n+        stoplossSwitchReflect();\r\n+\r\n+      })\r\n+\r\n+      //trailing switch\r\n+      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n+      \r\n+      trailingSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTrailSet();\r\n+        trailswitchReflect();\r\n+      })\r\n+    });\r\n+\r\n+\r\n+\r\n+    document.querySelectorAll('input[type=\"checkbox\"]').forEach(toggleBtn => {\r\n+      toggleBtn.checked = false; // turn off all switches\r\n+      document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"target_value\").value = \"\";\r\n+      document.getElementById(\"stoploss_value\").value = \"\";\r\n+      document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n+      document.getElementById(\"trailinggap_value\").value = \"\";\r\n+      document.getElementById(\"trailingpoint_value\").value = \"\";\r\n+      targetSwitchReflect();\r\n+      stoplossSwitchReflect();\r\n+      trailswitchReflect();\r\n+\r\n+    });\r\n+\r\n+    //document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n+\r\n+    // Remove related switch values from JSON\r\n+    resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n+\r\n+\r\n     })  \r\n \r\n \r\n   }\r\n"
                },
                {
                    "date": 1756361318350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -750,8 +750,9 @@\n         \r\n       }\r\n       else {\r\n         document.getElementById(\"futExpiryGapError\").style.display = \"none\";\r\n+        document.getElementById(\"expiryType\").style.display=\"block\"\r\n         document.getElementById(\"timelineDropdown\").value = \"monthly\";\r\n         document.getElementById(\"timelineDropdown\").disabled = true;\r\n         upsertJson(\"expiry_type\",monthly,true);\r\n \r\n"
                },
                {
                    "date": 1756361396263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -753,9 +753,9 @@\n         document.getElementById(\"futExpiryGapError\").style.display = \"none\";\r\n         document.getElementById(\"expiryType\").style.display=\"block\"\r\n         document.getElementById(\"timelineDropdown\").value = \"monthly\";\r\n         document.getElementById(\"timelineDropdown\").disabled = true;\r\n-        upsertJson(\"expiry_type\",monthly,true);\r\n+        upsertJson(\"expiry_type\",\"monthly\",true);\r\n \r\n       }\r\n     document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n       upsertJson(\"product\",this.value,true);\r\n"
                },
                {
                    "date": 1756361479972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -773,13 +773,17 @@\n       if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n         document.getElementById(\"quantityError\").style.display = \"block\";\r\n         document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n         document.getElementById(\"toggleSwitchGroup\").style.display = \"none\";\r\n+        document.getElementById(\"rolloverSwitch\").style.display = \"none\";\r\n+       \r\n       }\r\n       else {\r\n         document.getElementById(\"quantityError\").style.display = \"none\";\r\n         document.getElementById(\"BtnGroup\").style.display = \"block\";\r\n         document.getElementById(\"toggleSwitchGroup\").style.display = \"block\";\r\n+        document.getElementById(\"rolloverSwitch\").style.display = \"block\";\r\n+       \r\n       }\r\n       let buy = document.getElementsByClassName(\"buyBtn\")[0];\r\n       let sell = document.getElementsByClassName(\"sellBtn\")[0];\r\n \r\n"
                },
                {
                    "date": 1756361519618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -808,10 +808,21 @@\n         toggleIsTgt();\r\n         targetSwitchReflect();\r\n       })\r\n \r\n+      const rolloverSwitch = document.getElementById('const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n+      targetSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTgt();\r\n+        targetSwitchReflect();\r\n+      })\r\n+');\r\n+      targetSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTgt();\r\n+        targetSwitchReflect();\r\n+      })\r\n \r\n \r\n+\r\n       //check the val true or false and shows box according\r\n \r\n       //stoploss switch\r\n       const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n"
                },
                {
                    "date": 1756361528324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -808,18 +808,13 @@\n         toggleIsTgt();\r\n         targetSwitchReflect();\r\n       })\r\n \r\n-      const rolloverSwitch = document.getElementById('const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n+      const rolloverSwitch = document.getElementById('rolloverSwitch');\r\n       targetSwitch.addEventListener(\"change\", function () {\r\n         toggleIsTgt();\r\n         targetSwitchReflect();\r\n       })\r\n-');\r\n-      targetSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsTgt();\r\n-        targetSwitchReflect();\r\n-      })\r\n \r\n \r\n \r\n       //check the val true or false and shows box according\r\n"
                },
                {
                    "date": 1756361565408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,869 @@\n+var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n+var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n+  return new bootstrap.Tooltip(tooltipTriggerEl)\r\n+\r\n+});\r\n+\r\n+let editor;\r\n+\r\n+require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n+\r\n+require([\"vs/editor/editor.main\"], function () {\r\n+  window.getCodeSnippet = getCodeSnippet;\r\n+\r\n+  const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n+\r\n+  function getCodeSnippet(activeType) {\r\n+    if (activeType === \"strategy_order\") {\r\n+      return `{\r\n+    \"type\": \"strategy_order\",\r\n+    \"exit_on_opposite\": false,\r\n+    \"is_tgt\": false,\r\n+    \"is_sl\": false,\r\n+    \"is_trail_set\": false,\r\n+    \"position_size\": \"{{strategy.position_size}}\",\r\n+    \"transaction_type\": \"{{strategy.order.action}}\"\r\n+}`;\r\n+    }\r\n+    else {\r\n+      return `{\r\n+    \"type\": \"${activeType}\"\r\n+}`;\r\n+    }\r\n+  }\r\n+\r\n+  editor = monaco.editor.create(container, {\r\n+    value: getCodeSnippet(\"strategy_order\"),\r\n+    language: \"json\",\r\n+    theme: \"vs-dark\",\r\n+    automaticLayout: true,\r\n+    suggestOnTriggerCharacters: false,\r\n+    quickSuggestions: false,\r\n+    wordBasedSuggestions: false,\r\n+    parameterHints: { enabled: false },\r\n+    inlineSuggest: { enabled: false },\r\n+    fontSize: 18,\r\n+    minimap: { enabled: false },\r\n+    wordWrap: \"on\",\r\n+    scrollbar: {\r\n+      vertical: \"hidden\",\r\n+      horizontal: \"hidden\",\r\n+      handleMouseWheel: false\r\n+    },\r\n+  });\r\n+\r\n+});\r\n+\r\n+\r\n+\r\n+\r\n+let activeNav = \"strategy\"; // default active\r\n+\r\n+const navLinks = document.querySelectorAll(\" .nav-link\");\r\n+\r\n+\r\n+navLinks.forEach(link => {\r\n+  link.addEventListener(\"click\", (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    // remove active from all\r\n+    navLinks.forEach(l => l.classList.remove(\"active\"));\r\n+\r\n+    // set active on clicked\r\n+    link.classList.add(\"active\");\r\n+    // update global variable\r\n+    activeNav = link.getAttribute(\"data-type\");\r\n+    localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n+    console.log(\"Active Nav:\", activeNav);\r\n+    editor.setValue(getCodeSnippet(activeNav));\r\n+  });\r\n+});\r\n+\r\n+// let originalcode;\r\n+\r\n+// if(activeNavItem===\"strategy_order\"){\r\n+//     originalcode=`{\r\n+//     \"type\": \"strategy_order\",\r\n+//     \"exit_on_opposite\": false,\r\n+//     \"is_tgt\": false,\r\n+//     \"is_sl\": false,\r\n+//     \"is_trail_set\": false,\r\n+//     \"position_size\": \"{{strategy.position_size}}\",\r\n+//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n+\r\n+// }`\r\n+// }\r\n+// else{\r\n+//     originalcode=`{\r\n+//     \"type\": \"${activeNavItem}\"\r\n+// }`\r\n+// }\r\n+\r\n+document.getElementById(\"deleteBtn\").addEventListener(\"click\", function () {\r\n+  let activeNavItem = JSON.parse(localStorage.getItem(\"activenav\"))\r\n+  editor.setValue(getCodeSnippet(activeNavItem));\r\n+\r\n+  // reset dropdown to index 0\r\n+  let scriptType = document.getElementById(\"dropdown1\");\r\n+  if (scriptType) scriptType.selectedIndex = 0;\r\n+})\r\n+\r\n+const copyBtn = document.getElementById(\"copyBtn\");\r\n+\r\n+copyBtn?.addEventListener(\"click\", function () {\r\n+  if (!editor) return;\r\n+\r\n+  // Get the current editor content\r\n+  const code = editor.getValue();\r\n+\r\n+  // Use navigator clipboard API to copy\r\n+  navigator.clipboard.writeText(code)\r\n+    .then(() => {\r\n+      alert(\"Code copied to clipboard!\");\r\n+    })\r\n+    .catch(err => {\r\n+      console.error(\"Failed to copy: \", err);\r\n+    });\r\n+});\r\n+\r\n+function upsertJson(key, value) {\r\n+  if (!editor) return;\r\n+\r\n+  let code = editor.getValue();\r\n+  let obj;\r\n+\r\n+  try {\r\n+    obj = JSON.parse(code);\r\n+  } catch (e) {\r\n+    console.error(\"Invalid JSON in editor:\", e);\r\n+    return;\r\n+  }\r\n+\r\n+  if (value === \"\" || value == null) {\r\n+    delete obj[key]; // remove key if empty\r\n+  } else {\r\n+    let parsedVal;\r\n+\r\n+    if (value === \"true\") parsedVal = true;\r\n+    else if (value === \"false\") parsedVal = false;\r\n+    else if (value === \"null\") parsedVal = null;\r\n+    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n+    else parsedVal = value; // string\r\n+\r\n+    obj[key] = parsedVal;\r\n+  }\r\n+\r\n+  editor.setValue(JSON.stringify(obj, null, 2));\r\n+}\r\n+\r\n+\r\n+//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n+\r\n+\r\n+// helper function if you need it elsewhere\r\n+//   function getActiveNav() {\r\n+//     return activeNav;\r\n+//   }\r\n+\r\n+//   console.log(getActiveNav())\r\n+\r\n+// dependency mapping\r\n+const dependencies = [\r\n+\r\n+  {\r\n+    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n+      { container: '#scriptsearchbox', field: \"#search\" },\r\n+      { container: \"#productType\", field: \"#productDropdown\" },\r\n+      { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n+      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n+      { container: \"#BtnGroup\", field: null },\r\n+      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n+      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n+      { container: \"#targetDropdownCtn\", field: \"#targetdropdown\" },\r\n+      { container: \"#target_value\", field: \"#targetValbox\" },\r\n+      { container: \"#stoplossDropdownCtn\", field: \"#stoplossdropdown\" },\r\n+      { container: \"#stoploss_value\", field: \"#stoplossValbox\" },\r\n+      { container: \"#trailingDropdownCtn\", field: \"#trailingdropdown\" },\r\n+      { container: \"#trailingtrigger_value\", field: \"#trailtriggerValbox\" },\r\n+      { container: \"#trailinggap_value\", field: \"#trailGapValbox\" },\r\n+      { container: \"#trailingpoint_value\", field: \"#trailPointValbox\" }\r\n+\r\n+\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#atmdropdown\",\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#premiumbox\",\r\n+    event: \"input\",\r\n+    targets: [\r\n+      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n+\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#productDropdown\",\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#quantityBox\",\r\n+    event: \"input\",\r\n+    targets: [\r\n+      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n+      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n+      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n+      { container: \"#targetDropdownCtn\", field: \"#targetdropdown\" },\r\n+      { container: \"#target_value\", field: \"#targetValbox\" },\r\n+      { container: \"#stoplossDropdownCtn\", field: \"#stoplossdropdown\" },\r\n+      { container: \"#stoploss_value\", field: \"#stoplossValbox\" },\r\n+      { container: \"#trailingDropdownCtn\", field: \"#trailingdropdown\" },\r\n+      { container: \"#trailingtrigger_value\", field: \"#trailtriggerValbox\" },\r\n+      { container: \"#trailinggap_value\", field: \"#trailGapValbox\" },\r\n+      { container: \"#trailingpoint_value\", field: \"#trailPointValbox\" }\r\n+\r\n+    ]\r\n+  }\r\n+];\r\n+\r\n+function hideAndReset(triggerSelector, eventType = null) {\r\n+  dependencies.forEach(dep => {\r\n+    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+      dep.targets.forEach((t, index) => {\r\n+        const container = document.querySelector(t.container);\r\n+        if (container) {\r\n+          // If it's the *direct child* (first dependent) → only reset value\r\n+          if (index === 0) {\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+              }\r\n+            }\r\n+          } else {\r\n+            // Other deeper dependents → hide + reset\r\n+            container.style.display = \"none\";\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n+                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n+                    field.checked = false;\r\n+                  } else {\r\n+                    field.value = \"\";\r\n+                  }\r\n+                }\r\n+                else if (field.tagName === \"BUTTON\") {\r\n+                  field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n+                }\r\n+              }\r\n+            }\r\n+          }\r\n+        }\r\n+      });\r\n+    }\r\n+  });\r\n+}\r\n+\r\n+function resetEditorFields(keysToReset = []) {\r\n+  try {\r\n+    // Get JSON string from editor\r\n+    let code = editor.getValue();\r\n+    let jsonObj = JSON.parse(code);\r\n+\r\n+    // Reset fields\r\n+    keysToReset.forEach(key => {\r\n+      if (jsonObj.hasOwnProperty(key)) {\r\n+        if (typeof jsonObj[key] === \"boolean\") {\r\n+          jsonObj[key] = false; // reset boolean\r\n+        } else {\r\n+          delete jsonObj[key]; // remove string/number\r\n+        }\r\n+      }\r\n+    });\r\n+\r\n+    // Update editor\r\n+    editor.setValue(JSON.stringify(jsonObj, null, 2));\r\n+  } catch (err) {\r\n+    console.error(\"Invalid JSON in editor:\", err);\r\n+  }\r\n+}\r\n+\r\n+\r\n+//add data fields to make it work\r\n+function syncEditorWithUI() {\r\n+  if (!editor) return;\r\n+\r\n+  const activeNavItem = JSON.parse(localStorage.getItem(\"activenav\")) || \"strategy_order\";\r\n+  let defaultJSON;\r\n+\r\n+  try {\r\n+    defaultJSON = JSON.parse(getCodeSnippet(activeNavItem));\r\n+  } catch {\r\n+    defaultJSON = {};\r\n+  }\r\n+\r\n+  let currentJSON;\r\n+  try {\r\n+    currentJSON = JSON.parse(editor.getValue());\r\n+  } catch {\r\n+    currentJSON = {};\r\n+  }\r\n+\r\n+  const uiFields = document.querySelectorAll(\"[data-field]\");\r\n+\r\n+  uiFields.forEach(field => {\r\n+    const key = field.dataset.field;\r\n+\r\n+    if (key === \"script_type\") return; // always keep main parent\r\n+\r\n+    const container = field.closest(\".field-container\") || field.parentElement;\r\n+    const isVisible = container ? container.style.display !== \"none\" : true;\r\n+\r\n+    if (!isVisible) {\r\n+      // Remove hidden fields from user JSON but keep default if exists\r\n+      if (typeof defaultJSON[key] === \"boolean\") {\r\n+        currentJSON[key] = false;\r\n+      } else {\r\n+        delete currentJSON[key];\r\n+      }\r\n+    } else {\r\n+      // Visible → keep current value if exists, else default\r\n+      if (!(key in currentJSON) && key in defaultJSON) {\r\n+        currentJSON[key] = defaultJSON[key];\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+  // Ensure main parent always exists\r\n+  if (!currentJSON[\"script_type\"]) {\r\n+    currentJSON[\"script_type\"] = defaultJSON[\"type\"] || \"strategy_order\";\r\n+  }\r\n+\r\n+  editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n+}\r\n+\r\n+let scriptType = document.getElementById(\"dropdown1\");\r\n+dropdown1.addEventListener(\"change\", function () {\r\n+  upsertJson(\"script_type\", this.value, true);\r\n+  upsertJson(\"is_rollover\", \"false\", false);\r\n+  hideAndReset(\"#dropdown1\", \"change\");\r\n+  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" || JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\") {\r\n+    document.getElementById(\"optionSelection\").style.display = \"block\";\r\n+    document.getElementById(\"scriptsearchbox\").style.display = \"none\";\r\n+  }\r\n+  else {\r\n+    document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n+    document.getElementById(\"optionSelection\").style.display = \"none\";\r\n+  }\r\n+})\r\n+\r\n+let searchInput = document.getElementById(\"search\");\r\n+const dropdown = document.getElementById('dropdown');\r\n+let token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n+document.addEventListener('click', (e) => {\r\n+  // Check if click is outside the input and dropdown\r\n+  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n+    dropdown.style.display = 'none';\r\n+  }\r\n+});\r\n+\r\n+// Simple debounce function\r\n+function debounce(func, delay) {\r\n+  let timer;\r\n+  return function (...args) {\r\n+    clearTimeout(timer);\r\n+    timer = setTimeout(() => func.apply(this, args), delay);\r\n+  };\r\n+}\r\n+\r\n+// Fetch API suggestions\r\n+async function fetchSuggestions(query) {\r\n+  if (!query) {\r\n+    dropdown.style.display = 'none';\r\n+    dropdown.innerHTML = '';\r\n+    return;\r\n+  }\r\n+\r\n+  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n+  try {\r\n+    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n+      method: \"POST\",\r\n+      headers: {\r\n+        \"Content-Type\": \"application/json\",\r\n+        \"Authorization\": token\r\n+      },\r\n+      body: JSON.stringify({\r\n+        script: query,\r\n+        type: scriptType\r\n+      })\r\n+    });\r\n+\r\n+    const data = await res.json();\r\n+    const suggestions = data.data;\r\n+\r\n+\r\n+    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n+    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n+\r\n+  }\r\n+  catch (err) {\r\n+    console.error(err);\r\n+  }\r\n+}\r\n+\r\n+// Add click selection\r\n+dropdown?.addEventListener('click', e => {\r\n+  if (e.target.tagName === 'LI') {\r\n+    let selectedText = e.target.textContent;\r\n+    searchInput.value = selectedText;\r\n+    // remove everything after \"(\"\r\n+    if (selectedText.includes(\"(\")) {\r\n+      selectedText = selectedText.split(\"(\")[0];\r\n+    }\r\n+    dropdown.style.display = 'none';\r\n+    upsertJson(\"script\", selectedText, true);\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"EQ\") {\r\n+      document.getElementById(\"productType\").style.display = \"block\";\r\n+    }\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"FUT\") {\r\n+      document.getElementById(\"expiryGap\").style.display = \"block\";\r\n+    }\r\n+  }\r\n+});\r\n+\r\n+searchInput.addEventListener('input', debounce(e => {\r\n+  fetchSuggestions(e.target.value);\r\n+}, 300));\r\n+\r\n+ let dropdownofTarget = document.getElementById(\"targetDropdownCtn\"); \r\n+ const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n+ //onchange toggles the switch, call the function and also shows dropdown\r\n+\r\n+      function toggleIsTgt() {\r\n+        upsertJson(\"is_tgt\", targetSwitch.checked.toString());\r\n+        if (!(targetSwitch.checked)) {\r\n+          document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"targetValbox\").value = \"\";\r\n+        }\r\n+      }\r\n+function targetSwitchReflect() {\r\n+        dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n+        if (dropdownofTarget.style.display === \"block\") {\r\n+          document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n+            upsertJson(\"tgt_type\", this.value, true);\r\n+            document.getElementById(\"target_value\").style.display = \"block\";\r\n+            document.getElementById(\"targetValbox\").value = \"\";\r\n+            let targetValBox = document.getElementById(\"targetValbox\");\r\n+            let targetErr = document.getElementById(\"targetError\");\r\n+\r\n+\r\n+            targetValBox?.addEventListener(\"input\", function () {\r\n+              upsertJson(\"tgt_value\", this.value, true)\r\n+              let targetValue = this.value.trim();\r\n+\r\n+              if (targetValue < 0) {\r\n+                targetErr.style.display = \"block\";\r\n+              }\r\n+              else {\r\n+                targetErr.style.display = \"none\";\r\n+              }\r\n+\r\n+            });\r\n+          });\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"target_value\").style.display = \"none\";\r\n+          resetEditorFields([\"tgt_type\", \"tgt_value\", \"is_tgt\"])\r\n+          document.getElementById(\"targetValbox\").value=\"\";\r\n+        }\r\n+\r\n+      };\r\n+\r\n+      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n+      function toggleIsSl() {\r\n+        upsertJson(\"is_sl\", stoplossSwitch.checked.toString())\r\n+        if (!(stoplossSwitch.checked)) {\r\n+          document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"stoploss_value\").value = \"\";\r\n+        }\r\n+\r\n+      }\r\n+      function stoplossSwitchReflect() {\r\n+        let dropdownOfStoploss = document.getElementById(\"stoplossDropdownCtn\");\r\n+        dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n+        if (dropdownOfStoploss.style.display === \"block\") {\r\n+          document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\", function () {\r\n+            upsertJson(\"sl_type\", this.value, true)\r\n+\r\n+            document.getElementById(\"stoploss_value\").style.display = \"block\";\r\n+            let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n+            let stoplossErr = document.getElementById(\"stoplossError\");\r\n+\r\n+\r\n+            stoplossValbox?.addEventListener(\"input\", function () {\r\n+              let stoplossValue = this.value.trim();\r\n+              upsertJson(\"sl_value\", stoplossValue, false)\r\n+\r\n+              if (stoplossValue < 0) {\r\n+                stoplossErr.style.display = \"block\";\r\n+                resetEditorFields([\"sl_value\"]);\r\n+              }\r\n+              else {\r\n+                stoplossErr.style.display = \"none\";\r\n+              }\r\n+\r\n+            });\r\n+\r\n+\r\n+          });\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"stoploss_value\").style.display = \"none\";\r\n+          resetEditorFields([\"sl_type\", \"sl_value\", \"is_sl\"]);\r\n+        }\r\n+\r\n+\r\n+      };\r\n+\r\n+      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n+\r\n+      function toggleIsTrailSet() {\r\n+        upsertJson(\"is_trail_set\", trailingSwitch.checked.toString());\r\n+        if (!(trailingSwitch.checked)) {\r\n+          document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n+          document.getElementById(\"trailinggap_value\").value = \"\";\r\n+          document.getElementById(\"trailingpoint_value\").value = \"\";\r\n+        }\r\n+      }\r\n+      function trailswitchReflect() {\r\n+        let dropdownOfTrailing = document.getElementById(\"trailingDropdownCtn\");\r\n+        dropdownOfTrailing.style.display = trailingSwitch.checked ? 'block' : 'none';\r\n+\r\n+        if (dropdownOfTrailing.style.display === \"block\") {\r\n+\r\n+          document.getElementById(\"trailingdropdown\")?.addEventListener(\"change\", function () {\r\n+            upsertJson(\"trail_type\", this.value, true)\r\n+\r\n+            document.getElementById(\"trailingtrigger_value\").style.display = \"block\";\r\n+            let trailtriggerValbox = document.getElementById(\"trailtriggerValbox\");\r\n+            let trailTriggerError = document.getElementById(\"trailTriggerError\");\r\n+\r\n+\r\n+            trailtriggerValbox?.addEventListener(\"input\", function () {\r\n+\r\n+              let trailTriggerValue = this.value.trim();\r\n+              //let currentValue = editor.getValue().trim();\r\n+              upsertJson(\"trail_trigger\", trailTriggerValue, false);\r\n+\r\n+              if (trailTriggerValue < 0) {\r\n+                trailTriggerError.style.display = \"block\";\r\n+                document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n+\r\n+              }\r\n+              else {\r\n+                trailTriggerError.style.display = \"none\";\r\n+                document.getElementById(\"trailinggap_value\").style.display = \"block\";\r\n+              }\r\n+\r\n+              if (!trailTriggerValue) {\r\n+                resetEditorFields([\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n+              }\r\n+\r\n+\r\n+              //trail gap number box show\r\n+              document.getElementById(\"trailGapValbox\")?.addEventListener(\"input\", function () {\r\n+                let trailgapError = document.getElementById(\"trailGapError\");\r\n+                let trailGapValue = this.value.trim();\r\n+                //let currentValue = editor.getValue().trim();\r\n+                upsertJson(\"trail_gap\", trailGapValue, false)\r\n+                if (trailGapValue < 0) {\r\n+                  trailgapError.style.display = \"block\";\r\n+                  document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n+\r\n+                }\r\n+                else {\r\n+                  trailgapError.style.display = \"none\";\r\n+                  document.getElementById(\"trailingpoint_value\").style.display = \"block\";\r\n+                }\r\n+\r\n+                if (!trailGapValue) {\r\n+                  resetEditorFields([\"trail_gap\", \"trail_point\"])\r\n+                }\r\n+              })\r\n+\r\n+              //document.getElementById(\"trailingpoint_value\").style.display=\"block\"\r\n+\r\n+              //trail point input box\r\n+              document.getElementById(\"trailPointValbox\")?.addEventListener(\"input\", function () {\r\n+                let trailpointError = document.getElementById(\"trailPointError\");\r\n+                let trailpointVal = this.value.trim();\r\n+                //let currentValue = editor.getValue().trim();\r\n+                upsertJson(\"trail_point\", trailpointVal, false);\r\n+\r\n+                if (trailpointVal < 0) {\r\n+                  trailpointError.style.display = \"block\";\r\n+\r\n+                }\r\n+                else {\r\n+                  trailpointError.style.display = \"none\";\r\n+                }\r\n+\r\n+                if (!trailpointVal) {\r\n+                  resetEditorFields([\"trail_point\"]);\r\n+                }\r\n+              })\r\n+\r\n+\r\n+\r\n+            });\r\n+          });\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"trailingtrigger_value\").style.display = \"none\";\r\n+          document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n+          document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n+          resetEditorFields([\"is_trail_set\",\"trail_type\",\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n+        }\r\n+      }\r\n+\r\n+\r\n+document.getElementById(\"productDropdown\").addEventListener(\"change\", function () {\r\n+  upsertJson(\"product\", this.value, true);\r\n+  hideAndReset(\"#productDropdown\", \"change\");\r\n+  resetEditorFields([\"script\", \"product\", \"quantity\", \"is_tgt\",])\r\n+  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"EQ\") {\r\n+    document.getElementById(\"quantityBlock\").style.display = \"block\";\r\n+    document.getElementById(\"quantityBox\").addEventListener(\"input\", function () {\r\n+      const switches = document.querySelectorAll(\"#toggleSwitchGroup .form-check-input\");\r\n+    switches.forEach(sw => sw.checked = false);\r\n+\r\n+    // Hide related dropdowns\r\n+    hideAndReset(\"#quantityBox\", \"input\");\r\n+      resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"])\r\n+   \r\n+\r\n+      upsertJson(\"quantity\", this.value, false)\r\n+      if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n+        document.getElementById(\"quantityError\").style.display = \"block\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"none\";\r\n+      }\r\n+      else {\r\n+        document.getElementById(\"quantityError\").style.display = \"none\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"block\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"block\";\r\n+      }\r\n+      let buy = document.getElementsByClassName(\"buyBtn\")[0];\r\n+      let sell = document.getElementsByClassName(\"sellBtn\")[0];\r\n+\r\n+      buy.addEventListener(\"click\", function () {\r\n+        buy.style.background = \"green\";\r\n+        sell.style.background = \"\";\r\n+        upsertJson(\"transaction_type\", \"BUY\", true)\r\n+      })\r\n+      sell.addEventListener(\"click\", function () {\r\n+        sell.style.background = \"red\";\r\n+        buy.style.background = \"\";\r\n+        upsertJson(\"transaction_type\", \"SELL\", true)\r\n+      })\r\n+      const exitOnPurposeSwitch = document.getElementById('flexSwitchCheck1');\r\n+\r\n+      function toggleExitOnOpposite() {\r\n+        upsertJson(\"exit_on_opposite\", exitOnPurposeSwitch.checked.toString());\r\n+      }\r\n+      exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n+      const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n+      targetSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTgt();\r\n+        targetSwitchReflect();\r\n+      })\r\n+\r\n+\r\n+\r\n+      //check the val true or false and shows box according\r\n+\r\n+      //stoploss switch\r\n+      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n+      stoplossSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsSl();\r\n+        stoplossSwitchReflect();\r\n+\r\n+      })\r\n+\r\n+      //trailing switch\r\n+      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n+      \r\n+      trailingSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTrailSet();\r\n+        trailswitchReflect();\r\n+      })\r\n+    });\r\n+\r\n+\r\n+\r\n+    document.querySelectorAll('input[type=\"checkbox\"]').forEach(toggleBtn => {\r\n+      toggleBtn.checked = false; // turn off all switches\r\n+      document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"target_value\").value = \"\";\r\n+      document.getElementById(\"stoploss_value\").value = \"\";\r\n+      document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n+      document.getElementById(\"trailinggap_value\").value = \"\";\r\n+      document.getElementById(\"trailingpoint_value\").value = \"\";\r\n+      targetSwitchReflect();\r\n+      stoplossSwitchReflect();\r\n+      trailswitchReflect();\r\n+\r\n+    });\r\n+\r\n+    //document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n+\r\n+    // Remove related switch values from JSON\r\n+    resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n+\r\n+    \r\n+\r\n+  }\r\n+});\r\n+\r\n+document.getElementById(\"futExpiryGap\").addEventListener(\"input\",function(){\r\n+  upsertJson(\"expiry_gap\",this.value,false)\r\n+   if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"FUT\") {\r\n+    document.getElementById(\"productType\").style.display=\"block\";\r\n+    if (document.getElementById(\"futExpiryGap\")?.value <= 0) {\r\n+        document.getElementById(\"futExpiryGapError\").style.display = \"block\";\r\n+        \r\n+      }\r\n+      else {\r\n+        document.getElementById(\"futExpiryGapError\").style.display = \"none\";\r\n+        document.getElementById(\"expiryType\").style.display=\"block\"\r\n+        document.getElementById(\"timelineDropdown\").value = \"monthly\";\r\n+        document.getElementById(\"timelineDropdown\").disabled = true;\r\n+        upsertJson(\"expiry_type\",\"monthly\",true);\r\n+\r\n+      }\r\n+    document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n+      upsertJson(\"product\",this.value,true);\r\n+      document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n+      document.getElementById(\"quantityBox\").addEventListener(\"input\", function () {\r\n+      const switches = document.querySelectorAll(\"#toggleSwitchGroup .form-check-input\");\r\n+    switches.forEach(sw => sw.checked = false);\r\n+\r\n+    // Hide related dropdowns\r\n+    hideAndReset(\"#quantityBox\", \"input\");\r\n+      resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"])\r\n+   \r\n+\r\n+      upsertJson(\"quantity\", this.value, false)\r\n+      if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n+        document.getElementById(\"quantityError\").style.display = \"block\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"none\";\r\n+        document.getElementById(\"rolloverSwitch\").style.display = \"none\";\r\n+       \r\n+      }\r\n+      else {\r\n+        document.getElementById(\"quantityError\").style.display = \"none\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"block\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"block\";\r\n+        document.getElementById(\"rolloverSwitch\").style.display = \"block\";\r\n+       \r\n+      }\r\n+      let buy = document.getElementsByClassName(\"buyBtn\")[0];\r\n+      let sell = document.getElementsByClassName(\"sellBtn\")[0];\r\n+\r\n+      buy.addEventListener(\"click\", function () {\r\n+        buy.style.background = \"green\";\r\n+        sell.style.background = \"\";\r\n+        upsertJson(\"transaction_type\", \"BUY\", true)\r\n+      })\r\n+      sell.addEventListener(\"click\", function () {\r\n+        sell.style.background = \"red\";\r\n+        buy.style.background = \"\";\r\n+        upsertJson(\"transaction_type\", \"SELL\", true)\r\n+      })\r\n+      const exitOnPurposeSwitch = document.getElementById('flexSwitchCheck1');\r\n+\r\n+      function toggleExitOnOpposite() {\r\n+        upsertJson(\"exit_on_opposite\", exitOnPurposeSwitch.checked.toString());\r\n+      }\r\n+      exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n+      const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n+      targetSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTgt();\r\n+        targetSwitchReflect();\r\n+      })\r\n+\r\n+      const rolloverSwitch = document.getElementById('rolloverSwitch');\r\n+      rolloverSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsRollover();\r\n+        rollOverSwitchReflect();\r\n+      })\r\n+\r\n+\r\n+\r\n+      //check the val true or false and shows box according\r\n+\r\n+      //stoploss switch\r\n+      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n+      stoplossSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsSl();\r\n+        stoplossSwitchReflect();\r\n+\r\n+      })\r\n+\r\n+      //trailing switch\r\n+      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n+      \r\n+      trailingSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTrailSet();\r\n+        trailswitchReflect();\r\n+      })\r\n+    });\r\n+\r\n+\r\n+\r\n+    document.querySelectorAll('input[type=\"checkbox\"]').forEach(toggleBtn => {\r\n+      toggleBtn.checked = false; // turn off all switches\r\n+      document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"target_value\").value = \"\";\r\n+      document.getElementById(\"stoploss_value\").value = \"\";\r\n+      document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n+      document.getElementById(\"trailinggap_value\").value = \"\";\r\n+      document.getElementById(\"trailingpoint_value\").value = \"\";\r\n+      targetSwitchReflect();\r\n+      stoplossSwitchReflect();\r\n+      trailswitchReflect();\r\n+\r\n+    });\r\n+\r\n+    //document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n+\r\n+    // Remove related switch values from JSON\r\n+    resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n+\r\n+\r\n+    })  \r\n+\r\n+\r\n+  }\r\n+})\r\n+\r\n+\r\n"
                },
                {
                    "date": 1756361609368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -639,8 +639,10 @@\n           resetEditorFields([\"is_trail_set\",\"trail_type\",\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n         }\r\n       }\r\n \r\n+      function toggleIsRollover();\r\n+        function rollOverSwitchReflect();\r\n \r\n document.getElementById(\"productDropdown\").addEventListener(\"change\", function () {\r\n   upsertJson(\"product\", this.value, true);\r\n   hideAndReset(\"#productDropdown\", \"change\");\r\n@@ -866,873 +868,4 @@\n   }\r\n })\r\n \r\n \r\n-var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n-var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n-  return new bootstrap.Tooltip(tooltipTriggerEl)\r\n-\r\n-});\r\n-\r\n-let editor;\r\n-\r\n-require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n-\r\n-require([\"vs/editor/editor.main\"], function () {\r\n-  window.getCodeSnippet = getCodeSnippet;\r\n-\r\n-  const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n-\r\n-  function getCodeSnippet(activeType) {\r\n-    if (activeType === \"strategy_order\") {\r\n-      return `{\r\n-    \"type\": \"strategy_order\",\r\n-    \"exit_on_opposite\": false,\r\n-    \"is_tgt\": false,\r\n-    \"is_sl\": false,\r\n-    \"is_trail_set\": false,\r\n-    \"position_size\": \"{{strategy.position_size}}\",\r\n-    \"transaction_type\": \"{{strategy.order.action}}\"\r\n-}`;\r\n-    }\r\n-    else {\r\n-      return `{\r\n-    \"type\": \"${activeType}\"\r\n-}`;\r\n-    }\r\n-  }\r\n-\r\n-  editor = monaco.editor.create(container, {\r\n-    value: getCodeSnippet(\"strategy_order\"),\r\n-    language: \"json\",\r\n-    theme: \"vs-dark\",\r\n-    automaticLayout: true,\r\n-    suggestOnTriggerCharacters: false,\r\n-    quickSuggestions: false,\r\n-    wordBasedSuggestions: false,\r\n-    parameterHints: { enabled: false },\r\n-    inlineSuggest: { enabled: false },\r\n-    fontSize: 18,\r\n-    minimap: { enabled: false },\r\n-    wordWrap: \"on\",\r\n-    scrollbar: {\r\n-      vertical: \"hidden\",\r\n-      horizontal: \"hidden\",\r\n-      handleMouseWheel: false\r\n-    },\r\n-  });\r\n-\r\n-});\r\n-\r\n-\r\n-\r\n-\r\n-let activeNav = \"strategy\"; // default active\r\n-\r\n-const navLinks = document.querySelectorAll(\" .nav-link\");\r\n-\r\n-\r\n-navLinks.forEach(link => {\r\n-  link.addEventListener(\"click\", (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    // remove active from all\r\n-    navLinks.forEach(l => l.classList.remove(\"active\"));\r\n-\r\n-    // set active on clicked\r\n-    link.classList.add(\"active\");\r\n-    // update global variable\r\n-    activeNav = link.getAttribute(\"data-type\");\r\n-    localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n-    console.log(\"Active Nav:\", activeNav);\r\n-    editor.setValue(getCodeSnippet(activeNav));\r\n-  });\r\n-});\r\n-\r\n-// let originalcode;\r\n-\r\n-// if(activeNavItem===\"strategy_order\"){\r\n-//     originalcode=`{\r\n-//     \"type\": \"strategy_order\",\r\n-//     \"exit_on_opposite\": false,\r\n-//     \"is_tgt\": false,\r\n-//     \"is_sl\": false,\r\n-//     \"is_trail_set\": false,\r\n-//     \"position_size\": \"{{strategy.position_size}}\",\r\n-//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n-\r\n-// }`\r\n-// }\r\n-// else{\r\n-//     originalcode=`{\r\n-//     \"type\": \"${activeNavItem}\"\r\n-// }`\r\n-// }\r\n-\r\n-document.getElementById(\"deleteBtn\").addEventListener(\"click\", function () {\r\n-  let activeNavItem = JSON.parse(localStorage.getItem(\"activenav\"))\r\n-  editor.setValue(getCodeSnippet(activeNavItem));\r\n-\r\n-  // reset dropdown to index 0\r\n-  let scriptType = document.getElementById(\"dropdown1\");\r\n-  if (scriptType) scriptType.selectedIndex = 0;\r\n-})\r\n-\r\n-const copyBtn = document.getElementById(\"copyBtn\");\r\n-\r\n-copyBtn?.addEventListener(\"click\", function () {\r\n-  if (!editor) return;\r\n-\r\n-  // Get the current editor content\r\n-  const code = editor.getValue();\r\n-\r\n-  // Use navigator clipboard API to copy\r\n-  navigator.clipboard.writeText(code)\r\n-    .then(() => {\r\n-      alert(\"Code copied to clipboard!\");\r\n-    })\r\n-    .catch(err => {\r\n-      console.error(\"Failed to copy: \", err);\r\n-    });\r\n-});\r\n-\r\n-function upsertJson(key, value) {\r\n-  if (!editor) return;\r\n-\r\n-  let code = editor.getValue();\r\n-  let obj;\r\n-\r\n-  try {\r\n-    obj = JSON.parse(code);\r\n-  } catch (e) {\r\n-    console.error(\"Invalid JSON in editor:\", e);\r\n-    return;\r\n-  }\r\n-\r\n-  if (value === \"\" || value == null) {\r\n-    delete obj[key]; // remove key if empty\r\n-  } else {\r\n-    let parsedVal;\r\n-\r\n-    if (value === \"true\") parsedVal = true;\r\n-    else if (value === \"false\") parsedVal = false;\r\n-    else if (value === \"null\") parsedVal = null;\r\n-    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n-    else parsedVal = value; // string\r\n-\r\n-    obj[key] = parsedVal;\r\n-  }\r\n-\r\n-  editor.setValue(JSON.stringify(obj, null, 2));\r\n-}\r\n-\r\n-\r\n-//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n-\r\n-\r\n-// helper function if you need it elsewhere\r\n-//   function getActiveNav() {\r\n-//     return activeNav;\r\n-//   }\r\n-\r\n-//   console.log(getActiveNav())\r\n-\r\n-// dependency mapping\r\n-const dependencies = [\r\n-\r\n-  {\r\n-    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n-      { container: '#scriptsearchbox', field: \"#search\" },\r\n-      { container: \"#productType\", field: \"#productDropdown\" },\r\n-      { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n-      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n-      { container: \"#BtnGroup\", field: null },\r\n-      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n-      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n-      { container: \"#targetDropdownCtn\", field: \"#targetdropdown\" },\r\n-      { container: \"#target_value\", field: \"#targetValbox\" },\r\n-      { container: \"#stoplossDropdownCtn\", field: \"#stoplossdropdown\" },\r\n-      { container: \"#stoploss_value\", field: \"#stoplossValbox\" },\r\n-      { container: \"#trailingDropdownCtn\", field: \"#trailingdropdown\" },\r\n-      { container: \"#trailingtrigger_value\", field: \"#trailtriggerValbox\" },\r\n-      { container: \"#trailinggap_value\", field: \"#trailGapValbox\" },\r\n-      { container: \"#trailingpoint_value\", field: \"#trailPointValbox\" }\r\n-\r\n-\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#atmdropdown\",\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#premiumbox\",\r\n-    event: \"input\",\r\n-    targets: [\r\n-      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n-\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#productDropdown\",\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#quantityBox\",\r\n-    event: \"input\",\r\n-    targets: [\r\n-      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n-      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n-      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n-      { container: \"#targetDropdownCtn\", field: \"#targetdropdown\" },\r\n-      { container: \"#target_value\", field: \"#targetValbox\" },\r\n-      { container: \"#stoplossDropdownCtn\", field: \"#stoplossdropdown\" },\r\n-      { container: \"#stoploss_value\", field: \"#stoplossValbox\" },\r\n-      { container: \"#trailingDropdownCtn\", field: \"#trailingdropdown\" },\r\n-      { container: \"#trailingtrigger_value\", field: \"#trailtriggerValbox\" },\r\n-      { container: \"#trailinggap_value\", field: \"#trailGapValbox\" },\r\n-      { container: \"#trailingpoint_value\", field: \"#trailPointValbox\" }\r\n-\r\n-    ]\r\n-  }\r\n-];\r\n-\r\n-function hideAndReset(triggerSelector, eventType = null) {\r\n-  dependencies.forEach(dep => {\r\n-    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-      dep.targets.forEach((t, index) => {\r\n-        const container = document.querySelector(t.container);\r\n-        if (container) {\r\n-          // If it's the *direct child* (first dependent) → only reset value\r\n-          if (index === 0) {\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-              }\r\n-            }\r\n-          } else {\r\n-            // Other deeper dependents → hide + reset\r\n-            container.style.display = \"none\";\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n-                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-                    field.checked = false;\r\n-                  } else {\r\n-                    field.value = \"\";\r\n-                  }\r\n-                }\r\n-                else if (field.tagName === \"BUTTON\") {\r\n-                  field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n-                }\r\n-              }\r\n-            }\r\n-          }\r\n-        }\r\n-      });\r\n-    }\r\n-  });\r\n-}\r\n-\r\n-function resetEditorFields(keysToReset = []) {\r\n-  try {\r\n-    // Get JSON string from editor\r\n-    let code = editor.getValue();\r\n-    let jsonObj = JSON.parse(code);\r\n-\r\n-    // Reset fields\r\n-    keysToReset.forEach(key => {\r\n-      if (jsonObj.hasOwnProperty(key)) {\r\n-        if (typeof jsonObj[key] === \"boolean\") {\r\n-          jsonObj[key] = false; // reset boolean\r\n-        } else {\r\n-          delete jsonObj[key]; // remove string/number\r\n-        }\r\n-      }\r\n-    });\r\n-\r\n-    // Update editor\r\n-    editor.setValue(JSON.stringify(jsonObj, null, 2));\r\n-  } catch (err) {\r\n-    console.error(\"Invalid JSON in editor:\", err);\r\n-  }\r\n-}\r\n-\r\n-\r\n-//add data fields to make it work\r\n-function syncEditorWithUI() {\r\n-  if (!editor) return;\r\n-\r\n-  const activeNavItem = JSON.parse(localStorage.getItem(\"activenav\")) || \"strategy_order\";\r\n-  let defaultJSON;\r\n-\r\n-  try {\r\n-    defaultJSON = JSON.parse(getCodeSnippet(activeNavItem));\r\n-  } catch {\r\n-    defaultJSON = {};\r\n-  }\r\n-\r\n-  let currentJSON;\r\n-  try {\r\n-    currentJSON = JSON.parse(editor.getValue());\r\n-  } catch {\r\n-    currentJSON = {};\r\n-  }\r\n-\r\n-  const uiFields = document.querySelectorAll(\"[data-field]\");\r\n-\r\n-  uiFields.forEach(field => {\r\n-    const key = field.dataset.field;\r\n-\r\n-    if (key === \"script_type\") return; // always keep main parent\r\n-\r\n-    const container = field.closest(\".field-container\") || field.parentElement;\r\n-    const isVisible = container ? container.style.display !== \"none\" : true;\r\n-\r\n-    if (!isVisible) {\r\n-      // Remove hidden fields from user JSON but keep default if exists\r\n-      if (typeof defaultJSON[key] === \"boolean\") {\r\n-        currentJSON[key] = false;\r\n-      } else {\r\n-        delete currentJSON[key];\r\n-      }\r\n-    } else {\r\n-      // Visible → keep current value if exists, else default\r\n-      if (!(key in currentJSON) && key in defaultJSON) {\r\n-        currentJSON[key] = defaultJSON[key];\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-  // Ensure main parent always exists\r\n-  if (!currentJSON[\"script_type\"]) {\r\n-    currentJSON[\"script_type\"] = defaultJSON[\"type\"] || \"strategy_order\";\r\n-  }\r\n-\r\n-  editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n-}\r\n-\r\n-let scriptType = document.getElementById(\"dropdown1\");\r\n-dropdown1.addEventListener(\"change\", function () {\r\n-  upsertJson(\"script_type\", this.value, true);\r\n-  upsertJson(\"is_rollover\", \"false\", false);\r\n-  hideAndReset(\"#dropdown1\", \"change\");\r\n-  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" || JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\") {\r\n-    document.getElementById(\"optionSelection\").style.display = \"block\";\r\n-    document.getElementById(\"scriptsearchbox\").style.display = \"none\";\r\n-  }\r\n-  else {\r\n-    document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n-    document.getElementById(\"optionSelection\").style.display = \"none\";\r\n-  }\r\n-})\r\n-\r\n-let searchInput = document.getElementById(\"search\");\r\n-const dropdown = document.getElementById('dropdown');\r\n-let token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n-document.addEventListener('click', (e) => {\r\n-  // Check if click is outside the input and dropdown\r\n-  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n-    dropdown.style.display = 'none';\r\n-  }\r\n-});\r\n-\r\n-// Simple debounce function\r\n-function debounce(func, delay) {\r\n-  let timer;\r\n-  return function (...args) {\r\n-    clearTimeout(timer);\r\n-    timer = setTimeout(() => func.apply(this, args), delay);\r\n-  };\r\n-}\r\n-\r\n-// Fetch API suggestions\r\n-async function fetchSuggestions(query) {\r\n-  if (!query) {\r\n-    dropdown.style.display = 'none';\r\n-    dropdown.innerHTML = '';\r\n-    return;\r\n-  }\r\n-\r\n-  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n-  try {\r\n-    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n-      method: \"POST\",\r\n-      headers: {\r\n-        \"Content-Type\": \"application/json\",\r\n-        \"Authorization\": token\r\n-      },\r\n-      body: JSON.stringify({\r\n-        script: query,\r\n-        type: scriptType\r\n-      })\r\n-    });\r\n-\r\n-    const data = await res.json();\r\n-    const suggestions = data.data;\r\n-\r\n-\r\n-    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n-    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n-\r\n-  }\r\n-  catch (err) {\r\n-    console.error(err);\r\n-  }\r\n-}\r\n-\r\n-// Add click selection\r\n-dropdown?.addEventListener('click', e => {\r\n-  if (e.target.tagName === 'LI') {\r\n-    let selectedText = e.target.textContent;\r\n-    searchInput.value = selectedText;\r\n-    // remove everything after \"(\"\r\n-    if (selectedText.includes(\"(\")) {\r\n-      selectedText = selectedText.split(\"(\")[0];\r\n-    }\r\n-    dropdown.style.display = 'none';\r\n-    upsertJson(\"script\", selectedText, true);\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"EQ\") {\r\n-      document.getElementById(\"productType\").style.display = \"block\";\r\n-    }\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"FUT\") {\r\n-      document.getElementById(\"expiryGap\").style.display = \"block\";\r\n-    }\r\n-  }\r\n-});\r\n-\r\n-searchInput.addEventListener('input', debounce(e => {\r\n-  fetchSuggestions(e.target.value);\r\n-}, 300));\r\n-\r\n- let dropdownofTarget = document.getElementById(\"targetDropdownCtn\"); \r\n- const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n- //onchange toggles the switch, call the function and also shows dropdown\r\n-\r\n-      function toggleIsTgt() {\r\n-        upsertJson(\"is_tgt\", targetSwitch.checked.toString());\r\n-        if (!(targetSwitch.checked)) {\r\n-          document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n-          document.getElementById(\"targetValbox\").value = \"\";\r\n-        }\r\n-      }\r\n-function targetSwitchReflect() {\r\n-        dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n-        if (dropdownofTarget.style.display === \"block\") {\r\n-          document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n-            upsertJson(\"tgt_type\", this.value, true);\r\n-            document.getElementById(\"target_value\").style.display = \"block\";\r\n-            document.getElementById(\"targetValbox\").value = \"\";\r\n-            let targetValBox = document.getElementById(\"targetValbox\");\r\n-            let targetErr = document.getElementById(\"targetError\");\r\n-\r\n-\r\n-            targetValBox?.addEventListener(\"input\", function () {\r\n-              upsertJson(\"tgt_value\", this.value, true)\r\n-              let targetValue = this.value.trim();\r\n-\r\n-              if (targetValue < 0) {\r\n-                targetErr.style.display = \"block\";\r\n-              }\r\n-              else {\r\n-                targetErr.style.display = \"none\";\r\n-              }\r\n-\r\n-            });\r\n-          });\r\n-        }\r\n-        else {\r\n-          document.getElementById(\"target_value\").style.display = \"none\";\r\n-          resetEditorFields([\"tgt_type\", \"tgt_value\", \"is_tgt\"])\r\n-          document.getElementById(\"targetValbox\").value=\"\";\r\n-        }\r\n-\r\n-      };\r\n-\r\n-      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n-      function toggleIsSl() {\r\n-        upsertJson(\"is_sl\", stoplossSwitch.checked.toString())\r\n-        if (!(stoplossSwitch.checked)) {\r\n-          document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n-          document.getElementById(\"stoploss_value\").value = \"\";\r\n-        }\r\n-\r\n-      }\r\n-      function stoplossSwitchReflect() {\r\n-        let dropdownOfStoploss = document.getElementById(\"stoplossDropdownCtn\");\r\n-        dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n-        if (dropdownOfStoploss.style.display === \"block\") {\r\n-          document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\", function () {\r\n-            upsertJson(\"sl_type\", this.value, true)\r\n-\r\n-            document.getElementById(\"stoploss_value\").style.display = \"block\";\r\n-            let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n-            let stoplossErr = document.getElementById(\"stoplossError\");\r\n-\r\n-\r\n-            stoplossValbox?.addEventListener(\"input\", function () {\r\n-              let stoplossValue = this.value.trim();\r\n-              upsertJson(\"sl_value\", stoplossValue, false)\r\n-\r\n-              if (stoplossValue < 0) {\r\n-                stoplossErr.style.display = \"block\";\r\n-                resetEditorFields([\"sl_value\"]);\r\n-              }\r\n-              else {\r\n-                stoplossErr.style.display = \"none\";\r\n-              }\r\n-\r\n-            });\r\n-\r\n-\r\n-          });\r\n-        }\r\n-        else {\r\n-          document.getElementById(\"stoploss_value\").style.display = \"none\";\r\n-          resetEditorFields([\"sl_type\", \"sl_value\", \"is_sl\"]);\r\n-        }\r\n-\r\n-\r\n-      };\r\n-\r\n-      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n-\r\n-      function toggleIsTrailSet() {\r\n-        upsertJson(\"is_trail_set\", trailingSwitch.checked.toString());\r\n-        if (!(trailingSwitch.checked)) {\r\n-          document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n-          document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n-          document.getElementById(\"trailinggap_value\").value = \"\";\r\n-          document.getElementById(\"trailingpoint_value\").value = \"\";\r\n-        }\r\n-      }\r\n-      function trailswitchReflect() {\r\n-        let dropdownOfTrailing = document.getElementById(\"trailingDropdownCtn\");\r\n-        dropdownOfTrailing.style.display = trailingSwitch.checked ? 'block' : 'none';\r\n-\r\n-        if (dropdownOfTrailing.style.display === \"block\") {\r\n-\r\n-          document.getElementById(\"trailingdropdown\")?.addEventListener(\"change\", function () {\r\n-            upsertJson(\"trail_type\", this.value, true)\r\n-\r\n-            document.getElementById(\"trailingtrigger_value\").style.display = \"block\";\r\n-            let trailtriggerValbox = document.getElementById(\"trailtriggerValbox\");\r\n-            let trailTriggerError = document.getElementById(\"trailTriggerError\");\r\n-\r\n-\r\n-            trailtriggerValbox?.addEventListener(\"input\", function () {\r\n-\r\n-              let trailTriggerValue = this.value.trim();\r\n-              //let currentValue = editor.getValue().trim();\r\n-              upsertJson(\"trail_trigger\", trailTriggerValue, false);\r\n-\r\n-              if (trailTriggerValue < 0) {\r\n-                trailTriggerError.style.display = \"block\";\r\n-                document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n-\r\n-              }\r\n-              else {\r\n-                trailTriggerError.style.display = \"none\";\r\n-                document.getElementById(\"trailinggap_value\").style.display = \"block\";\r\n-              }\r\n-\r\n-              if (!trailTriggerValue) {\r\n-                resetEditorFields([\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n-              }\r\n-\r\n-\r\n-              //trail gap number box show\r\n-              document.getElementById(\"trailGapValbox\")?.addEventListener(\"input\", function () {\r\n-                let trailgapError = document.getElementById(\"trailGapError\");\r\n-                let trailGapValue = this.value.trim();\r\n-                //let currentValue = editor.getValue().trim();\r\n-                upsertJson(\"trail_gap\", trailGapValue, false)\r\n-                if (trailGapValue < 0) {\r\n-                  trailgapError.style.display = \"block\";\r\n-                  document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n-\r\n-                }\r\n-                else {\r\n-                  trailgapError.style.display = \"none\";\r\n-                  document.getElementById(\"trailingpoint_value\").style.display = \"block\";\r\n-                }\r\n-\r\n-                if (!trailGapValue) {\r\n-                  resetEditorFields([\"trail_gap\", \"trail_point\"])\r\n-                }\r\n-              })\r\n-\r\n-              //document.getElementById(\"trailingpoint_value\").style.display=\"block\"\r\n-\r\n-              //trail point input box\r\n-              document.getElementById(\"trailPointValbox\")?.addEventListener(\"input\", function () {\r\n-                let trailpointError = document.getElementById(\"trailPointError\");\r\n-                let trailpointVal = this.value.trim();\r\n-                //let currentValue = editor.getValue().trim();\r\n-                upsertJson(\"trail_point\", trailpointVal, false);\r\n-\r\n-                if (trailpointVal < 0) {\r\n-                  trailpointError.style.display = \"block\";\r\n-\r\n-                }\r\n-                else {\r\n-                  trailpointError.style.display = \"none\";\r\n-                }\r\n-\r\n-                if (!trailpointVal) {\r\n-                  resetEditorFields([\"trail_point\"]);\r\n-                }\r\n-              })\r\n-\r\n-\r\n-\r\n-            });\r\n-          });\r\n-        }\r\n-        else {\r\n-          document.getElementById(\"trailingtrigger_value\").style.display = \"none\";\r\n-          document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n-          document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n-          resetEditorFields([\"is_trail_set\",\"trail_type\",\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n-        }\r\n-      }\r\n-\r\n-\r\n-document.getElementById(\"productDropdown\").addEventListener(\"change\", function () {\r\n-  upsertJson(\"product\", this.value, true);\r\n-  hideAndReset(\"#productDropdown\", \"change\");\r\n-  resetEditorFields([\"script\", \"product\", \"quantity\", \"is_tgt\",])\r\n-  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"EQ\") {\r\n-    document.getElementById(\"quantityBlock\").style.display = \"block\";\r\n-    document.getElementById(\"quantityBox\").addEventListener(\"input\", function () {\r\n-      const switches = document.querySelectorAll(\"#toggleSwitchGroup .form-check-input\");\r\n-    switches.forEach(sw => sw.checked = false);\r\n-\r\n-    // Hide related dropdowns\r\n-    hideAndReset(\"#quantityBox\", \"input\");\r\n-      resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"])\r\n-   \r\n-\r\n-      upsertJson(\"quantity\", this.value, false)\r\n-      if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n-        document.getElementById(\"quantityError\").style.display = \"block\";\r\n-        document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n-        document.getElementById(\"toggleSwitchGroup\").style.display = \"none\";\r\n-      }\r\n-      else {\r\n-        document.getElementById(\"quantityError\").style.display = \"none\";\r\n-        document.getElementById(\"BtnGroup\").style.display = \"block\";\r\n-        document.getElementById(\"toggleSwitchGroup\").style.display = \"block\";\r\n-      }\r\n-      let buy = document.getElementsByClassName(\"buyBtn\")[0];\r\n-      let sell = document.getElementsByClassName(\"sellBtn\")[0];\r\n-\r\n-      buy.addEventListener(\"click\", function () {\r\n-        buy.style.background = \"green\";\r\n-        sell.style.background = \"\";\r\n-        upsertJson(\"transaction_type\", \"BUY\", true)\r\n-      })\r\n-      sell.addEventListener(\"click\", function () {\r\n-        sell.style.background = \"red\";\r\n-        buy.style.background = \"\";\r\n-        upsertJson(\"transaction_type\", \"SELL\", true)\r\n-      })\r\n-      const exitOnPurposeSwitch = document.getElementById('flexSwitchCheck1');\r\n-\r\n-      function toggleExitOnOpposite() {\r\n-        upsertJson(\"exit_on_opposite\", exitOnPurposeSwitch.checked.toString());\r\n-      }\r\n-      exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n-      const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n-      targetSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsTgt();\r\n-        targetSwitchReflect();\r\n-      })\r\n-\r\n-\r\n-\r\n-      //check the val true or false and shows box according\r\n-\r\n-      //stoploss switch\r\n-      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n-      stoplossSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsSl();\r\n-        stoplossSwitchReflect();\r\n-\r\n-      })\r\n-\r\n-      //trailing switch\r\n-      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n-      \r\n-      trailingSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsTrailSet();\r\n-        trailswitchReflect();\r\n-      })\r\n-    });\r\n-\r\n-\r\n-\r\n-    document.querySelectorAll('input[type=\"checkbox\"]').forEach(toggleBtn => {\r\n-      toggleBtn.checked = false; // turn off all switches\r\n-      document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n-      document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n-      document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n-      document.getElementById(\"target_value\").value = \"\";\r\n-      document.getElementById(\"stoploss_value\").value = \"\";\r\n-      document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n-      document.getElementById(\"trailinggap_value\").value = \"\";\r\n-      document.getElementById(\"trailingpoint_value\").value = \"\";\r\n-      targetSwitchReflect();\r\n-      stoplossSwitchReflect();\r\n-      trailswitchReflect();\r\n-\r\n-    });\r\n-\r\n-    //document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n-\r\n-    // Remove related switch values from JSON\r\n-    resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n-\r\n-    \r\n-\r\n-  }\r\n-});\r\n-\r\n-document.getElementById(\"futExpiryGap\").addEventListener(\"input\",function(){\r\n-  upsertJson(\"expiry_gap\",this.value,false)\r\n-   if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"FUT\") {\r\n-    document.getElementById(\"productType\").style.display=\"block\";\r\n-    if (document.getElementById(\"futExpiryGap\")?.value <= 0) {\r\n-        document.getElementById(\"futExpiryGapError\").style.display = \"block\";\r\n-        \r\n-      }\r\n-      else {\r\n-        document.getElementById(\"futExpiryGapError\").style.display = \"none\";\r\n-        document.getElementById(\"expiryType\").style.display=\"block\"\r\n-        document.getElementById(\"timelineDropdown\").value = \"monthly\";\r\n-        document.getElementById(\"timelineDropdown\").disabled = true;\r\n-        upsertJson(\"expiry_type\",\"monthly\",true);\r\n-\r\n-      }\r\n-    document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n-      upsertJson(\"product\",this.value,true);\r\n-      document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n-      document.getElementById(\"quantityBox\").addEventListener(\"input\", function () {\r\n-      const switches = document.querySelectorAll(\"#toggleSwitchGroup .form-check-input\");\r\n-    switches.forEach(sw => sw.checked = false);\r\n-\r\n-    // Hide related dropdowns\r\n-    hideAndReset(\"#quantityBox\", \"input\");\r\n-      resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"])\r\n-   \r\n-\r\n-      upsertJson(\"quantity\", this.value, false)\r\n-      if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n-        document.getElementById(\"quantityError\").style.display = \"block\";\r\n-        document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n-        document.getElementById(\"toggleSwitchGroup\").style.display = \"none\";\r\n-        document.getElementById(\"rolloverSwitch\").style.display = \"none\";\r\n-       \r\n-      }\r\n-      else {\r\n-        document.getElementById(\"quantityError\").style.display = \"none\";\r\n-        document.getElementById(\"BtnGroup\").style.display = \"block\";\r\n-        document.getElementById(\"toggleSwitchGroup\").style.display = \"block\";\r\n-        document.getElementById(\"rolloverSwitch\").style.display = \"block\";\r\n-       \r\n-      }\r\n-      let buy = document.getElementsByClassName(\"buyBtn\")[0];\r\n-      let sell = document.getElementsByClassName(\"sellBtn\")[0];\r\n-\r\n-      buy.addEventListener(\"click\", function () {\r\n-        buy.style.background = \"green\";\r\n-        sell.style.background = \"\";\r\n-        upsertJson(\"transaction_type\", \"BUY\", true)\r\n-      })\r\n-      sell.addEventListener(\"click\", function () {\r\n-        sell.style.background = \"red\";\r\n-        buy.style.background = \"\";\r\n-        upsertJson(\"transaction_type\", \"SELL\", true)\r\n-      })\r\n-      const exitOnPurposeSwitch = document.getElementById('flexSwitchCheck1');\r\n-\r\n-      function toggleExitOnOpposite() {\r\n-        upsertJson(\"exit_on_opposite\", exitOnPurposeSwitch.checked.toString());\r\n-      }\r\n-      exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n-      const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n-      targetSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsTgt();\r\n-        targetSwitchReflect();\r\n-      })\r\n-\r\n-      const rolloverSwitch = document.getElementById('rolloverSwitch');\r\n-      targetSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsTgt();\r\n-        targetSwitchReflect();\r\n-      })\r\n-\r\n-\r\n-\r\n-      //check the val true or false and shows box according\r\n-\r\n-      //stoploss switch\r\n-      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n-      stoplossSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsSl();\r\n-        stoplossSwitchReflect();\r\n-\r\n-      })\r\n-\r\n-      //trailing switch\r\n-      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n-      \r\n-      trailingSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsTrailSet();\r\n-        trailswitchReflect();\r\n-      })\r\n-    });\r\n-\r\n-\r\n-\r\n-    document.querySelectorAll('input[type=\"checkbox\"]').forEach(toggleBtn => {\r\n-      toggleBtn.checked = false; // turn off all switches\r\n-      document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n-      document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n-      document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n-      document.getElementById(\"target_value\").value = \"\";\r\n-      document.getElementById(\"stoploss_value\").value = \"\";\r\n-      document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n-      document.getElementById(\"trailinggap_value\").value = \"\";\r\n-      document.getElementById(\"trailingpoint_value\").value = \"\";\r\n-      targetSwitchReflect();\r\n-      stoplossSwitchReflect();\r\n-      trailswitchReflect();\r\n-\r\n-    });\r\n-\r\n-    //document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n-\r\n-    // Remove related switch values from JSON\r\n-    resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n-\r\n-\r\n-    })  \r\n-\r\n-\r\n-  }\r\n-})\r\n-\r\n-\r\n"
                },
                {
                    "date": 1756361676354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -639,10 +639,19 @@\n           resetEditorFields([\"is_trail_set\",\"trail_type\",\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n         }\r\n       }\r\n \r\n-      function toggleIsRollover();\r\n-        function rollOverSwitchReflect();\r\n+      const rolloverSwitch = document.getElementById('rolloverSwitch');\r\n+      function toggleIsRollover(){\r\n+         upsertJson(\"is_rollover\", trailingSwitch.checked.toString());\r\n+        if (!(trailingSwitch.checked)) {\r\n+          document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n+          document.getElementById(\"trailinggap_value\").value = \"\";\r\n+          document.getElementById(\"trailingpoint_value\").value = \"\";\r\n+        }\r\n+      }\r\n+        function rollOverSwitchReflect(){}\r\n \r\n document.getElementById(\"productDropdown\").addEventListener(\"change\", function () {\r\n   upsertJson(\"product\", this.value, true);\r\n   hideAndReset(\"#productDropdown\", \"change\");\r\n"
                },
                {
                    "date": 1756361708649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -644,9 +644,9 @@\n       function toggleIsRollover(){\r\n          upsertJson(\"is_rollover\", trailingSwitch.checked.toString());\r\n         if (!(trailingSwitch.checked)) {\r\n           document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n-          document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n+          document.getElementById(\"rollovervalbox\").value = \"\";\r\n           document.getElementById(\"trailinggap_value\").value = \"\";\r\n           document.getElementById(\"trailingpoint_value\").value = \"\";\r\n         }\r\n       }\r\n"
                },
                {
                    "date": 1756361724839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,880 @@\n+var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n+var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n+  return new bootstrap.Tooltip(tooltipTriggerEl)\r\n+\r\n+});\r\n+\r\n+let editor;\r\n+\r\n+require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n+\r\n+require([\"vs/editor/editor.main\"], function () {\r\n+  window.getCodeSnippet = getCodeSnippet;\r\n+\r\n+  const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n+\r\n+  function getCodeSnippet(activeType) {\r\n+    if (activeType === \"strategy_order\") {\r\n+      return `{\r\n+    \"type\": \"strategy_order\",\r\n+    \"exit_on_opposite\": false,\r\n+    \"is_tgt\": false,\r\n+    \"is_sl\": false,\r\n+    \"is_trail_set\": false,\r\n+    \"position_size\": \"{{strategy.position_size}}\",\r\n+    \"transaction_type\": \"{{strategy.order.action}}\"\r\n+}`;\r\n+    }\r\n+    else {\r\n+      return `{\r\n+    \"type\": \"${activeType}\"\r\n+}`;\r\n+    }\r\n+  }\r\n+\r\n+  editor = monaco.editor.create(container, {\r\n+    value: getCodeSnippet(\"strategy_order\"),\r\n+    language: \"json\",\r\n+    theme: \"vs-dark\",\r\n+    automaticLayout: true,\r\n+    suggestOnTriggerCharacters: false,\r\n+    quickSuggestions: false,\r\n+    wordBasedSuggestions: false,\r\n+    parameterHints: { enabled: false },\r\n+    inlineSuggest: { enabled: false },\r\n+    fontSize: 18,\r\n+    minimap: { enabled: false },\r\n+    wordWrap: \"on\",\r\n+    scrollbar: {\r\n+      vertical: \"hidden\",\r\n+      horizontal: \"hidden\",\r\n+      handleMouseWheel: false\r\n+    },\r\n+  });\r\n+\r\n+});\r\n+\r\n+\r\n+\r\n+\r\n+let activeNav = \"strategy\"; // default active\r\n+\r\n+const navLinks = document.querySelectorAll(\" .nav-link\");\r\n+\r\n+\r\n+navLinks.forEach(link => {\r\n+  link.addEventListener(\"click\", (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    // remove active from all\r\n+    navLinks.forEach(l => l.classList.remove(\"active\"));\r\n+\r\n+    // set active on clicked\r\n+    link.classList.add(\"active\");\r\n+    // update global variable\r\n+    activeNav = link.getAttribute(\"data-type\");\r\n+    localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n+    console.log(\"Active Nav:\", activeNav);\r\n+    editor.setValue(getCodeSnippet(activeNav));\r\n+  });\r\n+});\r\n+\r\n+// let originalcode;\r\n+\r\n+// if(activeNavItem===\"strategy_order\"){\r\n+//     originalcode=`{\r\n+//     \"type\": \"strategy_order\",\r\n+//     \"exit_on_opposite\": false,\r\n+//     \"is_tgt\": false,\r\n+//     \"is_sl\": false,\r\n+//     \"is_trail_set\": false,\r\n+//     \"position_size\": \"{{strategy.position_size}}\",\r\n+//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n+\r\n+// }`\r\n+// }\r\n+// else{\r\n+//     originalcode=`{\r\n+//     \"type\": \"${activeNavItem}\"\r\n+// }`\r\n+// }\r\n+\r\n+document.getElementById(\"deleteBtn\").addEventListener(\"click\", function () {\r\n+  let activeNavItem = JSON.parse(localStorage.getItem(\"activenav\"))\r\n+  editor.setValue(getCodeSnippet(activeNavItem));\r\n+\r\n+  // reset dropdown to index 0\r\n+  let scriptType = document.getElementById(\"dropdown1\");\r\n+  if (scriptType) scriptType.selectedIndex = 0;\r\n+})\r\n+\r\n+const copyBtn = document.getElementById(\"copyBtn\");\r\n+\r\n+copyBtn?.addEventListener(\"click\", function () {\r\n+  if (!editor) return;\r\n+\r\n+  // Get the current editor content\r\n+  const code = editor.getValue();\r\n+\r\n+  // Use navigator clipboard API to copy\r\n+  navigator.clipboard.writeText(code)\r\n+    .then(() => {\r\n+      alert(\"Code copied to clipboard!\");\r\n+    })\r\n+    .catch(err => {\r\n+      console.error(\"Failed to copy: \", err);\r\n+    });\r\n+});\r\n+\r\n+function upsertJson(key, value) {\r\n+  if (!editor) return;\r\n+\r\n+  let code = editor.getValue();\r\n+  let obj;\r\n+\r\n+  try {\r\n+    obj = JSON.parse(code);\r\n+  } catch (e) {\r\n+    console.error(\"Invalid JSON in editor:\", e);\r\n+    return;\r\n+  }\r\n+\r\n+  if (value === \"\" || value == null) {\r\n+    delete obj[key]; // remove key if empty\r\n+  } else {\r\n+    let parsedVal;\r\n+\r\n+    if (value === \"true\") parsedVal = true;\r\n+    else if (value === \"false\") parsedVal = false;\r\n+    else if (value === \"null\") parsedVal = null;\r\n+    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n+    else parsedVal = value; // string\r\n+\r\n+    obj[key] = parsedVal;\r\n+  }\r\n+\r\n+  editor.setValue(JSON.stringify(obj, null, 2));\r\n+}\r\n+\r\n+\r\n+//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n+\r\n+\r\n+// helper function if you need it elsewhere\r\n+//   function getActiveNav() {\r\n+//     return activeNav;\r\n+//   }\r\n+\r\n+//   console.log(getActiveNav())\r\n+\r\n+// dependency mapping\r\n+const dependencies = [\r\n+\r\n+  {\r\n+    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n+      { container: '#scriptsearchbox', field: \"#search\" },\r\n+      { container: \"#productType\", field: \"#productDropdown\" },\r\n+      { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n+      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n+      { container: \"#BtnGroup\", field: null },\r\n+      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n+      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n+      { container: \"#targetDropdownCtn\", field: \"#targetdropdown\" },\r\n+      { container: \"#target_value\", field: \"#targetValbox\" },\r\n+      { container: \"#stoplossDropdownCtn\", field: \"#stoplossdropdown\" },\r\n+      { container: \"#stoploss_value\", field: \"#stoplossValbox\" },\r\n+      { container: \"#trailingDropdownCtn\", field: \"#trailingdropdown\" },\r\n+      { container: \"#trailingtrigger_value\", field: \"#trailtriggerValbox\" },\r\n+      { container: \"#trailinggap_value\", field: \"#trailGapValbox\" },\r\n+      { container: \"#trailingpoint_value\", field: \"#trailPointValbox\" }\r\n+\r\n+\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#atmdropdown\",\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#premiumbox\",\r\n+    event: \"input\",\r\n+    targets: [\r\n+      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n+\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#productDropdown\",\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#quantityBox\",\r\n+    event: \"input\",\r\n+    targets: [\r\n+      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n+      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n+      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n+      { container: \"#targetDropdownCtn\", field: \"#targetdropdown\" },\r\n+      { container: \"#target_value\", field: \"#targetValbox\" },\r\n+      { container: \"#stoplossDropdownCtn\", field: \"#stoplossdropdown\" },\r\n+      { container: \"#stoploss_value\", field: \"#stoplossValbox\" },\r\n+      { container: \"#trailingDropdownCtn\", field: \"#trailingdropdown\" },\r\n+      { container: \"#trailingtrigger_value\", field: \"#trailtriggerValbox\" },\r\n+      { container: \"#trailinggap_value\", field: \"#trailGapValbox\" },\r\n+      { container: \"#trailingpoint_value\", field: \"#trailPointValbox\" }\r\n+\r\n+    ]\r\n+  }\r\n+];\r\n+\r\n+function hideAndReset(triggerSelector, eventType = null) {\r\n+  dependencies.forEach(dep => {\r\n+    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+      dep.targets.forEach((t, index) => {\r\n+        const container = document.querySelector(t.container);\r\n+        if (container) {\r\n+          // If it's the *direct child* (first dependent) → only reset value\r\n+          if (index === 0) {\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+              }\r\n+            }\r\n+          } else {\r\n+            // Other deeper dependents → hide + reset\r\n+            container.style.display = \"none\";\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n+                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n+                    field.checked = false;\r\n+                  } else {\r\n+                    field.value = \"\";\r\n+                  }\r\n+                }\r\n+                else if (field.tagName === \"BUTTON\") {\r\n+                  field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n+                }\r\n+              }\r\n+            }\r\n+          }\r\n+        }\r\n+      });\r\n+    }\r\n+  });\r\n+}\r\n+\r\n+function resetEditorFields(keysToReset = []) {\r\n+  try {\r\n+    // Get JSON string from editor\r\n+    let code = editor.getValue();\r\n+    let jsonObj = JSON.parse(code);\r\n+\r\n+    // Reset fields\r\n+    keysToReset.forEach(key => {\r\n+      if (jsonObj.hasOwnProperty(key)) {\r\n+        if (typeof jsonObj[key] === \"boolean\") {\r\n+          jsonObj[key] = false; // reset boolean\r\n+        } else {\r\n+          delete jsonObj[key]; // remove string/number\r\n+        }\r\n+      }\r\n+    });\r\n+\r\n+    // Update editor\r\n+    editor.setValue(JSON.stringify(jsonObj, null, 2));\r\n+  } catch (err) {\r\n+    console.error(\"Invalid JSON in editor:\", err);\r\n+  }\r\n+}\r\n+\r\n+\r\n+//add data fields to make it work\r\n+function syncEditorWithUI() {\r\n+  if (!editor) return;\r\n+\r\n+  const activeNavItem = JSON.parse(localStorage.getItem(\"activenav\")) || \"strategy_order\";\r\n+  let defaultJSON;\r\n+\r\n+  try {\r\n+    defaultJSON = JSON.parse(getCodeSnippet(activeNavItem));\r\n+  } catch {\r\n+    defaultJSON = {};\r\n+  }\r\n+\r\n+  let currentJSON;\r\n+  try {\r\n+    currentJSON = JSON.parse(editor.getValue());\r\n+  } catch {\r\n+    currentJSON = {};\r\n+  }\r\n+\r\n+  const uiFields = document.querySelectorAll(\"[data-field]\");\r\n+\r\n+  uiFields.forEach(field => {\r\n+    const key = field.dataset.field;\r\n+\r\n+    if (key === \"script_type\") return; // always keep main parent\r\n+\r\n+    const container = field.closest(\".field-container\") || field.parentElement;\r\n+    const isVisible = container ? container.style.display !== \"none\" : true;\r\n+\r\n+    if (!isVisible) {\r\n+      // Remove hidden fields from user JSON but keep default if exists\r\n+      if (typeof defaultJSON[key] === \"boolean\") {\r\n+        currentJSON[key] = false;\r\n+      } else {\r\n+        delete currentJSON[key];\r\n+      }\r\n+    } else {\r\n+      // Visible → keep current value if exists, else default\r\n+      if (!(key in currentJSON) && key in defaultJSON) {\r\n+        currentJSON[key] = defaultJSON[key];\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+  // Ensure main parent always exists\r\n+  if (!currentJSON[\"script_type\"]) {\r\n+    currentJSON[\"script_type\"] = defaultJSON[\"type\"] || \"strategy_order\";\r\n+  }\r\n+\r\n+  editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n+}\r\n+\r\n+let scriptType = document.getElementById(\"dropdown1\");\r\n+dropdown1.addEventListener(\"change\", function () {\r\n+  upsertJson(\"script_type\", this.value, true);\r\n+  upsertJson(\"is_rollover\", \"false\", false);\r\n+  hideAndReset(\"#dropdown1\", \"change\");\r\n+  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" || JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\") {\r\n+    document.getElementById(\"optionSelection\").style.display = \"block\";\r\n+    document.getElementById(\"scriptsearchbox\").style.display = \"none\";\r\n+  }\r\n+  else {\r\n+    document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n+    document.getElementById(\"optionSelection\").style.display = \"none\";\r\n+  }\r\n+})\r\n+\r\n+let searchInput = document.getElementById(\"search\");\r\n+const dropdown = document.getElementById('dropdown');\r\n+let token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n+document.addEventListener('click', (e) => {\r\n+  // Check if click is outside the input and dropdown\r\n+  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n+    dropdown.style.display = 'none';\r\n+  }\r\n+});\r\n+\r\n+// Simple debounce function\r\n+function debounce(func, delay) {\r\n+  let timer;\r\n+  return function (...args) {\r\n+    clearTimeout(timer);\r\n+    timer = setTimeout(() => func.apply(this, args), delay);\r\n+  };\r\n+}\r\n+\r\n+// Fetch API suggestions\r\n+async function fetchSuggestions(query) {\r\n+  if (!query) {\r\n+    dropdown.style.display = 'none';\r\n+    dropdown.innerHTML = '';\r\n+    return;\r\n+  }\r\n+\r\n+  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n+  try {\r\n+    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n+      method: \"POST\",\r\n+      headers: {\r\n+        \"Content-Type\": \"application/json\",\r\n+        \"Authorization\": token\r\n+      },\r\n+      body: JSON.stringify({\r\n+        script: query,\r\n+        type: scriptType\r\n+      })\r\n+    });\r\n+\r\n+    const data = await res.json();\r\n+    const suggestions = data.data;\r\n+\r\n+\r\n+    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n+    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n+\r\n+  }\r\n+  catch (err) {\r\n+    console.error(err);\r\n+  }\r\n+}\r\n+\r\n+// Add click selection\r\n+dropdown?.addEventListener('click', e => {\r\n+  if (e.target.tagName === 'LI') {\r\n+    let selectedText = e.target.textContent;\r\n+    searchInput.value = selectedText;\r\n+    // remove everything after \"(\"\r\n+    if (selectedText.includes(\"(\")) {\r\n+      selectedText = selectedText.split(\"(\")[0];\r\n+    }\r\n+    dropdown.style.display = 'none';\r\n+    upsertJson(\"script\", selectedText, true);\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"EQ\") {\r\n+      document.getElementById(\"productType\").style.display = \"block\";\r\n+    }\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"FUT\") {\r\n+      document.getElementById(\"expiryGap\").style.display = \"block\";\r\n+    }\r\n+  }\r\n+});\r\n+\r\n+searchInput.addEventListener('input', debounce(e => {\r\n+  fetchSuggestions(e.target.value);\r\n+}, 300));\r\n+\r\n+ let dropdownofTarget = document.getElementById(\"targetDropdownCtn\"); \r\n+ const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n+ //onchange toggles the switch, call the function and also shows dropdown\r\n+\r\n+      function toggleIsTgt() {\r\n+        upsertJson(\"is_tgt\", targetSwitch.checked.toString());\r\n+        if (!(targetSwitch.checked)) {\r\n+          document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"targetValbox\").value = \"\";\r\n+        }\r\n+      }\r\n+function targetSwitchReflect() {\r\n+        dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n+        if (dropdownofTarget.style.display === \"block\") {\r\n+          document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n+            upsertJson(\"tgt_type\", this.value, true);\r\n+            document.getElementById(\"target_value\").style.display = \"block\";\r\n+            document.getElementById(\"targetValbox\").value = \"\";\r\n+            let targetValBox = document.getElementById(\"targetValbox\");\r\n+            let targetErr = document.getElementById(\"targetError\");\r\n+\r\n+\r\n+            targetValBox?.addEventListener(\"input\", function () {\r\n+              upsertJson(\"tgt_value\", this.value, true)\r\n+              let targetValue = this.value.trim();\r\n+\r\n+              if (targetValue < 0) {\r\n+                targetErr.style.display = \"block\";\r\n+              }\r\n+              else {\r\n+                targetErr.style.display = \"none\";\r\n+              }\r\n+\r\n+            });\r\n+          });\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"target_value\").style.display = \"none\";\r\n+          resetEditorFields([\"tgt_type\", \"tgt_value\", \"is_tgt\"])\r\n+          document.getElementById(\"targetValbox\").value=\"\";\r\n+        }\r\n+\r\n+      };\r\n+\r\n+      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n+      function toggleIsSl() {\r\n+        upsertJson(\"is_sl\", stoplossSwitch.checked.toString())\r\n+        if (!(stoplossSwitch.checked)) {\r\n+          document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"stoploss_value\").value = \"\";\r\n+        }\r\n+\r\n+      }\r\n+      function stoplossSwitchReflect() {\r\n+        let dropdownOfStoploss = document.getElementById(\"stoplossDropdownCtn\");\r\n+        dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n+        if (dropdownOfStoploss.style.display === \"block\") {\r\n+          document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\", function () {\r\n+            upsertJson(\"sl_type\", this.value, true)\r\n+\r\n+            document.getElementById(\"stoploss_value\").style.display = \"block\";\r\n+            let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n+            let stoplossErr = document.getElementById(\"stoplossError\");\r\n+\r\n+\r\n+            stoplossValbox?.addEventListener(\"input\", function () {\r\n+              let stoplossValue = this.value.trim();\r\n+              upsertJson(\"sl_value\", stoplossValue, false)\r\n+\r\n+              if (stoplossValue < 0) {\r\n+                stoplossErr.style.display = \"block\";\r\n+                resetEditorFields([\"sl_value\"]);\r\n+              }\r\n+              else {\r\n+                stoplossErr.style.display = \"none\";\r\n+              }\r\n+\r\n+            });\r\n+\r\n+\r\n+          });\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"stoploss_value\").style.display = \"none\";\r\n+          resetEditorFields([\"sl_type\", \"sl_value\", \"is_sl\"]);\r\n+        }\r\n+\r\n+\r\n+      };\r\n+\r\n+      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n+\r\n+      function toggleIsTrailSet() {\r\n+        upsertJson(\"is_trail_set\", trailingSwitch.checked.toString());\r\n+        if (!(trailingSwitch.checked)) {\r\n+          document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n+          document.getElementById(\"trailinggap_value\").value = \"\";\r\n+          document.getElementById(\"trailingpoint_value\").value = \"\";\r\n+        }\r\n+      }\r\n+      function trailswitchReflect() {\r\n+        let dropdownOfTrailing = document.getElementById(\"trailingDropdownCtn\");\r\n+        dropdownOfTrailing.style.display = trailingSwitch.checked ? 'block' : 'none';\r\n+\r\n+        if (dropdownOfTrailing.style.display === \"block\") {\r\n+\r\n+          document.getElementById(\"trailingdropdown\")?.addEventListener(\"change\", function () {\r\n+            upsertJson(\"trail_type\", this.value, true)\r\n+\r\n+            document.getElementById(\"trailingtrigger_value\").style.display = \"block\";\r\n+            let trailtriggerValbox = document.getElementById(\"trailtriggerValbox\");\r\n+            let trailTriggerError = document.getElementById(\"trailTriggerError\");\r\n+\r\n+\r\n+            trailtriggerValbox?.addEventListener(\"input\", function () {\r\n+\r\n+              let trailTriggerValue = this.value.trim();\r\n+              //let currentValue = editor.getValue().trim();\r\n+              upsertJson(\"trail_trigger\", trailTriggerValue, false);\r\n+\r\n+              if (trailTriggerValue < 0) {\r\n+                trailTriggerError.style.display = \"block\";\r\n+                document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n+\r\n+              }\r\n+              else {\r\n+                trailTriggerError.style.display = \"none\";\r\n+                document.getElementById(\"trailinggap_value\").style.display = \"block\";\r\n+              }\r\n+\r\n+              if (!trailTriggerValue) {\r\n+                resetEditorFields([\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n+              }\r\n+\r\n+\r\n+              //trail gap number box show\r\n+              document.getElementById(\"trailGapValbox\")?.addEventListener(\"input\", function () {\r\n+                let trailgapError = document.getElementById(\"trailGapError\");\r\n+                let trailGapValue = this.value.trim();\r\n+                //let currentValue = editor.getValue().trim();\r\n+                upsertJson(\"trail_gap\", trailGapValue, false)\r\n+                if (trailGapValue < 0) {\r\n+                  trailgapError.style.display = \"block\";\r\n+                  document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n+\r\n+                }\r\n+                else {\r\n+                  trailgapError.style.display = \"none\";\r\n+                  document.getElementById(\"trailingpoint_value\").style.display = \"block\";\r\n+                }\r\n+\r\n+                if (!trailGapValue) {\r\n+                  resetEditorFields([\"trail_gap\", \"trail_point\"])\r\n+                }\r\n+              })\r\n+\r\n+              //document.getElementById(\"trailingpoint_value\").style.display=\"block\"\r\n+\r\n+              //trail point input box\r\n+              document.getElementById(\"trailPointValbox\")?.addEventListener(\"input\", function () {\r\n+                let trailpointError = document.getElementById(\"trailPointError\");\r\n+                let trailpointVal = this.value.trim();\r\n+                //let currentValue = editor.getValue().trim();\r\n+                upsertJson(\"trail_point\", trailpointVal, false);\r\n+\r\n+                if (trailpointVal < 0) {\r\n+                  trailpointError.style.display = \"block\";\r\n+\r\n+                }\r\n+                else {\r\n+                  trailpointError.style.display = \"none\";\r\n+                }\r\n+\r\n+                if (!trailpointVal) {\r\n+                  resetEditorFields([\"trail_point\"]);\r\n+                }\r\n+              })\r\n+\r\n+\r\n+\r\n+            });\r\n+          });\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"trailingtrigger_value\").style.display = \"none\";\r\n+          document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n+          document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n+          resetEditorFields([\"is_trail_set\",\"trail_type\",\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n+        }\r\n+      }\r\n+\r\n+      const rolloverSwitch = document.getElementById('rolloverSwitch');\r\n+      function toggleIsRollover(){\r\n+         upsertJson(\"is_rollover\", trailingSwitch.checked.toString());\r\n+        if (!(trailingSwitch.checked)) {\r\n+          document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"rollovervalbox\").value = \"\";\r\n+          document.getElementById(\"trailinggap_value\").value = \"\";\r\n+          document.getElementById(\"timeBox\").value = \"\";\r\n+        }\r\n+      }\r\n+        function rollOverSwitchReflect(){}\r\n+\r\n+document.getElementById(\"productDropdown\").addEventListener(\"change\", function () {\r\n+  upsertJson(\"product\", this.value, true);\r\n+  hideAndReset(\"#productDropdown\", \"change\");\r\n+  resetEditorFields([\"script\", \"product\", \"quantity\", \"is_tgt\",])\r\n+  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"EQ\") {\r\n+    document.getElementById(\"quantityBlock\").style.display = \"block\";\r\n+    document.getElementById(\"quantityBox\").addEventListener(\"input\", function () {\r\n+      const switches = document.querySelectorAll(\"#toggleSwitchGroup .form-check-input\");\r\n+    switches.forEach(sw => sw.checked = false);\r\n+\r\n+    // Hide related dropdowns\r\n+    hideAndReset(\"#quantityBox\", \"input\");\r\n+      resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"])\r\n+   \r\n+\r\n+      upsertJson(\"quantity\", this.value, false)\r\n+      if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n+        document.getElementById(\"quantityError\").style.display = \"block\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"none\";\r\n+      }\r\n+      else {\r\n+        document.getElementById(\"quantityError\").style.display = \"none\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"block\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"block\";\r\n+      }\r\n+      let buy = document.getElementsByClassName(\"buyBtn\")[0];\r\n+      let sell = document.getElementsByClassName(\"sellBtn\")[0];\r\n+\r\n+      buy.addEventListener(\"click\", function () {\r\n+        buy.style.background = \"green\";\r\n+        sell.style.background = \"\";\r\n+        upsertJson(\"transaction_type\", \"BUY\", true)\r\n+      })\r\n+      sell.addEventListener(\"click\", function () {\r\n+        sell.style.background = \"red\";\r\n+        buy.style.background = \"\";\r\n+        upsertJson(\"transaction_type\", \"SELL\", true)\r\n+      })\r\n+      const exitOnPurposeSwitch = document.getElementById('flexSwitchCheck1');\r\n+\r\n+      function toggleExitOnOpposite() {\r\n+        upsertJson(\"exit_on_opposite\", exitOnPurposeSwitch.checked.toString());\r\n+      }\r\n+      exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n+      const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n+      targetSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTgt();\r\n+        targetSwitchReflect();\r\n+      })\r\n+\r\n+\r\n+\r\n+      //check the val true or false and shows box according\r\n+\r\n+      //stoploss switch\r\n+      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n+      stoplossSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsSl();\r\n+        stoplossSwitchReflect();\r\n+\r\n+      })\r\n+\r\n+      //trailing switch\r\n+      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n+      \r\n+      trailingSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTrailSet();\r\n+        trailswitchReflect();\r\n+      })\r\n+    });\r\n+\r\n+\r\n+\r\n+    document.querySelectorAll('input[type=\"checkbox\"]').forEach(toggleBtn => {\r\n+      toggleBtn.checked = false; // turn off all switches\r\n+      document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"target_value\").value = \"\";\r\n+      document.getElementById(\"stoploss_value\").value = \"\";\r\n+      document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n+      document.getElementById(\"trailinggap_value\").value = \"\";\r\n+      document.getElementById(\"trailingpoint_value\").value = \"\";\r\n+      targetSwitchReflect();\r\n+      stoplossSwitchReflect();\r\n+      trailswitchReflect();\r\n+\r\n+    });\r\n+\r\n+    //document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n+\r\n+    // Remove related switch values from JSON\r\n+    resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n+\r\n+    \r\n+\r\n+  }\r\n+});\r\n+\r\n+document.getElementById(\"futExpiryGap\").addEventListener(\"input\",function(){\r\n+  upsertJson(\"expiry_gap\",this.value,false)\r\n+   if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"FUT\") {\r\n+    document.getElementById(\"productType\").style.display=\"block\";\r\n+    if (document.getElementById(\"futExpiryGap\")?.value <= 0) {\r\n+        document.getElementById(\"futExpiryGapError\").style.display = \"block\";\r\n+        \r\n+      }\r\n+      else {\r\n+        document.getElementById(\"futExpiryGapError\").style.display = \"none\";\r\n+        document.getElementById(\"expiryType\").style.display=\"block\"\r\n+        document.getElementById(\"timelineDropdown\").value = \"monthly\";\r\n+        document.getElementById(\"timelineDropdown\").disabled = true;\r\n+        upsertJson(\"expiry_type\",\"monthly\",true);\r\n+\r\n+      }\r\n+    document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n+      upsertJson(\"product\",this.value,true);\r\n+      document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n+      document.getElementById(\"quantityBox\").addEventListener(\"input\", function () {\r\n+      const switches = document.querySelectorAll(\"#toggleSwitchGroup .form-check-input\");\r\n+    switches.forEach(sw => sw.checked = false);\r\n+\r\n+    // Hide related dropdowns\r\n+    hideAndReset(\"#quantityBox\", \"input\");\r\n+      resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"])\r\n+   \r\n+\r\n+      upsertJson(\"quantity\", this.value, false)\r\n+      if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n+        document.getElementById(\"quantityError\").style.display = \"block\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"none\";\r\n+        document.getElementById(\"rolloverSwitch\").style.display = \"none\";\r\n+       \r\n+      }\r\n+      else {\r\n+        document.getElementById(\"quantityError\").style.display = \"none\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"block\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"block\";\r\n+        document.getElementById(\"rolloverSwitch\").style.display = \"block\";\r\n+       \r\n+      }\r\n+      let buy = document.getElementsByClassName(\"buyBtn\")[0];\r\n+      let sell = document.getElementsByClassName(\"sellBtn\")[0];\r\n+\r\n+      buy.addEventListener(\"click\", function () {\r\n+        buy.style.background = \"green\";\r\n+        sell.style.background = \"\";\r\n+        upsertJson(\"transaction_type\", \"BUY\", true)\r\n+      })\r\n+      sell.addEventListener(\"click\", function () {\r\n+        sell.style.background = \"red\";\r\n+        buy.style.background = \"\";\r\n+        upsertJson(\"transaction_type\", \"SELL\", true)\r\n+      })\r\n+      const exitOnPurposeSwitch = document.getElementById('flexSwitchCheck1');\r\n+\r\n+      function toggleExitOnOpposite() {\r\n+        upsertJson(\"exit_on_opposite\", exitOnPurposeSwitch.checked.toString());\r\n+      }\r\n+      exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n+      const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n+      targetSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTgt();\r\n+        targetSwitchReflect();\r\n+      })\r\n+\r\n+      const rolloverSwitch = document.getElementById('rolloverSwitch');\r\n+      rolloverSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsRollover();\r\n+        rollOverSwitchReflect();\r\n+      })\r\n+\r\n+\r\n+\r\n+      //check the val true or false and shows box according\r\n+\r\n+      //stoploss switch\r\n+      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n+      stoplossSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsSl();\r\n+        stoplossSwitchReflect();\r\n+\r\n+      })\r\n+\r\n+      //trailing switch\r\n+      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n+      \r\n+      trailingSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTrailSet();\r\n+        trailswitchReflect();\r\n+      })\r\n+    });\r\n+\r\n+\r\n+\r\n+    document.querySelectorAll('input[type=\"checkbox\"]').forEach(toggleBtn => {\r\n+      toggleBtn.checked = false; // turn off all switches\r\n+      document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"target_value\").value = \"\";\r\n+      document.getElementById(\"stoploss_value\").value = \"\";\r\n+      document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n+      document.getElementById(\"trailinggap_value\").value = \"\";\r\n+      document.getElementById(\"trailingpoint_value\").value = \"\";\r\n+      targetSwitchReflect();\r\n+      stoplossSwitchReflect();\r\n+      trailswitchReflect();\r\n+\r\n+    });\r\n+\r\n+    //document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n+\r\n+    // Remove related switch values from JSON\r\n+    resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n+\r\n+\r\n+    })  \r\n+\r\n+\r\n+  }\r\n+})\r\n+\r\n+\r\n"
                },
                {
                    "date": 1756361734095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -643,10 +643,8 @@\n       const rolloverSwitch = document.getElementById('rolloverSwitch');\r\n       function toggleIsRollover(){\r\n          upsertJson(\"is_rollover\", trailingSwitch.checked.toString());\r\n         if (!(trailingSwitch.checked)) {\r\n-          document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n-          document.getElementById(\"rollovervalbox\").value = \"\";\r\n           document.getElementById(\"trailinggap_value\").value = \"\";\r\n           document.getElementById(\"timeBox\").value = \"\";\r\n         }\r\n       }\r\n@@ -877,884 +875,4 @@\n   }\r\n })\r\n \r\n \r\n-var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n-var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n-  return new bootstrap.Tooltip(tooltipTriggerEl)\r\n-\r\n-});\r\n-\r\n-let editor;\r\n-\r\n-require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n-\r\n-require([\"vs/editor/editor.main\"], function () {\r\n-  window.getCodeSnippet = getCodeSnippet;\r\n-\r\n-  const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n-\r\n-  function getCodeSnippet(activeType) {\r\n-    if (activeType === \"strategy_order\") {\r\n-      return `{\r\n-    \"type\": \"strategy_order\",\r\n-    \"exit_on_opposite\": false,\r\n-    \"is_tgt\": false,\r\n-    \"is_sl\": false,\r\n-    \"is_trail_set\": false,\r\n-    \"position_size\": \"{{strategy.position_size}}\",\r\n-    \"transaction_type\": \"{{strategy.order.action}}\"\r\n-}`;\r\n-    }\r\n-    else {\r\n-      return `{\r\n-    \"type\": \"${activeType}\"\r\n-}`;\r\n-    }\r\n-  }\r\n-\r\n-  editor = monaco.editor.create(container, {\r\n-    value: getCodeSnippet(\"strategy_order\"),\r\n-    language: \"json\",\r\n-    theme: \"vs-dark\",\r\n-    automaticLayout: true,\r\n-    suggestOnTriggerCharacters: false,\r\n-    quickSuggestions: false,\r\n-    wordBasedSuggestions: false,\r\n-    parameterHints: { enabled: false },\r\n-    inlineSuggest: { enabled: false },\r\n-    fontSize: 18,\r\n-    minimap: { enabled: false },\r\n-    wordWrap: \"on\",\r\n-    scrollbar: {\r\n-      vertical: \"hidden\",\r\n-      horizontal: \"hidden\",\r\n-      handleMouseWheel: false\r\n-    },\r\n-  });\r\n-\r\n-});\r\n-\r\n-\r\n-\r\n-\r\n-let activeNav = \"strategy\"; // default active\r\n-\r\n-const navLinks = document.querySelectorAll(\" .nav-link\");\r\n-\r\n-\r\n-navLinks.forEach(link => {\r\n-  link.addEventListener(\"click\", (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    // remove active from all\r\n-    navLinks.forEach(l => l.classList.remove(\"active\"));\r\n-\r\n-    // set active on clicked\r\n-    link.classList.add(\"active\");\r\n-    // update global variable\r\n-    activeNav = link.getAttribute(\"data-type\");\r\n-    localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n-    console.log(\"Active Nav:\", activeNav);\r\n-    editor.setValue(getCodeSnippet(activeNav));\r\n-  });\r\n-});\r\n-\r\n-// let originalcode;\r\n-\r\n-// if(activeNavItem===\"strategy_order\"){\r\n-//     originalcode=`{\r\n-//     \"type\": \"strategy_order\",\r\n-//     \"exit_on_opposite\": false,\r\n-//     \"is_tgt\": false,\r\n-//     \"is_sl\": false,\r\n-//     \"is_trail_set\": false,\r\n-//     \"position_size\": \"{{strategy.position_size}}\",\r\n-//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n-\r\n-// }`\r\n-// }\r\n-// else{\r\n-//     originalcode=`{\r\n-//     \"type\": \"${activeNavItem}\"\r\n-// }`\r\n-// }\r\n-\r\n-document.getElementById(\"deleteBtn\").addEventListener(\"click\", function () {\r\n-  let activeNavItem = JSON.parse(localStorage.getItem(\"activenav\"))\r\n-  editor.setValue(getCodeSnippet(activeNavItem));\r\n-\r\n-  // reset dropdown to index 0\r\n-  let scriptType = document.getElementById(\"dropdown1\");\r\n-  if (scriptType) scriptType.selectedIndex = 0;\r\n-})\r\n-\r\n-const copyBtn = document.getElementById(\"copyBtn\");\r\n-\r\n-copyBtn?.addEventListener(\"click\", function () {\r\n-  if (!editor) return;\r\n-\r\n-  // Get the current editor content\r\n-  const code = editor.getValue();\r\n-\r\n-  // Use navigator clipboard API to copy\r\n-  navigator.clipboard.writeText(code)\r\n-    .then(() => {\r\n-      alert(\"Code copied to clipboard!\");\r\n-    })\r\n-    .catch(err => {\r\n-      console.error(\"Failed to copy: \", err);\r\n-    });\r\n-});\r\n-\r\n-function upsertJson(key, value) {\r\n-  if (!editor) return;\r\n-\r\n-  let code = editor.getValue();\r\n-  let obj;\r\n-\r\n-  try {\r\n-    obj = JSON.parse(code);\r\n-  } catch (e) {\r\n-    console.error(\"Invalid JSON in editor:\", e);\r\n-    return;\r\n-  }\r\n-\r\n-  if (value === \"\" || value == null) {\r\n-    delete obj[key]; // remove key if empty\r\n-  } else {\r\n-    let parsedVal;\r\n-\r\n-    if (value === \"true\") parsedVal = true;\r\n-    else if (value === \"false\") parsedVal = false;\r\n-    else if (value === \"null\") parsedVal = null;\r\n-    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n-    else parsedVal = value; // string\r\n-\r\n-    obj[key] = parsedVal;\r\n-  }\r\n-\r\n-  editor.setValue(JSON.stringify(obj, null, 2));\r\n-}\r\n-\r\n-\r\n-//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n-\r\n-\r\n-// helper function if you need it elsewhere\r\n-//   function getActiveNav() {\r\n-//     return activeNav;\r\n-//   }\r\n-\r\n-//   console.log(getActiveNav())\r\n-\r\n-// dependency mapping\r\n-const dependencies = [\r\n-\r\n-  {\r\n-    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n-      { container: '#scriptsearchbox', field: \"#search\" },\r\n-      { container: \"#productType\", field: \"#productDropdown\" },\r\n-      { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n-      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n-      { container: \"#BtnGroup\", field: null },\r\n-      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n-      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n-      { container: \"#targetDropdownCtn\", field: \"#targetdropdown\" },\r\n-      { container: \"#target_value\", field: \"#targetValbox\" },\r\n-      { container: \"#stoplossDropdownCtn\", field: \"#stoplossdropdown\" },\r\n-      { container: \"#stoploss_value\", field: \"#stoplossValbox\" },\r\n-      { container: \"#trailingDropdownCtn\", field: \"#trailingdropdown\" },\r\n-      { container: \"#trailingtrigger_value\", field: \"#trailtriggerValbox\" },\r\n-      { container: \"#trailinggap_value\", field: \"#trailGapValbox\" },\r\n-      { container: \"#trailingpoint_value\", field: \"#trailPointValbox\" }\r\n-\r\n-\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#atmdropdown\",\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#premiumbox\",\r\n-    event: \"input\",\r\n-    targets: [\r\n-      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n-\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#productDropdown\",\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#quantityBox\",\r\n-    event: \"input\",\r\n-    targets: [\r\n-      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n-      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n-      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n-      { container: \"#targetDropdownCtn\", field: \"#targetdropdown\" },\r\n-      { container: \"#target_value\", field: \"#targetValbox\" },\r\n-      { container: \"#stoplossDropdownCtn\", field: \"#stoplossdropdown\" },\r\n-      { container: \"#stoploss_value\", field: \"#stoplossValbox\" },\r\n-      { container: \"#trailingDropdownCtn\", field: \"#trailingdropdown\" },\r\n-      { container: \"#trailingtrigger_value\", field: \"#trailtriggerValbox\" },\r\n-      { container: \"#trailinggap_value\", field: \"#trailGapValbox\" },\r\n-      { container: \"#trailingpoint_value\", field: \"#trailPointValbox\" }\r\n-\r\n-    ]\r\n-  }\r\n-];\r\n-\r\n-function hideAndReset(triggerSelector, eventType = null) {\r\n-  dependencies.forEach(dep => {\r\n-    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-      dep.targets.forEach((t, index) => {\r\n-        const container = document.querySelector(t.container);\r\n-        if (container) {\r\n-          // If it's the *direct child* (first dependent) → only reset value\r\n-          if (index === 0) {\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-              }\r\n-            }\r\n-          } else {\r\n-            // Other deeper dependents → hide + reset\r\n-            container.style.display = \"none\";\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n-                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-                    field.checked = false;\r\n-                  } else {\r\n-                    field.value = \"\";\r\n-                  }\r\n-                }\r\n-                else if (field.tagName === \"BUTTON\") {\r\n-                  field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n-                }\r\n-              }\r\n-            }\r\n-          }\r\n-        }\r\n-      });\r\n-    }\r\n-  });\r\n-}\r\n-\r\n-function resetEditorFields(keysToReset = []) {\r\n-  try {\r\n-    // Get JSON string from editor\r\n-    let code = editor.getValue();\r\n-    let jsonObj = JSON.parse(code);\r\n-\r\n-    // Reset fields\r\n-    keysToReset.forEach(key => {\r\n-      if (jsonObj.hasOwnProperty(key)) {\r\n-        if (typeof jsonObj[key] === \"boolean\") {\r\n-          jsonObj[key] = false; // reset boolean\r\n-        } else {\r\n-          delete jsonObj[key]; // remove string/number\r\n-        }\r\n-      }\r\n-    });\r\n-\r\n-    // Update editor\r\n-    editor.setValue(JSON.stringify(jsonObj, null, 2));\r\n-  } catch (err) {\r\n-    console.error(\"Invalid JSON in editor:\", err);\r\n-  }\r\n-}\r\n-\r\n-\r\n-//add data fields to make it work\r\n-function syncEditorWithUI() {\r\n-  if (!editor) return;\r\n-\r\n-  const activeNavItem = JSON.parse(localStorage.getItem(\"activenav\")) || \"strategy_order\";\r\n-  let defaultJSON;\r\n-\r\n-  try {\r\n-    defaultJSON = JSON.parse(getCodeSnippet(activeNavItem));\r\n-  } catch {\r\n-    defaultJSON = {};\r\n-  }\r\n-\r\n-  let currentJSON;\r\n-  try {\r\n-    currentJSON = JSON.parse(editor.getValue());\r\n-  } catch {\r\n-    currentJSON = {};\r\n-  }\r\n-\r\n-  const uiFields = document.querySelectorAll(\"[data-field]\");\r\n-\r\n-  uiFields.forEach(field => {\r\n-    const key = field.dataset.field;\r\n-\r\n-    if (key === \"script_type\") return; // always keep main parent\r\n-\r\n-    const container = field.closest(\".field-container\") || field.parentElement;\r\n-    const isVisible = container ? container.style.display !== \"none\" : true;\r\n-\r\n-    if (!isVisible) {\r\n-      // Remove hidden fields from user JSON but keep default if exists\r\n-      if (typeof defaultJSON[key] === \"boolean\") {\r\n-        currentJSON[key] = false;\r\n-      } else {\r\n-        delete currentJSON[key];\r\n-      }\r\n-    } else {\r\n-      // Visible → keep current value if exists, else default\r\n-      if (!(key in currentJSON) && key in defaultJSON) {\r\n-        currentJSON[key] = defaultJSON[key];\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-  // Ensure main parent always exists\r\n-  if (!currentJSON[\"script_type\"]) {\r\n-    currentJSON[\"script_type\"] = defaultJSON[\"type\"] || \"strategy_order\";\r\n-  }\r\n-\r\n-  editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n-}\r\n-\r\n-let scriptType = document.getElementById(\"dropdown1\");\r\n-dropdown1.addEventListener(\"change\", function () {\r\n-  upsertJson(\"script_type\", this.value, true);\r\n-  upsertJson(\"is_rollover\", \"false\", false);\r\n-  hideAndReset(\"#dropdown1\", \"change\");\r\n-  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" || JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\") {\r\n-    document.getElementById(\"optionSelection\").style.display = \"block\";\r\n-    document.getElementById(\"scriptsearchbox\").style.display = \"none\";\r\n-  }\r\n-  else {\r\n-    document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n-    document.getElementById(\"optionSelection\").style.display = \"none\";\r\n-  }\r\n-})\r\n-\r\n-let searchInput = document.getElementById(\"search\");\r\n-const dropdown = document.getElementById('dropdown');\r\n-let token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n-document.addEventListener('click', (e) => {\r\n-  // Check if click is outside the input and dropdown\r\n-  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n-    dropdown.style.display = 'none';\r\n-  }\r\n-});\r\n-\r\n-// Simple debounce function\r\n-function debounce(func, delay) {\r\n-  let timer;\r\n-  return function (...args) {\r\n-    clearTimeout(timer);\r\n-    timer = setTimeout(() => func.apply(this, args), delay);\r\n-  };\r\n-}\r\n-\r\n-// Fetch API suggestions\r\n-async function fetchSuggestions(query) {\r\n-  if (!query) {\r\n-    dropdown.style.display = 'none';\r\n-    dropdown.innerHTML = '';\r\n-    return;\r\n-  }\r\n-\r\n-  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n-  try {\r\n-    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n-      method: \"POST\",\r\n-      headers: {\r\n-        \"Content-Type\": \"application/json\",\r\n-        \"Authorization\": token\r\n-      },\r\n-      body: JSON.stringify({\r\n-        script: query,\r\n-        type: scriptType\r\n-      })\r\n-    });\r\n-\r\n-    const data = await res.json();\r\n-    const suggestions = data.data;\r\n-\r\n-\r\n-    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n-    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n-\r\n-  }\r\n-  catch (err) {\r\n-    console.error(err);\r\n-  }\r\n-}\r\n-\r\n-// Add click selection\r\n-dropdown?.addEventListener('click', e => {\r\n-  if (e.target.tagName === 'LI') {\r\n-    let selectedText = e.target.textContent;\r\n-    searchInput.value = selectedText;\r\n-    // remove everything after \"(\"\r\n-    if (selectedText.includes(\"(\")) {\r\n-      selectedText = selectedText.split(\"(\")[0];\r\n-    }\r\n-    dropdown.style.display = 'none';\r\n-    upsertJson(\"script\", selectedText, true);\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"EQ\") {\r\n-      document.getElementById(\"productType\").style.display = \"block\";\r\n-    }\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"FUT\") {\r\n-      document.getElementById(\"expiryGap\").style.display = \"block\";\r\n-    }\r\n-  }\r\n-});\r\n-\r\n-searchInput.addEventListener('input', debounce(e => {\r\n-  fetchSuggestions(e.target.value);\r\n-}, 300));\r\n-\r\n- let dropdownofTarget = document.getElementById(\"targetDropdownCtn\"); \r\n- const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n- //onchange toggles the switch, call the function and also shows dropdown\r\n-\r\n-      function toggleIsTgt() {\r\n-        upsertJson(\"is_tgt\", targetSwitch.checked.toString());\r\n-        if (!(targetSwitch.checked)) {\r\n-          document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n-          document.getElementById(\"targetValbox\").value = \"\";\r\n-        }\r\n-      }\r\n-function targetSwitchReflect() {\r\n-        dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n-        if (dropdownofTarget.style.display === \"block\") {\r\n-          document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n-            upsertJson(\"tgt_type\", this.value, true);\r\n-            document.getElementById(\"target_value\").style.display = \"block\";\r\n-            document.getElementById(\"targetValbox\").value = \"\";\r\n-            let targetValBox = document.getElementById(\"targetValbox\");\r\n-            let targetErr = document.getElementById(\"targetError\");\r\n-\r\n-\r\n-            targetValBox?.addEventListener(\"input\", function () {\r\n-              upsertJson(\"tgt_value\", this.value, true)\r\n-              let targetValue = this.value.trim();\r\n-\r\n-              if (targetValue < 0) {\r\n-                targetErr.style.display = \"block\";\r\n-              }\r\n-              else {\r\n-                targetErr.style.display = \"none\";\r\n-              }\r\n-\r\n-            });\r\n-          });\r\n-        }\r\n-        else {\r\n-          document.getElementById(\"target_value\").style.display = \"none\";\r\n-          resetEditorFields([\"tgt_type\", \"tgt_value\", \"is_tgt\"])\r\n-          document.getElementById(\"targetValbox\").value=\"\";\r\n-        }\r\n-\r\n-      };\r\n-\r\n-      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n-      function toggleIsSl() {\r\n-        upsertJson(\"is_sl\", stoplossSwitch.checked.toString())\r\n-        if (!(stoplossSwitch.checked)) {\r\n-          document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n-          document.getElementById(\"stoploss_value\").value = \"\";\r\n-        }\r\n-\r\n-      }\r\n-      function stoplossSwitchReflect() {\r\n-        let dropdownOfStoploss = document.getElementById(\"stoplossDropdownCtn\");\r\n-        dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n-        if (dropdownOfStoploss.style.display === \"block\") {\r\n-          document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\", function () {\r\n-            upsertJson(\"sl_type\", this.value, true)\r\n-\r\n-            document.getElementById(\"stoploss_value\").style.display = \"block\";\r\n-            let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n-            let stoplossErr = document.getElementById(\"stoplossError\");\r\n-\r\n-\r\n-            stoplossValbox?.addEventListener(\"input\", function () {\r\n-              let stoplossValue = this.value.trim();\r\n-              upsertJson(\"sl_value\", stoplossValue, false)\r\n-\r\n-              if (stoplossValue < 0) {\r\n-                stoplossErr.style.display = \"block\";\r\n-                resetEditorFields([\"sl_value\"]);\r\n-              }\r\n-              else {\r\n-                stoplossErr.style.display = \"none\";\r\n-              }\r\n-\r\n-            });\r\n-\r\n-\r\n-          });\r\n-        }\r\n-        else {\r\n-          document.getElementById(\"stoploss_value\").style.display = \"none\";\r\n-          resetEditorFields([\"sl_type\", \"sl_value\", \"is_sl\"]);\r\n-        }\r\n-\r\n-\r\n-      };\r\n-\r\n-      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n-\r\n-      function toggleIsTrailSet() {\r\n-        upsertJson(\"is_trail_set\", trailingSwitch.checked.toString());\r\n-        if (!(trailingSwitch.checked)) {\r\n-          document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n-          document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n-          document.getElementById(\"trailinggap_value\").value = \"\";\r\n-          document.getElementById(\"trailingpoint_value\").value = \"\";\r\n-        }\r\n-      }\r\n-      function trailswitchReflect() {\r\n-        let dropdownOfTrailing = document.getElementById(\"trailingDropdownCtn\");\r\n-        dropdownOfTrailing.style.display = trailingSwitch.checked ? 'block' : 'none';\r\n-\r\n-        if (dropdownOfTrailing.style.display === \"block\") {\r\n-\r\n-          document.getElementById(\"trailingdropdown\")?.addEventListener(\"change\", function () {\r\n-            upsertJson(\"trail_type\", this.value, true)\r\n-\r\n-            document.getElementById(\"trailingtrigger_value\").style.display = \"block\";\r\n-            let trailtriggerValbox = document.getElementById(\"trailtriggerValbox\");\r\n-            let trailTriggerError = document.getElementById(\"trailTriggerError\");\r\n-\r\n-\r\n-            trailtriggerValbox?.addEventListener(\"input\", function () {\r\n-\r\n-              let trailTriggerValue = this.value.trim();\r\n-              //let currentValue = editor.getValue().trim();\r\n-              upsertJson(\"trail_trigger\", trailTriggerValue, false);\r\n-\r\n-              if (trailTriggerValue < 0) {\r\n-                trailTriggerError.style.display = \"block\";\r\n-                document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n-\r\n-              }\r\n-              else {\r\n-                trailTriggerError.style.display = \"none\";\r\n-                document.getElementById(\"trailinggap_value\").style.display = \"block\";\r\n-              }\r\n-\r\n-              if (!trailTriggerValue) {\r\n-                resetEditorFields([\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n-              }\r\n-\r\n-\r\n-              //trail gap number box show\r\n-              document.getElementById(\"trailGapValbox\")?.addEventListener(\"input\", function () {\r\n-                let trailgapError = document.getElementById(\"trailGapError\");\r\n-                let trailGapValue = this.value.trim();\r\n-                //let currentValue = editor.getValue().trim();\r\n-                upsertJson(\"trail_gap\", trailGapValue, false)\r\n-                if (trailGapValue < 0) {\r\n-                  trailgapError.style.display = \"block\";\r\n-                  document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n-\r\n-                }\r\n-                else {\r\n-                  trailgapError.style.display = \"none\";\r\n-                  document.getElementById(\"trailingpoint_value\").style.display = \"block\";\r\n-                }\r\n-\r\n-                if (!trailGapValue) {\r\n-                  resetEditorFields([\"trail_gap\", \"trail_point\"])\r\n-                }\r\n-              })\r\n-\r\n-              //document.getElementById(\"trailingpoint_value\").style.display=\"block\"\r\n-\r\n-              //trail point input box\r\n-              document.getElementById(\"trailPointValbox\")?.addEventListener(\"input\", function () {\r\n-                let trailpointError = document.getElementById(\"trailPointError\");\r\n-                let trailpointVal = this.value.trim();\r\n-                //let currentValue = editor.getValue().trim();\r\n-                upsertJson(\"trail_point\", trailpointVal, false);\r\n-\r\n-                if (trailpointVal < 0) {\r\n-                  trailpointError.style.display = \"block\";\r\n-\r\n-                }\r\n-                else {\r\n-                  trailpointError.style.display = \"none\";\r\n-                }\r\n-\r\n-                if (!trailpointVal) {\r\n-                  resetEditorFields([\"trail_point\"]);\r\n-                }\r\n-              })\r\n-\r\n-\r\n-\r\n-            });\r\n-          });\r\n-        }\r\n-        else {\r\n-          document.getElementById(\"trailingtrigger_value\").style.display = \"none\";\r\n-          document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n-          document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n-          resetEditorFields([\"is_trail_set\",\"trail_type\",\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n-        }\r\n-      }\r\n-\r\n-      const rolloverSwitch = document.getElementById('rolloverSwitch');\r\n-      function toggleIsRollover(){\r\n-         upsertJson(\"is_rollover\", trailingSwitch.checked.toString());\r\n-        if (!(trailingSwitch.checked)) {\r\n-          document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n-          document.getElementById(\"rollovervalbox\").value = \"\";\r\n-          document.getElementById(\"trailinggap_value\").value = \"\";\r\n-          document.getElementById(\"trailingpoint_value\").value = \"\";\r\n-        }\r\n-      }\r\n-        function rollOverSwitchReflect(){}\r\n-\r\n-document.getElementById(\"productDropdown\").addEventListener(\"change\", function () {\r\n-  upsertJson(\"product\", this.value, true);\r\n-  hideAndReset(\"#productDropdown\", \"change\");\r\n-  resetEditorFields([\"script\", \"product\", \"quantity\", \"is_tgt\",])\r\n-  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"EQ\") {\r\n-    document.getElementById(\"quantityBlock\").style.display = \"block\";\r\n-    document.getElementById(\"quantityBox\").addEventListener(\"input\", function () {\r\n-      const switches = document.querySelectorAll(\"#toggleSwitchGroup .form-check-input\");\r\n-    switches.forEach(sw => sw.checked = false);\r\n-\r\n-    // Hide related dropdowns\r\n-    hideAndReset(\"#quantityBox\", \"input\");\r\n-      resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"])\r\n-   \r\n-\r\n-      upsertJson(\"quantity\", this.value, false)\r\n-      if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n-        document.getElementById(\"quantityError\").style.display = \"block\";\r\n-        document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n-        document.getElementById(\"toggleSwitchGroup\").style.display = \"none\";\r\n-      }\r\n-      else {\r\n-        document.getElementById(\"quantityError\").style.display = \"none\";\r\n-        document.getElementById(\"BtnGroup\").style.display = \"block\";\r\n-        document.getElementById(\"toggleSwitchGroup\").style.display = \"block\";\r\n-      }\r\n-      let buy = document.getElementsByClassName(\"buyBtn\")[0];\r\n-      let sell = document.getElementsByClassName(\"sellBtn\")[0];\r\n-\r\n-      buy.addEventListener(\"click\", function () {\r\n-        buy.style.background = \"green\";\r\n-        sell.style.background = \"\";\r\n-        upsertJson(\"transaction_type\", \"BUY\", true)\r\n-      })\r\n-      sell.addEventListener(\"click\", function () {\r\n-        sell.style.background = \"red\";\r\n-        buy.style.background = \"\";\r\n-        upsertJson(\"transaction_type\", \"SELL\", true)\r\n-      })\r\n-      const exitOnPurposeSwitch = document.getElementById('flexSwitchCheck1');\r\n-\r\n-      function toggleExitOnOpposite() {\r\n-        upsertJson(\"exit_on_opposite\", exitOnPurposeSwitch.checked.toString());\r\n-      }\r\n-      exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n-      const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n-      targetSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsTgt();\r\n-        targetSwitchReflect();\r\n-      })\r\n-\r\n-\r\n-\r\n-      //check the val true or false and shows box according\r\n-\r\n-      //stoploss switch\r\n-      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n-      stoplossSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsSl();\r\n-        stoplossSwitchReflect();\r\n-\r\n-      })\r\n-\r\n-      //trailing switch\r\n-      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n-      \r\n-      trailingSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsTrailSet();\r\n-        trailswitchReflect();\r\n-      })\r\n-    });\r\n-\r\n-\r\n-\r\n-    document.querySelectorAll('input[type=\"checkbox\"]').forEach(toggleBtn => {\r\n-      toggleBtn.checked = false; // turn off all switches\r\n-      document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n-      document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n-      document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n-      document.getElementById(\"target_value\").value = \"\";\r\n-      document.getElementById(\"stoploss_value\").value = \"\";\r\n-      document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n-      document.getElementById(\"trailinggap_value\").value = \"\";\r\n-      document.getElementById(\"trailingpoint_value\").value = \"\";\r\n-      targetSwitchReflect();\r\n-      stoplossSwitchReflect();\r\n-      trailswitchReflect();\r\n-\r\n-    });\r\n-\r\n-    //document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n-\r\n-    // Remove related switch values from JSON\r\n-    resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n-\r\n-    \r\n-\r\n-  }\r\n-});\r\n-\r\n-document.getElementById(\"futExpiryGap\").addEventListener(\"input\",function(){\r\n-  upsertJson(\"expiry_gap\",this.value,false)\r\n-   if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"FUT\") {\r\n-    document.getElementById(\"productType\").style.display=\"block\";\r\n-    if (document.getElementById(\"futExpiryGap\")?.value <= 0) {\r\n-        document.getElementById(\"futExpiryGapError\").style.display = \"block\";\r\n-        \r\n-      }\r\n-      else {\r\n-        document.getElementById(\"futExpiryGapError\").style.display = \"none\";\r\n-        document.getElementById(\"expiryType\").style.display=\"block\"\r\n-        document.getElementById(\"timelineDropdown\").value = \"monthly\";\r\n-        document.getElementById(\"timelineDropdown\").disabled = true;\r\n-        upsertJson(\"expiry_type\",\"monthly\",true);\r\n-\r\n-      }\r\n-    document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n-      upsertJson(\"product\",this.value,true);\r\n-      document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n-      document.getElementById(\"quantityBox\").addEventListener(\"input\", function () {\r\n-      const switches = document.querySelectorAll(\"#toggleSwitchGroup .form-check-input\");\r\n-    switches.forEach(sw => sw.checked = false);\r\n-\r\n-    // Hide related dropdowns\r\n-    hideAndReset(\"#quantityBox\", \"input\");\r\n-      resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"])\r\n-   \r\n-\r\n-      upsertJson(\"quantity\", this.value, false)\r\n-      if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n-        document.getElementById(\"quantityError\").style.display = \"block\";\r\n-        document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n-        document.getElementById(\"toggleSwitchGroup\").style.display = \"none\";\r\n-        document.getElementById(\"rolloverSwitch\").style.display = \"none\";\r\n-       \r\n-      }\r\n-      else {\r\n-        document.getElementById(\"quantityError\").style.display = \"none\";\r\n-        document.getElementById(\"BtnGroup\").style.display = \"block\";\r\n-        document.getElementById(\"toggleSwitchGroup\").style.display = \"block\";\r\n-        document.getElementById(\"rolloverSwitch\").style.display = \"block\";\r\n-       \r\n-      }\r\n-      let buy = document.getElementsByClassName(\"buyBtn\")[0];\r\n-      let sell = document.getElementsByClassName(\"sellBtn\")[0];\r\n-\r\n-      buy.addEventListener(\"click\", function () {\r\n-        buy.style.background = \"green\";\r\n-        sell.style.background = \"\";\r\n-        upsertJson(\"transaction_type\", \"BUY\", true)\r\n-      })\r\n-      sell.addEventListener(\"click\", function () {\r\n-        sell.style.background = \"red\";\r\n-        buy.style.background = \"\";\r\n-        upsertJson(\"transaction_type\", \"SELL\", true)\r\n-      })\r\n-      const exitOnPurposeSwitch = document.getElementById('flexSwitchCheck1');\r\n-\r\n-      function toggleExitOnOpposite() {\r\n-        upsertJson(\"exit_on_opposite\", exitOnPurposeSwitch.checked.toString());\r\n-      }\r\n-      exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n-      const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n-      targetSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsTgt();\r\n-        targetSwitchReflect();\r\n-      })\r\n-\r\n-      const rolloverSwitch = document.getElementById('rolloverSwitch');\r\n-      rolloverSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsRollover();\r\n-        rollOverSwitchReflect();\r\n-      })\r\n-\r\n-\r\n-\r\n-      //check the val true or false and shows box according\r\n-\r\n-      //stoploss switch\r\n-      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n-      stoplossSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsSl();\r\n-        stoplossSwitchReflect();\r\n-\r\n-      })\r\n-\r\n-      //trailing switch\r\n-      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n-      \r\n-      trailingSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsTrailSet();\r\n-        trailswitchReflect();\r\n-      })\r\n-    });\r\n-\r\n-\r\n-\r\n-    document.querySelectorAll('input[type=\"checkbox\"]').forEach(toggleBtn => {\r\n-      toggleBtn.checked = false; // turn off all switches\r\n-      document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n-      document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n-      document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n-      document.getElementById(\"target_value\").value = \"\";\r\n-      document.getElementById(\"stoploss_value\").value = \"\";\r\n-      document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n-      document.getElementById(\"trailinggap_value\").value = \"\";\r\n-      document.getElementById(\"trailingpoint_value\").value = \"\";\r\n-      targetSwitchReflect();\r\n-      stoplossSwitchReflect();\r\n-      trailswitchReflect();\r\n-\r\n-    });\r\n-\r\n-    //document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n-\r\n-    // Remove related switch values from JSON\r\n-    resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n-\r\n-\r\n-    })  \r\n-\r\n-\r\n-  }\r\n-})\r\n-\r\n-\r\n"
                },
                {
                    "date": 1756361825216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -188,9 +188,12 @@\n       { container: \"#stoploss_value\", field: \"#stoplossValbox\" },\r\n       { container: \"#trailingDropdownCtn\", field: \"#trailingdropdown\" },\r\n       { container: \"#trailingtrigger_value\", field: \"#trailtriggerValbox\" },\r\n       { container: \"#trailinggap_value\", field: \"#trailGapValbox\" },\r\n-      { container: \"#trailingpoint_value\", field: \"#trailPointValbox\" }\r\n+      { container: \"#trailingpoint_value\", field: \"#trailPointValbox\" },\r\n+      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n+      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n+      \r\n \r\n \r\n     ]\r\n   },\r\n@@ -647,10 +650,13 @@\n           document.getElementById(\"trailinggap_value\").value = \"\";\r\n           document.getElementById(\"timeBox\").value = \"\";\r\n         }\r\n       }\r\n-        function rollOverSwitchReflect(){}\r\n+        function rollOverSwitchReflect(){\r\n \r\n+\r\n+        }\r\n+\r\n document.getElementById(\"productDropdown\").addEventListener(\"change\", function () {\r\n   upsertJson(\"product\", this.value, true);\r\n   hideAndReset(\"#productDropdown\", \"change\");\r\n   resetEditorFields([\"script\", \"product\", \"quantity\", \"is_tgt\",])\r\n"
                },
                {
                    "date": 1756361866476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -232,9 +232,12 @@\n       { container: \"#stoploss_value\", field: \"#stoplossValbox\" },\r\n       { container: \"#trailingDropdownCtn\", field: \"#trailingdropdown\" },\r\n       { container: \"#trailingtrigger_value\", field: \"#trailtriggerValbox\" },\r\n       { container: \"#trailinggap_value\", field: \"#trailGapValbox\" },\r\n-      { container: \"#trailingpoint_value\", field: \"#trailPointValbox\" }\r\n+      { container: \"#trailingpoint_value\", field: \"#trailPointValbox\" },\r\n+      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n+      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n+      \r\n \r\n     ]\r\n   }\r\n ];\r\n"
                },
                {
                    "date": 1756361905530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -361,9 +361,9 @@\n   editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n }\r\n \r\n let scriptType = document.getElementById(\"dropdown1\");\r\n-dropdown1.addEventListener(\"change\", function () {\r\n+scriptType.addEventListener(\"change\", function () {\r\n   upsertJson(\"script_type\", this.value, true);\r\n   upsertJson(\"is_rollover\", \"false\", false);\r\n   hideAndReset(\"#dropdown1\", \"change\");\r\n   if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" || JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\") {\r\n"
                },
                {
                    "date": 1756362016678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -654,12 +654,44 @@\n           document.getElementById(\"timeBox\").value = \"\";\r\n         }\r\n       }\r\n         function rollOverSwitchReflect(){\r\n+          let dropdownOfrollover = document.getElementById(\"rollover_value\");\r\n+        dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n+        if (dropdownOfStoploss.style.display === \"block\") {\r\n+          document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\", function () {\r\n+            upsertJson(\"sl_type\", this.value, true)\r\n \r\n+            document.getElementById(\"stoploss_value\").style.display = \"block\";\r\n+            let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n+            let stoplossErr = document.getElementById(\"stoplossError\");\r\n \r\n+\r\n+            stoplossValbox?.addEventListener(\"input\", function () {\r\n+              let stoplossValue = this.value.trim();\r\n+              upsertJson(\"sl_value\", stoplossValue, false)\r\n+\r\n+              if (stoplossValue < 0) {\r\n+                stoplossErr.style.display = \"block\";\r\n+                resetEditorFields([\"sl_value\"]);\r\n+              }\r\n+              else {\r\n+                stoplossErr.style.display = \"none\";\r\n+              }\r\n+\r\n+            });\r\n+\r\n+\r\n+          });\r\n         }\r\n+        else {\r\n+          document.getElementById(\"stoploss_value\").style.display = \"none\";\r\n+          resetEditorFields([\"sl_type\", \"sl_value\", \"is_sl\"]);\r\n+        }\r\n \r\n+\r\n+        }\r\n+\r\n document.getElementById(\"productDropdown\").addEventListener(\"change\", function () {\r\n   upsertJson(\"product\", this.value, true);\r\n   hideAndReset(\"#productDropdown\", \"change\");\r\n   resetEditorFields([\"script\", \"product\", \"quantity\", \"is_tgt\",])\r\n"
                },
                {
                    "date": 1756362026606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -654,9 +654,9 @@\n           document.getElementById(\"timeBox\").value = \"\";\r\n         }\r\n       }\r\n         function rollOverSwitchReflect(){\r\n-          let dropdownOfrollover = document.getElementById(\"rollover_value\");\r\n+          let rolloverVal = document.getElementById(\"rollover_value\");\r\n         dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n         if (dropdownOfStoploss.style.display === \"block\") {\r\n           document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\", function () {\r\n             upsertJson(\"sl_type\", this.value, true)\r\n"
                },
                {
                    "date": 1756362036878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -655,9 +655,9 @@\n         }\r\n       }\r\n         function rollOverSwitchReflect(){\r\n           let rolloverVal = document.getElementById(\"rollover_value\");\r\n-        dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n+        rolloverVal.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n         if (dropdownOfStoploss.style.display === \"block\") {\r\n           document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\", function () {\r\n             upsertJson(\"sl_type\", this.value, true)\r\n \r\n"
                },
                {
                    "date": 1756362054140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -656,10 +656,10 @@\n       }\r\n         function rollOverSwitchReflect(){\r\n           let rolloverVal = document.getElementById(\"rollover_value\");\r\n         rolloverVal.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n-        if (dropdownOfStoploss.style.display === \"block\") {\r\n-          document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\", function () {\r\n+        if (rolloverVal.style.display === \"block\") {\r\n+          document.getElementById(\"rolloverVal\")?.addEventListener(\"input\", function () {\r\n             upsertJson(\"sl_type\", this.value, true)\r\n \r\n             document.getElementById(\"stoploss_value\").style.display = \"block\";\r\n             let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n"
                },
                {
                    "date": 1756362080126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -658,9 +658,9 @@\n           let rolloverVal = document.getElementById(\"rollover_value\");\r\n         rolloverVal.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n         if (rolloverVal.style.display === \"block\") {\r\n           document.getElementById(\"rolloverVal\")?.addEventListener(\"input\", function () {\r\n-            upsertJson(\"sl_type\", this.value, true)\r\n+            upsertJson(\"rollover_gap\", this.value, true)\r\n \r\n             document.getElementById(\"stoploss_value\").style.display = \"block\";\r\n             let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n             let stoplossErr = document.getElementById(\"stoplossError\");\r\n"
                },
                {
                    "date": 1756362171371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -659,14 +659,8 @@\n         rolloverVal.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n         if (rolloverVal.style.display === \"block\") {\r\n           document.getElementById(\"rolloverVal\")?.addEventListener(\"input\", function () {\r\n             upsertJson(\"rollover_gap\", this.value, true)\r\n-\r\n-            document.getElementById(\"stoploss_value\").style.display = \"block\";\r\n-            let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n-            let stoplossErr = document.getElementById(\"stoplossError\");\r\n-\r\n-\r\n             stoplossValbox?.addEventListener(\"input\", function () {\r\n               let stoplossValue = this.value.trim();\r\n               upsertJson(\"sl_value\", stoplossValue, false)\r\n \r\n"
                },
                {
                    "date": 1756362184465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -659,9 +659,9 @@\n         rolloverVal.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n         if (rolloverVal.style.display === \"block\") {\r\n           document.getElementById(\"rolloverVal\")?.addEventListener(\"input\", function () {\r\n             upsertJson(\"rollover_gap\", this.value, true)\r\n-            stoplossValbox?.addEventListener(\"input\", function () {\r\n+\r\n               let stoplossValue = this.value.trim();\r\n               upsertJson(\"sl_value\", stoplossValue, false)\r\n \r\n               if (stoplossValue < 0) {\r\n@@ -671,11 +671,8 @@\n               else {\r\n                 stoplossErr.style.display = \"none\";\r\n               }\r\n \r\n-            });\r\n-\r\n-\r\n           });\r\n         }\r\n         else {\r\n           document.getElementById(\"stoploss_value\").style.display = \"none\";\r\n"
                },
                {
                    "date": 1756362200389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -658,13 +658,10 @@\n           let rolloverVal = document.getElementById(\"rollover_value\");\r\n         rolloverVal.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n         if (rolloverVal.style.display === \"block\") {\r\n           document.getElementById(\"rolloverVal\")?.addEventListener(\"input\", function () {\r\n-            upsertJson(\"rollover_gap\", this.value, true)\r\n+            upsertJson(\"rollover_gap\", this.value, true);\r\n \r\n-              let stoplossValue = this.value.trim();\r\n-              upsertJson(\"sl_value\", stoplossValue, false)\r\n-\r\n               if (stoplossValue < 0) {\r\n                 stoplossErr.style.display = \"block\";\r\n                 resetEditorFields([\"sl_value\"]);\r\n               }\r\n"
                },
                {
                    "date": 1756362266186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -657,11 +657,12 @@\n         function rollOverSwitchReflect(){\r\n           let rolloverVal = document.getElementById(\"rollover_value\");\r\n         rolloverVal.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n         if (rolloverVal.style.display === \"block\") {\r\n-          document.getElementById(\"rolloverVal\")?.addEventListener(\"input\", function () {\r\n+          document.getElementById(\"rollovervalbox\")?.addEventListener(\"input\", function () {\r\n             upsertJson(\"rollover_gap\", this.value, true);\r\n \r\n+\r\n               if (stoplossValue < 0) {\r\n                 stoplossErr.style.display = \"block\";\r\n                 resetEditorFields([\"sl_value\"]);\r\n               }\r\n"
                },
                {
                    "date": 1756362288823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -659,10 +659,8 @@\n         rolloverVal.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n         if (rolloverVal.style.display === \"block\") {\r\n           document.getElementById(\"rollovervalbox\")?.addEventListener(\"input\", function () {\r\n             upsertJson(\"rollover_gap\", this.value, true);\r\n-\r\n-\r\n               if (stoplossValue < 0) {\r\n                 stoplossErr.style.display = \"block\";\r\n                 resetEditorFields([\"sl_value\"]);\r\n               }\r\n"
                },
                {
                    "date": 1756362304926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,906 @@\n+var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n+var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n+  return new bootstrap.Tooltip(tooltipTriggerEl)\r\n+\r\n+});\r\n+\r\n+let editor;\r\n+\r\n+require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n+\r\n+require([\"vs/editor/editor.main\"], function () {\r\n+  window.getCodeSnippet = getCodeSnippet;\r\n+\r\n+  const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n+\r\n+  function getCodeSnippet(activeType) {\r\n+    if (activeType === \"strategy_order\") {\r\n+      return `{\r\n+    \"type\": \"strategy_order\",\r\n+    \"exit_on_opposite\": false,\r\n+    \"is_tgt\": false,\r\n+    \"is_sl\": false,\r\n+    \"is_trail_set\": false,\r\n+    \"position_size\": \"{{strategy.position_size}}\",\r\n+    \"transaction_type\": \"{{strategy.order.action}}\"\r\n+}`;\r\n+    }\r\n+    else {\r\n+      return `{\r\n+    \"type\": \"${activeType}\"\r\n+}`;\r\n+    }\r\n+  }\r\n+\r\n+  editor = monaco.editor.create(container, {\r\n+    value: getCodeSnippet(\"strategy_order\"),\r\n+    language: \"json\",\r\n+    theme: \"vs-dark\",\r\n+    automaticLayout: true,\r\n+    suggestOnTriggerCharacters: false,\r\n+    quickSuggestions: false,\r\n+    wordBasedSuggestions: false,\r\n+    parameterHints: { enabled: false },\r\n+    inlineSuggest: { enabled: false },\r\n+    fontSize: 18,\r\n+    minimap: { enabled: false },\r\n+    wordWrap: \"on\",\r\n+    scrollbar: {\r\n+      vertical: \"hidden\",\r\n+      horizontal: \"hidden\",\r\n+      handleMouseWheel: false\r\n+    },\r\n+  });\r\n+\r\n+});\r\n+\r\n+\r\n+\r\n+\r\n+let activeNav = \"strategy\"; // default active\r\n+\r\n+const navLinks = document.querySelectorAll(\" .nav-link\");\r\n+\r\n+\r\n+navLinks.forEach(link => {\r\n+  link.addEventListener(\"click\", (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    // remove active from all\r\n+    navLinks.forEach(l => l.classList.remove(\"active\"));\r\n+\r\n+    // set active on clicked\r\n+    link.classList.add(\"active\");\r\n+    // update global variable\r\n+    activeNav = link.getAttribute(\"data-type\");\r\n+    localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n+    console.log(\"Active Nav:\", activeNav);\r\n+    editor.setValue(getCodeSnippet(activeNav));\r\n+  });\r\n+});\r\n+\r\n+// let originalcode;\r\n+\r\n+// if(activeNavItem===\"strategy_order\"){\r\n+//     originalcode=`{\r\n+//     \"type\": \"strategy_order\",\r\n+//     \"exit_on_opposite\": false,\r\n+//     \"is_tgt\": false,\r\n+//     \"is_sl\": false,\r\n+//     \"is_trail_set\": false,\r\n+//     \"position_size\": \"{{strategy.position_size}}\",\r\n+//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n+\r\n+// }`\r\n+// }\r\n+// else{\r\n+//     originalcode=`{\r\n+//     \"type\": \"${activeNavItem}\"\r\n+// }`\r\n+// }\r\n+\r\n+document.getElementById(\"deleteBtn\").addEventListener(\"click\", function () {\r\n+  let activeNavItem = JSON.parse(localStorage.getItem(\"activenav\"))\r\n+  editor.setValue(getCodeSnippet(activeNavItem));\r\n+\r\n+  // reset dropdown to index 0\r\n+  let scriptType = document.getElementById(\"dropdown1\");\r\n+  if (scriptType) scriptType.selectedIndex = 0;\r\n+})\r\n+\r\n+const copyBtn = document.getElementById(\"copyBtn\");\r\n+\r\n+copyBtn?.addEventListener(\"click\", function () {\r\n+  if (!editor) return;\r\n+\r\n+  // Get the current editor content\r\n+  const code = editor.getValue();\r\n+\r\n+  // Use navigator clipboard API to copy\r\n+  navigator.clipboard.writeText(code)\r\n+    .then(() => {\r\n+      alert(\"Code copied to clipboard!\");\r\n+    })\r\n+    .catch(err => {\r\n+      console.error(\"Failed to copy: \", err);\r\n+    });\r\n+});\r\n+\r\n+function upsertJson(key, value) {\r\n+  if (!editor) return;\r\n+\r\n+  let code = editor.getValue();\r\n+  let obj;\r\n+\r\n+  try {\r\n+    obj = JSON.parse(code);\r\n+  } catch (e) {\r\n+    console.error(\"Invalid JSON in editor:\", e);\r\n+    return;\r\n+  }\r\n+\r\n+  if (value === \"\" || value == null) {\r\n+    delete obj[key]; // remove key if empty\r\n+  } else {\r\n+    let parsedVal;\r\n+\r\n+    if (value === \"true\") parsedVal = true;\r\n+    else if (value === \"false\") parsedVal = false;\r\n+    else if (value === \"null\") parsedVal = null;\r\n+    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n+    else parsedVal = value; // string\r\n+\r\n+    obj[key] = parsedVal;\r\n+  }\r\n+\r\n+  editor.setValue(JSON.stringify(obj, null, 2));\r\n+}\r\n+\r\n+\r\n+//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n+\r\n+\r\n+// helper function if you need it elsewhere\r\n+//   function getActiveNav() {\r\n+//     return activeNav;\r\n+//   }\r\n+\r\n+//   console.log(getActiveNav())\r\n+\r\n+// dependency mapping\r\n+const dependencies = [\r\n+\r\n+  {\r\n+    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n+      { container: '#scriptsearchbox', field: \"#search\" },\r\n+      { container: \"#productType\", field: \"#productDropdown\" },\r\n+      { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n+      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n+      { container: \"#BtnGroup\", field: null },\r\n+      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n+      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n+      { container: \"#targetDropdownCtn\", field: \"#targetdropdown\" },\r\n+      { container: \"#target_value\", field: \"#targetValbox\" },\r\n+      { container: \"#stoplossDropdownCtn\", field: \"#stoplossdropdown\" },\r\n+      { container: \"#stoploss_value\", field: \"#stoplossValbox\" },\r\n+      { container: \"#trailingDropdownCtn\", field: \"#trailingdropdown\" },\r\n+      { container: \"#trailingtrigger_value\", field: \"#trailtriggerValbox\" },\r\n+      { container: \"#trailinggap_value\", field: \"#trailGapValbox\" },\r\n+      { container: \"#trailingpoint_value\", field: \"#trailPointValbox\" },\r\n+      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n+      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n+      \r\n+\r\n+\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#atmdropdown\",\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#premiumbox\",\r\n+    event: \"input\",\r\n+    targets: [\r\n+      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n+\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#productDropdown\",\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#quantityBox\",\r\n+    event: \"input\",\r\n+    targets: [\r\n+      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n+      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n+      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n+      { container: \"#targetDropdownCtn\", field: \"#targetdropdown\" },\r\n+      { container: \"#target_value\", field: \"#targetValbox\" },\r\n+      { container: \"#stoplossDropdownCtn\", field: \"#stoplossdropdown\" },\r\n+      { container: \"#stoploss_value\", field: \"#stoplossValbox\" },\r\n+      { container: \"#trailingDropdownCtn\", field: \"#trailingdropdown\" },\r\n+      { container: \"#trailingtrigger_value\", field: \"#trailtriggerValbox\" },\r\n+      { container: \"#trailinggap_value\", field: \"#trailGapValbox\" },\r\n+      { container: \"#trailingpoint_value\", field: \"#trailPointValbox\" },\r\n+      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n+      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n+      \r\n+\r\n+    ]\r\n+  }\r\n+];\r\n+\r\n+function hideAndReset(triggerSelector, eventType = null) {\r\n+  dependencies.forEach(dep => {\r\n+    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+      dep.targets.forEach((t, index) => {\r\n+        const container = document.querySelector(t.container);\r\n+        if (container) {\r\n+          // If it's the *direct child* (first dependent) → only reset value\r\n+          if (index === 0) {\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+              }\r\n+            }\r\n+          } else {\r\n+            // Other deeper dependents → hide + reset\r\n+            container.style.display = \"none\";\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n+                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n+                    field.checked = false;\r\n+                  } else {\r\n+                    field.value = \"\";\r\n+                  }\r\n+                }\r\n+                else if (field.tagName === \"BUTTON\") {\r\n+                  field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n+                }\r\n+              }\r\n+            }\r\n+          }\r\n+        }\r\n+      });\r\n+    }\r\n+  });\r\n+}\r\n+\r\n+function resetEditorFields(keysToReset = []) {\r\n+  try {\r\n+    // Get JSON string from editor\r\n+    let code = editor.getValue();\r\n+    let jsonObj = JSON.parse(code);\r\n+\r\n+    // Reset fields\r\n+    keysToReset.forEach(key => {\r\n+      if (jsonObj.hasOwnProperty(key)) {\r\n+        if (typeof jsonObj[key] === \"boolean\") {\r\n+          jsonObj[key] = false; // reset boolean\r\n+        } else {\r\n+          delete jsonObj[key]; // remove string/number\r\n+        }\r\n+      }\r\n+    });\r\n+\r\n+    // Update editor\r\n+    editor.setValue(JSON.stringify(jsonObj, null, 2));\r\n+  } catch (err) {\r\n+    console.error(\"Invalid JSON in editor:\", err);\r\n+  }\r\n+}\r\n+\r\n+\r\n+//add data fields to make it work\r\n+function syncEditorWithUI() {\r\n+  if (!editor) return;\r\n+\r\n+  const activeNavItem = JSON.parse(localStorage.getItem(\"activenav\")) || \"strategy_order\";\r\n+  let defaultJSON;\r\n+\r\n+  try {\r\n+    defaultJSON = JSON.parse(getCodeSnippet(activeNavItem));\r\n+  } catch {\r\n+    defaultJSON = {};\r\n+  }\r\n+\r\n+  let currentJSON;\r\n+  try {\r\n+    currentJSON = JSON.parse(editor.getValue());\r\n+  } catch {\r\n+    currentJSON = {};\r\n+  }\r\n+\r\n+  const uiFields = document.querySelectorAll(\"[data-field]\");\r\n+\r\n+  uiFields.forEach(field => {\r\n+    const key = field.dataset.field;\r\n+\r\n+    if (key === \"script_type\") return; // always keep main parent\r\n+\r\n+    const container = field.closest(\".field-container\") || field.parentElement;\r\n+    const isVisible = container ? container.style.display !== \"none\" : true;\r\n+\r\n+    if (!isVisible) {\r\n+      // Remove hidden fields from user JSON but keep default if exists\r\n+      if (typeof defaultJSON[key] === \"boolean\") {\r\n+        currentJSON[key] = false;\r\n+      } else {\r\n+        delete currentJSON[key];\r\n+      }\r\n+    } else {\r\n+      // Visible → keep current value if exists, else default\r\n+      if (!(key in currentJSON) && key in defaultJSON) {\r\n+        currentJSON[key] = defaultJSON[key];\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+  // Ensure main parent always exists\r\n+  if (!currentJSON[\"script_type\"]) {\r\n+    currentJSON[\"script_type\"] = defaultJSON[\"type\"] || \"strategy_order\";\r\n+  }\r\n+\r\n+  editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n+}\r\n+\r\n+let scriptType = document.getElementById(\"dropdown1\");\r\n+scriptType.addEventListener(\"change\", function () {\r\n+  upsertJson(\"script_type\", this.value, true);\r\n+  upsertJson(\"is_rollover\", \"false\", false);\r\n+  hideAndReset(\"#dropdown1\", \"change\");\r\n+  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" || JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\") {\r\n+    document.getElementById(\"optionSelection\").style.display = \"block\";\r\n+    document.getElementById(\"scriptsearchbox\").style.display = \"none\";\r\n+  }\r\n+  else {\r\n+    document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n+    document.getElementById(\"optionSelection\").style.display = \"none\";\r\n+  }\r\n+})\r\n+\r\n+let searchInput = document.getElementById(\"search\");\r\n+const dropdown = document.getElementById('dropdown');\r\n+let token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n+document.addEventListener('click', (e) => {\r\n+  // Check if click is outside the input and dropdown\r\n+  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n+    dropdown.style.display = 'none';\r\n+  }\r\n+});\r\n+\r\n+// Simple debounce function\r\n+function debounce(func, delay) {\r\n+  let timer;\r\n+  return function (...args) {\r\n+    clearTimeout(timer);\r\n+    timer = setTimeout(() => func.apply(this, args), delay);\r\n+  };\r\n+}\r\n+\r\n+// Fetch API suggestions\r\n+async function fetchSuggestions(query) {\r\n+  if (!query) {\r\n+    dropdown.style.display = 'none';\r\n+    dropdown.innerHTML = '';\r\n+    return;\r\n+  }\r\n+\r\n+  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n+  try {\r\n+    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n+      method: \"POST\",\r\n+      headers: {\r\n+        \"Content-Type\": \"application/json\",\r\n+        \"Authorization\": token\r\n+      },\r\n+      body: JSON.stringify({\r\n+        script: query,\r\n+        type: scriptType\r\n+      })\r\n+    });\r\n+\r\n+    const data = await res.json();\r\n+    const suggestions = data.data;\r\n+\r\n+\r\n+    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n+    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n+\r\n+  }\r\n+  catch (err) {\r\n+    console.error(err);\r\n+  }\r\n+}\r\n+\r\n+// Add click selection\r\n+dropdown?.addEventListener('click', e => {\r\n+  if (e.target.tagName === 'LI') {\r\n+    let selectedText = e.target.textContent;\r\n+    searchInput.value = selectedText;\r\n+    // remove everything after \"(\"\r\n+    if (selectedText.includes(\"(\")) {\r\n+      selectedText = selectedText.split(\"(\")[0];\r\n+    }\r\n+    dropdown.style.display = 'none';\r\n+    upsertJson(\"script\", selectedText, true);\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"EQ\") {\r\n+      document.getElementById(\"productType\").style.display = \"block\";\r\n+    }\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"FUT\") {\r\n+      document.getElementById(\"expiryGap\").style.display = \"block\";\r\n+    }\r\n+  }\r\n+});\r\n+\r\n+searchInput.addEventListener('input', debounce(e => {\r\n+  fetchSuggestions(e.target.value);\r\n+}, 300));\r\n+\r\n+ let dropdownofTarget = document.getElementById(\"targetDropdownCtn\"); \r\n+ const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n+ //onchange toggles the switch, call the function and also shows dropdown\r\n+\r\n+      function toggleIsTgt() {\r\n+        upsertJson(\"is_tgt\", targetSwitch.checked.toString());\r\n+        if (!(targetSwitch.checked)) {\r\n+          document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"targetValbox\").value = \"\";\r\n+        }\r\n+      }\r\n+function targetSwitchReflect() {\r\n+        dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n+        if (dropdownofTarget.style.display === \"block\") {\r\n+          document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n+            upsertJson(\"tgt_type\", this.value, true);\r\n+            document.getElementById(\"target_value\").style.display = \"block\";\r\n+            document.getElementById(\"targetValbox\").value = \"\";\r\n+            let targetValBox = document.getElementById(\"targetValbox\");\r\n+            let targetErr = document.getElementById(\"targetError\");\r\n+\r\n+\r\n+            targetValBox?.addEventListener(\"input\", function () {\r\n+              upsertJson(\"tgt_value\", this.value, true)\r\n+              let targetValue = this.value.trim();\r\n+\r\n+              if (targetValue < 0) {\r\n+                targetErr.style.display = \"block\";\r\n+              }\r\n+              else {\r\n+                targetErr.style.display = \"none\";\r\n+              }\r\n+\r\n+            });\r\n+          });\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"target_value\").style.display = \"none\";\r\n+          resetEditorFields([\"tgt_type\", \"tgt_value\", \"is_tgt\"])\r\n+          document.getElementById(\"targetValbox\").value=\"\";\r\n+        }\r\n+\r\n+      };\r\n+\r\n+      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n+      function toggleIsSl() {\r\n+        upsertJson(\"is_sl\", stoplossSwitch.checked.toString())\r\n+        if (!(stoplossSwitch.checked)) {\r\n+          document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"stoploss_value\").value = \"\";\r\n+        }\r\n+\r\n+      }\r\n+      function stoplossSwitchReflect() {\r\n+        let dropdownOfStoploss = document.getElementById(\"stoplossDropdownCtn\");\r\n+        dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n+        if (dropdownOfStoploss.style.display === \"block\") {\r\n+          document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\", function () {\r\n+            upsertJson(\"sl_type\", this.value, true)\r\n+\r\n+            document.getElementById(\"stoploss_value\").style.display = \"block\";\r\n+            let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n+            let stoplossErr = document.getElementById(\"stoplossError\");\r\n+\r\n+\r\n+            stoplossValbox?.addEventListener(\"input\", function () {\r\n+              let stoplossValue = this.value.trim();\r\n+              upsertJson(\"sl_value\", stoplossValue, false)\r\n+\r\n+              if (stoplossValue < 0) {\r\n+                stoplossErr.style.display = \"block\";\r\n+                resetEditorFields([\"sl_value\"]);\r\n+              }\r\n+              else {\r\n+                stoplossErr.style.display = \"none\";\r\n+              }\r\n+\r\n+            });\r\n+\r\n+\r\n+          });\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"stoploss_value\").style.display = \"none\";\r\n+          resetEditorFields([\"sl_type\", \"sl_value\", \"is_sl\"]);\r\n+        }\r\n+\r\n+\r\n+      };\r\n+\r\n+      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n+\r\n+      function toggleIsTrailSet() {\r\n+        upsertJson(\"is_trail_set\", trailingSwitch.checked.toString());\r\n+        if (!(trailingSwitch.checked)) {\r\n+          document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n+          document.getElementById(\"trailinggap_value\").value = \"\";\r\n+          document.getElementById(\"trailingpoint_value\").value = \"\";\r\n+        }\r\n+      }\r\n+      function trailswitchReflect() {\r\n+        let dropdownOfTrailing = document.getElementById(\"trailingDropdownCtn\");\r\n+        dropdownOfTrailing.style.display = trailingSwitch.checked ? 'block' : 'none';\r\n+\r\n+        if (dropdownOfTrailing.style.display === \"block\") {\r\n+\r\n+          document.getElementById(\"trailingdropdown\")?.addEventListener(\"change\", function () {\r\n+            upsertJson(\"trail_type\", this.value, true)\r\n+\r\n+            document.getElementById(\"trailingtrigger_value\").style.display = \"block\";\r\n+            let trailtriggerValbox = document.getElementById(\"trailtriggerValbox\");\r\n+            let trailTriggerError = document.getElementById(\"trailTriggerError\");\r\n+\r\n+\r\n+            trailtriggerValbox?.addEventListener(\"input\", function () {\r\n+\r\n+              let trailTriggerValue = this.value.trim();\r\n+              //let currentValue = editor.getValue().trim();\r\n+              upsertJson(\"trail_trigger\", trailTriggerValue, false);\r\n+\r\n+              if (trailTriggerValue < 0) {\r\n+                trailTriggerError.style.display = \"block\";\r\n+                document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n+\r\n+              }\r\n+              else {\r\n+                trailTriggerError.style.display = \"none\";\r\n+                document.getElementById(\"trailinggap_value\").style.display = \"block\";\r\n+              }\r\n+\r\n+              if (!trailTriggerValue) {\r\n+                resetEditorFields([\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n+              }\r\n+\r\n+\r\n+              //trail gap number box show\r\n+              document.getElementById(\"trailGapValbox\")?.addEventListener(\"input\", function () {\r\n+                let trailgapError = document.getElementById(\"trailGapError\");\r\n+                let trailGapValue = this.value.trim();\r\n+                //let currentValue = editor.getValue().trim();\r\n+                upsertJson(\"trail_gap\", trailGapValue, false)\r\n+                if (trailGapValue < 0) {\r\n+                  trailgapError.style.display = \"block\";\r\n+                  document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n+\r\n+                }\r\n+                else {\r\n+                  trailgapError.style.display = \"none\";\r\n+                  document.getElementById(\"trailingpoint_value\").style.display = \"block\";\r\n+                }\r\n+\r\n+                if (!trailGapValue) {\r\n+                  resetEditorFields([\"trail_gap\", \"trail_point\"])\r\n+                }\r\n+              })\r\n+\r\n+              //document.getElementById(\"trailingpoint_value\").style.display=\"block\"\r\n+\r\n+              //trail point input box\r\n+              document.getElementById(\"trailPointValbox\")?.addEventListener(\"input\", function () {\r\n+                let trailpointError = document.getElementById(\"trailPointError\");\r\n+                let trailpointVal = this.value.trim();\r\n+                //let currentValue = editor.getValue().trim();\r\n+                upsertJson(\"trail_point\", trailpointVal, false);\r\n+\r\n+                if (trailpointVal < 0) {\r\n+                  trailpointError.style.display = \"block\";\r\n+\r\n+                }\r\n+                else {\r\n+                  trailpointError.style.display = \"none\";\r\n+                }\r\n+\r\n+                if (!trailpointVal) {\r\n+                  resetEditorFields([\"trail_point\"]);\r\n+                }\r\n+              })\r\n+\r\n+\r\n+\r\n+            });\r\n+          });\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"trailingtrigger_value\").style.display = \"none\";\r\n+          document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n+          document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n+          resetEditorFields([\"is_trail_set\",\"trail_type\",\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n+        }\r\n+      }\r\n+\r\n+      const rolloverSwitch = document.getElementById('rolloverSwitch');\r\n+      function toggleIsRollover(){\r\n+         upsertJson(\"is_rollover\", trailingSwitch.checked.toString());\r\n+        if (!(trailingSwitch.checked)) {\r\n+          document.getElementById(\"trailinggap_value\").value = \"\";\r\n+          document.getElementById(\"timeBox\").value = \"\";\r\n+        }\r\n+      }\r\n+        function rollOverSwitchReflect(){\r\n+          let rolloverVal = document.getElementById(\"rollover_value\");\r\n+        rolloverVal.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n+        if (rolloverVal.style.display === \"block\") {\r\n+          document.getElementById(\"rollovervalbox\")?.addEventListener(\"input\", function () {\r\n+            upsertJson(\"rollover_gap\", this.value, true);\r\n+              if (document.getElementById(\"rollovervalbox\")?.value < 0) {\r\n+                stoplossErr.style.display = \"block\";\r\n+                resetEditorFields([\"sl_value\"]);\r\n+              }\r\n+              else {\r\n+                stoplossErr.style.display = \"none\";\r\n+              }\r\n+\r\n+          });\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"stoploss_value\").style.display = \"none\";\r\n+          resetEditorFields([\"sl_type\", \"sl_value\", \"is_sl\"]);\r\n+        }\r\n+\r\n+\r\n+        }\r\n+\r\n+document.getElementById(\"productDropdown\").addEventListener(\"change\", function () {\r\n+  upsertJson(\"product\", this.value, true);\r\n+  hideAndReset(\"#productDropdown\", \"change\");\r\n+  resetEditorFields([\"script\", \"product\", \"quantity\", \"is_tgt\",])\r\n+  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"EQ\") {\r\n+    document.getElementById(\"quantityBlock\").style.display = \"block\";\r\n+    document.getElementById(\"quantityBox\").addEventListener(\"input\", function () {\r\n+      const switches = document.querySelectorAll(\"#toggleSwitchGroup .form-check-input\");\r\n+    switches.forEach(sw => sw.checked = false);\r\n+\r\n+    // Hide related dropdowns\r\n+    hideAndReset(\"#quantityBox\", \"input\");\r\n+      resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"])\r\n+   \r\n+\r\n+      upsertJson(\"quantity\", this.value, false)\r\n+      if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n+        document.getElementById(\"quantityError\").style.display = \"block\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"none\";\r\n+      }\r\n+      else {\r\n+        document.getElementById(\"quantityError\").style.display = \"none\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"block\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"block\";\r\n+      }\r\n+      let buy = document.getElementsByClassName(\"buyBtn\")[0];\r\n+      let sell = document.getElementsByClassName(\"sellBtn\")[0];\r\n+\r\n+      buy.addEventListener(\"click\", function () {\r\n+        buy.style.background = \"green\";\r\n+        sell.style.background = \"\";\r\n+        upsertJson(\"transaction_type\", \"BUY\", true)\r\n+      })\r\n+      sell.addEventListener(\"click\", function () {\r\n+        sell.style.background = \"red\";\r\n+        buy.style.background = \"\";\r\n+        upsertJson(\"transaction_type\", \"SELL\", true)\r\n+      })\r\n+      const exitOnPurposeSwitch = document.getElementById('flexSwitchCheck1');\r\n+\r\n+      function toggleExitOnOpposite() {\r\n+        upsertJson(\"exit_on_opposite\", exitOnPurposeSwitch.checked.toString());\r\n+      }\r\n+      exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n+      const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n+      targetSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTgt();\r\n+        targetSwitchReflect();\r\n+      })\r\n+\r\n+\r\n+\r\n+      //check the val true or false and shows box according\r\n+\r\n+      //stoploss switch\r\n+      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n+      stoplossSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsSl();\r\n+        stoplossSwitchReflect();\r\n+\r\n+      })\r\n+\r\n+      //trailing switch\r\n+      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n+      \r\n+      trailingSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTrailSet();\r\n+        trailswitchReflect();\r\n+      })\r\n+    });\r\n+\r\n+\r\n+\r\n+    document.querySelectorAll('input[type=\"checkbox\"]').forEach(toggleBtn => {\r\n+      toggleBtn.checked = false; // turn off all switches\r\n+      document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"target_value\").value = \"\";\r\n+      document.getElementById(\"stoploss_value\").value = \"\";\r\n+      document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n+      document.getElementById(\"trailinggap_value\").value = \"\";\r\n+      document.getElementById(\"trailingpoint_value\").value = \"\";\r\n+      targetSwitchReflect();\r\n+      stoplossSwitchReflect();\r\n+      trailswitchReflect();\r\n+\r\n+    });\r\n+\r\n+    //document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n+\r\n+    // Remove related switch values from JSON\r\n+    resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n+\r\n+    \r\n+\r\n+  }\r\n+});\r\n+\r\n+document.getElementById(\"futExpiryGap\").addEventListener(\"input\",function(){\r\n+  upsertJson(\"expiry_gap\",this.value,false)\r\n+   if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"FUT\") {\r\n+    document.getElementById(\"productType\").style.display=\"block\";\r\n+    if (document.getElementById(\"futExpiryGap\")?.value <= 0) {\r\n+        document.getElementById(\"futExpiryGapError\").style.display = \"block\";\r\n+        \r\n+      }\r\n+      else {\r\n+        document.getElementById(\"futExpiryGapError\").style.display = \"none\";\r\n+        document.getElementById(\"expiryType\").style.display=\"block\"\r\n+        document.getElementById(\"timelineDropdown\").value = \"monthly\";\r\n+        document.getElementById(\"timelineDropdown\").disabled = true;\r\n+        upsertJson(\"expiry_type\",\"monthly\",true);\r\n+\r\n+      }\r\n+    document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n+      upsertJson(\"product\",this.value,true);\r\n+      document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n+      document.getElementById(\"quantityBox\").addEventListener(\"input\", function () {\r\n+      const switches = document.querySelectorAll(\"#toggleSwitchGroup .form-check-input\");\r\n+    switches.forEach(sw => sw.checked = false);\r\n+\r\n+    // Hide related dropdowns\r\n+    hideAndReset(\"#quantityBox\", \"input\");\r\n+      resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"])\r\n+   \r\n+\r\n+      upsertJson(\"quantity\", this.value, false)\r\n+      if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n+        document.getElementById(\"quantityError\").style.display = \"block\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"none\";\r\n+        document.getElementById(\"rolloverSwitch\").style.display = \"none\";\r\n+       \r\n+      }\r\n+      else {\r\n+        document.getElementById(\"quantityError\").style.display = \"none\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"block\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"block\";\r\n+        document.getElementById(\"rolloverSwitch\").style.display = \"block\";\r\n+       \r\n+      }\r\n+      let buy = document.getElementsByClassName(\"buyBtn\")[0];\r\n+      let sell = document.getElementsByClassName(\"sellBtn\")[0];\r\n+\r\n+      buy.addEventListener(\"click\", function () {\r\n+        buy.style.background = \"green\";\r\n+        sell.style.background = \"\";\r\n+        upsertJson(\"transaction_type\", \"BUY\", true)\r\n+      })\r\n+      sell.addEventListener(\"click\", function () {\r\n+        sell.style.background = \"red\";\r\n+        buy.style.background = \"\";\r\n+        upsertJson(\"transaction_type\", \"SELL\", true)\r\n+      })\r\n+      const exitOnPurposeSwitch = document.getElementById('flexSwitchCheck1');\r\n+\r\n+      function toggleExitOnOpposite() {\r\n+        upsertJson(\"exit_on_opposite\", exitOnPurposeSwitch.checked.toString());\r\n+      }\r\n+      exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n+      const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n+      targetSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTgt();\r\n+        targetSwitchReflect();\r\n+      })\r\n+\r\n+      const rolloverSwitch = document.getElementById('rolloverSwitch');\r\n+      rolloverSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsRollover();\r\n+        rollOverSwitchReflect();\r\n+      })\r\n+\r\n+\r\n+\r\n+      //check the val true or false and shows box according\r\n+\r\n+      //stoploss switch\r\n+      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n+      stoplossSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsSl();\r\n+        stoplossSwitchReflect();\r\n+\r\n+      })\r\n+\r\n+      //trailing switch\r\n+      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n+      \r\n+      trailingSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTrailSet();\r\n+        trailswitchReflect();\r\n+      })\r\n+    });\r\n+\r\n+\r\n+\r\n+    document.querySelectorAll('input[type=\"checkbox\"]').forEach(toggleBtn => {\r\n+      toggleBtn.checked = false; // turn off all switches\r\n+      document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"target_value\").value = \"\";\r\n+      document.getElementById(\"stoploss_value\").value = \"\";\r\n+      document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n+      document.getElementById(\"trailinggap_value\").value = \"\";\r\n+      document.getElementById(\"trailingpoint_value\").value = \"\";\r\n+      targetSwitchReflect();\r\n+      stoplossSwitchReflect();\r\n+      trailswitchReflect();\r\n+\r\n+    });\r\n+\r\n+    //document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n+\r\n+    // Remove related switch values from JSON\r\n+    resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n+\r\n+\r\n+    })  \r\n+\r\n+\r\n+  }\r\n+})\r\n+\r\n+\r\n"
                },
                {
                    "date": 1756362354200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -654,13 +654,14 @@\n           document.getElementById(\"timeBox\").value = \"\";\r\n         }\r\n       }\r\n         function rollOverSwitchReflect(){\r\n-          let rolloverVal = document.getElementById(\"rollover_value\");\r\n-        rolloverVal.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n+          let rolloverCtn = document.getElementById(\"rollover_value\");\r\n+        rolloverCtn.style.display = rolloverSwitch.checked ? 'block' : 'none';\r\n         if (rolloverVal.style.display === \"block\") {\r\n           document.getElementById(\"rollovervalbox\")?.addEventListener(\"input\", function () {\r\n             upsertJson(\"rollover_gap\", this.value, true);\r\n+            let rolloverValue\r\n               if (document.getElementById(\"rollovervalbox\")?.value < 0) {\r\n                 stoplossErr.style.display = \"block\";\r\n                 resetEditorFields([\"sl_value\"]);\r\n               }\r\n@@ -903,910 +904,4 @@\n   }\r\n })\r\n \r\n \r\n-var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n-var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n-  return new bootstrap.Tooltip(tooltipTriggerEl)\r\n-\r\n-});\r\n-\r\n-let editor;\r\n-\r\n-require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n-\r\n-require([\"vs/editor/editor.main\"], function () {\r\n-  window.getCodeSnippet = getCodeSnippet;\r\n-\r\n-  const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n-\r\n-  function getCodeSnippet(activeType) {\r\n-    if (activeType === \"strategy_order\") {\r\n-      return `{\r\n-    \"type\": \"strategy_order\",\r\n-    \"exit_on_opposite\": false,\r\n-    \"is_tgt\": false,\r\n-    \"is_sl\": false,\r\n-    \"is_trail_set\": false,\r\n-    \"position_size\": \"{{strategy.position_size}}\",\r\n-    \"transaction_type\": \"{{strategy.order.action}}\"\r\n-}`;\r\n-    }\r\n-    else {\r\n-      return `{\r\n-    \"type\": \"${activeType}\"\r\n-}`;\r\n-    }\r\n-  }\r\n-\r\n-  editor = monaco.editor.create(container, {\r\n-    value: getCodeSnippet(\"strategy_order\"),\r\n-    language: \"json\",\r\n-    theme: \"vs-dark\",\r\n-    automaticLayout: true,\r\n-    suggestOnTriggerCharacters: false,\r\n-    quickSuggestions: false,\r\n-    wordBasedSuggestions: false,\r\n-    parameterHints: { enabled: false },\r\n-    inlineSuggest: { enabled: false },\r\n-    fontSize: 18,\r\n-    minimap: { enabled: false },\r\n-    wordWrap: \"on\",\r\n-    scrollbar: {\r\n-      vertical: \"hidden\",\r\n-      horizontal: \"hidden\",\r\n-      handleMouseWheel: false\r\n-    },\r\n-  });\r\n-\r\n-});\r\n-\r\n-\r\n-\r\n-\r\n-let activeNav = \"strategy\"; // default active\r\n-\r\n-const navLinks = document.querySelectorAll(\" .nav-link\");\r\n-\r\n-\r\n-navLinks.forEach(link => {\r\n-  link.addEventListener(\"click\", (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    // remove active from all\r\n-    navLinks.forEach(l => l.classList.remove(\"active\"));\r\n-\r\n-    // set active on clicked\r\n-    link.classList.add(\"active\");\r\n-    // update global variable\r\n-    activeNav = link.getAttribute(\"data-type\");\r\n-    localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n-    console.log(\"Active Nav:\", activeNav);\r\n-    editor.setValue(getCodeSnippet(activeNav));\r\n-  });\r\n-});\r\n-\r\n-// let originalcode;\r\n-\r\n-// if(activeNavItem===\"strategy_order\"){\r\n-//     originalcode=`{\r\n-//     \"type\": \"strategy_order\",\r\n-//     \"exit_on_opposite\": false,\r\n-//     \"is_tgt\": false,\r\n-//     \"is_sl\": false,\r\n-//     \"is_trail_set\": false,\r\n-//     \"position_size\": \"{{strategy.position_size}}\",\r\n-//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n-\r\n-// }`\r\n-// }\r\n-// else{\r\n-//     originalcode=`{\r\n-//     \"type\": \"${activeNavItem}\"\r\n-// }`\r\n-// }\r\n-\r\n-document.getElementById(\"deleteBtn\").addEventListener(\"click\", function () {\r\n-  let activeNavItem = JSON.parse(localStorage.getItem(\"activenav\"))\r\n-  editor.setValue(getCodeSnippet(activeNavItem));\r\n-\r\n-  // reset dropdown to index 0\r\n-  let scriptType = document.getElementById(\"dropdown1\");\r\n-  if (scriptType) scriptType.selectedIndex = 0;\r\n-})\r\n-\r\n-const copyBtn = document.getElementById(\"copyBtn\");\r\n-\r\n-copyBtn?.addEventListener(\"click\", function () {\r\n-  if (!editor) return;\r\n-\r\n-  // Get the current editor content\r\n-  const code = editor.getValue();\r\n-\r\n-  // Use navigator clipboard API to copy\r\n-  navigator.clipboard.writeText(code)\r\n-    .then(() => {\r\n-      alert(\"Code copied to clipboard!\");\r\n-    })\r\n-    .catch(err => {\r\n-      console.error(\"Failed to copy: \", err);\r\n-    });\r\n-});\r\n-\r\n-function upsertJson(key, value) {\r\n-  if (!editor) return;\r\n-\r\n-  let code = editor.getValue();\r\n-  let obj;\r\n-\r\n-  try {\r\n-    obj = JSON.parse(code);\r\n-  } catch (e) {\r\n-    console.error(\"Invalid JSON in editor:\", e);\r\n-    return;\r\n-  }\r\n-\r\n-  if (value === \"\" || value == null) {\r\n-    delete obj[key]; // remove key if empty\r\n-  } else {\r\n-    let parsedVal;\r\n-\r\n-    if (value === \"true\") parsedVal = true;\r\n-    else if (value === \"false\") parsedVal = false;\r\n-    else if (value === \"null\") parsedVal = null;\r\n-    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n-    else parsedVal = value; // string\r\n-\r\n-    obj[key] = parsedVal;\r\n-  }\r\n-\r\n-  editor.setValue(JSON.stringify(obj, null, 2));\r\n-}\r\n-\r\n-\r\n-//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n-\r\n-\r\n-// helper function if you need it elsewhere\r\n-//   function getActiveNav() {\r\n-//     return activeNav;\r\n-//   }\r\n-\r\n-//   console.log(getActiveNav())\r\n-\r\n-// dependency mapping\r\n-const dependencies = [\r\n-\r\n-  {\r\n-    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n-      { container: '#scriptsearchbox', field: \"#search\" },\r\n-      { container: \"#productType\", field: \"#productDropdown\" },\r\n-      { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n-      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n-      { container: \"#BtnGroup\", field: null },\r\n-      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n-      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n-      { container: \"#targetDropdownCtn\", field: \"#targetdropdown\" },\r\n-      { container: \"#target_value\", field: \"#targetValbox\" },\r\n-      { container: \"#stoplossDropdownCtn\", field: \"#stoplossdropdown\" },\r\n-      { container: \"#stoploss_value\", field: \"#stoplossValbox\" },\r\n-      { container: \"#trailingDropdownCtn\", field: \"#trailingdropdown\" },\r\n-      { container: \"#trailingtrigger_value\", field: \"#trailtriggerValbox\" },\r\n-      { container: \"#trailinggap_value\", field: \"#trailGapValbox\" },\r\n-      { container: \"#trailingpoint_value\", field: \"#trailPointValbox\" },\r\n-      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n-      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n-      \r\n-\r\n-\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#atmdropdown\",\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#premiumbox\",\r\n-    event: \"input\",\r\n-    targets: [\r\n-      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n-\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#productDropdown\",\r\n-    event: \"change\",\r\n-    targets: [\r\n-      { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n-    ]\r\n-  },\r\n-  {\r\n-    trigger: \"#quantityBox\",\r\n-    event: \"input\",\r\n-    targets: [\r\n-      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n-      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n-      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n-      { container: \"#targetDropdownCtn\", field: \"#targetdropdown\" },\r\n-      { container: \"#target_value\", field: \"#targetValbox\" },\r\n-      { container: \"#stoplossDropdownCtn\", field: \"#stoplossdropdown\" },\r\n-      { container: \"#stoploss_value\", field: \"#stoplossValbox\" },\r\n-      { container: \"#trailingDropdownCtn\", field: \"#trailingdropdown\" },\r\n-      { container: \"#trailingtrigger_value\", field: \"#trailtriggerValbox\" },\r\n-      { container: \"#trailinggap_value\", field: \"#trailGapValbox\" },\r\n-      { container: \"#trailingpoint_value\", field: \"#trailPointValbox\" },\r\n-      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n-      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n-      \r\n-\r\n-    ]\r\n-  }\r\n-];\r\n-\r\n-function hideAndReset(triggerSelector, eventType = null) {\r\n-  dependencies.forEach(dep => {\r\n-    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n-      dep.targets.forEach((t, index) => {\r\n-        const container = document.querySelector(t.container);\r\n-        if (container) {\r\n-          // If it's the *direct child* (first dependent) → only reset value\r\n-          if (index === 0) {\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n-              }\r\n-            }\r\n-          } else {\r\n-            // Other deeper dependents → hide + reset\r\n-            container.style.display = \"none\";\r\n-            if (t.field) {\r\n-              const field = container.querySelector(t.field);\r\n-              if (field) {\r\n-                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n-                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n-                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n-                    field.checked = false;\r\n-                  } else {\r\n-                    field.value = \"\";\r\n-                  }\r\n-                }\r\n-                else if (field.tagName === \"BUTTON\") {\r\n-                  field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n-                }\r\n-              }\r\n-            }\r\n-          }\r\n-        }\r\n-      });\r\n-    }\r\n-  });\r\n-}\r\n-\r\n-function resetEditorFields(keysToReset = []) {\r\n-  try {\r\n-    // Get JSON string from editor\r\n-    let code = editor.getValue();\r\n-    let jsonObj = JSON.parse(code);\r\n-\r\n-    // Reset fields\r\n-    keysToReset.forEach(key => {\r\n-      if (jsonObj.hasOwnProperty(key)) {\r\n-        if (typeof jsonObj[key] === \"boolean\") {\r\n-          jsonObj[key] = false; // reset boolean\r\n-        } else {\r\n-          delete jsonObj[key]; // remove string/number\r\n-        }\r\n-      }\r\n-    });\r\n-\r\n-    // Update editor\r\n-    editor.setValue(JSON.stringify(jsonObj, null, 2));\r\n-  } catch (err) {\r\n-    console.error(\"Invalid JSON in editor:\", err);\r\n-  }\r\n-}\r\n-\r\n-\r\n-//add data fields to make it work\r\n-function syncEditorWithUI() {\r\n-  if (!editor) return;\r\n-\r\n-  const activeNavItem = JSON.parse(localStorage.getItem(\"activenav\")) || \"strategy_order\";\r\n-  let defaultJSON;\r\n-\r\n-  try {\r\n-    defaultJSON = JSON.parse(getCodeSnippet(activeNavItem));\r\n-  } catch {\r\n-    defaultJSON = {};\r\n-  }\r\n-\r\n-  let currentJSON;\r\n-  try {\r\n-    currentJSON = JSON.parse(editor.getValue());\r\n-  } catch {\r\n-    currentJSON = {};\r\n-  }\r\n-\r\n-  const uiFields = document.querySelectorAll(\"[data-field]\");\r\n-\r\n-  uiFields.forEach(field => {\r\n-    const key = field.dataset.field;\r\n-\r\n-    if (key === \"script_type\") return; // always keep main parent\r\n-\r\n-    const container = field.closest(\".field-container\") || field.parentElement;\r\n-    const isVisible = container ? container.style.display !== \"none\" : true;\r\n-\r\n-    if (!isVisible) {\r\n-      // Remove hidden fields from user JSON but keep default if exists\r\n-      if (typeof defaultJSON[key] === \"boolean\") {\r\n-        currentJSON[key] = false;\r\n-      } else {\r\n-        delete currentJSON[key];\r\n-      }\r\n-    } else {\r\n-      // Visible → keep current value if exists, else default\r\n-      if (!(key in currentJSON) && key in defaultJSON) {\r\n-        currentJSON[key] = defaultJSON[key];\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-  // Ensure main parent always exists\r\n-  if (!currentJSON[\"script_type\"]) {\r\n-    currentJSON[\"script_type\"] = defaultJSON[\"type\"] || \"strategy_order\";\r\n-  }\r\n-\r\n-  editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n-}\r\n-\r\n-let scriptType = document.getElementById(\"dropdown1\");\r\n-scriptType.addEventListener(\"change\", function () {\r\n-  upsertJson(\"script_type\", this.value, true);\r\n-  upsertJson(\"is_rollover\", \"false\", false);\r\n-  hideAndReset(\"#dropdown1\", \"change\");\r\n-  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" || JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\") {\r\n-    document.getElementById(\"optionSelection\").style.display = \"block\";\r\n-    document.getElementById(\"scriptsearchbox\").style.display = \"none\";\r\n-  }\r\n-  else {\r\n-    document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n-    document.getElementById(\"optionSelection\").style.display = \"none\";\r\n-  }\r\n-})\r\n-\r\n-let searchInput = document.getElementById(\"search\");\r\n-const dropdown = document.getElementById('dropdown');\r\n-let token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n-document.addEventListener('click', (e) => {\r\n-  // Check if click is outside the input and dropdown\r\n-  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n-    dropdown.style.display = 'none';\r\n-  }\r\n-});\r\n-\r\n-// Simple debounce function\r\n-function debounce(func, delay) {\r\n-  let timer;\r\n-  return function (...args) {\r\n-    clearTimeout(timer);\r\n-    timer = setTimeout(() => func.apply(this, args), delay);\r\n-  };\r\n-}\r\n-\r\n-// Fetch API suggestions\r\n-async function fetchSuggestions(query) {\r\n-  if (!query) {\r\n-    dropdown.style.display = 'none';\r\n-    dropdown.innerHTML = '';\r\n-    return;\r\n-  }\r\n-\r\n-  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n-  try {\r\n-    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n-      method: \"POST\",\r\n-      headers: {\r\n-        \"Content-Type\": \"application/json\",\r\n-        \"Authorization\": token\r\n-      },\r\n-      body: JSON.stringify({\r\n-        script: query,\r\n-        type: scriptType\r\n-      })\r\n-    });\r\n-\r\n-    const data = await res.json();\r\n-    const suggestions = data.data;\r\n-\r\n-\r\n-    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n-    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n-\r\n-  }\r\n-  catch (err) {\r\n-    console.error(err);\r\n-  }\r\n-}\r\n-\r\n-// Add click selection\r\n-dropdown?.addEventListener('click', e => {\r\n-  if (e.target.tagName === 'LI') {\r\n-    let selectedText = e.target.textContent;\r\n-    searchInput.value = selectedText;\r\n-    // remove everything after \"(\"\r\n-    if (selectedText.includes(\"(\")) {\r\n-      selectedText = selectedText.split(\"(\")[0];\r\n-    }\r\n-    dropdown.style.display = 'none';\r\n-    upsertJson(\"script\", selectedText, true);\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"EQ\") {\r\n-      document.getElementById(\"productType\").style.display = \"block\";\r\n-    }\r\n-    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"FUT\") {\r\n-      document.getElementById(\"expiryGap\").style.display = \"block\";\r\n-    }\r\n-  }\r\n-});\r\n-\r\n-searchInput.addEventListener('input', debounce(e => {\r\n-  fetchSuggestions(e.target.value);\r\n-}, 300));\r\n-\r\n- let dropdownofTarget = document.getElementById(\"targetDropdownCtn\"); \r\n- const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n- //onchange toggles the switch, call the function and also shows dropdown\r\n-\r\n-      function toggleIsTgt() {\r\n-        upsertJson(\"is_tgt\", targetSwitch.checked.toString());\r\n-        if (!(targetSwitch.checked)) {\r\n-          document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n-          document.getElementById(\"targetValbox\").value = \"\";\r\n-        }\r\n-      }\r\n-function targetSwitchReflect() {\r\n-        dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n-        if (dropdownofTarget.style.display === \"block\") {\r\n-          document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n-            upsertJson(\"tgt_type\", this.value, true);\r\n-            document.getElementById(\"target_value\").style.display = \"block\";\r\n-            document.getElementById(\"targetValbox\").value = \"\";\r\n-            let targetValBox = document.getElementById(\"targetValbox\");\r\n-            let targetErr = document.getElementById(\"targetError\");\r\n-\r\n-\r\n-            targetValBox?.addEventListener(\"input\", function () {\r\n-              upsertJson(\"tgt_value\", this.value, true)\r\n-              let targetValue = this.value.trim();\r\n-\r\n-              if (targetValue < 0) {\r\n-                targetErr.style.display = \"block\";\r\n-              }\r\n-              else {\r\n-                targetErr.style.display = \"none\";\r\n-              }\r\n-\r\n-            });\r\n-          });\r\n-        }\r\n-        else {\r\n-          document.getElementById(\"target_value\").style.display = \"none\";\r\n-          resetEditorFields([\"tgt_type\", \"tgt_value\", \"is_tgt\"])\r\n-          document.getElementById(\"targetValbox\").value=\"\";\r\n-        }\r\n-\r\n-      };\r\n-\r\n-      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n-      function toggleIsSl() {\r\n-        upsertJson(\"is_sl\", stoplossSwitch.checked.toString())\r\n-        if (!(stoplossSwitch.checked)) {\r\n-          document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n-          document.getElementById(\"stoploss_value\").value = \"\";\r\n-        }\r\n-\r\n-      }\r\n-      function stoplossSwitchReflect() {\r\n-        let dropdownOfStoploss = document.getElementById(\"stoplossDropdownCtn\");\r\n-        dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n-        if (dropdownOfStoploss.style.display === \"block\") {\r\n-          document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\", function () {\r\n-            upsertJson(\"sl_type\", this.value, true)\r\n-\r\n-            document.getElementById(\"stoploss_value\").style.display = \"block\";\r\n-            let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n-            let stoplossErr = document.getElementById(\"stoplossError\");\r\n-\r\n-\r\n-            stoplossValbox?.addEventListener(\"input\", function () {\r\n-              let stoplossValue = this.value.trim();\r\n-              upsertJson(\"sl_value\", stoplossValue, false)\r\n-\r\n-              if (stoplossValue < 0) {\r\n-                stoplossErr.style.display = \"block\";\r\n-                resetEditorFields([\"sl_value\"]);\r\n-              }\r\n-              else {\r\n-                stoplossErr.style.display = \"none\";\r\n-              }\r\n-\r\n-            });\r\n-\r\n-\r\n-          });\r\n-        }\r\n-        else {\r\n-          document.getElementById(\"stoploss_value\").style.display = \"none\";\r\n-          resetEditorFields([\"sl_type\", \"sl_value\", \"is_sl\"]);\r\n-        }\r\n-\r\n-\r\n-      };\r\n-\r\n-      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n-\r\n-      function toggleIsTrailSet() {\r\n-        upsertJson(\"is_trail_set\", trailingSwitch.checked.toString());\r\n-        if (!(trailingSwitch.checked)) {\r\n-          document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n-          document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n-          document.getElementById(\"trailinggap_value\").value = \"\";\r\n-          document.getElementById(\"trailingpoint_value\").value = \"\";\r\n-        }\r\n-      }\r\n-      function trailswitchReflect() {\r\n-        let dropdownOfTrailing = document.getElementById(\"trailingDropdownCtn\");\r\n-        dropdownOfTrailing.style.display = trailingSwitch.checked ? 'block' : 'none';\r\n-\r\n-        if (dropdownOfTrailing.style.display === \"block\") {\r\n-\r\n-          document.getElementById(\"trailingdropdown\")?.addEventListener(\"change\", function () {\r\n-            upsertJson(\"trail_type\", this.value, true)\r\n-\r\n-            document.getElementById(\"trailingtrigger_value\").style.display = \"block\";\r\n-            let trailtriggerValbox = document.getElementById(\"trailtriggerValbox\");\r\n-            let trailTriggerError = document.getElementById(\"trailTriggerError\");\r\n-\r\n-\r\n-            trailtriggerValbox?.addEventListener(\"input\", function () {\r\n-\r\n-              let trailTriggerValue = this.value.trim();\r\n-              //let currentValue = editor.getValue().trim();\r\n-              upsertJson(\"trail_trigger\", trailTriggerValue, false);\r\n-\r\n-              if (trailTriggerValue < 0) {\r\n-                trailTriggerError.style.display = \"block\";\r\n-                document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n-\r\n-              }\r\n-              else {\r\n-                trailTriggerError.style.display = \"none\";\r\n-                document.getElementById(\"trailinggap_value\").style.display = \"block\";\r\n-              }\r\n-\r\n-              if (!trailTriggerValue) {\r\n-                resetEditorFields([\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n-              }\r\n-\r\n-\r\n-              //trail gap number box show\r\n-              document.getElementById(\"trailGapValbox\")?.addEventListener(\"input\", function () {\r\n-                let trailgapError = document.getElementById(\"trailGapError\");\r\n-                let trailGapValue = this.value.trim();\r\n-                //let currentValue = editor.getValue().trim();\r\n-                upsertJson(\"trail_gap\", trailGapValue, false)\r\n-                if (trailGapValue < 0) {\r\n-                  trailgapError.style.display = \"block\";\r\n-                  document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n-\r\n-                }\r\n-                else {\r\n-                  trailgapError.style.display = \"none\";\r\n-                  document.getElementById(\"trailingpoint_value\").style.display = \"block\";\r\n-                }\r\n-\r\n-                if (!trailGapValue) {\r\n-                  resetEditorFields([\"trail_gap\", \"trail_point\"])\r\n-                }\r\n-              })\r\n-\r\n-              //document.getElementById(\"trailingpoint_value\").style.display=\"block\"\r\n-\r\n-              //trail point input box\r\n-              document.getElementById(\"trailPointValbox\")?.addEventListener(\"input\", function () {\r\n-                let trailpointError = document.getElementById(\"trailPointError\");\r\n-                let trailpointVal = this.value.trim();\r\n-                //let currentValue = editor.getValue().trim();\r\n-                upsertJson(\"trail_point\", trailpointVal, false);\r\n-\r\n-                if (trailpointVal < 0) {\r\n-                  trailpointError.style.display = \"block\";\r\n-\r\n-                }\r\n-                else {\r\n-                  trailpointError.style.display = \"none\";\r\n-                }\r\n-\r\n-                if (!trailpointVal) {\r\n-                  resetEditorFields([\"trail_point\"]);\r\n-                }\r\n-              })\r\n-\r\n-\r\n-\r\n-            });\r\n-          });\r\n-        }\r\n-        else {\r\n-          document.getElementById(\"trailingtrigger_value\").style.display = \"none\";\r\n-          document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n-          document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n-          resetEditorFields([\"is_trail_set\",\"trail_type\",\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n-        }\r\n-      }\r\n-\r\n-      const rolloverSwitch = document.getElementById('rolloverSwitch');\r\n-      function toggleIsRollover(){\r\n-         upsertJson(\"is_rollover\", trailingSwitch.checked.toString());\r\n-        if (!(trailingSwitch.checked)) {\r\n-          document.getElementById(\"trailinggap_value\").value = \"\";\r\n-          document.getElementById(\"timeBox\").value = \"\";\r\n-        }\r\n-      }\r\n-        function rollOverSwitchReflect(){\r\n-          let rolloverVal = document.getElementById(\"rollover_value\");\r\n-        rolloverVal.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n-        if (rolloverVal.style.display === \"block\") {\r\n-          document.getElementById(\"rollovervalbox\")?.addEventListener(\"input\", function () {\r\n-            upsertJson(\"rollover_gap\", this.value, true);\r\n-              if (stoplossValue < 0) {\r\n-                stoplossErr.style.display = \"block\";\r\n-                resetEditorFields([\"sl_value\"]);\r\n-              }\r\n-              else {\r\n-                stoplossErr.style.display = \"none\";\r\n-              }\r\n-\r\n-          });\r\n-        }\r\n-        else {\r\n-          document.getElementById(\"stoploss_value\").style.display = \"none\";\r\n-          resetEditorFields([\"sl_type\", \"sl_value\", \"is_sl\"]);\r\n-        }\r\n-\r\n-\r\n-        }\r\n-\r\n-document.getElementById(\"productDropdown\").addEventListener(\"change\", function () {\r\n-  upsertJson(\"product\", this.value, true);\r\n-  hideAndReset(\"#productDropdown\", \"change\");\r\n-  resetEditorFields([\"script\", \"product\", \"quantity\", \"is_tgt\",])\r\n-  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"EQ\") {\r\n-    document.getElementById(\"quantityBlock\").style.display = \"block\";\r\n-    document.getElementById(\"quantityBox\").addEventListener(\"input\", function () {\r\n-      const switches = document.querySelectorAll(\"#toggleSwitchGroup .form-check-input\");\r\n-    switches.forEach(sw => sw.checked = false);\r\n-\r\n-    // Hide related dropdowns\r\n-    hideAndReset(\"#quantityBox\", \"input\");\r\n-      resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"])\r\n-   \r\n-\r\n-      upsertJson(\"quantity\", this.value, false)\r\n-      if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n-        document.getElementById(\"quantityError\").style.display = \"block\";\r\n-        document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n-        document.getElementById(\"toggleSwitchGroup\").style.display = \"none\";\r\n-      }\r\n-      else {\r\n-        document.getElementById(\"quantityError\").style.display = \"none\";\r\n-        document.getElementById(\"BtnGroup\").style.display = \"block\";\r\n-        document.getElementById(\"toggleSwitchGroup\").style.display = \"block\";\r\n-      }\r\n-      let buy = document.getElementsByClassName(\"buyBtn\")[0];\r\n-      let sell = document.getElementsByClassName(\"sellBtn\")[0];\r\n-\r\n-      buy.addEventListener(\"click\", function () {\r\n-        buy.style.background = \"green\";\r\n-        sell.style.background = \"\";\r\n-        upsertJson(\"transaction_type\", \"BUY\", true)\r\n-      })\r\n-      sell.addEventListener(\"click\", function () {\r\n-        sell.style.background = \"red\";\r\n-        buy.style.background = \"\";\r\n-        upsertJson(\"transaction_type\", \"SELL\", true)\r\n-      })\r\n-      const exitOnPurposeSwitch = document.getElementById('flexSwitchCheck1');\r\n-\r\n-      function toggleExitOnOpposite() {\r\n-        upsertJson(\"exit_on_opposite\", exitOnPurposeSwitch.checked.toString());\r\n-      }\r\n-      exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n-      const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n-      targetSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsTgt();\r\n-        targetSwitchReflect();\r\n-      })\r\n-\r\n-\r\n-\r\n-      //check the val true or false and shows box according\r\n-\r\n-      //stoploss switch\r\n-      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n-      stoplossSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsSl();\r\n-        stoplossSwitchReflect();\r\n-\r\n-      })\r\n-\r\n-      //trailing switch\r\n-      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n-      \r\n-      trailingSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsTrailSet();\r\n-        trailswitchReflect();\r\n-      })\r\n-    });\r\n-\r\n-\r\n-\r\n-    document.querySelectorAll('input[type=\"checkbox\"]').forEach(toggleBtn => {\r\n-      toggleBtn.checked = false; // turn off all switches\r\n-      document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n-      document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n-      document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n-      document.getElementById(\"target_value\").value = \"\";\r\n-      document.getElementById(\"stoploss_value\").value = \"\";\r\n-      document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n-      document.getElementById(\"trailinggap_value\").value = \"\";\r\n-      document.getElementById(\"trailingpoint_value\").value = \"\";\r\n-      targetSwitchReflect();\r\n-      stoplossSwitchReflect();\r\n-      trailswitchReflect();\r\n-\r\n-    });\r\n-\r\n-    //document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n-\r\n-    // Remove related switch values from JSON\r\n-    resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n-\r\n-    \r\n-\r\n-  }\r\n-});\r\n-\r\n-document.getElementById(\"futExpiryGap\").addEventListener(\"input\",function(){\r\n-  upsertJson(\"expiry_gap\",this.value,false)\r\n-   if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"FUT\") {\r\n-    document.getElementById(\"productType\").style.display=\"block\";\r\n-    if (document.getElementById(\"futExpiryGap\")?.value <= 0) {\r\n-        document.getElementById(\"futExpiryGapError\").style.display = \"block\";\r\n-        \r\n-      }\r\n-      else {\r\n-        document.getElementById(\"futExpiryGapError\").style.display = \"none\";\r\n-        document.getElementById(\"expiryType\").style.display=\"block\"\r\n-        document.getElementById(\"timelineDropdown\").value = \"monthly\";\r\n-        document.getElementById(\"timelineDropdown\").disabled = true;\r\n-        upsertJson(\"expiry_type\",\"monthly\",true);\r\n-\r\n-      }\r\n-    document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n-      upsertJson(\"product\",this.value,true);\r\n-      document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n-      document.getElementById(\"quantityBox\").addEventListener(\"input\", function () {\r\n-      const switches = document.querySelectorAll(\"#toggleSwitchGroup .form-check-input\");\r\n-    switches.forEach(sw => sw.checked = false);\r\n-\r\n-    // Hide related dropdowns\r\n-    hideAndReset(\"#quantityBox\", \"input\");\r\n-      resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"])\r\n-   \r\n-\r\n-      upsertJson(\"quantity\", this.value, false)\r\n-      if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n-        document.getElementById(\"quantityError\").style.display = \"block\";\r\n-        document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n-        document.getElementById(\"toggleSwitchGroup\").style.display = \"none\";\r\n-        document.getElementById(\"rolloverSwitch\").style.display = \"none\";\r\n-       \r\n-      }\r\n-      else {\r\n-        document.getElementById(\"quantityError\").style.display = \"none\";\r\n-        document.getElementById(\"BtnGroup\").style.display = \"block\";\r\n-        document.getElementById(\"toggleSwitchGroup\").style.display = \"block\";\r\n-        document.getElementById(\"rolloverSwitch\").style.display = \"block\";\r\n-       \r\n-      }\r\n-      let buy = document.getElementsByClassName(\"buyBtn\")[0];\r\n-      let sell = document.getElementsByClassName(\"sellBtn\")[0];\r\n-\r\n-      buy.addEventListener(\"click\", function () {\r\n-        buy.style.background = \"green\";\r\n-        sell.style.background = \"\";\r\n-        upsertJson(\"transaction_type\", \"BUY\", true)\r\n-      })\r\n-      sell.addEventListener(\"click\", function () {\r\n-        sell.style.background = \"red\";\r\n-        buy.style.background = \"\";\r\n-        upsertJson(\"transaction_type\", \"SELL\", true)\r\n-      })\r\n-      const exitOnPurposeSwitch = document.getElementById('flexSwitchCheck1');\r\n-\r\n-      function toggleExitOnOpposite() {\r\n-        upsertJson(\"exit_on_opposite\", exitOnPurposeSwitch.checked.toString());\r\n-      }\r\n-      exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n-      const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n-      targetSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsTgt();\r\n-        targetSwitchReflect();\r\n-      })\r\n-\r\n-      const rolloverSwitch = document.getElementById('rolloverSwitch');\r\n-      rolloverSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsRollover();\r\n-        rollOverSwitchReflect();\r\n-      })\r\n-\r\n-\r\n-\r\n-      //check the val true or false and shows box according\r\n-\r\n-      //stoploss switch\r\n-      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n-      stoplossSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsSl();\r\n-        stoplossSwitchReflect();\r\n-\r\n-      })\r\n-\r\n-      //trailing switch\r\n-      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n-      \r\n-      trailingSwitch.addEventListener(\"change\", function () {\r\n-        toggleIsTrailSet();\r\n-        trailswitchReflect();\r\n-      })\r\n-    });\r\n-\r\n-\r\n-\r\n-    document.querySelectorAll('input[type=\"checkbox\"]').forEach(toggleBtn => {\r\n-      toggleBtn.checked = false; // turn off all switches\r\n-      document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n-      document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n-      document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n-      document.getElementById(\"target_value\").value = \"\";\r\n-      document.getElementById(\"stoploss_value\").value = \"\";\r\n-      document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n-      document.getElementById(\"trailinggap_value\").value = \"\";\r\n-      document.getElementById(\"trailingpoint_value\").value = \"\";\r\n-      targetSwitchReflect();\r\n-      stoplossSwitchReflect();\r\n-      trailswitchReflect();\r\n-\r\n-    });\r\n-\r\n-    //document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n-\r\n-    // Remove related switch values from JSON\r\n-    resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n-\r\n-\r\n-    })  \r\n-\r\n-\r\n-  }\r\n-})\r\n-\r\n-\r\n"
                },
                {
                    "date": 1756362430474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -656,10 +656,11 @@\n       }\r\n         function rollOverSwitchReflect(){\r\n           let rolloverCtn = document.getElementById(\"rollover_value\");\r\n         rolloverCtn.style.display = rolloverSwitch.checked ? 'block' : 'none';\r\n-        if (rolloverVal.style.display === \"block\") {\r\n-          document.getElementById(\"rollovervalbox\")?.addEventListener(\"input\", function () {\r\n+        if (rolloverCtn.style.display === \"block\") {\r\n+          let rolloverVal=document.getElementById(\"rollovervalbox\");\r\n+          rolloverVal?.addEventListener(\"input\", function () {\r\n             upsertJson(\"rollover_gap\", this.value, true);\r\n             let rolloverValue\r\n               if (document.getElementById(\"rollovervalbox\")?.value < 0) {\r\n                 stoplossErr.style.display = \"block\";\r\n"
                },
                {
                    "date": 1756362457465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -658,8 +658,9 @@\n           let rolloverCtn = document.getElementById(\"rollover_value\");\r\n         rolloverCtn.style.display = rolloverSwitch.checked ? 'block' : 'none';\r\n         if (rolloverCtn.style.display === \"block\") {\r\n           let rolloverVal=document.getElementById(\"rollovervalbox\");\r\n+          let rolloverErr=document.getElementById(\"rolloverError\")\r\n           rolloverVal?.addEventListener(\"input\", function () {\r\n             upsertJson(\"rollover_gap\", this.value, true);\r\n             let rolloverValue\r\n               if (document.getElementById(\"rollovervalbox\")?.value < 0) {\r\n"
                },
                {
                    "date": 1756362471732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -663,13 +663,13 @@\n           rolloverVal?.addEventListener(\"input\", function () {\r\n             upsertJson(\"rollover_gap\", this.value, true);\r\n             let rolloverValue\r\n               if (document.getElementById(\"rollovervalbox\")?.value < 0) {\r\n-                stoplossErr.style.display = \"block\";\r\n+                rolloverErr.style.display = \"block\";\r\n                 resetEditorFields([\"sl_value\"]);\r\n               }\r\n               else {\r\n-                stoplossErr.style.display = \"none\";\r\n+                rolloverErr.style.display = \"none\";\r\n               }\r\n \r\n           });\r\n         }\r\n"
                },
                {
                    "date": 1756362487430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -658,15 +658,14 @@\n           let rolloverCtn = document.getElementById(\"rollover_value\");\r\n         rolloverCtn.style.display = rolloverSwitch.checked ? 'block' : 'none';\r\n         if (rolloverCtn.style.display === \"block\") {\r\n           let rolloverVal=document.getElementById(\"rollovervalbox\");\r\n-          let rolloverErr=document.getElementById(\"rolloverError\")\r\n+          let rolloverErr=document.getElementById(\"rolloverError\");\r\n           rolloverVal?.addEventListener(\"input\", function () {\r\n             upsertJson(\"rollover_gap\", this.value, true);\r\n             let rolloverValue\r\n               if (document.getElementById(\"rollovervalbox\")?.value < 0) {\r\n                 rolloverErr.style.display = \"block\";\r\n-                resetEditorFields([\"sl_value\"]);\r\n               }\r\n               else {\r\n                 rolloverErr.style.display = \"none\";\r\n               }\r\n"
                },
                {
                    "date": 1756362504587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -661,9 +661,8 @@\n           let rolloverVal=document.getElementById(\"rollovervalbox\");\r\n           let rolloverErr=document.getElementById(\"rolloverError\");\r\n           rolloverVal?.addEventListener(\"input\", function () {\r\n             upsertJson(\"rollover_gap\", this.value, true);\r\n-            let rolloverValue\r\n               if (document.getElementById(\"rollovervalbox\")?.value < 0) {\r\n                 rolloverErr.style.display = \"block\";\r\n               }\r\n               else {\r\n"
                },
                {
                    "date": 1756362525878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -661,9 +661,9 @@\n           let rolloverVal=document.getElementById(\"rollovervalbox\");\r\n           let rolloverErr=document.getElementById(\"rolloverError\");\r\n           rolloverVal?.addEventListener(\"input\", function () {\r\n             upsertJson(\"rollover_gap\", this.value, true);\r\n-              if (document.getElementById(\"rollovervalbox\")?.value < 0) {\r\n+              if (rolloverVal?.value < 0) {\r\n                 rolloverErr.style.display = \"block\";\r\n               }\r\n               else {\r\n                 rolloverErr.style.display = \"none\";\r\n"
                },
                {
                    "date": 1756362551538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -671,9 +671,9 @@\n \r\n           });\r\n         }\r\n         else {\r\n-          document.getElementById(\"stoploss_value\").style.display = \"none\";\r\n+          document.getElementById(\"rollover_value\").style.display = \"none\";\r\n           resetEditorFields([\"sl_type\", \"sl_value\", \"is_sl\"]);\r\n         }\r\n \r\n \r\n"
                },
                {
                    "date": 1756362580102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -649,9 +649,9 @@\n       const rolloverSwitch = document.getElementById('rolloverSwitch');\r\n       function toggleIsRollover(){\r\n          upsertJson(\"is_rollover\", trailingSwitch.checked.toString());\r\n         if (!(trailingSwitch.checked)) {\r\n-          document.getElementById(\"trailinggap_value\").value = \"\";\r\n+          document.getElementById(\"rollovervalbox\").value = \"\";\r\n           document.getElementById(\"timeBox\").value = \"\";\r\n         }\r\n       }\r\n         function rollOverSwitchReflect(){\r\n"
                },
                {
                    "date": 1756362616997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -666,8 +666,9 @@\n                 rolloverErr.style.display = \"block\";\r\n               }\r\n               else {\r\n                 rolloverErr.style.display = \"none\";\r\n+                document.getElementById(\"rollover_time\").style.display=\"block\"\r\n               }\r\n \r\n           });\r\n         }\r\n"
                },
                {
                    "date": 1756362667222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -668,8 +668,11 @@\n               else {\r\n                 rolloverErr.style.display = \"none\";\r\n                 document.getElementById(\"rollover_time\").style.display=\"block\"\r\n               }\r\n+                   document.getElementById(\"rollover_time\").addEventListener(\"input\",function(){\r\n+                    upsertJson(\"rollover_time\",this.value,true)\r\n+                   })\r\n \r\n           });\r\n         }\r\n         else {\r\n"
                },
                {
                    "date": 1756362708720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -669,16 +669,16 @@\n                 rolloverErr.style.display = \"none\";\r\n                 document.getElementById(\"rollover_time\").style.display=\"block\"\r\n               }\r\n                    document.getElementById(\"rollover_time\").addEventListener(\"input\",function(){\r\n-                    upsertJson(\"rollover_time\",this.value,true)\r\n+                    upsertJson(\"rollover_time\",this.value,true);\r\n                    })\r\n \r\n           });\r\n         }\r\n         else {\r\n           document.getElementById(\"rollover_value\").style.display = \"none\";\r\n-          resetEditorFields([\"sl_type\", \"sl_value\", \"is_sl\"]);\r\n+          resetEditorFields([\"is_rollover\", \"rollover_time\", \"rollover_gap\"]);\r\n         }\r\n \r\n \r\n         }\r\n"
                },
                {
                    "date": 1756362716794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -679,9 +679,8 @@\n           document.getElementById(\"rollover_value\").style.display = \"none\";\r\n           resetEditorFields([\"is_rollover\", \"rollover_time\", \"rollover_gap\"]);\r\n         }\r\n \r\n-\r\n         }\r\n \r\n document.getElementById(\"productDropdown\").addEventListener(\"change\", function () {\r\n   upsertJson(\"product\", this.value, true);\r\n"
                },
                {
                    "date": 1756362722098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -678,9 +678,9 @@\n         else {\r\n           document.getElementById(\"rollover_value\").style.display = \"none\";\r\n           resetEditorFields([\"is_rollover\", \"rollover_time\", \"rollover_gap\"]);\r\n         }\r\n-        }\r\n+}\r\n \r\n document.getElementById(\"productDropdown\").addEventListener(\"change\", function () {\r\n   upsertJson(\"product\", this.value, true);\r\n   hideAndReset(\"#productDropdown\", \"change\");\r\n"
                },
                {
                    "date": 1756362747213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,909 @@\n+var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n+var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n+  return new bootstrap.Tooltip(tooltipTriggerEl)\r\n+\r\n+});\r\n+\r\n+let editor;\r\n+\r\n+require.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n+\r\n+require([\"vs/editor/editor.main\"], function () {\r\n+  window.getCodeSnippet = getCodeSnippet;\r\n+\r\n+  const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n+\r\n+  function getCodeSnippet(activeType) {\r\n+    if (activeType === \"strategy_order\") {\r\n+      return `{\r\n+    \"type\": \"strategy_order\",\r\n+    \"exit_on_opposite\": false,\r\n+    \"is_tgt\": false,\r\n+    \"is_sl\": false,\r\n+    \"is_trail_set\": false,\r\n+    \"position_size\": \"{{strategy.position_size}}\",\r\n+    \"transaction_type\": \"{{strategy.order.action}}\"\r\n+}`;\r\n+    }\r\n+    else {\r\n+      return `{\r\n+    \"type\": \"${activeType}\"\r\n+}`;\r\n+    }\r\n+  }\r\n+\r\n+  editor = monaco.editor.create(container, {\r\n+    value: getCodeSnippet(\"strategy_order\"),\r\n+    language: \"json\",\r\n+    theme: \"vs-dark\",\r\n+    automaticLayout: true,\r\n+    suggestOnTriggerCharacters: false,\r\n+    quickSuggestions: false,\r\n+    wordBasedSuggestions: false,\r\n+    parameterHints: { enabled: false },\r\n+    inlineSuggest: { enabled: false },\r\n+    fontSize: 18,\r\n+    minimap: { enabled: false },\r\n+    wordWrap: \"on\",\r\n+    scrollbar: {\r\n+      vertical: \"hidden\",\r\n+      horizontal: \"hidden\",\r\n+      handleMouseWheel: false\r\n+    },\r\n+  });\r\n+\r\n+});\r\n+\r\n+\r\n+\r\n+\r\n+let activeNav = \"strategy\"; // default active\r\n+\r\n+const navLinks = document.querySelectorAll(\" .nav-link\");\r\n+\r\n+\r\n+navLinks.forEach(link => {\r\n+  link.addEventListener(\"click\", (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    // remove active from all\r\n+    navLinks.forEach(l => l.classList.remove(\"active\"));\r\n+\r\n+    // set active on clicked\r\n+    link.classList.add(\"active\");\r\n+    // update global variable\r\n+    activeNav = link.getAttribute(\"data-type\");\r\n+    localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n+    console.log(\"Active Nav:\", activeNav);\r\n+    editor.setValue(getCodeSnippet(activeNav));\r\n+  });\r\n+});\r\n+\r\n+// let originalcode;\r\n+\r\n+// if(activeNavItem===\"strategy_order\"){\r\n+//     originalcode=`{\r\n+//     \"type\": \"strategy_order\",\r\n+//     \"exit_on_opposite\": false,\r\n+//     \"is_tgt\": false,\r\n+//     \"is_sl\": false,\r\n+//     \"is_trail_set\": false,\r\n+//     \"position_size\": \"{{strategy.position_size}}\",\r\n+//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n+\r\n+// }`\r\n+// }\r\n+// else{\r\n+//     originalcode=`{\r\n+//     \"type\": \"${activeNavItem}\"\r\n+// }`\r\n+// }\r\n+\r\n+document.getElementById(\"deleteBtn\").addEventListener(\"click\", function () {\r\n+  let activeNavItem = JSON.parse(localStorage.getItem(\"activenav\"))\r\n+  editor.setValue(getCodeSnippet(activeNavItem));\r\n+\r\n+  // reset dropdown to index 0\r\n+  let scriptType = document.getElementById(\"dropdown1\");\r\n+  if (scriptType) scriptType.selectedIndex = 0;\r\n+})\r\n+\r\n+const copyBtn = document.getElementById(\"copyBtn\");\r\n+\r\n+copyBtn?.addEventListener(\"click\", function () {\r\n+  if (!editor) return;\r\n+\r\n+  // Get the current editor content\r\n+  const code = editor.getValue();\r\n+\r\n+  // Use navigator clipboard API to copy\r\n+  navigator.clipboard.writeText(code)\r\n+    .then(() => {\r\n+      alert(\"Code copied to clipboard!\");\r\n+    })\r\n+    .catch(err => {\r\n+      console.error(\"Failed to copy: \", err);\r\n+    });\r\n+});\r\n+\r\n+function upsertJson(key, value) {\r\n+  if (!editor) return;\r\n+\r\n+  let code = editor.getValue();\r\n+  let obj;\r\n+\r\n+  try {\r\n+    obj = JSON.parse(code);\r\n+  } catch (e) {\r\n+    console.error(\"Invalid JSON in editor:\", e);\r\n+    return;\r\n+  }\r\n+\r\n+  if (value === \"\" || value == null) {\r\n+    delete obj[key]; // remove key if empty\r\n+  } else {\r\n+    let parsedVal;\r\n+\r\n+    if (value === \"true\") parsedVal = true;\r\n+    else if (value === \"false\") parsedVal = false;\r\n+    else if (value === \"null\") parsedVal = null;\r\n+    else if (!isNaN(value)) parsedVal = Number(value); // numbers\r\n+    else parsedVal = value; // string\r\n+\r\n+    obj[key] = parsedVal;\r\n+  }\r\n+\r\n+  editor.setValue(JSON.stringify(obj, null, 2));\r\n+}\r\n+\r\n+\r\n+//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n+\r\n+\r\n+// helper function if you need it elsewhere\r\n+//   function getActiveNav() {\r\n+//     return activeNav;\r\n+//   }\r\n+\r\n+//   console.log(getActiveNav())\r\n+\r\n+// dependency mapping\r\n+const dependencies = [\r\n+\r\n+  {\r\n+    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#optionSelection\", field: \"#atmdropdown\" },\r\n+      { container: '#scriptsearchbox', field: \"#search\" },\r\n+      { container: \"#productType\", field: \"#productDropdown\" },\r\n+      { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n+      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n+      { container: \"#BtnGroup\", field: null },\r\n+      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n+      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n+      { container: \"#targetDropdownCtn\", field: \"#targetdropdown\" },\r\n+      { container: \"#target_value\", field: \"#targetValbox\" },\r\n+      { container: \"#stoplossDropdownCtn\", field: \"#stoplossdropdown\" },\r\n+      { container: \"#stoploss_value\", field: \"#stoplossValbox\" },\r\n+      { container: \"#trailingDropdownCtn\", field: \"#trailingdropdown\" },\r\n+      { container: \"#trailingtrigger_value\", field: \"#trailtriggerValbox\" },\r\n+      { container: \"#trailinggap_value\", field: \"#trailGapValbox\" },\r\n+      { container: \"#trailingpoint_value\", field: \"#trailPointValbox\" },\r\n+      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n+      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n+      \r\n+\r\n+\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#atmdropdown\",\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#AtmGap\", field: \"#atmgapbox\" }\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#premiumbox\",\r\n+    event: \"input\",\r\n+    targets: [\r\n+      { container: \"#premiumval\", field: \"#maxvariationCtn\" },\r\n+\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#productDropdown\",\r\n+    event: \"change\",\r\n+    targets: [\r\n+      { container: \"#quantityBlock\", field: \"#quantityBox\" },\r\n+    ]\r\n+  },\r\n+  {\r\n+    trigger: \"#quantityBox\",\r\n+    event: \"input\",\r\n+    targets: [\r\n+      { container: \"#toggleSwitchGroup\", field: \".form-check-input\" },\r\n+      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n+      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n+      { container: \"#targetDropdownCtn\", field: \"#targetdropdown\" },\r\n+      { container: \"#target_value\", field: \"#targetValbox\" },\r\n+      { container: \"#stoplossDropdownCtn\", field: \"#stoplossdropdown\" },\r\n+      { container: \"#stoploss_value\", field: \"#stoplossValbox\" },\r\n+      { container: \"#trailingDropdownCtn\", field: \"#trailingdropdown\" },\r\n+      { container: \"#trailingtrigger_value\", field: \"#trailtriggerValbox\" },\r\n+      { container: \"#trailinggap_value\", field: \"#trailGapValbox\" },\r\n+      { container: \"#trailingpoint_value\", field: \"#trailPointValbox\" },\r\n+      { container: \"#rollover_value\", field: \"#rollovervalbox\" },\r\n+      { container: \"#rollover_time\", field: \"#timeBox\" },\r\n+      \r\n+\r\n+    ]\r\n+  }\r\n+];\r\n+\r\n+function hideAndReset(triggerSelector, eventType = null) {\r\n+  dependencies.forEach(dep => {\r\n+    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n+      dep.targets.forEach((t, index) => {\r\n+        const container = document.querySelector(t.container);\r\n+        if (container) {\r\n+          // If it's the *direct child* (first dependent) → only reset value\r\n+          if (index === 0) {\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n+              }\r\n+            }\r\n+          } else {\r\n+            // Other deeper dependents → hide + reset\r\n+            container.style.display = \"none\";\r\n+            if (t.field) {\r\n+              const field = container.querySelector(t.field);\r\n+              if (field) {\r\n+                if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n+                else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") {\r\n+                  if (field.type === \"checkbox\" || field.type === \"radio\") {\r\n+                    field.checked = false;\r\n+                  } else {\r\n+                    field.value = \"\";\r\n+                  }\r\n+                }\r\n+                else if (field.tagName === \"BUTTON\") {\r\n+                  field.classList.remove(\"active\"); // reset toggles / buy-sell\r\n+                }\r\n+              }\r\n+            }\r\n+          }\r\n+        }\r\n+      });\r\n+    }\r\n+  });\r\n+}\r\n+\r\n+function resetEditorFields(keysToReset = []) {\r\n+  try {\r\n+    // Get JSON string from editor\r\n+    let code = editor.getValue();\r\n+    let jsonObj = JSON.parse(code);\r\n+\r\n+    // Reset fields\r\n+    keysToReset.forEach(key => {\r\n+      if (jsonObj.hasOwnProperty(key)) {\r\n+        if (typeof jsonObj[key] === \"boolean\") {\r\n+          jsonObj[key] = false; // reset boolean\r\n+        } else {\r\n+          delete jsonObj[key]; // remove string/number\r\n+        }\r\n+      }\r\n+    });\r\n+\r\n+    // Update editor\r\n+    editor.setValue(JSON.stringify(jsonObj, null, 2));\r\n+  } catch (err) {\r\n+    console.error(\"Invalid JSON in editor:\", err);\r\n+  }\r\n+}\r\n+\r\n+\r\n+//add data fields to make it work\r\n+function syncEditorWithUI() {\r\n+  if (!editor) return;\r\n+\r\n+  const activeNavItem = JSON.parse(localStorage.getItem(\"activenav\")) || \"strategy_order\";\r\n+  let defaultJSON;\r\n+\r\n+  try {\r\n+    defaultJSON = JSON.parse(getCodeSnippet(activeNavItem));\r\n+  } catch {\r\n+    defaultJSON = {};\r\n+  }\r\n+\r\n+  let currentJSON;\r\n+  try {\r\n+    currentJSON = JSON.parse(editor.getValue());\r\n+  } catch {\r\n+    currentJSON = {};\r\n+  }\r\n+\r\n+  const uiFields = document.querySelectorAll(\"[data-field]\");\r\n+\r\n+  uiFields.forEach(field => {\r\n+    const key = field.dataset.field;\r\n+\r\n+    if (key === \"script_type\") return; // always keep main parent\r\n+\r\n+    const container = field.closest(\".field-container\") || field.parentElement;\r\n+    const isVisible = container ? container.style.display !== \"none\" : true;\r\n+\r\n+    if (!isVisible) {\r\n+      // Remove hidden fields from user JSON but keep default if exists\r\n+      if (typeof defaultJSON[key] === \"boolean\") {\r\n+        currentJSON[key] = false;\r\n+      } else {\r\n+        delete currentJSON[key];\r\n+      }\r\n+    } else {\r\n+      // Visible → keep current value if exists, else default\r\n+      if (!(key in currentJSON) && key in defaultJSON) {\r\n+        currentJSON[key] = defaultJSON[key];\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+  // Ensure main parent always exists\r\n+  if (!currentJSON[\"script_type\"]) {\r\n+    currentJSON[\"script_type\"] = defaultJSON[\"type\"] || \"strategy_order\";\r\n+  }\r\n+\r\n+  editor.setValue(JSON.stringify(currentJSON, null, 4));\r\n+}\r\n+\r\n+let scriptType = document.getElementById(\"dropdown1\");\r\n+scriptType.addEventListener(\"change\", function () {\r\n+  upsertJson(\"script_type\", this.value, true);\r\n+  upsertJson(\"is_rollover\", \"false\", false);\r\n+  hideAndReset(\"#dropdown1\", \"change\");\r\n+  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" || JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"PE\") {\r\n+    document.getElementById(\"optionSelection\").style.display = \"block\";\r\n+    document.getElementById(\"scriptsearchbox\").style.display = \"none\";\r\n+  }\r\n+  else {\r\n+    document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n+    document.getElementById(\"optionSelection\").style.display = \"none\";\r\n+  }\r\n+})\r\n+\r\n+let searchInput = document.getElementById(\"search\");\r\n+const dropdown = document.getElementById('dropdown');\r\n+let token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYyODg4OTQsImV4cCI6MTc1NjM3NTI5NH0.rtQOXb5OZ6Cab9_JNnWe3_eVLp3b_xpvNYSbGspcRpQ\"\r\n+document.addEventListener('click', (e) => {\r\n+  // Check if click is outside the input and dropdown\r\n+  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n+    dropdown.style.display = 'none';\r\n+  }\r\n+});\r\n+\r\n+// Simple debounce function\r\n+function debounce(func, delay) {\r\n+  let timer;\r\n+  return function (...args) {\r\n+    clearTimeout(timer);\r\n+    timer = setTimeout(() => func.apply(this, args), delay);\r\n+  };\r\n+}\r\n+\r\n+// Fetch API suggestions\r\n+async function fetchSuggestions(query) {\r\n+  if (!query) {\r\n+    dropdown.style.display = 'none';\r\n+    dropdown.innerHTML = '';\r\n+    return;\r\n+  }\r\n+\r\n+  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n+  try {\r\n+    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n+      method: \"POST\",\r\n+      headers: {\r\n+        \"Content-Type\": \"application/json\",\r\n+        \"Authorization\": token\r\n+      },\r\n+      body: JSON.stringify({\r\n+        script: query,\r\n+        type: scriptType\r\n+      })\r\n+    });\r\n+\r\n+    const data = await res.json();\r\n+    const suggestions = data.data;\r\n+\r\n+\r\n+    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n+    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n+\r\n+  }\r\n+  catch (err) {\r\n+    console.error(err);\r\n+  }\r\n+}\r\n+\r\n+// Add click selection\r\n+dropdown?.addEventListener('click', e => {\r\n+  if (e.target.tagName === 'LI') {\r\n+    let selectedText = e.target.textContent;\r\n+    searchInput.value = selectedText;\r\n+    // remove everything after \"(\"\r\n+    if (selectedText.includes(\"(\")) {\r\n+      selectedText = selectedText.split(\"(\")[0];\r\n+    }\r\n+    dropdown.style.display = 'none';\r\n+    upsertJson(\"script\", selectedText, true);\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"EQ\") {\r\n+      document.getElementById(\"productType\").style.display = \"block\";\r\n+    }\r\n+    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"FUT\") {\r\n+      document.getElementById(\"expiryGap\").style.display = \"block\";\r\n+    }\r\n+  }\r\n+});\r\n+\r\n+searchInput.addEventListener('input', debounce(e => {\r\n+  fetchSuggestions(e.target.value);\r\n+}, 300));\r\n+\r\n+ let dropdownofTarget = document.getElementById(\"targetDropdownCtn\"); \r\n+ const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n+ //onchange toggles the switch, call the function and also shows dropdown\r\n+\r\n+      function toggleIsTgt() {\r\n+        upsertJson(\"is_tgt\", targetSwitch.checked.toString());\r\n+        if (!(targetSwitch.checked)) {\r\n+          document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"targetValbox\").value = \"\";\r\n+        }\r\n+      }\r\n+function targetSwitchReflect() {\r\n+        dropdownofTarget.style.display = targetSwitch.checked ? 'block' : 'none';\r\n+        if (dropdownofTarget.style.display === \"block\") {\r\n+          document.getElementById(\"targetdropdown\")?.addEventListener(\"change\", function () {\r\n+            upsertJson(\"tgt_type\", this.value, true);\r\n+            document.getElementById(\"target_value\").style.display = \"block\";\r\n+            document.getElementById(\"targetValbox\").value = \"\";\r\n+            let targetValBox = document.getElementById(\"targetValbox\");\r\n+            let targetErr = document.getElementById(\"targetError\");\r\n+\r\n+\r\n+            targetValBox?.addEventListener(\"input\", function () {\r\n+              upsertJson(\"tgt_value\", this.value, true)\r\n+              let targetValue = this.value.trim();\r\n+\r\n+              if (targetValue < 0) {\r\n+                targetErr.style.display = \"block\";\r\n+              }\r\n+              else {\r\n+                targetErr.style.display = \"none\";\r\n+              }\r\n+\r\n+            });\r\n+          });\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"target_value\").style.display = \"none\";\r\n+          resetEditorFields([\"tgt_type\", \"tgt_value\", \"is_tgt\"])\r\n+          document.getElementById(\"targetValbox\").value=\"\";\r\n+        }\r\n+\r\n+      };\r\n+\r\n+      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n+      function toggleIsSl() {\r\n+        upsertJson(\"is_sl\", stoplossSwitch.checked.toString())\r\n+        if (!(stoplossSwitch.checked)) {\r\n+          document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"stoploss_value\").value = \"\";\r\n+        }\r\n+\r\n+      }\r\n+      function stoplossSwitchReflect() {\r\n+        let dropdownOfStoploss = document.getElementById(\"stoplossDropdownCtn\");\r\n+        dropdownOfStoploss.style.display = stoplossSwitch.checked ? 'block' : 'none';\r\n+        if (dropdownOfStoploss.style.display === \"block\") {\r\n+          document.getElementById(\"stoplossdropdown\")?.addEventListener(\"change\", function () {\r\n+            upsertJson(\"sl_type\", this.value, true)\r\n+\r\n+            document.getElementById(\"stoploss_value\").style.display = \"block\";\r\n+            let stoplossValbox = document.getElementById(\"stoplossValbox\");\r\n+            let stoplossErr = document.getElementById(\"stoplossError\");\r\n+\r\n+\r\n+            stoplossValbox?.addEventListener(\"input\", function () {\r\n+              let stoplossValue = this.value.trim();\r\n+              upsertJson(\"sl_value\", stoplossValue, false)\r\n+\r\n+              if (stoplossValue < 0) {\r\n+                stoplossErr.style.display = \"block\";\r\n+                resetEditorFields([\"sl_value\"]);\r\n+              }\r\n+              else {\r\n+                stoplossErr.style.display = \"none\";\r\n+              }\r\n+\r\n+            });\r\n+\r\n+\r\n+          });\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"stoploss_value\").style.display = \"none\";\r\n+          resetEditorFields([\"sl_type\", \"sl_value\", \"is_sl\"]);\r\n+        }\r\n+\r\n+\r\n+      };\r\n+\r\n+      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n+\r\n+      function toggleIsTrailSet() {\r\n+        upsertJson(\"is_trail_set\", trailingSwitch.checked.toString());\r\n+        if (!(trailingSwitch.checked)) {\r\n+          document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n+          document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n+          document.getElementById(\"trailinggap_value\").value = \"\";\r\n+          document.getElementById(\"trailingpoint_value\").value = \"\";\r\n+        }\r\n+      }\r\n+      function trailswitchReflect() {\r\n+        let dropdownOfTrailing = document.getElementById(\"trailingDropdownCtn\");\r\n+        dropdownOfTrailing.style.display = trailingSwitch.checked ? 'block' : 'none';\r\n+\r\n+        if (dropdownOfTrailing.style.display === \"block\") {\r\n+\r\n+          document.getElementById(\"trailingdropdown\")?.addEventListener(\"change\", function () {\r\n+            upsertJson(\"trail_type\", this.value, true)\r\n+\r\n+            document.getElementById(\"trailingtrigger_value\").style.display = \"block\";\r\n+            let trailtriggerValbox = document.getElementById(\"trailtriggerValbox\");\r\n+            let trailTriggerError = document.getElementById(\"trailTriggerError\");\r\n+\r\n+\r\n+            trailtriggerValbox?.addEventListener(\"input\", function () {\r\n+\r\n+              let trailTriggerValue = this.value.trim();\r\n+              //let currentValue = editor.getValue().trim();\r\n+              upsertJson(\"trail_trigger\", trailTriggerValue, false);\r\n+\r\n+              if (trailTriggerValue < 0) {\r\n+                trailTriggerError.style.display = \"block\";\r\n+                document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n+\r\n+              }\r\n+              else {\r\n+                trailTriggerError.style.display = \"none\";\r\n+                document.getElementById(\"trailinggap_value\").style.display = \"block\";\r\n+              }\r\n+\r\n+              if (!trailTriggerValue) {\r\n+                resetEditorFields([\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n+              }\r\n+\r\n+\r\n+              //trail gap number box show\r\n+              document.getElementById(\"trailGapValbox\")?.addEventListener(\"input\", function () {\r\n+                let trailgapError = document.getElementById(\"trailGapError\");\r\n+                let trailGapValue = this.value.trim();\r\n+                //let currentValue = editor.getValue().trim();\r\n+                upsertJson(\"trail_gap\", trailGapValue, false)\r\n+                if (trailGapValue < 0) {\r\n+                  trailgapError.style.display = \"block\";\r\n+                  document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n+\r\n+                }\r\n+                else {\r\n+                  trailgapError.style.display = \"none\";\r\n+                  document.getElementById(\"trailingpoint_value\").style.display = \"block\";\r\n+                }\r\n+\r\n+                if (!trailGapValue) {\r\n+                  resetEditorFields([\"trail_gap\", \"trail_point\"])\r\n+                }\r\n+              })\r\n+\r\n+              //document.getElementById(\"trailingpoint_value\").style.display=\"block\"\r\n+\r\n+              //trail point input box\r\n+              document.getElementById(\"trailPointValbox\")?.addEventListener(\"input\", function () {\r\n+                let trailpointError = document.getElementById(\"trailPointError\");\r\n+                let trailpointVal = this.value.trim();\r\n+                //let currentValue = editor.getValue().trim();\r\n+                upsertJson(\"trail_point\", trailpointVal, false);\r\n+\r\n+                if (trailpointVal < 0) {\r\n+                  trailpointError.style.display = \"block\";\r\n+\r\n+                }\r\n+                else {\r\n+                  trailpointError.style.display = \"none\";\r\n+                }\r\n+\r\n+                if (!trailpointVal) {\r\n+                  resetEditorFields([\"trail_point\"]);\r\n+                }\r\n+              })\r\n+\r\n+\r\n+\r\n+            });\r\n+          });\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"trailingtrigger_value\").style.display = \"none\";\r\n+          document.getElementById(\"trailinggap_value\").style.display = \"none\";\r\n+          document.getElementById(\"trailingpoint_value\").style.display = \"none\";\r\n+          resetEditorFields([\"is_trail_set\",\"trail_type\",\"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n+        }\r\n+      }\r\n+\r\n+      const rolloverSwitch = document.getElementById('rolloverSwitch');\r\n+      function toggleIsRollover(){\r\n+         upsertJson(\"is_rollover\", trailingSwitch.checked.toString());\r\n+        if (!(trailingSwitch.checked)) {\r\n+          document.getElementById(\"rollovervalbox\").value = \"\";\r\n+          document.getElementById(\"timeBox\").value = \"\";\r\n+        }\r\n+      }\r\n+        function rollOverSwitchReflect(){\r\n+          let rolloverCtn = document.getElementById(\"rollover_value\");\r\n+        rolloverCtn.style.display = rolloverSwitch.checked ? 'block' : 'none';\r\n+        if (rolloverCtn.style.display === \"block\") {\r\n+          let rolloverVal=document.getElementById(\"rollovervalbox\");\r\n+          let rolloverErr=document.getElementById(\"rolloverError\");\r\n+          rolloverVal?.addEventListener(\"input\", function () {\r\n+            upsertJson(\"rollover_gap\", this.value, true);\r\n+              if (rolloverVal?.value < 0) {\r\n+                rolloverErr.style.display = \"block\";\r\n+              }\r\n+              else {\r\n+                rolloverErr.style.display = \"none\";\r\n+                document.getElementById(\"rollover_time\").style.display=\"block\"\r\n+              }\r\n+                   document.getElementById(\"rollover_time\").addEventListener(\"input\",function(){\r\n+                    upsertJson(\"rollover_time\",this.value,true);\r\n+                   })\r\n+\r\n+          });\r\n+        }\r\n+        else {\r\n+          document.getElementById(\"rollover_value\").style.display = \"none\";\r\n+          resetEditorFields([\"is_rollover\", \"rollover_time\", \"rollover_gap\"]);\r\n+        }\r\n+}\r\n+\r\n+document.getElementById(\"productDropdown\").addEventListener(\"change\", function () {\r\n+  upsertJson(\"product\", this.value, true);\r\n+  hideAndReset(\"#productDropdown\", \"change\");\r\n+  resetEditorFields([\"script\", \"product\", \"quantity\", \"is_tgt\",])\r\n+  if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"EQ\") {\r\n+    document.getElementById(\"quantityBlock\").style.display = \"block\";\r\n+    document.getElementById(\"quantityBox\").addEventListener(\"input\", function () {\r\n+      const switches = document.querySelectorAll(\"#toggleSwitchGroup .form-check-input\");\r\n+    switches.forEach(sw => sw.checked = false);\r\n+\r\n+    // Hide related dropdowns\r\n+    hideAndReset(\"#quantityBox\", \"input\");\r\n+      resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"])\r\n+   \r\n+\r\n+      upsertJson(\"quantity\", this.value, false)\r\n+      if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n+        document.getElementById(\"quantityError\").style.display = \"block\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"none\";\r\n+      }\r\n+      else {\r\n+        document.getElementById(\"quantityError\").style.display = \"none\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"block\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"block\";\r\n+      }\r\n+      let buy = document.getElementsByClassName(\"buyBtn\")[0];\r\n+      let sell = document.getElementsByClassName(\"sellBtn\")[0];\r\n+\r\n+      buy.addEventListener(\"click\", function () {\r\n+        buy.style.background = \"green\";\r\n+        sell.style.background = \"\";\r\n+        upsertJson(\"transaction_type\", \"BUY\", true)\r\n+      })\r\n+      sell.addEventListener(\"click\", function () {\r\n+        sell.style.background = \"red\";\r\n+        buy.style.background = \"\";\r\n+        upsertJson(\"transaction_type\", \"SELL\", true)\r\n+      })\r\n+      const exitOnPurposeSwitch = document.getElementById('flexSwitchCheck1');\r\n+\r\n+      function toggleExitOnOpposite() {\r\n+        upsertJson(\"exit_on_opposite\", exitOnPurposeSwitch.checked.toString());\r\n+      }\r\n+      exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n+      const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n+      targetSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTgt();\r\n+        targetSwitchReflect();\r\n+      })\r\n+\r\n+\r\n+\r\n+      //check the val true or false and shows box according\r\n+\r\n+      //stoploss switch\r\n+      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n+      stoplossSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsSl();\r\n+        stoplossSwitchReflect();\r\n+\r\n+      })\r\n+\r\n+      //trailing switch\r\n+      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n+      \r\n+      trailingSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTrailSet();\r\n+        trailswitchReflect();\r\n+      })\r\n+    });\r\n+\r\n+\r\n+\r\n+    document.querySelectorAll('input[type=\"checkbox\"]').forEach(toggleBtn => {\r\n+      toggleBtn.checked = false; // turn off all switches\r\n+      document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"target_value\").value = \"\";\r\n+      document.getElementById(\"stoploss_value\").value = \"\";\r\n+      document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n+      document.getElementById(\"trailinggap_value\").value = \"\";\r\n+      document.getElementById(\"trailingpoint_value\").value = \"\";\r\n+      targetSwitchReflect();\r\n+      stoplossSwitchReflect();\r\n+      trailswitchReflect();\r\n+\r\n+    });\r\n+\r\n+    //document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n+\r\n+    // Remove related switch values from JSON\r\n+    resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n+\r\n+    \r\n+\r\n+  }\r\n+});\r\n+\r\n+document.getElementById(\"futExpiryGap\").addEventListener(\"input\",function(){\r\n+  upsertJson(\"expiry_gap\",this.value,false)\r\n+   if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" || scriptType.value === \"FUT\") {\r\n+    document.getElementById(\"productType\").style.display=\"block\";\r\n+    if (document.getElementById(\"futExpiryGap\")?.value <= 0) {\r\n+        document.getElementById(\"futExpiryGapError\").style.display = \"block\";\r\n+        \r\n+      }\r\n+      else {\r\n+        document.getElementById(\"futExpiryGapError\").style.display = \"none\";\r\n+        document.getElementById(\"expiryType\").style.display=\"block\"\r\n+        document.getElementById(\"timelineDropdown\").value = \"monthly\";\r\n+        document.getElementById(\"timelineDropdown\").disabled = true;\r\n+        upsertJson(\"expiry_type\",\"monthly\",true);\r\n+\r\n+      }\r\n+    document.getElementById(\"productDropdown\").addEventListener(\"change\",function(){\r\n+      upsertJson(\"product\",this.value,true);\r\n+      document.getElementById(\"quantityBlock\").style.display=\"block\";\r\n+      document.getElementById(\"quantityBox\").addEventListener(\"input\", function () {\r\n+      const switches = document.querySelectorAll(\"#toggleSwitchGroup .form-check-input\");\r\n+    switches.forEach(sw => sw.checked = false);\r\n+\r\n+    // Hide related dropdowns\r\n+    hideAndReset(\"#quantityBox\", \"input\");\r\n+      resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"])\r\n+   \r\n+\r\n+      upsertJson(\"quantity\", this.value, false)\r\n+      if (document.getElementById(\"quantityBox\")?.value <= 0) {\r\n+        document.getElementById(\"quantityError\").style.display = \"block\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"none\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"none\";\r\n+        document.getElementById(\"rolloverSwitch\").style.display = \"none\";\r\n+       \r\n+      }\r\n+      else {\r\n+        document.getElementById(\"quantityError\").style.display = \"none\";\r\n+        document.getElementById(\"BtnGroup\").style.display = \"block\";\r\n+        document.getElementById(\"toggleSwitchGroup\").style.display = \"block\";\r\n+        document.getElementById(\"rolloverSwitch\").style.display = \"block\";\r\n+       \r\n+      }\r\n+      let buy = document.getElementsByClassName(\"buyBtn\")[0];\r\n+      let sell = document.getElementsByClassName(\"sellBtn\")[0];\r\n+\r\n+      buy.addEventListener(\"click\", function () {\r\n+        buy.style.background = \"green\";\r\n+        sell.style.background = \"\";\r\n+        upsertJson(\"transaction_type\", \"BUY\", true)\r\n+      })\r\n+      sell.addEventListener(\"click\", function () {\r\n+        sell.style.background = \"red\";\r\n+        buy.style.background = \"\";\r\n+        upsertJson(\"transaction_type\", \"SELL\", true)\r\n+      })\r\n+      const exitOnPurposeSwitch = document.getElementById('flexSwitchCheck1');\r\n+\r\n+      function toggleExitOnOpposite() {\r\n+        upsertJson(\"exit_on_opposite\", exitOnPurposeSwitch.checked.toString());\r\n+      }\r\n+      exitOnPurposeSwitch?.addEventListener('change', toggleExitOnOpposite);\r\n+      const targetSwitch = document.getElementById('flexSwitchCheck2');\r\n+      targetSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTgt();\r\n+        targetSwitchReflect();\r\n+      })\r\n+\r\n+      const rolloverSwitch = document.getElementById('rolloverSwitch');\r\n+      rolloverSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsRollover();\r\n+        rollOverSwitchReflect();\r\n+      })\r\n+\r\n+\r\n+\r\n+      //check the val true or false and shows box according\r\n+\r\n+      //stoploss switch\r\n+      const stoplossSwitch = document.getElementById('flexSwitchCheck3');\r\n+      stoplossSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsSl();\r\n+        stoplossSwitchReflect();\r\n+\r\n+      })\r\n+\r\n+      //trailing switch\r\n+      const trailingSwitch = document.getElementById('flexSwitchCheck4');\r\n+      \r\n+      trailingSwitch.addEventListener(\"change\", function () {\r\n+        toggleIsTrailSet();\r\n+        trailswitchReflect();\r\n+      })\r\n+    });\r\n+\r\n+\r\n+\r\n+    document.querySelectorAll('input[type=\"checkbox\"]').forEach(toggleBtn => {\r\n+      toggleBtn.checked = false; // turn off all switches\r\n+      document.getElementById(\"targetdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"stoplossdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"trailingdropdown\").selectedIndex = 0;\r\n+      document.getElementById(\"target_value\").value = \"\";\r\n+      document.getElementById(\"stoploss_value\").value = \"\";\r\n+      document.getElementById(\"trailingtrigger_value\").value = \"\";\r\n+      document.getElementById(\"trailinggap_value\").value = \"\";\r\n+      document.getElementById(\"trailingpoint_value\").value = \"\";\r\n+      targetSwitchReflect();\r\n+      stoplossSwitchReflect();\r\n+      trailswitchReflect();\r\n+\r\n+    });\r\n+\r\n+    //document.getElementById(\"targetdropdown\").style.selectedValue = \"Select Target Type\";\r\n+\r\n+    // Remove related switch values from JSON\r\n+    resetEditorFields([\"exit_on_opposite\", \"is_tgt\", \"tgt_type\", \"tgt_value\", \"is_sl\", \"sl_type\", \"sl_value\", \"is_trail_set\", \"trail_type\", \"trail_trigger\", \"trail_gap\", \"trail_point\"]);\r\n+\r\n+\r\n+    })  \r\n+\r\n+\r\n+  }\r\n+})\r\n+\r\n+\r\n"
                }
            ],
            "date": 1756227609833,
            "name": "Commit-0",
            "content": "var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\nvar tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n    return new bootstrap.Tooltip(tooltipTriggerEl)\r\n\r\n});\r\n\r\nlet editor;\r\n\r\nrequire.config({ paths: { vs: \"https://unpkg.com/monaco-editor@0.52.0/min/vs\" } });\r\n\r\nrequire([\"vs/editor/editor.main\"], function () {\r\n    window.getCodeSnippet = getCodeSnippet;\r\n\r\n    const container = document.getElementsByClassName(\"generatedCode\")[0];\r\n\r\n    function getCodeSnippet(activeType) {\r\nif (activeType === \"strategy_order\") {\r\n    return `{\r\n    \"type\": \"strategy_order\",\r\n    \"exit_on_opposite\": false,\r\n    \"is_tgt\": false,\r\n    \"is_sl\": false,\r\n    \"is_trail_set\": false,\r\n    \"position_size\": \"{{strategy.position_size}}\",\r\n    \"transaction_type\": \"{{strategy.order.action}}\"\r\n}`;\r\n} \r\nelse {\r\n    return `{\r\n    \"type\": \"${activeType}\"\r\n}`;\r\n}\r\n    }\r\n\r\n    editor = monaco.editor.create(container, {\r\n        value: getCodeSnippet(\"strategy_order\"),\r\n        language: \"json\",\r\n        theme: \"vs-dark\",\r\n        automaticLayout: true,\r\n        suggestOnTriggerCharacters: false,\r\n        quickSuggestions: false,\r\n        wordBasedSuggestions: false,\r\n        parameterHints: { enabled: false },\r\n        inlineSuggest: { enabled: false },\r\n        fontSize: 18,\r\n        minimap: { enabled: false },\r\n        wordWrap: \"on\",\r\n        scrollbar: {\r\n            vertical: \"hidden\",\r\n            horizontal: \"hidden\",\r\n            handleMouseWheel: false\r\n        },\r\n    });\r\n    \r\n});\r\n\r\n\r\n\r\nlet activeNav = \"strategy\"; // default active\r\n\r\nconst navLinks = document.querySelectorAll(\" .nav-link\");\r\n\r\n\r\nnavLinks.forEach(link => {\r\n    link.addEventListener(\"click\", (e) => {\r\n        e.preventDefault();\r\n\r\n        // remove active from all\r\n        navLinks.forEach(l => l.classList.remove(\"active\"));\r\n\r\n        // set active on clicked\r\n        link.classList.add(\"active\");\r\n        // update global variable\r\n        activeNav = link.getAttribute(\"data-type\");\r\n        localStorage.setItem(\"activenav\", JSON.stringify(activeNav));\r\n        console.log(\"Active Nav:\", activeNav);\r\n        editor.setValue(getCodeSnippet(activeNav));\r\n    });\r\n});\r\n\r\n// let originalcode;\r\n\r\n// if(activeNavItem===\"strategy_order\"){\r\n//     originalcode=`{\r\n//     \"type\": \"strategy_order\",\r\n//     \"exit_on_opposite\": false,\r\n//     \"is_tgt\": false,\r\n//     \"is_sl\": false,\r\n//     \"is_trail_set\": false,\r\n//     \"position_size\": \"{{strategy.position_size}}\",\r\n//     \"transaction_type\": \"{{strategy.order.action}}\"\r\n\r\n// }`\r\n// }\r\n// else{\r\n//     originalcode=`{\r\n//     \"type\": \"${activeNavItem}\"\r\n// }`\r\n// }\r\n\r\ndocument.getElementById(\"deleteBtn\").addEventListener(\"click\",function(){\r\n  let activeNavItem=JSON.parse(localStorage.getItem(\"activenav\"))\r\n  editor.setValue(getCodeSnippet(activeNavItem));\r\n\r\n  // reset dropdown to index 0\r\n  let scriptType = document.getElementById(\"dropdown1\");\r\n  if (scriptType) scriptType.selectedIndex = 0;\r\n})\r\n\r\nconst copyBtn = document.getElementById(\"copyBtn\");\r\n\r\ncopyBtn?.addEventListener(\"click\", function () {\r\n  if (!editor) return;\r\n\r\n  // Get the current editor content\r\n  const code = editor.getValue();\r\n\r\n  // Use navigator clipboard API to copy\r\n  navigator.clipboard.writeText(code)\r\n    .then(() => {\r\n      alert(\"Code copied to clipboard!\");\r\n    })\r\n    .catch(err => {\r\n      console.error(\"Failed to copy: \", err);\r\n    });\r\n});\r\n\r\n\r\n//   console.log(JSON.parse( localStorage.getItem(\"activenav\")))\r\n\r\n\r\n// helper function if you need it elsewhere\r\n//   function getActiveNav() {\r\n//     return activeNav;\r\n//   }\r\n\r\n//   console.log(getActiveNav())\r\n\r\n// dependency mapping\r\nconst dependencies = [\r\n  {\r\n    trigger: \"#dropdown1\", // event trigger (class or ID)\r\n    event: \"change\",\r\n    targets: [\r\n      { container: \"#optionSelection\", field: \"#atmdropdown\" }\r\n    ]\r\n  },\r\n  {\r\n    trigger: \"#scriptSelect\",\r\n    event: \"change\",\r\n    targets: [\r\n      { container: \"#optionSelection\", field: \"#atmdropdown\" }\r\n    ]\r\n  }\r\n];\r\n\r\nfunction hideAndReset(triggerSelector, eventType = null) {\r\n  dependencies.forEach(dep => {\r\n    // match trigger, ignore eventType if null\r\n    if (dep.trigger === triggerSelector && (eventType === null || dep.event === eventType)) {\r\n      dep.targets.forEach(t => {\r\n        const container = document.querySelector(t.container);\r\n        if (container) {\r\n          // hide the container\r\n          container.style.display = \"none\";\r\n\r\n          // reset child field if provided\r\n          if (t.field) {\r\n            const field = container.querySelector(t.field);\r\n            if (field) {\r\n              if (field.tagName === \"SELECT\") field.selectedIndex = 0;\r\n              else if (field.tagName === \"INPUT\" || field.tagName === \"TEXTAREA\") field.value = \"\";\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\n\r\ndocument.getElementById(\"atmdropdown\").addEventListener(\"change\",function(){\r\n    hideAndReset(\"#atmdropdown\",change)\r\n})\r\nlet scriptType = document.getElementById(\"dropdown1\");\r\ndropdown1.addEventListener(\"change\", function () {\r\n    if (JSON.parse(localStorage.getItem(\"activenav\")) === \"strategy_order\" && scriptType.value === \"CE\" || scriptType.value === \"PE\") {\r\n        document.getElementById(\"optionSelection\").style.display = \"block\";\r\n        document.getElementById(\"scriptsearchbox\").style.display = \"none\"; \r\n    }\r\n    else {\r\n        document.getElementById(\"scriptsearchbox\").style.display = \"block\";\r\n        document.getElementById(\"optionSelection\").style.display = \"none\";\r\n    }\r\n})\r\n\r\nlet searchInput=document.getElementById(\"search\");\r\nconst dropdown = document.getElementById('dropdown');\r\nlet token=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJmcmNoX2lkIjoxLCJlbWFpbCI6ImRldjMuYWxnb2RlbHRhQGdtYWlsLmNvbSIsIm1vYmlsZV9ubyI6IjkzMTMxODM4NDciLCJjdXN0X2lkIjoiNzM1NTQ3IiwiZW52IjoibWFpbiIsInVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NTYxODc4MTIsImV4cCI6MTc1NjI3NDIxMn0.gXoY2DWtFgVNYrud7j88O-KLCwlpkUX6h30ANgYu6TU\"\r\ndocument.addEventListener('click', (e) => {\r\n  // Check if click is outside the input and dropdown\r\n  if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {\r\n    dropdown.style.display = 'none';\r\n  }\r\n});\r\n\r\n// Simple debounce function\r\nfunction debounce(func, delay) {\r\n  let timer;\r\n  return function (...args) {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => func.apply(this, args), delay);\r\n  };\r\n}\r\n\r\n// Fetch API suggestions\r\nasync function fetchSuggestions(query) {\r\n  if (!query) {\r\n    dropdown.style.display = 'none';\r\n    dropdown.innerHTML = '';\r\n    return;\r\n  }\r\n\r\n  let scriptType = document.getElementById(\"dropdown1\")?.value;\r\n  try {\r\n    const res = await fetch(\"https://betabv4.algodelta.com/api/v4/users/jsonbridge/searchscript\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": token\r\n      },\r\n      body: JSON.stringify({\r\n        script: query,\r\n        type: scriptType\r\n      })\r\n    });\r\n\r\n    const data = await res.json();\r\n    const suggestions = data.data;\r\n\r\n\r\n    dropdown.innerHTML = suggestions.map(item => `<li>${item.script} (${item.exchange})</li>`).join('');\r\n    dropdown.style.display = suggestions.length ? 'block' : 'none';\r\n\r\n  }\r\n  catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\n// Add click selection\r\ndropdown?.addEventListener('click', e => {\r\n  if (e.target.tagName === 'LI') {\r\n    let selectedText = e.target.textContent;\r\n    searchInput.value = selectedText;\r\n    // remove everything after \"(\"\r\n    if (selectedText.includes(\"(\")) {\r\n      selectedText = selectedText.split(\"(\")[0];\r\n    }\r\n\r\n    dropdown.style.display = 'none';\r\n  let currentValue = editor.getValue().trim();\r\n\r\n// If \"script\" already exists → replace only\r\n    if (/\"script\"\\s*:\\s*\".*?\"/.test(currentValue)) {\r\n      currentValue = currentValue.replace(\r\n        /(\"script\"\\s*:\\s*\").*?(\")[\\s\\S]*$/,\r\n        `$1${selectedText}$2\\n}`\r\n      );\r\n\r\n\r\n    } \r\n\r\n    else {\r\n      // Remove last } if present\r\n      if (currentValue.endsWith(\"}\")) {\r\n        currentValue = currentValue.slice(0, -1).trim();\r\n      }\r\n      // Remove trailing comma if any\r\n      currentValue = currentValue.replace(/,\\s*$/, \"\");\r\n      // Append cleanly\r\n      currentValue = currentValue + `,\\n\\t\"script\":\"${selectedText}\"\\n}`;\r\n    }\r\n    editor.setValue(currentValue);\r\n  }\r\n});\r\n\r\n\r\nsearchInput.addEventListener('input', debounce(e => {\r\n  fetchSuggestions(e.target.value);\r\n}, 300));\r\n\r\n"
        }
    ]
}