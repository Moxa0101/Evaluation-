{
    "sourceFile": "src/component/CardOfInfo.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1757336978986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757337836391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n                             <Card.Title title={post.title}>{indexOfFirstPost + i + 1}) {truncate(post.title, 16)}</Card.Title>\r\n                             <hr />\r\n                             <Card.Text title={post.body}>{truncate(post.body, 100)}</Card.Text>\r\n                         </Card.Body>\r\n-                        <div className=\"d-flex flex-row\">\r\n+                        <div className=\"d-flex flex-row ml-20\" >\r\n                             <button onClick={() => handleDelete(post.id)} className=\"btn btn-danger me-2\">\r\n                                 <i className=\"bi bi-trash3-fill\"></i>\r\n                             </button>\r\n                             <button onClick={() => setEditData(post)} className=\"btn btn-warning\">\r\n"
                }
            ],
            "date": 1757336978986,
            "name": "Commit-0",
            "content": "import Card from \"react-bootstrap/Card\";\r\nimport { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport PostModal from \"./PostModal\";\r\n\r\nfunction CardOfInfo({ data, setData, page, setPage, cardPerPage }) {\r\n    const [showDelete, setShowDelete] = useState(false);\r\n    const [deleteId, setDeleteId] = useState(null);\r\n    const [editData, setEditData] = useState(null);\r\n\r\n    const indexOfLastPost = page * cardPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const truncate = (text, maxChars) => text.length <= maxChars ? text : text.slice(0, maxChars) + \"...\";\r\n\r\n    const handleDelete = (id) => {\r\n        setDeleteId(id);\r\n        setShowDelete(true);\r\n    };\r\n\r\n    const confirmDelete = async () => {\r\n        try {\r\n            await fetch(`https://jsonplaceholder.typicode.com/posts/${deleteId}`, { method: \"DELETE\" });\r\n            const updated = data.filter(post => post.id !== deleteId);\r\n            setData(updated);\r\n            localStorage.setItem(\"cardData\", JSON.stringify(updated));\r\n            const lastPage = Math.max(1, Math.ceil(updated.length / cardPerPage));\r\n            if (page > lastPage) setPage(lastPage);\r\n            setShowDelete(false);\r\n        } catch (err) {\r\n            console.error(\"Delete failed:\", err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row\" style={{ gap: \"20px\", marginBottom: \"20px\" }}>\r\n                {currentPosts.map((post, i) => (\r\n                    <Card key={post.id} style={{ width: \"22.4rem\", cursor: \"pointer\" }}>\r\n                        <Card.Body>\r\n                            <Card.Title title={post.title}>{indexOfFirstPost + i + 1}) {truncate(post.title, 16)}</Card.Title>\r\n                            <hr />\r\n                            <Card.Text title={post.body}>{truncate(post.body, 100)}</Card.Text>\r\n                        </Card.Body>\r\n                        <div className=\"d-flex flex-row\">\r\n                            <button onClick={() => handleDelete(post.id)} className=\"btn btn-danger me-2\">\r\n                                <i className=\"bi bi-trash3-fill\"></i>\r\n                            </button>\r\n                            <button onClick={() => setEditData(post)} className=\"btn btn-warning\">\r\n                                <i className=\"bi bi-pencil-fill\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </Card>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Delete Confirmation Modal */}\r\n            <Modal show={showDelete} onHide={() => setShowDelete(false)}>\r\n                <Modal.Header>\r\n                    <Modal.Title>Confirm Delete</Modal.Title>\r\n                    <button type=\"button\" className=\"btn-close\" onClick={() => setShowDelete(false)}></button>\r\n                </Modal.Header>\r\n                <Modal.Body>Are you sure you want to delete this post?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => setShowDelete(false)}>Cancel</Button>\r\n                    <Button variant=\"danger\" onClick={confirmDelete}>Delete</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* Edit Modal */}\r\n            {editData && <PostModal data={data} setData={setData} cardPerPage={cardPerPage} setPage={setPage} initialData={editData} onClose={() => setEditData(null)} />}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CardOfInfo;\r\n"
        }
    ]
}