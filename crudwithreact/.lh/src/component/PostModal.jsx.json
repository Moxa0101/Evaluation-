{
    "sourceFile": "src/component/PostModal.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1757336952509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757338084383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n             )}\r\n \r\n             <Modal show={show} onHide={handleClose}>\r\n                 <Modal.Header>\r\n-                    <Modal.Title>{initialData ? \"Edit Post\" : \"Add Post\"}</Modal.Title>\r\n+                    <Modal.Title>Add Post</Modal.Title>\r\n                     <button type=\"button\" className=\"btn-close\" onClick={handleClose}></button>\r\n                 </Modal.Header>\r\n                 <Modal.Body>\r\n                     <Form>\r\n"
                },
                {
                    "date": 1757338098202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n             )}\r\n \r\n             <Modal show={show} onHide={handleClose}>\r\n                 <Modal.Header>\r\n-                    <Modal.Title>Add Post</Modal.Title>\r\n+                    <Modal.Title className=\"mb-5\">Add Post</Modal.Title>\r\n                     <button type=\"button\" className=\"btn-close\" onClick={handleClose}></button>\r\n                 </Modal.Header>\r\n                 <Modal.Body>\r\n                     <Form>\r\n"
                },
                {
                    "date": 1757338104144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,105 @@\n+import { useState, useEffect } from \"react\";\r\n+import Button from \"react-bootstrap/Button\";\r\n+import Form from \"react-bootstrap/Form\";\r\n+import Modal from \"react-bootstrap/Modal\";\r\n+\r\n+function PostModal({ data, setData, cardPerPage, setPage, initialData = null, onClose }) {\r\n+    const [show, setShow] = useState(false);\r\n+    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n+\r\n+    useEffect(() => {\r\n+        if (initialData) {\r\n+            setForm({ title: initialData.title, body: initialData.body });\r\n+            setShow(true);\r\n+        }\r\n+    }, [initialData]);\r\n+\r\n+    const handleClose = () => {\r\n+        setShow(false);\r\n+        if (onClose) onClose();\r\n+    };\r\n+\r\n+    const handleSave = async () => {\r\n+        if (!form.title || !form.body) return;\r\n+\r\n+        if (initialData) {\r\n+            // Edit / PUT\r\n+            try {\r\n+                const res = await fetch(`https://jsonplaceholder.typicode.com/posts/${initialData.id}`, {\r\n+                    method: \"PUT\",\r\n+                    headers: { \"Content-Type\": \"application/json\" },\r\n+                    body: JSON.stringify({ ...form, id: initialData.id })\r\n+                });\r\n+                const updated = await res.json();\r\n+                const updatedData = data.map(post => post.id === updated.id ? updated : post);\r\n+                setData(updatedData);\r\n+                localStorage.setItem(\"cardData\", JSON.stringify(updatedData));\r\n+            } catch (err) { console.error(\"Update failed:\", err); }\r\n+        } else {\r\n+            // Add / POST\r\n+            try {\r\n+                const res = await fetch(`https://jsonplaceholder.typicode.com/posts`, {\r\n+                    method: \"POST\",\r\n+                    headers: { \"Content-Type\": \"application/json\" },\r\n+                    body: JSON.stringify(form)\r\n+                });\r\n+                const newPost = await res.json();\r\n+                const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n+                const postWithId = { id: newId, ...newPost };\r\n+                const updatedData = [...data, postWithId];\r\n+                setData(updatedData);\r\n+                localStorage.setItem(\"cardData\", JSON.stringify(updatedData));\r\n+                setPage(Math.ceil(updatedData.length / cardPerPage));\r\n+            } catch (err) { console.error(\"Add failed:\", err); }\r\n+        }\r\n+\r\n+        setForm({ title: \"\", body: \"\" });\r\n+        handleClose();\r\n+    };\r\n+\r\n+    return (\r\n+        <>\r\n+            {!initialData && (\r\n+                <div style={{ margin: \"10px\", display: \"flex\", justifyContent: \"center\" }}>\r\n+                    <Button variant=\"primary\" onClick={() => setShow(true)}>Add Post</Button>\r\n+                </div>\r\n+            )}\r\n+\r\n+            <Modal show={show} onHide={handleClose}>\r\n+                <Modal.Header>\r\n+                    <Modal.Title className=\"mb-5\">Add Post</Modal.Title>\r\n+                    <button type=\"button\" className=\"btn-close\" onClick={handleClose}></button>\r\n+                </Modal.Header>\r\n+                <Modal.Body>\r\n+                    <Form>\r\n+                        <Form.Group className=\"mb-3\">\r\n+                            <Form.Label>Title</Form.Label>\r\n+                            <Form.Control\r\n+                                type=\"text\"\r\n+                                placeholder=\"Enter Title\"\r\n+                                value={form.title}\r\n+                                onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n+                                autoFocus\r\n+                            />\r\n+                        </Form.Group>\r\n+                        <Form.Group className=\"mb-3\">\r\n+                            <Form.Label>Description</Form.Label>\r\n+                            <Form.Control\r\n+                                type=\"text\"\r\n+                                placeholder=\"Enter Description\"\r\n+                                value={form.body}\r\n+                                onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n+                            />\r\n+                        </Form.Group>\r\n+                    </Form>\r\n+                </Modal.Body>\r\n+                <Modal.Footer>\r\n+                    <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n+                    <Button variant=\"primary\" onClick={handleSave}>{initialData ? \"Save Changes\" : \"Add Post\"}</Button>\r\n+                </Modal.Footer>\r\n+            </Modal>\r\n+        </>\r\n+    );\r\n+}\r\n+\r\n+export default PostModal;\r\n"
                },
                {
                    "date": 1757338198682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n             )}\r\n \r\n             <Modal show={show} onHide={handleClose}>\r\n                 <Modal.Header>\r\n-                    <Modal.Title className=\"mb-5\">Add Post</Modal.Title>\r\n+                    <Modal.Title className=\"mb5\">Add Post</Modal.Title>\r\n                     <button type=\"button\" className=\"btn-close\" onClick={handleClose}></button>\r\n                 </Modal.Header>\r\n                 <Modal.Body>\r\n                     <Form>\r\n@@ -102,109 +102,4 @@\n     );\r\n }\r\n \r\n export default PostModal;\r\n-import { useState, useEffect } from \"react\";\r\n-import Button from \"react-bootstrap/Button\";\r\n-import Form from \"react-bootstrap/Form\";\r\n-import Modal from \"react-bootstrap/Modal\";\r\n-\r\n-function PostModal({ data, setData, cardPerPage, setPage, initialData = null, onClose }) {\r\n-    const [show, setShow] = useState(false);\r\n-    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n-\r\n-    useEffect(() => {\r\n-        if (initialData) {\r\n-            setForm({ title: initialData.title, body: initialData.body });\r\n-            setShow(true);\r\n-        }\r\n-    }, [initialData]);\r\n-\r\n-    const handleClose = () => {\r\n-        setShow(false);\r\n-        if (onClose) onClose();\r\n-    };\r\n-\r\n-    const handleSave = async () => {\r\n-        if (!form.title || !form.body) return;\r\n-\r\n-        if (initialData) {\r\n-            // Edit / PUT\r\n-            try {\r\n-                const res = await fetch(`https://jsonplaceholder.typicode.com/posts/${initialData.id}`, {\r\n-                    method: \"PUT\",\r\n-                    headers: { \"Content-Type\": \"application/json\" },\r\n-                    body: JSON.stringify({ ...form, id: initialData.id })\r\n-                });\r\n-                const updated = await res.json();\r\n-                const updatedData = data.map(post => post.id === updated.id ? updated : post);\r\n-                setData(updatedData);\r\n-                localStorage.setItem(\"cardData\", JSON.stringify(updatedData));\r\n-            } catch (err) { console.error(\"Update failed:\", err); }\r\n-        } else {\r\n-            // Add / POST\r\n-            try {\r\n-                const res = await fetch(`https://jsonplaceholder.typicode.com/posts`, {\r\n-                    method: \"POST\",\r\n-                    headers: { \"Content-Type\": \"application/json\" },\r\n-                    body: JSON.stringify(form)\r\n-                });\r\n-                const newPost = await res.json();\r\n-                const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n-                const postWithId = { id: newId, ...newPost };\r\n-                const updatedData = [...data, postWithId];\r\n-                setData(updatedData);\r\n-                localStorage.setItem(\"cardData\", JSON.stringify(updatedData));\r\n-                setPage(Math.ceil(updatedData.length / cardPerPage));\r\n-            } catch (err) { console.error(\"Add failed:\", err); }\r\n-        }\r\n-\r\n-        setForm({ title: \"\", body: \"\" });\r\n-        handleClose();\r\n-    };\r\n-\r\n-    return (\r\n-        <>\r\n-            {!initialData && (\r\n-                <div style={{ margin: \"10px\", display: \"flex\", justifyContent: \"center\" }}>\r\n-                    <Button variant=\"primary\" onClick={() => setShow(true)}>Add Post</Button>\r\n-                </div>\r\n-            )}\r\n-\r\n-            <Modal show={show} onHide={handleClose}>\r\n-                <Modal.Header>\r\n-                    <Modal.Title className=\"mb-5\">Add Post</Modal.Title>\r\n-                    <button type=\"button\" className=\"btn-close\" onClick={handleClose}></button>\r\n-                </Modal.Header>\r\n-                <Modal.Body>\r\n-                    <Form>\r\n-                        <Form.Group className=\"mb-3\">\r\n-                            <Form.Label>Title</Form.Label>\r\n-                            <Form.Control\r\n-                                type=\"text\"\r\n-                                placeholder=\"Enter Title\"\r\n-                                value={form.title}\r\n-                                onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n-                                autoFocus\r\n-                            />\r\n-                        </Form.Group>\r\n-                        <Form.Group className=\"mb-3\">\r\n-                            <Form.Label>Description</Form.Label>\r\n-                            <Form.Control\r\n-                                type=\"text\"\r\n-                                placeholder=\"Enter Description\"\r\n-                                value={form.body}\r\n-                                onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n-                            />\r\n-                        </Form.Group>\r\n-                    </Form>\r\n-                </Modal.Body>\r\n-                <Modal.Footer>\r\n-                    <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n-                    <Button variant=\"primary\" onClick={handleSave}>{initialData ? \"Save Changes\" : \"Add Post\"}</Button>\r\n-                </Modal.Footer>\r\n-            </Modal>\r\n-        </>\r\n-    );\r\n-}\r\n-\r\n-export default PostModal;\r\n"
                },
                {
                    "date": 1757338257009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,105 @@\n+import { useState, useEffect } from \"react\";\r\n+import Button from \"react-bootstrap/Button\";\r\n+import Form from \"react-bootstrap/Form\";\r\n+import Modal from \"react-bootstrap/Modal\";\r\n+\r\n+function PostModal({ data, setData, cardPerPage, setPage, initialData = null, onClose }) {\r\n+    const [show, setShow] = useState(false);\r\n+    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n+\r\n+    useEffect(() => {\r\n+        if (initialData) {\r\n+            setForm({ title: initialData.title, body: initialData.body });\r\n+            setShow(true);\r\n+        }\r\n+    }, [initialData]);\r\n+\r\n+    const handleClose = () => {\r\n+        setShow(false);\r\n+        if (onClose) onClose();\r\n+    };\r\n+\r\n+    const handleSave = async () => {\r\n+        if (!form.title || !form.body) return;\r\n+\r\n+        if (initialData) {\r\n+            // Edit / PUT\r\n+            try {\r\n+                const res = await fetch(`https://jsonplaceholder.typicode.com/posts/${initialData.id}`, {\r\n+                    method: \"PUT\",\r\n+                    headers: { \"Content-Type\": \"application/json\" },\r\n+                    body: JSON.stringify({ ...form, id: initialData.id })\r\n+                });\r\n+                const updated = await res.json();\r\n+                const updatedData = data.map(post => post.id === updated.id ? updated : post);\r\n+                setData(updatedData);\r\n+                localStorage.setItem(\"cardData\", JSON.stringify(updatedData));\r\n+            } catch (err) { console.error(\"Update failed:\", err); }\r\n+        } else {\r\n+            // Add / POST\r\n+            try {\r\n+                const res = await fetch(`https://jsonplaceholder.typicode.com/posts`, {\r\n+                    method: \"POST\",\r\n+                    headers: { \"Content-Type\": \"application/json\" },\r\n+                    body: JSON.stringify(form)\r\n+                });\r\n+                const newPost = await res.json();\r\n+                const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n+                const postWithId = { id: newId, ...newPost };\r\n+                const updatedData = [...data, postWithId];\r\n+                setData(updatedData);\r\n+                localStorage.setItem(\"cardData\", JSON.stringify(updatedData));\r\n+                setPage(Math.ceil(updatedData.length / cardPerPage));\r\n+            } catch (err) { console.error(\"Add failed:\", err); }\r\n+        }\r\n+\r\n+        setForm({ title: \"\", body: \"\" });\r\n+        handleClose();\r\n+    };\r\n+\r\n+    return (\r\n+        <>\r\n+            {!initialData && (\r\n+                <div style={{ margin: \"10px\", display: \"flex\", justifyContent: \"center\" }}>\r\n+                    <Button variant=\"primary\" onClick={() => setShow(true)}>Add Post</Button>\r\n+                </div>\r\n+            )}\r\n+\r\n+            <Modal show={show} onHide={handleClose}>\r\n+                <Modal.Header>\r\n+                    <Modal.Title >Add Post</Modal.Title>\r\n+                    <button type=\"button\" className=\"btn-close\" onClick={handleClose}></button>\r\n+                </Modal.Header>\r\n+                <Modal.Body>\r\n+                    <Form>\r\n+                        <Form.Group className=\"mb-3\">\r\n+                            <Form.Label>Title</Form.Label>\r\n+                            <Form.Control\r\n+                                type=\"text\"\r\n+                                placeholder=\"Enter Title\"\r\n+                                value={form.title}\r\n+                                onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n+                                autoFocus\r\n+                            />\r\n+                        </Form.Group>\r\n+                        <Form.Group className=\"mb-3\">\r\n+                            <Form.Label>Description</Form.Label>\r\n+                            <Form.Control\r\n+                                type=\"text\"\r\n+                                placeholder=\"Enter Description\"\r\n+                                value={form.body}\r\n+                                onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n+                            />\r\n+                        </Form.Group>\r\n+                    </Form>\r\n+                </Modal.Body>\r\n+                <Modal.Footer>\r\n+                    <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n+                    <Button variant=\"primary\" onClick={handleSave}>Save changes</Button>\r\n+                </Modal.Footer>\r\n+            </Modal>\r\n+        </>\r\n+    );\r\n+}\r\n+\r\n+export default PostModal;\r\n"
                },
                {
                    "date": 1757338267247,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,117 +94,12 @@\n                     </Form>\r\n                 </Modal.Body>\r\n                 <Modal.Footer>\r\n                     <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n-                    <Button variant=\"primary\" onClick={handleSave}>Save changes</Button>\r\n+                    <Button variant=\"primary\" onClick={handleSave}>Save Changes</Button>\r\n                 </Modal.Footer>\r\n             </Modal>\r\n         </>\r\n     );\r\n }\r\n \r\n export default PostModal;\r\n-import { useState, useEffect } from \"react\";\r\n-import Button from \"react-bootstrap/Button\";\r\n-import Form from \"react-bootstrap/Form\";\r\n-import Modal from \"react-bootstrap/Modal\";\r\n-\r\n-function PostModal({ data, setData, cardPerPage, setPage, initialData = null, onClose }) {\r\n-    const [show, setShow] = useState(false);\r\n-    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n-\r\n-    useEffect(() => {\r\n-        if (initialData) {\r\n-            setForm({ title: initialData.title, body: initialData.body });\r\n-            setShow(true);\r\n-        }\r\n-    }, [initialData]);\r\n-\r\n-    const handleClose = () => {\r\n-        setShow(false);\r\n-        if (onClose) onClose();\r\n-    };\r\n-\r\n-    const handleSave = async () => {\r\n-        if (!form.title || !form.body) return;\r\n-\r\n-        if (initialData) {\r\n-            // Edit / PUT\r\n-            try {\r\n-                const res = await fetch(`https://jsonplaceholder.typicode.com/posts/${initialData.id}`, {\r\n-                    method: \"PUT\",\r\n-                    headers: { \"Content-Type\": \"application/json\" },\r\n-                    body: JSON.stringify({ ...form, id: initialData.id })\r\n-                });\r\n-                const updated = await res.json();\r\n-                const updatedData = data.map(post => post.id === updated.id ? updated : post);\r\n-                setData(updatedData);\r\n-                localStorage.setItem(\"cardData\", JSON.stringify(updatedData));\r\n-            } catch (err) { console.error(\"Update failed:\", err); }\r\n-        } else {\r\n-            // Add / POST\r\n-            try {\r\n-                const res = await fetch(`https://jsonplaceholder.typicode.com/posts`, {\r\n-                    method: \"POST\",\r\n-                    headers: { \"Content-Type\": \"application/json\" },\r\n-                    body: JSON.stringify(form)\r\n-                });\r\n-                const newPost = await res.json();\r\n-                const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n-                const postWithId = { id: newId, ...newPost };\r\n-                const updatedData = [...data, postWithId];\r\n-                setData(updatedData);\r\n-                localStorage.setItem(\"cardData\", JSON.stringify(updatedData));\r\n-                setPage(Math.ceil(updatedData.length / cardPerPage));\r\n-            } catch (err) { console.error(\"Add failed:\", err); }\r\n-        }\r\n-\r\n-        setForm({ title: \"\", body: \"\" });\r\n-        handleClose();\r\n-    };\r\n-\r\n-    return (\r\n-        <>\r\n-            {!initialData && (\r\n-                <div style={{ margin: \"10px\", display: \"flex\", justifyContent: \"center\" }}>\r\n-                    <Button variant=\"primary\" onClick={() => setShow(true)}>Add Post</Button>\r\n-                </div>\r\n-            )}\r\n-\r\n-            <Modal show={show} onHide={handleClose}>\r\n-                <Modal.Header>\r\n-                    <Modal.Title className=\"mb5\">Add Post</Modal.Title>\r\n-                    <button type=\"button\" className=\"btn-close\" onClick={handleClose}></button>\r\n-                </Modal.Header>\r\n-                <Modal.Body>\r\n-                    <Form>\r\n-                        <Form.Group className=\"mb-3\">\r\n-                            <Form.Label>Title</Form.Label>\r\n-                            <Form.Control\r\n-                                type=\"text\"\r\n-                                placeholder=\"Enter Title\"\r\n-                                value={form.title}\r\n-                                onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n-                                autoFocus\r\n-                            />\r\n-                        </Form.Group>\r\n-                        <Form.Group className=\"mb-3\">\r\n-                            <Form.Label>Description</Form.Label>\r\n-                            <Form.Control\r\n-                                type=\"text\"\r\n-                                placeholder=\"Enter Description\"\r\n-                                value={form.body}\r\n-                                onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n-                            />\r\n-                        </Form.Group>\r\n-                    </Form>\r\n-                </Modal.Body>\r\n-                <Modal.Footer>\r\n-                    <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n-                    <Button variant=\"primary\" onClick={handleSave}>{initialData ? \"Save Changes\" : \"Add Post\"}</Button>\r\n-                </Modal.Footer>\r\n-            </Modal>\r\n-        </>\r\n-    );\r\n-}\r\n-\r\n-export default PostModal;\r\n"
                }
            ],
            "date": 1757336952509,
            "name": "Commit-0",
            "content": "import { useState, useEffect } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nfunction PostModal({ data, setData, cardPerPage, setPage, initialData = null, onClose }) {\r\n    const [show, setShow] = useState(false);\r\n    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n\r\n    useEffect(() => {\r\n        if (initialData) {\r\n            setForm({ title: initialData.title, body: initialData.body });\r\n            setShow(true);\r\n        }\r\n    }, [initialData]);\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        if (onClose) onClose();\r\n    };\r\n\r\n    const handleSave = async () => {\r\n        if (!form.title || !form.body) return;\r\n\r\n        if (initialData) {\r\n            // Edit / PUT\r\n            try {\r\n                const res = await fetch(`https://jsonplaceholder.typicode.com/posts/${initialData.id}`, {\r\n                    method: \"PUT\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({ ...form, id: initialData.id })\r\n                });\r\n                const updated = await res.json();\r\n                const updatedData = data.map(post => post.id === updated.id ? updated : post);\r\n                setData(updatedData);\r\n                localStorage.setItem(\"cardData\", JSON.stringify(updatedData));\r\n            } catch (err) { console.error(\"Update failed:\", err); }\r\n        } else {\r\n            // Add / POST\r\n            try {\r\n                const res = await fetch(`https://jsonplaceholder.typicode.com/posts`, {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(form)\r\n                });\r\n                const newPost = await res.json();\r\n                const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n                const postWithId = { id: newId, ...newPost };\r\n                const updatedData = [...data, postWithId];\r\n                setData(updatedData);\r\n                localStorage.setItem(\"cardData\", JSON.stringify(updatedData));\r\n                setPage(Math.ceil(updatedData.length / cardPerPage));\r\n            } catch (err) { console.error(\"Add failed:\", err); }\r\n        }\r\n\r\n        setForm({ title: \"\", body: \"\" });\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {!initialData && (\r\n                <div style={{ margin: \"10px\", display: \"flex\", justifyContent: \"center\" }}>\r\n                    <Button variant=\"primary\" onClick={() => setShow(true)}>Add Post</Button>\r\n                </div>\r\n            )}\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header>\r\n                    <Modal.Title>{initialData ? \"Edit Post\" : \"Add Post\"}</Modal.Title>\r\n                    <button type=\"button\" className=\"btn-close\" onClick={handleClose}></button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Title</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Title\"\r\n                                value={form.title}\r\n                                onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n                                autoFocus\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Description\"\r\n                                value={form.body}\r\n                                onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n                    <Button variant=\"primary\" onClick={handleSave}>{initialData ? \"Save Changes\" : \"Add Post\"}</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PostModal;\r\n"
        }
    ]
}