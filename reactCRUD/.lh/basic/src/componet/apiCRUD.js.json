{
    "sourceFile": "basic/src/componet/apiCRUD.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 156,
            "patches": [
                {
                    "date": 1756964381295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756964568673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,18 @@\n+import React,{useState,useEffect} from \"react\";\r\n+\r\n+export default function apiCRUD(){\r\n+    const [data, setData] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+    const [error, setError] = useState(null);\r\n+    \r\n+    useEffect(() => {\r\n+      fetch('https://jsonplaceholder.typicode.com/posts')\r\n+        .then(res => {\r\n+          if (!res.ok) throw new Error(\"Failed to fetch\");\r\n+          return res.json();\r\n+        })\r\n+        .then(data => setData(data))\r\n+        .catch(err => setError(err.message))\r\n+        .finally(() => setLoading(false));\r\n+    }, []);\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1756964729453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,18 @@\n-import React,{useState,useEffect} from \"react\";\r\n+import React, { useState, useEffect } from \"react\";\r\n \r\n-export default function apiCRUD(){\r\n+export default function apiCRUD() {\r\n     const [data, setData] = useState(null);\r\n     const [loading, setLoading] = useState(true);\r\n     const [error, setError] = useState(null);\r\n-    \r\n+\r\n     useEffect(() => {\r\n-      fetch('https://jsonplaceholder.typicode.com/posts')\r\n-        .then(res => {\r\n-          if (!res.ok) throw new Error(\"Failed to fetch\");\r\n-          return res.json();\r\n-        })\r\n-        .then(data => setData(data))\r\n-        .catch(err => setError(err.message))\r\n-        .finally(() => setLoading(false));\r\n+        fetch('https://jsonplaceholder.typicode.com/posts')\r\n+            .then(res => {\r\n+                if (!res.ok) throw new Error(\"Failed to fetch\");\r\n+                return res.json();\r\n+            })\r\n+            .then(data => setData(data))\r\n+            .catch(err => setError(err.message))\r\n+            .finally(() => setLoading(false));\r\n     }, []);\r\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1756965457792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,16 @@\n import React, { useState, useEffect } from \"react\";\r\n \r\n-export default function apiCRUD() {\r\n+export default function ApiCRUD() {\r\n     const [data, setData] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-    const [error, setError] = useState(null);\r\n+    const [error,setError]=useState(null);\r\n+    const[loading,setLoading]=useState(true);\r\n \r\n-    useEffect(() => {\r\n-        fetch('https://jsonplaceholder.typicode.com/posts')\r\n-            .then(res => {\r\n-                if (!res.ok) throw new Error(\"Failed to fetch\");\r\n-                return res.json();\r\n-            })\r\n-            .then(data => setData(data))\r\n-            .catch(err => setError(err.message))\r\n\\ No newline at end of file\n-            .finally(() => setLoading(false));\r\n-    }, []);\r\n-};\n+    useEffect(()=>{\r\n+        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+        .then(res=>res.json)\r\n+        .then(data=>setData(data))\r\n+        .catch(err=>setError(error))\r\n+        .finally(loading=>setLoading(true));\r\n+    },[])\r\n+\r\n+};  \n\\ No newline at end of file\n"
                },
                {
                    "date": 1756965564305,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,7 +10,10 @@\n         .then(res=>res.json)\r\n         .then(data=>setData(data))\r\n         .catch(err=>setError(error))\r\n         .finally(loading=>setLoading(true));\r\n-    },[])\r\n+    },[]);\r\n \r\n+    if(loading) return <p>Loading...</p>;\r\n+    if(error) return <p>Error occured!</p>;\r\n+\r\n };  \n\\ No newline at end of file\n"
                },
                {
                    "date": 1756965656779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,27 @@\n import React, { useState, useEffect } from \"react\";\r\n \r\n export default function ApiCRUD() {\r\n     const [data, setData] = useState(null);\r\n-    const [error,setError]=useState(null);\r\n-    const[loading,setLoading]=useState(true);\r\n+    const [error, setError] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n \r\n-    useEffect(()=>{\r\n+    useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-        .then(res=>res.json)\r\n-        .then(data=>setData(data))\r\n-        .catch(err=>setError(error))\r\n-        .finally(loading=>setLoading(true));\r\n-    },[]);\r\n+            .then(res => res.json)\r\n+            .then(data => setData(data))\r\n+            .catch(err => setError(error))\r\n+            .finally(loading => setLoading(true));\r\n+    }, []);\r\n \r\n-    if(loading) return <p>Loading...</p>;\r\n-    if(error) return <p>Error occured!</p>;\r\n+    if (loading) return <p>Loading...</p>;\r\n+    if (error) return <p>Error occured!</p>;\r\n \r\n+    return (\r\n+        <div>\r\n+            {data.map(post =>\r\n+                <p key={post.id}>{post.title}</p>)\r\n+            }\r\n+        </div>\r\n+    );\r\n+\r\n };  \n\\ No newline at end of file\n"
                },
                {
                    "date": 1756965705025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,11 @@\n \r\n     return (\r\n         <div>\r\n             {data.map(post =>\r\n-                <p key={post.id}>{post.title}</p>)\r\n+                <p key={post.id}> {post.title}\r\n+                <</p>\r\n+                <p></p>)\r\n             }\r\n         </div>\r\n     );\r\n \r\n"
                },
                {
                    "date": 1756965712100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,11 +18,10 @@\n \r\n     return (\r\n         <div>\r\n             {data.map(post =>\r\n-                <p key={post.id}> {post.title}\r\n-                <</p>\r\n-                <p></p>)\r\n+                <p key={post.id}>{post.title}\r\n+                <</p>)\r\n             }\r\n         </div>\r\n     );\r\n \r\n"
                },
                {
                    "date": 1756965763194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,13 +16,15 @@\n     if (loading) return <p>Loading...</p>;\r\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n+        <>\r\n         <div>\r\n             {data.map(post =>\r\n-                <p key={post.id}>{post.title}\r\n-                <</p>)\r\n+                <p key={post.id}>{post.title}</p>\r\n+                <p key={post.id}></p>)\r\n             }\r\n         </div>\r\n+        </>\r\n     );\r\n \r\n };  \n\\ No newline at end of file\n"
                },
                {
                    "date": 1756965805291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n         <>\r\n         <div>\r\n             {data.map(post =>\r\n                 <p key={post.id}>{post.title}</p>\r\n-                <p key={post.id}></p>)\r\n+                <p key={post.id}>{post.body}</p>)\r\n             }\r\n         </div>\r\n         </>\r\n     );\r\n"
                },
                {
                    "date": 1756965831885,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,10 +19,9 @@\n     return (\r\n         <>\r\n         <div>\r\n             {data.map(post =>\r\n-                <p key={post.id}>{post.title}</p>\r\n-                <p key={post.id}>{post.body}</p>)\r\n+                <p key={post.id}>{post.title}{post.body}</p>)\r\n             }\r\n         </div>\r\n         </>\r\n     );\r\n"
                },
                {
                    "date": 1756965967675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,6 +24,6 @@\n             }\r\n         </div>\r\n         </>\r\n     );\r\n+};  \r\n \r\n\\ No newline at end of file\n-};  \n"
                },
                {
                    "date": 1756966088353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json)\r\n             .then(data => setData(data))\r\n             .catch(err => setError(error))\r\n-            .finally(loading => setLoading(true));\r\n+            .finally(loading => setLoading(false));\r\n     }, []);\r\n \r\n     if (loading) return <p>Loading...</p>;\r\n     if (error) return <p>Error occured!</p>;\r\n@@ -25,4 +25,5 @@\n         </div>\r\n         </>\r\n     );\r\n };  \r\n+\r\n"
                },
                {
                    "date": 1756966127117,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,14 @@\n import React, { useState, useEffect } from \"react\";\r\n \r\n export default function ApiCRUD() {\r\n-    const [data, setData] = useState(null);\r\n+    const [data, setData] = useState([]);\r\n     const [error, setError] = useState(null);\r\n     const [loading, setLoading] = useState(true);\r\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-            .then(res => res.json)\r\n+            .then(res => res.json())\r\n             .then(data => setData(data))\r\n             .catch(err => setError(error))\r\n             .finally(loading => setLoading(false));\r\n     }, []);\r\n"
                },
                {
                    "date": 1756966653588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n             .catch(err => setError(error))\r\n             .finally(loading => setLoading(false));\r\n-    }, []);\r\n+    });\r\n \r\n     if (loading) return <p>Loading...</p>;\r\n     if (error) return <p>Error occured!</p>;\r\n \r\n"
                },
                {
                    "date": 1756966693288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n-            .catch(err => setError(error))\r\n+            .catch(err => setError(err))\r\n             .finally(loading => setLoading(false));\r\n     });\r\n \r\n     if (loading) return <p>Loading...</p>;\r\n"
                },
                {
                    "date": 1756966719358,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,12 +18,16 @@\n \r\n     return (\r\n         <>\r\n         <div>\r\n-            {data.map(post =>\r\n-                <p key={post.id}>{post.title}{post.body}</p>)\r\n-            }\r\n+         <h2>Posts:</h2>\r\n+      {data.map((post) => (\r\n+        <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n+          <h3>{post.title}</h3>\r\n+          <p>{post.body}</p>\r\n         </div>\r\n+      ))}\r\n+    </div>\r\n         </>\r\n     );\r\n };  \r\n \r\n"
                },
                {
                    "date": 1756967341453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,26 +8,26 @@\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n-            .catch(err => setError(err))\r\n+            .catch(err => setError(err.message))\r\n             .finally(loading => setLoading(false));\r\n     });\r\n \r\n     if (loading) return <p>Loading...</p>;\r\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n         <>\r\n-        <div>\r\n-         <h2>Posts:</h2>\r\n-      {data.map((post) => (\r\n-        <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-          <h3>{post.title}</h3>\r\n-          <p>{post.body}</p>\r\n-        </div>\r\n-      ))}\r\n-    </div>\r\n+            <div>\r\n+                <h2>Posts:</h2>\r\n+                {data.map((post) => (\r\n+                    <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n+                        <h3>{post.title}</h3>\r\n+                        <p>{post.body}</p>\r\n+                    </div>\r\n+                ))}\r\n+            </div>\r\n         </>\r\n     );\r\n-};  \r\n+};\r\n \r\n"
                },
                {
                    "date": 1756967444823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n     if (loading) return <p>Loading...</p>;\r\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n-        <>\r\n+    \r\n             <div>\r\n                 <h2>Posts:</h2>\r\n                 {data.map((post) => (\r\n                     <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n@@ -26,8 +26,7 @@\n                         <p>{post.body}</p>\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n-        </>\r\n     );\r\n };\r\n \r\n"
                },
                {
                    "date": 1756967450945,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,8 @@\n     if (loading) return <p>Loading...</p>;\r\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n-    \r\n             <div>\r\n                 <h2>Posts:</h2>\r\n                 {data.map((post) => (\r\n                     <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n"
                },
                {
                    "date": 1756967786459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, { useState, useEffect } from \"react\";\r\n+import  { useState, useEffect } from \"react\";\r\n \r\n export default function ApiCRUD() {\r\n     const [data, setData] = useState([]);\r\n     const [error, setError] = useState(null);\r\n"
                },
                {
                    "date": 1756967882484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import  { useState, useEffect } from \"react\";\r\n+import React, { useState, useEffect } from \"react\";\r\n \r\n export default function ApiCRUD() {\r\n     const [data, setData] = useState([]);\r\n     const [error, setError] = useState(null);\r\n@@ -7,9 +7,12 @@\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n-            .then(data => setData(data))\r\n+            .then((data) =>{\r\n+                setData(data);\r\n+                setLoading(false);\r\n+            } )\r\n             .catch(err => setError(err.message))\r\n             .finally(loading => setLoading(false));\r\n     });\r\n \r\n"
                },
                {
                    "date": 1756967927222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,11 +11,13 @@\n             .then((data) =>{\r\n                 setData(data);\r\n                 setLoading(false);\r\n             } )\r\n-            .catch(err => setError(err.message))\r\n-            .finally(loading => setLoading(false));\r\n-    });\r\n+            .catch(err =>{\r\n+                setError(err);\r\n+                setLoading(false);\r\n+            } )\r\n+            });\r\n \r\n     if (loading) return <p>Loading...</p>;\r\n     if (error) return <p>Error occured!</p>;\r\n \r\n"
                },
                {
                    "date": 1756968051342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then((data) =>{\r\n+                console.log(data)\r\n                 setData(data);\r\n                 setLoading(false);\r\n             } )\r\n             .catch(err =>{\r\n"
                },
                {
                    "date": 1756968074602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,31 +7,31 @@\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n-            .then((data) =>{\r\n+            .then((data) => {\r\n                 console.log(data)\r\n                 setData(data);\r\n                 setLoading(false);\r\n-            } )\r\n-            .catch(err =>{\r\n+            })\r\n+            .catch(err => {\r\n                 setError(err);\r\n                 setLoading(false);\r\n-            } )\r\n-            });\r\n+            })\r\n+    } , []);\r\n \r\n     if (loading) return <p>Loading...</p>;\r\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n-            <div>\r\n-                <h2>Posts:</h2>\r\n-                {data.map((post) => (\r\n-                    <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-                        <h3>{post.title}</h3>\r\n-                        <p>{post.body}</p>\r\n-                    </div>\r\n-                ))}\r\n-            </div>\r\n+        <div>\r\n+            <h2>Posts:</h2>\r\n+            {data.map((post) => (\r\n+                <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n+                    <h3>{post.title}</h3>\r\n+                    <p>{post.body}</p>\r\n+                </div>\r\n+            ))}\r\n+        </div>\r\n     );\r\n };\r\n \r\n"
                },
                {
                    "date": 1756968100819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,9 @@\n                 setData(data);\r\n                 setLoading(false);\r\n             })\r\n             .catch(err => {\r\n+                console.log(err)\r\n                 setError(err);\r\n                 setLoading(false);\r\n             })\r\n     } , []);\r\n"
                },
                {
                    "date": 1756968347599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useState, useEffect } from \"react\";\r\n \r\n export default function ApiCRUD() {\r\n     const [data, setData] = useState([]);\r\n-    const [error, setError] = useState(null);\r\n+    const [err, setError] = useState(null);\r\n     const [loading, setLoading] = useState(true);\r\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n"
                },
                {
                    "date": 1756968390828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useState, useEffect } from \"react\";\r\n \r\n export default function ApiCRUD() {\r\n     const [data, setData] = useState([]);\r\n-    const [err, setError] = useState(null);\r\n+    const [error, setError] = useState(null);\r\n     const [loading, setLoading] = useState(true);\r\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n"
                },
                {
                    "date": 1756968451507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,14 +8,12 @@\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then((data) => {\r\n-                console.log(data)\r\n                 setData(data);\r\n                 setLoading(false);\r\n             })\r\n             .catch(err => {\r\n-                console.log(err)\r\n                 setError(err);\r\n                 setLoading(false);\r\n             })\r\n     } , []);\r\n"
                },
                {
                    "date": 1756968494202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,14 +23,16 @@\n \r\n     return (\r\n         <div>\r\n             <h2>Posts:</h2>\r\n+            <div className=\"card\">\r\n             {data.map((post) => (\r\n                 <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n                     <h3>{post.title}</h3>\r\n                     <p>{post.body}</p>\r\n                 </div>\r\n             ))}\r\n+            </div>\r\n         </div>\r\n     );\r\n };\r\n \r\n"
                },
                {
                    "date": 1756968516879,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,15 +24,17 @@\n     return (\r\n         <div>\r\n             <h2>Posts:</h2>\r\n             <div className=\"card\">\r\n+                <div className=\"card-body\">\r\n             {data.map((post) => (\r\n                 <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n                     <h3>{post.title}</h3>\r\n                     <p>{post.body}</p>\r\n                 </div>\r\n             ))}\r\n             </div>\r\n+            </div>\r\n         </div>\r\n     );\r\n };\r\n \r\n"
                },
                {
                    "date": 1756968522380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n             .catch(err => {\r\n                 setError(err);\r\n                 setLoading(false);\r\n             })\r\n-    } , []);\r\n+    }, []);\r\n \r\n     if (loading) return <p>Loading...</p>;\r\n     if (error) return <p>Error occured!</p>;\r\n \r\n@@ -25,16 +25,16 @@\n         <div>\r\n             <h2>Posts:</h2>\r\n             <div className=\"card\">\r\n                 <div className=\"card-body\">\r\n-            {data.map((post) => (\r\n-                <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-                    <h3>{post.title}</h3>\r\n-                    <p>{post.body}</p>\r\n+                    {data.map((post) => (\r\n+                        <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n+                            <h3>{post.title}</h3>\r\n+                            <p>{post.body}</p>\r\n+                        </div>\r\n+                    ))}\r\n                 </div>\r\n-            ))}\r\n             </div>\r\n-            </div>\r\n         </div>\r\n     );\r\n };\r\n \r\n"
                },
                {
                    "date": 1756968808502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import React, { useState, useEffect } from \"react\";\r\n+import Card from 'react-bootstrap/Card';\r\n \r\n export default function ApiCRUD() {\r\n     const [data, setData] = useState([]);\r\n     const [error, setError] = useState(null);\r\n@@ -23,18 +24,14 @@\n \r\n     return (\r\n         <div>\r\n             <h2>Posts:</h2>\r\n-            <div className=\"card\">\r\n-                <div className=\"card-body\">\r\n                     {data.map((post) => (\r\n                         <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n                             <h3>{post.title}</h3>\r\n                             <p>{post.body}</p>\r\n                         </div>\r\n                     ))}\r\n                 </div>\r\n-            </div>\r\n-        </div>\r\n     );\r\n };\r\n \r\n"
                },
                {
                    "date": 1756968834085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState, useEffect } from \"react\";\r\n-import Card from 'react-bootstrap/Card';\r\n \r\n+\r\n export default function ApiCRUD() {\r\n     const [data, setData] = useState([]);\r\n     const [error, setError] = useState(null);\r\n     const [loading, setLoading] = useState(true);\r\n"
                },
                {
                    "date": 1756969587117,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,16 +22,19 @@\n     if (loading) return <p>Loading...</p>;\r\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n-        <div>\r\n-            <h2>Posts:</h2>\r\n-                    {data.map((post) => (\r\n-                        <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-                            <h3>{post.title}</h3>\r\n-                            <p>{post.body}</p>\r\n-                        </div>\r\n-                    ))}\r\n-                </div>\r\n+        <div className=\"card\">\r\n+            <div className=\"card-body\">\r\n+\r\n+                <h2>Posts:</h2>\r\n+                {data.map((post) => (\r\n+                    <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n+                        <h3>{post.title}</h3>\r\n+                        <p>{post.body}</p>\r\n+                    </div>\r\n+                ))}\r\n+            </div>\r\n+        </div>\r\n     );\r\n };\r\n \r\n"
                },
                {
                    "date": 1756969596738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,8 @@\n \r\n     return (\r\n         <div className=\"card\">\r\n             <div className=\"card-body\">\r\n-\r\n                 <h2>Posts:</h2>\r\n                 {data.map((post) => (\r\n                     <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n                         <h3>{post.title}</h3>\r\n"
                },
                {
                    "date": 1756969788530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,18 +22,17 @@\n     if (loading) return <p>Loading...</p>;\r\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n-        <div className=\"card\">\r\n-            <div className=\"card-body\">\r\n-                <h2>Posts:</h2>\r\n-                {data.map((post) => (\r\n+        <h2>Posts:</h2>\r\n+                {\r\n+        data.map((post) => (\r\n+            <div className=\"card\">\r\n+                <div className=\"card-body\">\r\n                     <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n                         <h3>{post.title}</h3>\r\n                         <p>{post.body}</p>\r\n                     </div>\r\n                 ))}\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-};\r\n+        );\r\n+    };\r\n \r\n"
                },
                {
                    "date": 1756969795306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,8 @@\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n         <h2>Posts:</h2>\r\n-                {\r\n         data.map((post) => (\r\n             <div className=\"card\">\r\n                 <div className=\"card-body\">\r\n                     <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n"
                },
                {
                    "date": 1756969813369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,16 +22,14 @@\n     if (loading) return <p>Loading...</p>;\r\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n-        <h2>Posts:</h2>\r\n-        data.map((post) => (\r\n-            <div className=\"card\">\r\n-                <div className=\"card-body\">\r\n+                <h2>Posts:</h2>\r\n+                {data.map((post) => (\r\n                     <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n                         <h3>{post.title}</h3>\r\n                         <p>{post.body}</p>\r\n                     </div>\r\n                 ))}\r\n-        );\r\n-    };\r\n+    );\r\n+};\r\n \r\n"
                },
                {
                    "date": 1756969833963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,14 +22,16 @@\n     if (loading) return <p>Loading...</p>;\r\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n-                <h2>Posts:</h2>\r\n-                {data.map((post) => (\r\n-                    <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-                        <h3>{post.title}</h3>\r\n-                        <p>{post.body}</p>\r\n-                    </div>\r\n-                ))}\r\n-    );\r\n+        <div>\r\n+            <h2>Posts:</h2>\r\n+            {data.map((post) => (\r\n+                <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n+                    <h3>{post.title}</h3>\r\n+                    <p>{post.body}</p>\r\n+                </div>\r\n+            ))}\r\n+            );\r\n+            </div>\r\n };\r\n \r\n"
                },
                {
                    "date": 1756969846198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,8 @@\n                     <h3>{post.title}</h3>\r\n                     <p>{post.body}</p>\r\n                 </div>\r\n             ))}\r\n+            </div>\r\n             );\r\n-            </div>\r\n };\r\n \r\n"
                },
                {
                    "date": 1756969891104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,13 +25,17 @@\n     return (\r\n         <div>\r\n             <h2>Posts:</h2>\r\n             {data.map((post) => (\r\n-                <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-                    <h3>{post.title}</h3>\r\n-                    <p>{post.body}</p>\r\n+                <div className=\"card\">\r\n+                    <div className=\"card-body\">\r\n+                        <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n+                            <h3>{post.title}</h3>\r\n+                            <p>{post.body}</p>\r\n+                        </div>\r\n+                    </div>\r\n                 </div>\r\n             ))}\r\n-            </div>\r\n-            );\r\n+        </div>\r\n+    );\r\n };\r\n \r\n"
                },
                {
                    "date": 1756969912964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     return (\r\n         <div>\r\n             <h2>Posts:</h2>\r\n             {data.map((post) => (\r\n-                <div className=\"card\">\r\n+                <div className=\"card\" width=\"18rem\">\r\n                     <div className=\"card-body\">\r\n                         <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n                             <h3>{post.title}</h3>\r\n                             <p>{post.body}</p>\r\n"
                },
                {
                    "date": 1756969931181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     return (\r\n         <div>\r\n             <h2>Posts:</h2>\r\n             {data.map((post) => (\r\n-                <div className=\"card\" width=\"18rem\">\r\n+                <div className=\"card\" style={{ width: '18rem' }}>\r\n                     <div className=\"card-body\">\r\n                         <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n                             <h3>{post.title}</h3>\r\n                             <p>{post.body}</p>\r\n"
                },
                {
                    "date": 1756969965488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,9 @@\n \r\n     return (\r\n         <div>\r\n             <h2>Posts:</h2>\r\n+            <div className=\"row\">\r\n             {data.map((post) => (\r\n                 <div className=\"card\" style={{ width: '18rem' }}>\r\n                     <div className=\"card-body\">\r\n                         <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n@@ -34,8 +35,9 @@\n                         </div>\r\n                     </div>\r\n                 </div>\r\n             ))}\r\n+            </div>\r\n         </div>\r\n     );\r\n };\r\n \r\n"
                },
                {
                    "date": 1756969997716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n             {data.map((post) => (\r\n                 <div className=\"card\" style={{ width: '18rem' }}>\r\n                     <div className=\"card-body\">\r\n                         <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-                            <h3>{post.title}</h3>\r\n+                            <div className=\"card-title\"><h3>{post.title}</h3></div>\r\n                             <p>{post.body}</p>\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n"
                },
                {
                    "date": 1756970020806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n             {data.map((post) => (\r\n                 <div className=\"card\" style={{ width: '18rem' }}>\r\n                     <div className=\"card-body\">\r\n                         <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-                            <div className=\"card-title\"><h3>{post.title}</h3></div>\r\n+                            <div className=\"card-title\">{post.title}</div>\r\n                             <p>{post.body}</p>\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n"
                },
                {
                    "date": 1756970118191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n \r\n     return (\r\n         <div>\r\n             <h2>Posts:</h2>\r\n-            <div className=\"row\">\r\n+            <div className=\"row\" style={{gap:20px}}>\r\n             {data.map((post) => (\r\n                 <div className=\"card\" style={{ width: '18rem' }}>\r\n                     <div className=\"card-body\">\r\n                         <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n"
                },
                {
                    "date": 1756970126992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n \r\n     return (\r\n         <div>\r\n             <h2>Posts:</h2>\r\n-            <div className=\"row\" style={{gap:20px}}>\r\n+            <div className=\"row\" style={{gap:\"20px\"}}>\r\n             {data.map((post) => (\r\n                 <div className=\"card\" style={{ width: '18rem' }}>\r\n                     <div className=\"card-body\">\r\n                         <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n"
                },
                {
                    "date": 1756970140803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n     if (loading) return <p>Loading...</p>;\r\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n-        <div>\r\n+        <div className=\"container\">\r\n             <h2>Posts:</h2>\r\n             <div className=\"row\" style={{gap:\"20px\"}}>\r\n             {data.map((post) => (\r\n                 <div className=\"card\" style={{ width: '18rem' }}>\r\n"
                },
                {
                    "date": 1756970304540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n                 <div className=\"card\" style={{ width: '18rem' }}>\r\n                     <div className=\"card-body\">\r\n                         <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n                             <div className=\"card-title\">{post.title}</div>\r\n-                            <p>{post.body}</p>\r\n+                            <p>{post.userId} {post.body}</p>\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n             ))}\r\n"
                },
                {
                    "date": 1756970334597,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,10 +29,10 @@\n             {data.map((post) => (\r\n                 <div className=\"card\" style={{ width: '18rem' }}>\r\n                     <div className=\"card-body\">\r\n                         <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-                            <div className=\"card-title\">{post.title}</div>\r\n-                            <p>{post.userId} {post.body}</p>\r\n+                            <div className=\"card-title\">{post.userId} {post.title}</div>\r\n+                            <p>{post.body}</p>\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n             ))}\r\n"
                },
                {
                    "date": 1757005324041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n             {data.map((post) => (\r\n                 <div className=\"card\" style={{ width: '18rem' }}>\r\n                     <div className=\"card-body\">\r\n                         <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-                            <div className=\"card-title\">{post.userId} {post.title}</div>\r\n+                            <div className=\"card-title\">{post.id} {post.title}</div>\r\n                             <p>{post.body}</p>\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n"
                },
                {
                    "date": 1757007709678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n export default function ApiCRUD() {\r\n     const [data, setData] = useState([]);\r\n     const [error, setError] = useState(null);\r\n     const [loading, setLoading] = useState(true);\r\n+    const [showForm,setShowForm]=useState(false);\r\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n"
                },
                {
                    "date": 1757047544161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n     const [data, setData] = useState([]);\r\n     const [error, setError] = useState(null);\r\n     const [loading, setLoading] = useState(true);\r\n     const [showForm,setShowForm]=useState(false);\r\n+    const[submission,setSubmissions]=useState([]);\r\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n"
                },
                {
                    "date": 1757047799724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,12 @@\n     const [loading, setLoading] = useState(true);\r\n     const [showForm,setShowForm]=useState(false);\r\n     const[submission,setSubmissions]=useState([]);\r\n \r\n+    const handleFormSubmit=()=>{\r\n+        \r\n+    }\r\n+\r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then((data) => {\r\n"
                },
                {
                    "date": 1757048504997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import React, { useState, useEffect } from \"react\";\r\n+import { Card } from \"react-bootstrap\";\r\n \r\n \r\n export default function ApiCRUD() {\r\n     const [data, setData] = useState([]);\r\n@@ -7,12 +8,14 @@\n     const [loading, setLoading] = useState(true);\r\n     const [showForm,setShowForm]=useState(false);\r\n     const[submission,setSubmissions]=useState([]);\r\n \r\n-    const handleFormSubmit=()=>{\r\n-        \r\n+    const handleFormSubmit=(data)=>{\r\n+        setSubmissions=(prev=>[...prev,data]);\r\n+        setShowForm(false);\r\n     }\r\n-\r\n+    \r\n+console.log(post.id.length)\r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then((data) => {\r\n"
                },
                {
                    "date": 1757048511149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n         setSubmissions=(prev=>[...prev,data]);\r\n         setShowForm(false);\r\n     }\r\n     \r\n-console.log(post.id.length)\r\n+console.log((post.id).length)\r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then((data) => {\r\n"
                },
                {
                    "date": 1757067869550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n         setSubmissions=(prev=>[...prev,data]);\r\n         setShowForm(false);\r\n     }\r\n     \r\n-console.log((post.id).length)\r\n+\r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then((data) => {\r\n@@ -26,9 +26,9 @@\n                 setError(err);\r\n                 setLoading(false);\r\n             })\r\n     }, []);\r\n-\r\n+    \r\n     if (loading) return <p>Loading...</p>;\r\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n"
                },
                {
                    "date": 1757068399270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,8 @@\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n         <div className=\"container\">\r\n-            <h2>Posts:</h2>\r\n             <div className=\"row\" style={{gap:\"20px\"}}>\r\n             {data.map((post) => (\r\n                 <div className=\"card\" style={{ width: '18rem' }}>\r\n                     <div className=\"card-body\">\r\n"
                },
                {
                    "date": 1757068428211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,8 +32,9 @@\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n         <div className=\"container\">\r\n+            <div className=\"d-flex flex-row\">\r\n             <div className=\"row\" style={{gap:\"20px\"}}>\r\n             {data.map((post) => (\r\n                 <div className=\"card\" style={{ width: '18rem' }}>\r\n                     <div className=\"card-body\">\r\n"
                },
                {
                    "date": 1757068437135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,9 @@\n                             <p>{post.body}</p>\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n+                </div>\r\n             ))}\r\n             </div>\r\n         </div>\r\n     );\r\n"
                },
                {
                    "date": 1757068497112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,17 +5,17 @@\n export default function ApiCRUD() {\r\n     const [data, setData] = useState([]);\r\n     const [error, setError] = useState(null);\r\n     const [loading, setLoading] = useState(true);\r\n-    const [showForm,setShowForm]=useState(false);\r\n-    const[submission,setSubmissions]=useState([]);\r\n+    const [showForm, setShowForm] = useState(false);\r\n+    const [submission, setSubmissions] = useState([]);\r\n \r\n-    const handleFormSubmit=(data)=>{\r\n-        setSubmissions=(prev=>[...prev,data]);\r\n+    const handleFormSubmit = (data) => {\r\n+        setSubmissions = (prev => [...prev, data]);\r\n         setShowForm(false);\r\n     }\r\n-    \r\n \r\n+\r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then((data) => {\r\n@@ -26,27 +26,27 @@\n                 setError(err);\r\n                 setLoading(false);\r\n             })\r\n     }, []);\r\n-    \r\n+\r\n     if (loading) return <p>Loading...</p>;\r\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n         <div className=\"container\">\r\n             <div className=\"d-flex flex-row\">\r\n-            <div className=\"row\" style={{gap:\"20px\"}}>\r\n-            {data.map((post) => (\r\n-                <div className=\"card\" style={{ width: '18rem' }}>\r\n-                    <div className=\"card-body\">\r\n-                        <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-                            <div className=\"card-title\">{post.id} {post.title}</div>\r\n-                            <p>{post.body}</p>\r\n+                <div className=\"row\" style={{ gap: \"20px\" }}>\r\n+                    {data.map((post) => (\r\n+                        <div className=\"card\" style={{ width: '18rem' }}>\r\n+                            <div className=\"card-body\">\r\n+                                <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n+                                    <div className=\"card-title\">{post.id} {post.title}</div>\r\n+                                    <p>{post.body}</p>\r\n+                                </div>\r\n+                            </div>\r\n                         </div>\r\n-                    </div>\r\n+                    ))}\r\n                 </div>\r\n-                </div>\r\n-            ))}\r\n             </div>\r\n         </div>\r\n     );\r\n };\r\n"
                },
                {
                    "date": 1757068505333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n         <div className=\"container\">\r\n             <div className=\"d-flex flex-row\">\r\n                 <div className=\"row\" style={{ gap: \"20px\" }}>\r\n                     {data.map((post) => (\r\n-                        <div className=\"card\" style={{ width: '18rem' }}>\r\n+                        <div className=\"card\">\r\n                             <div className=\"card-body\">\r\n                                 <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n                                     <div className=\"card-title\">{post.id} {post.title}</div>\r\n                                     <p>{post.body}</p>\r\n"
                },
                {
                    "date": 1757068522576,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n         <div className=\"container\">\r\n-            <div className=\"d-flex flex-row\">\r\n+            <div className=\"d-flex flex-column\">\r\n                 <div className=\"row\" style={{ gap: \"20px\" }}>\r\n                     {data.map((post) => (\r\n                         <div className=\"card\">\r\n                             <div className=\"card-body\">\r\n"
                },
                {
                    "date": 1757068540624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n         <div className=\"container\">\r\n-            <div className=\"d-flex flex-column\">\r\n+            <div className=\"d-flex flex-row\">\r\n                 <div className=\"row\" style={{ gap: \"20px\" }}>\r\n                     {data.map((post) => (\r\n                         <div className=\"card\">\r\n                             <div className=\"card-body\">\r\n"
                },
                {
                    "date": 1757068565553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n \r\n     return (\r\n         <div className=\"container\">\r\n             <div className=\"d-flex flex-row\">\r\n-                <div className=\"row\" style={{ gap: \"20px\" }}>\r\n+                <div  style={{ gap: \"20px\" }}>\r\n                     {data.map((post) => (\r\n                         <div className=\"card\">\r\n                             <div className=\"card-body\">\r\n                                 <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n"
                },
                {
                    "date": 1757068573164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n \r\n     return (\r\n         <div className=\"container\">\r\n             <div className=\"d-flex flex-row\">\r\n-                <div  style={{ gap: \"20px\" }}>\r\n+                <div className=\"row\" style={{ gap: \"20px\" }}>\r\n                     {data.map((post) => (\r\n                         <div className=\"card\">\r\n                             <div className=\"card-body\">\r\n                                 <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n"
                },
                {
                    "date": 1757068582551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,22 +32,21 @@\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n         <div className=\"container\">\r\n-            <div className=\"d-flex flex-row\">\r\n-                <div className=\"row\" style={{ gap: \"20px\" }}>\r\n-                    {data.map((post) => (\r\n-                        <div className=\"card\">\r\n-                            <div className=\"card-body\">\r\n-                                <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-                                    <div className=\"card-title\">{post.id} {post.title}</div>\r\n-                                    <p>{post.body}</p>\r\n-                                </div>\r\n+            <div className=\"row\" style={{ gap: \"20px\" }}>\r\n+                {data.map((post) => (\r\n+                    <div className=\"card\">\r\n+                        <div className=\"card-body\">\r\n+                            <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n+                                <div className=\"card-title\">{post.id} {post.title}</div>\r\n+                                <p>{post.body}</p>\r\n                             </div>\r\n                         </div>\r\n-                    ))}\r\n-                </div>\r\n+                    </div>\r\n+                ))}\r\n             </div>\r\n         </div>\r\n+\r\n     );\r\n };\r\n \r\n"
                },
                {
                    "date": 1757068595523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n         <div className=\"container\">\r\n-            <div className=\"row\" style={{ gap: \"20px\" }}>\r\n+            <div className=\"d-flex flex-row\" style={{ gap: \"20px\" }}>\r\n                 {data.map((post) => (\r\n                     <div className=\"card\">\r\n                         <div className=\"card-body\">\r\n                             <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n"
                },
                {
                    "date": 1757068623945,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,20 +32,21 @@\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n         <div className=\"container\">\r\n-            <div className=\"d-flex flex-row\" style={{ gap: \"20px\" }}>\r\n+            \r\n                 {data.map((post) => (\r\n+                    <div className=\"d-flex flex-row\" style={{ gap: \"20px\" }}>\r\n                     <div className=\"card\">\r\n                         <div className=\"card-body\">\r\n                             <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n                                 <div className=\"card-title\">{post.id} {post.title}</div>\r\n                                 <p>{post.body}</p>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n+                    </div>\r\n                 ))}\r\n-            </div>\r\n         </div>\r\n \r\n     );\r\n };\r\n"
                },
                {
                    "date": 1757068647511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n     return (\r\n         <div className=\"container\">\r\n             \r\n                 {data.map((post) => (\r\n-                    <div className=\"d-flex flex-row\" style={{ gap: \"20px\" }}>\r\n+                    <div className=\"d-flex flex-column\" style={{ gap: \"20px\" }}>\r\n                     <div className=\"card\">\r\n                         <div className=\"card-body\">\r\n                             <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n                                 <div className=\"card-title\">{post.id} {post.title}</div>\r\n"
                },
                {
                    "date": 1757068744825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n         <div className=\"container\">\r\n             \r\n                 {data.map((post) => (\r\n                     <div className=\"d-flex flex-column\" style={{ gap: \"20px\" }}>\r\n-                    <div className=\"card\">\r\n+                    <div className=\"card\" style={{\"width:18rem\"}}>\r\n                         <div className=\"card-body\">\r\n                             <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n                                 <div className=\"card-title\">{post.id} {post.title}</div>\r\n                                 <p>{post.body}</p>\r\n"
                },
                {
                    "date": 1757068758474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,17 +5,17 @@\n export default function ApiCRUD() {\r\n     const [data, setData] = useState([]);\r\n     const [error, setError] = useState(null);\r\n     const [loading, setLoading] = useState(true);\r\n-    const [showForm, setShowForm] = useState(false);\r\n-    const [submission, setSubmissions] = useState([]);\r\n+    const [showForm,setShowForm]=useState(false);\r\n+    const[submission,setSubmissions]=useState([]);\r\n \r\n-    const handleFormSubmit = (data) => {\r\n-        setSubmissions = (prev => [...prev, data]);\r\n+    const handleFormSubmit=(data)=>{\r\n+        setSubmissions=(prev=>[...prev,data]);\r\n         setShowForm(false);\r\n     }\r\n+    \r\n \r\n-\r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then((data) => {\r\n@@ -27,27 +27,27 @@\n                 setLoading(false);\r\n             })\r\n     }, []);\r\n \r\n+    \r\n     if (loading) return <p>Loading...</p>;\r\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n         <div className=\"container\">\r\n-            \r\n-                {data.map((post) => (\r\n-                    <div className=\"d-flex flex-column\" style={{ gap: \"20px\" }}>\r\n-                    <div className=\"card\" style={{\"width:18rem\"}}>\r\n-                        <div className=\"card-body\">\r\n-                            <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-                                <div className=\"card-title\">{post.id} {post.title}</div>\r\n-                                <p>{post.body}</p>\r\n-                            </div>\r\n+            <h2>Posts:</h2>\r\n+            <div className=\"row\" style={{gap:\"20px\"}}>\r\n+            {data.map((post) => (\r\n+                <div className=\"card\" style={{ width: '18rem' }}>\r\n+                    <div className=\"card-body\">\r\n+                        <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n+                            <div className=\"card-title\">{post.id} {post.title}</div>\r\n+                            <p>{post.body}</p>\r\n                         </div>\r\n                     </div>\r\n-                    </div>\r\n-                ))}\r\n+                </div>\r\n+            ))}\r\n+            </div>\r\n         </div>\r\n-\r\n     );\r\n };\r\n \r\n"
                },
                {
                    "date": 1757068819378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n         <div className=\"container\">\r\n             <h2>Posts:</h2>\r\n             <div className=\"row\" style={{gap:\"20px\"}}>\r\n             {data.map((post) => (\r\n-                <div className=\"card\" style={{ width: '18rem' }}>\r\n+                <div className=\"card\">\r\n                     <div className=\"card-body\">\r\n                         <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n                             <div className=\"card-title\">{post.id} {post.title}</div>\r\n                             <p>{post.body}</p>\r\n"
                },
                {
                    "date": 1757068833308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n         <div className=\"container\">\r\n             <h2>Posts:</h2>\r\n             <div className=\"row\" style={{gap:\"20px\"}}>\r\n             {data.map((post) => (\r\n-                <div className=\"card\">\r\n+                <div className=\"card\" style={{ width: '20rem' }}>\r\n                     <div className=\"card-body\">\r\n                         <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n                             <div className=\"card-title\">{post.id} {post.title}</div>\r\n                             <p>{post.body}</p>\r\n"
                },
                {
                    "date": 1757068902551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,8 @@\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n         <div className=\"container\">\r\n-            <h2>Posts:</h2>\r\n             <div className=\"row\" style={{gap:\"20px\"}}>\r\n             {data.map((post) => (\r\n                 <div className=\"card\" style={{ width: '20rem' }}>\r\n                     <div className=\"card-body\">\r\n"
                },
                {
                    "date": 1757069002769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n     const [error, setError] = useState(null);\r\n     const [loading, setLoading] = useState(true);\r\n     const [showForm,setShowForm]=useState(false);\r\n     const[submission,setSubmissions]=useState([]);\r\n+    const itemPerPage=10;\r\n \r\n     const handleFormSubmit=(data)=>{\r\n         setSubmissions=(prev=>[...prev,data]);\r\n         setShowForm(false);\r\n"
                },
                {
                    "date": 1757069067743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n     const [loading, setLoading] = useState(true);\r\n     const [showForm,setShowForm]=useState(false);\r\n     const[submission,setSubmissions]=useState([]);\r\n     const itemPerPage=10;\r\n+    let totalPages=10;\r\n \r\n     const handleFormSubmit=(data)=>{\r\n         setSubmissions=(prev=>[...prev,data]);\r\n         setShowForm(false);\r\n"
                },
                {
                    "date": 1757069074813,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,54 +1,97 @@\n-import React, { useState, useEffect } from \"react\";\r\n-import { Card } from \"react-bootstrap\";\r\n+// import React, { useState, useEffect } from \"react\";\r\n+// import { Card } from \"react-bootstrap\";\r\n \r\n \r\n-export default function ApiCRUD() {\r\n-    const [data, setData] = useState([]);\r\n-    const [error, setError] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-    const [showForm,setShowForm]=useState(false);\r\n-    const[submission,setSubmissions]=useState([]);\r\n-    const itemPerPage=10;\r\n-    let totalPages=10;\r\n+// export default function ApiCRUD() {\r\n+//     const [data, setData] = useState([]);\r\n+//     const [error, setError] = useState(null);\r\n+//     const [loading, setLoading] = useState(true);\r\n+//     const [showForm,setShowForm]=useState(false);\r\n+//     const[submission,setSubmissions]=useState([]);\r\n+//     const itemPerPage=10;\r\n+//     let totalPages=10;\r\n \r\n-    const handleFormSubmit=(data)=>{\r\n-        setSubmissions=(prev=>[...prev,data]);\r\n-        setShowForm(false);\r\n-    }\r\n+//     const handleFormSubmit=(data)=>{\r\n+//         setSubmissions=(prev=>[...prev,data]);\r\n+//         setShowForm(false);\r\n+//     }\r\n     \r\n \r\n-    useEffect(() => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-            .then(res => res.json())\r\n-            .then((data) => {\r\n-                setData(data);\r\n-                setLoading(false);\r\n-            })\r\n-            .catch(err => {\r\n-                setError(err);\r\n-                setLoading(false);\r\n-            })\r\n-    }, []);\r\n+//     useEffect(() => {\r\n+//         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+//             .then(res => res.json())\r\n+//             .then((data) => {\r\n+//                 setData(data);\r\n+//                 setLoading(false);\r\n+//             })\r\n+//             .catch(err => {\r\n+//                 setError(err);\r\n+//                 setLoading(false);\r\n+//             })\r\n+//     }, []);\r\n \r\n     \r\n-    if (loading) return <p>Loading...</p>;\r\n-    if (error) return <p>Error occured!</p>;\r\n+//     if (loading) return <p>Loading...</p>;\r\n+//     if (error) return <p>Error occured!</p>;\r\n \r\n-    return (\r\n-        <div className=\"container\">\r\n-            <div className=\"row\" style={{gap:\"20px\"}}>\r\n-            {data.map((post) => (\r\n-                <div className=\"card\" style={{ width: '20rem' }}>\r\n-                    <div className=\"card-body\">\r\n-                        <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-                            <div className=\"card-title\">{post.id} {post.title}</div>\r\n-                            <p>{post.body}</p>\r\n-                        </div>\r\n-                    </div>\r\n-                </div>\r\n-            ))}\r\n-            </div>\r\n+//     return (\r\n+//         <div className=\"container\">\r\n+//             <div className=\"row\" style={{gap:\"20px\"}}>\r\n+//             {data.map((post) => (\r\n+//                 <div className=\"card\" style={{ width: '20rem' }}>\r\n+//                     <div className=\"card-body\">\r\n+//                         <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n+//                             <div className=\"card-title\">{post.id} {post.title}</div>\r\n+//                             <p>{post.body}</p>\r\n+//                         </div>\r\n+//                     </div>\r\n+//                 </div>\r\n+//             ))}\r\n+//             </div>\r\n+//         </div>\r\n+//     );\r\n+// };\r\n+\r\n+import React, { useEffect, useState } from \"react\";\r\n+\r\n+export default function Posts() {\r\n+  const [posts, setPosts] = useState([]);\r\n+  const [page, setPage] = useState(1);\r\n+  const postsPerPage = 10;\r\n+\r\n+  useEffect(() => {\r\n+    fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+      .then(res => res.json())\r\n+      .then(data => setPosts(data));\r\n+  }, []);\r\n+\r\n+  const lastId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) : 0;\r\n+\r\n+  // Pagination logic\r\n+  const indexOfLastPost = page * postsPerPage;\r\n+  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n+  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n+\r\n+  return (\r\n+    <div>\r\n+      <h3>Last ID: {lastId}</h3>\r\n+      {currentPosts.map((post, i) => (\r\n+        <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\" }}>\r\n+          <h5>\r\n+            {indexOfFirstPost + i + 1}th Card - {post.title}\r\n+          </h5>\r\n+          <p>{post.body}</p>\r\n         </div>\r\n-    );\r\n-};\r\n+      ))}\r\n \r\n+      {/* Pagination buttons */}\r\n+      <div>\r\n+        {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n+          <button key={idx} onClick={() => setPage(idx + 1)} style={{ margin: \"5px\" }}>\r\n+            {idx + 1}\r\n+          </button>\r\n+        ))}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1757069194097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,94 +1,178 @@\n-// import React, { useState, useEffect } from \"react\";\r\n-// import { Card } from \"react-bootstrap\";\r\n+// // import React, { useState, useEffect } from \"react\";\r\n+// // import { Card } from \"react-bootstrap\";\r\n \r\n \r\n-// export default function ApiCRUD() {\r\n-//     const [data, setData] = useState([]);\r\n-//     const [error, setError] = useState(null);\r\n-//     const [loading, setLoading] = useState(true);\r\n-//     const [showForm,setShowForm]=useState(false);\r\n-//     const[submission,setSubmissions]=useState([]);\r\n-//     const itemPerPage=10;\r\n-//     let totalPages=10;\r\n+// // export default function ApiCRUD() {\r\n+// //     const [data, setData] = useState([]);\r\n+// //     const [error, setError] = useState(null);\r\n+// //     const [loading, setLoading] = useState(true);\r\n+// //     const [showForm,setShowForm]=useState(false);\r\n+// //     const[submission,setSubmissions]=useState([]);\r\n+// //     const itemPerPage=10;\r\n+// //     let totalPages=10;\r\n \r\n-//     const handleFormSubmit=(data)=>{\r\n-//         setSubmissions=(prev=>[...prev,data]);\r\n-//         setShowForm(false);\r\n-//     }\r\n+// //     const handleFormSubmit=(data)=>{\r\n+// //         setSubmissions=(prev=>[...prev,data]);\r\n+// //         setShowForm(false);\r\n+// //     }\r\n     \r\n \r\n-//     useEffect(() => {\r\n-//         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-//             .then(res => res.json())\r\n-//             .then((data) => {\r\n-//                 setData(data);\r\n-//                 setLoading(false);\r\n-//             })\r\n-//             .catch(err => {\r\n-//                 setError(err);\r\n-//                 setLoading(false);\r\n-//             })\r\n-//     }, []);\r\n+// //     useEffect(() => {\r\n+// //         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+// //             .then(res => res.json())\r\n+// //             .then((data) => {\r\n+// //                 setData(data);\r\n+// //                 setLoading(false);\r\n+// //             })\r\n+// //             .catch(err => {\r\n+// //                 setError(err);\r\n+// //                 setLoading(false);\r\n+// //             })\r\n+// //     }, []);\r\n \r\n     \r\n-//     if (loading) return <p>Loading...</p>;\r\n-//     if (error) return <p>Error occured!</p>;\r\n+// //     if (loading) return <p>Loading...</p>;\r\n+// //     if (error) return <p>Error occured!</p>;\r\n \r\n-//     return (\r\n-//         <div className=\"container\">\r\n-//             <div className=\"row\" style={{gap:\"20px\"}}>\r\n-//             {data.map((post) => (\r\n-//                 <div className=\"card\" style={{ width: '20rem' }}>\r\n-//                     <div className=\"card-body\">\r\n-//                         <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-//                             <div className=\"card-title\">{post.id} {post.title}</div>\r\n-//                             <p>{post.body}</p>\r\n-//                         </div>\r\n-//                     </div>\r\n-//                 </div>\r\n-//             ))}\r\n-//             </div>\r\n+// //     return (\r\n+// //         <div className=\"container\">\r\n+// //             <div className=\"row\" style={{gap:\"20px\"}}>\r\n+// //             {data.map((post) => (\r\n+// //                 <div className=\"card\" style={{ width: '20rem' }}>\r\n+// //                     <div className=\"card-body\">\r\n+// //                         <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n+// //                             <div className=\"card-title\">{post.id} {post.title}</div>\r\n+// //                             <p>{post.body}</p>\r\n+// //                         </div>\r\n+// //                     </div>\r\n+// //                 </div>\r\n+// //             ))}\r\n+// //             </div>\r\n+// //         </div>\r\n+// //     );\r\n+// // };\r\n+\r\n+// import React, { useEffect, useState } from \"react\";\r\n+\r\n+// export default function Posts() {\r\n+//   const [posts, setPosts] = useState([]);\r\n+//   const [page, setPage] = useState(1);\r\n+//   const postsPerPage = 10;\r\n+\r\n+//   useEffect(() => {\r\n+//     fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+//       .then(res => res.json())\r\n+//       .then(data => setPosts(data));\r\n+//   }, []);\r\n+\r\n+//   const lastId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) : 0;\r\n+\r\n+//   // Pagination logic\r\n+//   const indexOfLastPost = page * postsPerPage;\r\n+//   const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n+//   const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n+\r\n+//   return (\r\n+//     <div>\r\n+//       <h3>Last ID: {lastId}</h3>\r\n+//       {currentPosts.map((post, i) => (\r\n+//         <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\" }}>\r\n+//           <h5>\r\n+//             {indexOfFirstPost + i + 1}th Card - {post.title}\r\n+//           </h5>\r\n+//           <p>{post.body}</p>\r\n //         </div>\r\n-//     );\r\n-// };\r\n+//       ))}\r\n \r\n+//       {/* Pagination buttons */}\r\n+//       <div>\r\n+//         {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n+//           <button key={idx} onClick={() => setPage(idx + 1)} style={{ margin: \"5px\" }}>\r\n+//             {idx + 1}\r\n+//           </button>\r\n+//         ))}\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// }\r\n import React, { useEffect, useState } from \"react\";\r\n \r\n export default function Posts() {\r\n   const [posts, setPosts] = useState([]);\r\n   const [page, setPage] = useState(1);\r\n   const postsPerPage = 10;\r\n+  const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n \r\n   useEffect(() => {\r\n     fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n       .then(res => res.json())\r\n       .then(data => setPosts(data));\r\n   }, []);\r\n \r\n-  const lastId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) : 0;\r\n+  // Add new post\r\n+  const addPost = (e) => {\r\n+    e.preventDefault();\r\n+    const newId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) + 1 : 1;\r\n+    const newPost = { id: newId, title: form.title, body: form.body };\r\n+    const updated = [...posts, newPost];\r\n+    setPosts(updated);\r\n \r\n+    // Jump to last page\r\n+    const lastPage = Math.ceil(updated.length / postsPerPage);\r\n+    setPage(lastPage);\r\n+\r\n+    // Reset form\r\n+    setForm({ title: \"\", body: \"\" });\r\n+  };\r\n+\r\n   // Pagination logic\r\n   const indexOfLastPost = page * postsPerPage;\r\n   const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n   const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n \r\n   return (\r\n     <div>\r\n-      <h3>Last ID: {lastId}</h3>\r\n+      <h3>Total Pages: {Math.ceil(posts.length / postsPerPage)}</h3>\r\n+\r\n+      {/* Form */}\r\n+      <form onSubmit={addPost} style={{ marginBottom: \"20px\" }}>\r\n+        <input\r\n+          type=\"text\"\r\n+          placeholder=\"Title\"\r\n+          value={form.title}\r\n+          onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n+          required\r\n+        />\r\n+        <input\r\n+          type=\"text\"\r\n+          placeholder=\"Body\"\r\n+          value={form.body}\r\n+          onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n+          required\r\n+        />\r\n+        <button type=\"submit\">Add Post</button>\r\n+      </form>\r\n+\r\n+      {/* Cards */}\r\n       {currentPosts.map((post, i) => (\r\n         <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\" }}>\r\n-          <h5>\r\n-            {indexOfFirstPost + i + 1}th Card - {post.title}\r\n-          </h5>\r\n+          <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n           <p>{post.body}</p>\r\n         </div>\r\n       ))}\r\n \r\n       {/* Pagination buttons */}\r\n       <div>\r\n         {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n-          <button key={idx} onClick={() => setPage(idx + 1)} style={{ margin: \"5px\" }}>\r\n+          <button\r\n+            key={idx}\r\n+            onClick={() => setPage(idx + 1)}\r\n+            style={{\r\n+              margin: \"5px\",\r\n+              background: page === idx + 1 ? \"#ccc\" : \"white\"\r\n+            }}\r\n+          >\r\n             {idx + 1}\r\n           </button>\r\n         ))}\r\n       </div>\r\n"
                },
                {
                    "date": 1757069340830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,181 +1,139 @@\n-// // import React, { useState, useEffect } from \"react\";\r\n-// // import { Card } from \"react-bootstrap\";\r\n+import React, { useState, useEffect } from \"react\";\r\n+import { Card } from \"react-bootstrap\";\r\n \r\n \r\n-// // export default function ApiCRUD() {\r\n-// //     const [data, setData] = useState([]);\r\n-// //     const [error, setError] = useState(null);\r\n-// //     const [loading, setLoading] = useState(true);\r\n-// //     const [showForm,setShowForm]=useState(false);\r\n-// //     const[submission,setSubmissions]=useState([]);\r\n-// //     const itemPerPage=10;\r\n-// //     let totalPages=10;\r\n+export default function ApiCRUD() {\r\n+    const [data, setData] = useState([]);\r\n+    const [error, setError] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+    const [showForm,setShowForm]=useState(false);\r\n+    const[submission,setSubmissions]=useState([]);\r\n+    const itemPerPage=10;\r\n+    let totalPages=10;\r\n \r\n-// //     const handleFormSubmit=(data)=>{\r\n-// //         setSubmissions=(prev=>[...prev,data]);\r\n-// //         setShowForm(false);\r\n-// //     }\r\n+    const handleFormSubmit=(data)=>{\r\n+        setSubmissions=(prev=>[...prev,data]);\r\n+        setShowForm(false);\r\n+    }\r\n     \r\n \r\n-// //     useEffect(() => {\r\n-// //         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-// //             .then(res => res.json())\r\n-// //             .then((data) => {\r\n-// //                 setData(data);\r\n-// //                 setLoading(false);\r\n-// //             })\r\n-// //             .catch(err => {\r\n-// //                 setError(err);\r\n-// //                 setLoading(false);\r\n-// //             })\r\n-// //     }, []);\r\n+    useEffect(() => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+            .then(res => res.json())\r\n+            .then((data) => {\r\n+                setData(data);\r\n+                setLoading(false);\r\n+            })\r\n+            .catch(err => {\r\n+                setError(err);\r\n+                setLoading(false);\r\n+            })\r\n+    }, []);\r\n \r\n     \r\n-// //     if (loading) return <p>Loading...</p>;\r\n-// //     if (error) return <p>Error occured!</p>;\r\n+    if (loading) return <p>Loading...</p>;\r\n+    if (error) return <p>Error occured!</p>;\r\n \r\n-// //     return (\r\n-// //         <div className=\"container\">\r\n-// //             <div className=\"row\" style={{gap:\"20px\"}}>\r\n-// //             {data.map((post) => (\r\n-// //                 <div className=\"card\" style={{ width: '20rem' }}>\r\n-// //                     <div className=\"card-body\">\r\n-// //                         <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-// //                             <div className=\"card-title\">{post.id} {post.title}</div>\r\n-// //                             <p>{post.body}</p>\r\n-// //                         </div>\r\n-// //                     </div>\r\n-// //                 </div>\r\n-// //             ))}\r\n-// //             </div>\r\n-// //         </div>\r\n-// //     );\r\n-// // };\r\n+    return (\r\n+        <div className=\"container\">\r\n+            <div className=\"row\" style={{gap:\"20px\"}}>\r\n+            {data.map((post) => (\r\n+                <div className=\"card\" style={{ width: '20rem' }}>\r\n+                    <div className=\"card-body\">\r\n+                        <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n+                            <div className=\"card-title\">{post.id} {post.title}</div>\r\n+                            <p>{post.body}</p>\r\n+                        </div>\r\n+                    </div>\r\n+                </div>\r\n+            ))}\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n \r\n+\r\n // import React, { useEffect, useState } from \"react\";\r\n \r\n // export default function Posts() {\r\n //   const [posts, setPosts] = useState([]);\r\n //   const [page, setPage] = useState(1);\r\n //   const postsPerPage = 10;\r\n+//   const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n \r\n //   useEffect(() => {\r\n //     fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n //       .then(res => res.json())\r\n //       .then(data => setPosts(data));\r\n //   }, []);\r\n \r\n-//   const lastId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) : 0;\r\n+//   // Add new post\r\n+//   const addPost = (e) => {\r\n+//     e.preventDefault();\r\n+//     const newId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) + 1 : 1;\r\n+//     const newPost = { id: newId, title: form.title, body: form.body };\r\n+//     const updated = [...posts, newPost];\r\n+//     setPosts(updated);\r\n \r\n+//     // Jump to last page\r\n+//     const lastPage = Math.ceil(updated.length / postsPerPage);\r\n+//     setPage(lastPage);\r\n+\r\n+//     // Reset form\r\n+//     setForm({ title: \"\", body: \"\" });\r\n+//   };\r\n+\r\n //   // Pagination logic\r\n //   const indexOfLastPost = page * postsPerPage;\r\n //   const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n //   const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n \r\n //   return (\r\n //     <div>\r\n-//       <h3>Last ID: {lastId}</h3>\r\n+//       <h3>Total Pages: {Math.ceil(posts.length / postsPerPage)}</h3>\r\n+\r\n+//       {/* Form */}\r\n+//       <form onSubmit={addPost} style={{ marginBottom: \"20px\" }}>\r\n+//         <input\r\n+//           type=\"text\"\r\n+//           placeholder=\"Title\"\r\n+//           value={form.title}\r\n+//           onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n+//           required\r\n+//         />\r\n+//         <input\r\n+//           type=\"text\"\r\n+//           placeholder=\"Body\"\r\n+//           value={form.body}\r\n+//           onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n+//           required\r\n+//         />\r\n+//         <button type=\"submit\">Add Post</button>\r\n+//       </form>\r\n+\r\n+//       {/* Cards */}\r\n //       {currentPosts.map((post, i) => (\r\n //         <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\" }}>\r\n-//           <h5>\r\n-//             {indexOfFirstPost + i + 1}th Card - {post.title}\r\n-//           </h5>\r\n+//           <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n //           <p>{post.body}</p>\r\n //         </div>\r\n //       ))}\r\n \r\n //       {/* Pagination buttons */}\r\n //       <div>\r\n //         {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n-//           <button key={idx} onClick={() => setPage(idx + 1)} style={{ margin: \"5px\" }}>\r\n+//           <button\r\n+//             key={idx}\r\n+//             onClick={() => setPage(idx + 1)}\r\n+//             style={{\r\n+//               margin: \"5px\",\r\n+//               background: page === idx + 1 ? \"#ccc\" : \"white\"\r\n+//             }}\r\n+//           >\r\n //             {idx + 1}\r\n //           </button>\r\n //         ))}\r\n //       </div>\r\n //     </div>\r\n //   );\r\n // }\r\n-import React, { useEffect, useState } from \"react\";\r\n-\r\n-export default function Posts() {\r\n-  const [posts, setPosts] = useState([]);\r\n-  const [page, setPage] = useState(1);\r\n-  const postsPerPage = 10;\r\n-  const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n-\r\n-  useEffect(() => {\r\n-    fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-      .then(res => res.json())\r\n-      .then(data => setPosts(data));\r\n-  }, []);\r\n-\r\n-  // Add new post\r\n-  const addPost = (e) => {\r\n-    e.preventDefault();\r\n-    const newId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) + 1 : 1;\r\n-    const newPost = { id: newId, title: form.title, body: form.body };\r\n-    const updated = [...posts, newPost];\r\n-    setPosts(updated);\r\n-\r\n-    // Jump to last page\r\n-    const lastPage = Math.ceil(updated.length / postsPerPage);\r\n-    setPage(lastPage);\r\n-\r\n-    // Reset form\r\n-    setForm({ title: \"\", body: \"\" });\r\n-  };\r\n-\r\n-  // Pagination logic\r\n-  const indexOfLastPost = page * postsPerPage;\r\n-  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n-  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n-\r\n-  return (\r\n-    <div>\r\n-      <h3>Total Pages: {Math.ceil(posts.length / postsPerPage)}</h3>\r\n-\r\n-      {/* Form */}\r\n-      <form onSubmit={addPost} style={{ marginBottom: \"20px\" }}>\r\n-        <input\r\n-          type=\"text\"\r\n-          placeholder=\"Title\"\r\n-          value={form.title}\r\n-          onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n-          required\r\n-        />\r\n-        <input\r\n-          type=\"text\"\r\n-          placeholder=\"Body\"\r\n-          value={form.body}\r\n-          onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n-          required\r\n-        />\r\n-        <button type=\"submit\">Add Post</button>\r\n-      </form>\r\n-\r\n-      {/* Cards */}\r\n-      {currentPosts.map((post, i) => (\r\n-        <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\" }}>\r\n-          <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n-          <p>{post.body}</p>\r\n-        </div>\r\n-      ))}\r\n-\r\n-      {/* Pagination buttons */}\r\n-      <div>\r\n-        {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n-          <button\r\n-            key={idx}\r\n-            onClick={() => setPage(idx + 1)}\r\n-            style={{\r\n-              margin: \"5px\",\r\n-              background: page === idx + 1 ? \"#ccc\" : \"white\"\r\n-            }}\r\n-          >\r\n-            {idx + 1}\r\n-          </button>\r\n-        ))}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1757069412660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n     const [data, setData] = useState([]);\r\n     const [error, setError] = useState(null);\r\n     const [loading, setLoading] = useState(true);\r\n     const [showForm,setShowForm]=useState(false);\r\n-    const[submission,setSubmissions]=useState([]);\r\n+    const[submission,setSubmissions]=useState({title:\"\", body:\"\"});\r\n     const itemPerPage=10;\r\n     let totalPages=10;\r\n \r\n     const handleFormSubmit=(data)=>{\r\n"
                },
                {
                    "date": 1757069420638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,19 +5,19 @@\n export default function ApiCRUD() {\r\n     const [data, setData] = useState([]);\r\n     const [error, setError] = useState(null);\r\n     const [loading, setLoading] = useState(true);\r\n-    const [showForm,setShowForm]=useState(false);\r\n-    const[submission,setSubmissions]=useState({title:\"\", body:\"\"});\r\n-    const itemPerPage=10;\r\n-    let totalPages=10;\r\n+    const [showForm, setShowForm] = useState(false);\r\n+    const [submission, setSubmissions] = useState({ title: \"\", body: \"\" });\r\n+    const itemPerPage = 10;\r\n+    let totalPages = 10;\r\n \r\n-    const handleFormSubmit=(data)=>{\r\n-        setSubmissions=(prev=>[...prev,data]);\r\n+    const handleFormSubmit = (data) => {\r\n+        setSubmissions = (prev => [...prev, data]);\r\n         setShowForm(false);\r\n     }\r\n-    \r\n \r\n+\r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then((data) => {\r\n@@ -29,25 +29,25 @@\n                 setLoading(false);\r\n             })\r\n     }, []);\r\n \r\n-    \r\n+\r\n     if (loading) return <p>Loading...</p>;\r\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n         <div className=\"container\">\r\n-            <div className=\"row\" style={{gap:\"20px\"}}>\r\n-            {data.map((post) => (\r\n-                <div className=\"card\" style={{ width: '20rem' }}>\r\n-                    <div className=\"card-body\">\r\n-                        <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-                            <div className=\"card-title\">{post.id} {post.title}</div>\r\n-                            <p>{post.body}</p>\r\n+            <div className=\"row\" style={{ gap: \"20px\" }}>\r\n+                {data.map((post) => (\r\n+                    <div className=\"card\" style={{ width: '20rem' }}>\r\n+                        <div className=\"card-body\">\r\n+                            <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n+                                <div className=\"card-title\">{post.id} {post.title}</div>\r\n+                                <p>{post.body}</p>\r\n+                            </div>\r\n                         </div>\r\n                     </div>\r\n-                </div>\r\n-            ))}\r\n+                ))}\r\n             </div>\r\n         </div>\r\n     );\r\n };\r\n"
                },
                {
                    "date": 1757069637429,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useState, useEffect } from \"react\";\r\n import { Card } from \"react-bootstrap\";\r\n \r\n \r\n-export default function ApiCRUD() {\r\n+    export default function ApiCRUD() {\r\n     const [data, setData] = useState([]);\r\n     const [error, setError] = useState(null);\r\n     const [loading, setLoading] = useState(true);\r\n     const [showForm, setShowForm] = useState(false);\r\n@@ -35,8 +35,9 @@\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n         <div className=\"container\">\r\n+            <button>Show Form</button>\r\n             <div className=\"row\" style={{ gap: \"20px\" }}>\r\n                 {data.map((post) => (\r\n                     <div className=\"card\" style={{ width: '20rem' }}>\r\n                         <div className=\"card-body\">\r\n"
                },
                {
                    "date": 1757069702052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n         <div className=\"container\">\r\n-            <button>Show Form</button>\r\n+            <button onClick={setShowForm(!showForm)}>Show Form</button>\r\n             <div className=\"row\" style={{ gap: \"20px\" }}>\r\n                 {data.map((post) => (\r\n                     <div className=\"card\" style={{ width: '20rem' }}>\r\n                         <div className=\"card-body\">\r\n"
                },
                {
                    "date": 1757069860456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n         <div className=\"container\">\r\n-            <button onClick={setShowForm(!showForm)}>Show Form</button>\r\n+            <button onClick={()=>{setShowForm(!showForm)}}>Show Form</button>\r\n             <div className=\"row\" style={{ gap: \"20px\" }}>\r\n                 {data.map((post) => (\r\n                     <div className=\"card\" style={{ width: '20rem' }}>\r\n                         <div className=\"card-body\">\r\n"
                },
                {
                    "date": 1757071267754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,14 +30,21 @@\n             })\r\n     }, []);\r\n \r\n \r\n+const addPost=()=>{\r\n+\r\n+}\r\n+\r\n     if (loading) return <p>Loading...</p>;\r\n     if (error) return <p>Error occured!</p>;\r\n \r\n     return (\r\n         <div className=\"container\">\r\n-            <button onClick={()=>{setShowForm(!showForm)}}>Show Form</button>\r\n+            <form onSubmit={addPost}>\r\n+                <input type=\"text\"\r\n+                placeholder=\"Enter title\" value={form.title}></input>\r\n+            </form>\r\n             <div className=\"row\" style={{ gap: \"20px\" }}>\r\n                 {data.map((post) => (\r\n                     <div className=\"card\" style={{ width: '20rem' }}>\r\n                         <div className=\"card-body\">\r\n"
                },
                {
                    "date": 1757071368001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,232 @@\n+// import React, { useState, useEffect } from \"react\";\r\n+// import { Card } from \"react-bootstrap\";\r\n+\r\n+\r\n+//     export default function ApiCRUD() {\r\n+//     const [data, setData] = useState([]);\r\n+//     const [error, setError] = useState(null);\r\n+//     const [loading, setLoading] = useState(true);\r\n+//     const [showForm, setShowForm] = useState(false);\r\n+//     const [submission, setSubmissions] = useState({ title: \"\", body: \"\" });\r\n+//     const itemPerPage = 10;\r\n+//     let totalPages = 10;\r\n+\r\n+//     const handleFormSubmit = (data) => {\r\n+//         setSubmissions = (prev => [...prev, data]);\r\n+//         setShowForm(false);\r\n+//     }\r\n+\r\n+\r\n+//     useEffect(() => {\r\n+//         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+//             .then(res => res.json())\r\n+//             .then((data) => {\r\n+//                 setData(data);\r\n+//                 setLoading(false);\r\n+//             })\r\n+//             .catch(err => {\r\n+//                 setError(err);\r\n+//                 setLoading(false);\r\n+//             })\r\n+//     }, []);\r\n+\r\n+\r\n+// const addPost=()=>{\r\n+\r\n+// }\r\n+\r\n+//     if (loading) return <p>Loading...</p>;\r\n+//     if (error) return <p>Error occured!</p>;\r\n+\r\n+//     return (\r\n+//         <div className=\"container\">\r\n+//             <form onSubmit={addPost}>\r\n+//                 <input type=\"text\"\r\n+//                 placeholder=\"Enter title\" value={form.title}></input>\r\n+//             </form>\r\n+//             <div className=\"row\" style={{ gap: \"20px\" }}>\r\n+//                 {data.map((post) => (\r\n+//                     <div className=\"card\" style={{ width: '20rem' }}>\r\n+//                         <div className=\"card-body\">\r\n+//                             <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n+//                                 <div className=\"card-title\">{post.id} {post.title}</div>\r\n+//                                 <p>{post.body}</p>\r\n+//                             </div>\r\n+//                         </div>\r\n+//                     </div>\r\n+//                 ))}\r\n+//             </div>\r\n+//         </div>\r\n+//     );\r\n+// };\r\n+\r\n+\r\n+// // import React, { useEffect, useState } from \"react\";\r\n+\r\n+// // export default function Posts() {\r\n+// //   const [posts, setPosts] = useState([]);\r\n+// //   const [page, setPage] = useState(1);\r\n+// //   const postsPerPage = 10;\r\n+// //   const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n+\r\n+// //   useEffect(() => {\r\n+// //     fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+// //       .then(res => res.json())\r\n+// //       .then(data => setPosts(data));\r\n+// //   }, []);\r\n+\r\n+// //   // Add new post\r\n+// //   const addPost = (e) => {\r\n+// //     e.preventDefault();\r\n+// //     const newId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) + 1 : 1;\r\n+// //     const newPost = { id: newId, title: form.title, body: form.body };\r\n+// //     const updated = [...posts, newPost];\r\n+// //     setPosts(updated);\r\n+\r\n+// //     // Jump to last page\r\n+// //     const lastPage = Math.ceil(updated.length / postsPerPage);\r\n+// //     setPage(lastPage);\r\n+\r\n+// //     // Reset form\r\n+// //     setForm({ title: \"\", body: \"\" });\r\n+// //   };\r\n+\r\n+// //   // Pagination logic\r\n+// //   const indexOfLastPost = page * postsPerPage;\r\n+// //   const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n+// //   const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n+\r\n+// //   return (\r\n+// //     <div>\r\n+// //       <h3>Total Pages: {Math.ceil(posts.length / postsPerPage)}</h3>\r\n+\r\n+// //       {/* Form */}\r\n+// //       <form onSubmit={addPost} style={{ marginBottom: \"20px\" }}>\r\n+// //         <input\r\n+// //           type=\"text\"\r\n+// //           placeholder=\"Title\"\r\n+// //           value={form.title}\r\n+// //           onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n+// //           required\r\n+// //         />\r\n+// //         <input\r\n+// //           type=\"text\"\r\n+// //           placeholder=\"Body\"\r\n+// //           value={form.body}\r\n+// //           onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n+// //           required\r\n+// //         />\r\n+// //         <button type=\"submit\">Add Post</button>\r\n+// //       </form>\r\n+\r\n+// //       {/* Cards */}\r\n+// //       {currentPosts.map((post, i) => (\r\n+// //         <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\" }}>\r\n+// //           <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n+// //           <p>{post.body}</p>\r\n+// //         </div>\r\n+// //       ))}\r\n+\r\n+// //       {/* Pagination buttons */}\r\n+// //       <div>\r\n+// //         {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n+// //           <button\r\n+// //             key={idx}\r\n+// //             onClick={() => setPage(idx + 1)}\r\n+// //             style={{\r\n+// //               margin: \"5px\",\r\n+// //               background: page === idx + 1 ? \"#ccc\" : \"white\"\r\n+// //             }}\r\n+// //           >\r\n+// //             {idx + 1}\r\n+// //           </button>\r\n+// //         ))}\r\n+// //       </div>\r\n+// //     </div>\r\n+// //   );\r\n+// // }\r\n+\r\n+import React, { useEffect, useState } from \"react\";\r\n+\r\n+export default function Posts() {\r\n+  const [posts, setPosts] = useState([]);\r\n+  const [page, setPage] = useState(1);\r\n+  const postsPerPage = 10;\r\n+  const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n+\r\n+  useEffect(() => {\r\n+    fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+      .then(res => res.json())\r\n+      .then(data => setPosts(data));\r\n+  }, []);\r\n+\r\n+  // Add new post\r\n+  const addPost = (e) => {\r\n+    e.preventDefault();\r\n+    const newId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) + 1 : 1;\r\n+    const newPost = { id: newId, title: form.title, body: form.body };\r\n+    const updated = [...posts, newPost];\r\n+    setPosts(updated);\r\n+\r\n+    // Jump to last page\r\n+    const lastPage = Math.ceil(updated.length / postsPerPage);\r\n+    setPage(lastPage);\r\n+\r\n+    // Reset form\r\n+    setForm({ title: \"\", body: \"\" });\r\n+  };\r\n+\r\n+  // Pagination logic\r\n+  const indexOfLastPost = page * postsPerPage;\r\n+  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n+  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n+\r\n+  return (\r\n+    <div>\r\n+      <h3>Total Pages: {Math.ceil(posts.length / postsPerPage)}</h3>\r\n+\r\n+      {/* Form */}\r\n+      <form onSubmit={addPost} style={{ marginBottom: \"20px\" }}>\r\n+        <input\r\n+          type=\"text\"\r\n+          placeholder=\"Title\"\r\n+          value={form.title}\r\n+          onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n+          required\r\n+        />\r\n+        <input\r\n+          type=\"text\"\r\n+          placeholder=\"Body\"\r\n+          value={form.body}\r\n+          onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n+          required\r\n+        />\r\n+        <button type=\"submit\">Add Post</button>\r\n+      </form>\r\n+\r\n+      {/* Cards */}\r\n+      {currentPosts.map((post, i) => (\r\n+        <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\" }}>\r\n+          <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n+          <p>{post.body}</p>\r\n+        </div>\r\n+      ))}\r\n+\r\n+      {/* Pagination buttons */}\r\n+      <div>\r\n+        {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n+          <button\r\n+            key={idx}\r\n+            onClick={() => setPage(idx + 1)}\r\n+            style={{\r\n+              margin: \"5px\",\r\n+              background: page === idx + 1 ? \"#ccc\" : \"white\"\r\n+            }}\r\n+          >\r\n+            {idx + 1}\r\n+          </button>\r\n+        ))}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1757071421131,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,10 +182,8 @@\n   const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n \r\n   return (\r\n     <div>\r\n-      <h3>Total Pages: {Math.ceil(posts.length / postsPerPage)}</h3>\r\n-\r\n       {/* Form */}\r\n       <form onSubmit={addPost} style={{ marginBottom: \"20px\" }}>\r\n         <input\r\n           type=\"text\"\r\n@@ -229,151 +227,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-import React, { useState, useEffect } from \"react\";\r\n-import { Card } from \"react-bootstrap\";\r\n-\r\n-\r\n-    export default function ApiCRUD() {\r\n-    const [data, setData] = useState([]);\r\n-    const [error, setError] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-    const [showForm, setShowForm] = useState(false);\r\n-    const [submission, setSubmissions] = useState({ title: \"\", body: \"\" });\r\n-    const itemPerPage = 10;\r\n-    let totalPages = 10;\r\n-\r\n-    const handleFormSubmit = (data) => {\r\n-        setSubmissions = (prev => [...prev, data]);\r\n-        setShowForm(false);\r\n-    }\r\n-\r\n-\r\n-    useEffect(() => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-            .then(res => res.json())\r\n-            .then((data) => {\r\n-                setData(data);\r\n-                setLoading(false);\r\n-            })\r\n-            .catch(err => {\r\n-                setError(err);\r\n-                setLoading(false);\r\n-            })\r\n-    }, []);\r\n-\r\n-\r\n-const addPost=()=>{\r\n-\r\n-}\r\n-\r\n-    if (loading) return <p>Loading...</p>;\r\n-    if (error) return <p>Error occured!</p>;\r\n-\r\n-    return (\r\n-        <div className=\"container\">\r\n-            <form onSubmit={addPost}>\r\n-                <input type=\"text\"\r\n-                placeholder=\"Enter title\" value={form.title}></input>\r\n-            </form>\r\n-            <div className=\"row\" style={{ gap: \"20px\" }}>\r\n-                {data.map((post) => (\r\n-                    <div className=\"card\" style={{ width: '20rem' }}>\r\n-                        <div className=\"card-body\">\r\n-                            <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-                                <div className=\"card-title\">{post.id} {post.title}</div>\r\n-                                <p>{post.body}</p>\r\n-                            </div>\r\n-                        </div>\r\n-                    </div>\r\n-                ))}\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-\r\n-// import React, { useEffect, useState } from \"react\";\r\n-\r\n-// export default function Posts() {\r\n-//   const [posts, setPosts] = useState([]);\r\n-//   const [page, setPage] = useState(1);\r\n-//   const postsPerPage = 10;\r\n-//   const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n-\r\n-//   useEffect(() => {\r\n-//     fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-//       .then(res => res.json())\r\n-//       .then(data => setPosts(data));\r\n-//   }, []);\r\n-\r\n-//   // Add new post\r\n-//   const addPost = (e) => {\r\n-//     e.preventDefault();\r\n-//     const newId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) + 1 : 1;\r\n-//     const newPost = { id: newId, title: form.title, body: form.body };\r\n-//     const updated = [...posts, newPost];\r\n-//     setPosts(updated);\r\n-\r\n-//     // Jump to last page\r\n-//     const lastPage = Math.ceil(updated.length / postsPerPage);\r\n-//     setPage(lastPage);\r\n-\r\n-//     // Reset form\r\n-//     setForm({ title: \"\", body: \"\" });\r\n-//   };\r\n-\r\n-//   // Pagination logic\r\n-//   const indexOfLastPost = page * postsPerPage;\r\n-//   const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n-//   const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n-\r\n-//   return (\r\n-//     <div>\r\n-//       <h3>Total Pages: {Math.ceil(posts.length / postsPerPage)}</h3>\r\n-\r\n-//       {/* Form */}\r\n-//       <form onSubmit={addPost} style={{ marginBottom: \"20px\" }}>\r\n-//         <input\r\n-//           type=\"text\"\r\n-//           placeholder=\"Title\"\r\n-//           value={form.title}\r\n-//           onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n-//           required\r\n-//         />\r\n-//         <input\r\n-//           type=\"text\"\r\n-//           placeholder=\"Body\"\r\n-//           value={form.body}\r\n-//           onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n-//           required\r\n-//         />\r\n-//         <button type=\"submit\">Add Post</button>\r\n-//       </form>\r\n-\r\n-//       {/* Cards */}\r\n-//       {currentPosts.map((post, i) => (\r\n-//         <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\" }}>\r\n-//           <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n-//           <p>{post.body}</p>\r\n-//         </div>\r\n-//       ))}\r\n-\r\n-//       {/* Pagination buttons */}\r\n-//       <div>\r\n-//         {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n-//           <button\r\n-//             key={idx}\r\n-//             onClick={() => setPage(idx + 1)}\r\n-//             style={{\r\n-//               margin: \"5px\",\r\n-//               background: page === idx + 1 ? \"#ccc\" : \"white\"\r\n-//             }}\r\n-//           >\r\n-//             {idx + 1}\r\n-//           </button>\r\n-//         ))}\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// }\r\n"
                },
                {
                    "date": 1757071570073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,133 +59,69 @@\n //         </div>\r\n //     );\r\n // };\r\n \r\n-\r\n-// // import React, { useEffect, useState } from \"react\";\r\n-\r\n-// // export default function Posts() {\r\n-// //   const [posts, setPosts] = useState([]);\r\n-// //   const [page, setPage] = useState(1);\r\n-// //   const postsPerPage = 10;\r\n-// //   const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n-\r\n-// //   useEffect(() => {\r\n-// //     fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-// //       .then(res => res.json())\r\n-// //       .then(data => setPosts(data));\r\n-// //   }, []);\r\n-\r\n-// //   // Add new post\r\n-// //   const addPost = (e) => {\r\n-// //     e.preventDefault();\r\n-// //     const newId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) + 1 : 1;\r\n-// //     const newPost = { id: newId, title: form.title, body: form.body };\r\n-// //     const updated = [...posts, newPost];\r\n-// //     setPosts(updated);\r\n-\r\n-// //     // Jump to last page\r\n-// //     const lastPage = Math.ceil(updated.length / postsPerPage);\r\n-// //     setPage(lastPage);\r\n-\r\n-// //     // Reset form\r\n-// //     setForm({ title: \"\", body: \"\" });\r\n-// //   };\r\n-\r\n-// //   // Pagination logic\r\n-// //   const indexOfLastPost = page * postsPerPage;\r\n-// //   const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n-// //   const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n-\r\n-// //   return (\r\n-// //     <div>\r\n-// //       <h3>Total Pages: {Math.ceil(posts.length / postsPerPage)}</h3>\r\n-\r\n-// //       {/* Form */}\r\n-// //       <form onSubmit={addPost} style={{ marginBottom: \"20px\" }}>\r\n-// //         <input\r\n-// //           type=\"text\"\r\n-// //           placeholder=\"Title\"\r\n-// //           value={form.title}\r\n-// //           onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n-// //           required\r\n-// //         />\r\n-// //         <input\r\n-// //           type=\"text\"\r\n-// //           placeholder=\"Body\"\r\n-// //           value={form.body}\r\n-// //           onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n-// //           required\r\n-// //         />\r\n-// //         <button type=\"submit\">Add Post</button>\r\n-// //       </form>\r\n-\r\n-// //       {/* Cards */}\r\n-// //       {currentPosts.map((post, i) => (\r\n-// //         <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\" }}>\r\n-// //           <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n-// //           <p>{post.body}</p>\r\n-// //         </div>\r\n-// //       ))}\r\n-\r\n-// //       {/* Pagination buttons */}\r\n-// //       <div>\r\n-// //         {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n-// //           <button\r\n-// //             key={idx}\r\n-// //             onClick={() => setPage(idx + 1)}\r\n-// //             style={{\r\n-// //               margin: \"5px\",\r\n-// //               background: page === idx + 1 ? \"#ccc\" : \"white\"\r\n-// //             }}\r\n-// //           >\r\n-// //             {idx + 1}\r\n-// //           </button>\r\n-// //         ))}\r\n-// //       </div>\r\n-// //     </div>\r\n-// //   );\r\n-// // }\r\n-\r\n import React, { useEffect, useState } from \"react\";\r\n \r\n export default function Posts() {\r\n   const [posts, setPosts] = useState([]);\r\n   const [page, setPage] = useState(1);\r\n   const postsPerPage = 10;\r\n   const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n+  const [editId, setEditId] = useState(null);\r\n \r\n   useEffect(() => {\r\n     fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n       .then(res => res.json())\r\n       .then(data => setPosts(data));\r\n   }, []);\r\n \r\n-  // Add new post\r\n-  const addPost = (e) => {\r\n+  // Add or Update Post\r\n+  const handleSubmit = (e) => {\r\n     e.preventDefault();\r\n-    const newId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) + 1 : 1;\r\n-    const newPost = { id: newId, title: form.title, body: form.body };\r\n-    const updated = [...posts, newPost];\r\n+    if (editId) {\r\n+      // PUT - update\r\n+      const updated = posts.map(p =>\r\n+        p.id === editId ? { ...p, title: form.title, body: form.body } : p\r\n+      );\r\n+      setPosts(updated);\r\n+      setEditId(null);\r\n+    } else {\r\n+      // POST - add\r\n+      const newId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) + 1 : 1;\r\n+      const newPost = { id: newId, title: form.title, body: form.body };\r\n+      setPosts([...posts, newPost]);\r\n+      const lastPage = Math.ceil((posts.length + 1) / postsPerPage);\r\n+      setPage(lastPage);\r\n+    }\r\n+    setForm({ title: \"\", body: \"\" });\r\n+  };\r\n+\r\n+  // DELETE\r\n+  const deletePost = (id) => {\r\n+    const updated = posts.filter(p => p.id !== id);\r\n     setPosts(updated);\r\n+    const lastPage = Math.max(1, Math.ceil(updated.length / postsPerPage));\r\n+    if (page > lastPage) setPage(lastPage);\r\n+  };\r\n \r\n-    // Jump to last page\r\n-    const lastPage = Math.ceil(updated.length / postsPerPage);\r\n-    setPage(lastPage);\r\n-\r\n-    // Reset form\r\n-    setForm({ title: \"\", body: \"\" });\r\n+  // EDIT - populate form\r\n+  const editPost = (post) => {\r\n+    setForm({ title: post.title, body: post.body });\r\n+    setEditId(post.id);\r\n   };\r\n \r\n-  // Pagination logic\r\n+  // Pagination\r\n   const indexOfLastPost = page * postsPerPage;\r\n   const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n   const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n \r\n   return (\r\n     <div>\r\n+      <h3>Total Pages: {Math.ceil(posts.length / postsPerPage)}</h3>\r\n+\r\n       {/* Form */}\r\n-      <form onSubmit={addPost} style={{ marginBottom: \"20px\" }}>\r\n+      <form onSubmit={handleSubmit} style={{ marginBottom: \"20px\" }}>\r\n         <input\r\n           type=\"text\"\r\n           placeholder=\"Title\"\r\n           value={form.title}\r\n@@ -198,20 +134,22 @@\n           value={form.body}\r\n           onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n           required\r\n         />\r\n-        <button type=\"submit\">Add Post</button>\r\n+        <button type=\"submit\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n       </form>\r\n \r\n       {/* Cards */}\r\n       {currentPosts.map((post, i) => (\r\n         <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\" }}>\r\n           <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n           <p>{post.body}</p>\r\n+          <button onClick={() => editPost(post)}>Edit</button>\r\n+          <button onClick={() => deletePost(post.id)}>Delete</button>\r\n         </div>\r\n       ))}\r\n \r\n-      {/* Pagination buttons */}\r\n+      {/* Pagination */}\r\n       <div>\r\n         {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n           <button\r\n             key={idx}\r\n"
                },
                {
                    "date": 1757071670040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,169 @@\n+// import React, { useState, useEffect } from \"react\";\r\n+// import { Card } from \"react-bootstrap\";\r\n+\r\n+\r\n+//     export default function ApiCRUD() {\r\n+//     const [data, setData] = useState([]);\r\n+//     const [error, setError] = useState(null);\r\n+//     const [loading, setLoading] = useState(true);\r\n+//     const [showForm, setShowForm] = useState(false);\r\n+//     const [submission, setSubmissions] = useState({ title: \"\", body: \"\" });\r\n+//     const itemPerPage = 10;\r\n+//     let totalPages = 10;\r\n+\r\n+//     const handleFormSubmit = (data) => {\r\n+//         setSubmissions = (prev => [...prev, data]);\r\n+//         setShowForm(false);\r\n+//     }\r\n+\r\n+\r\n+//     useEffect(() => {\r\n+//         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+//             .then(res => res.json())\r\n+//             .then((data) => {\r\n+//                 setData(data);\r\n+//                 setLoading(false);\r\n+//             })\r\n+//             .catch(err => {\r\n+//                 setError(err);\r\n+//                 setLoading(false);\r\n+//             })\r\n+//     }, []);\r\n+\r\n+\r\n+// const addPost=()=>{\r\n+\r\n+// }\r\n+\r\n+//     if (loading) return <p>Loading...</p>;\r\n+//     if (error) return <p>Error occured!</p>;\r\n+\r\n+//     return (\r\n+//         <div className=\"container\">\r\n+//             <form onSubmit={addPost}>\r\n+//                 <input type=\"text\"\r\n+//                 placeholder=\"Enter title\" value={form.title}></input>\r\n+//             </form>\r\n+//             <div className=\"row\" style={{ gap: \"20px\" }}>\r\n+//                 {data.map((post) => (\r\n+//                     <div className=\"card\" style={{ width: '20rem' }}>\r\n+//                         <div className=\"card-body\">\r\n+//                             <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n+//                                 <div className=\"card-title\">{post.id} {post.title}</div>\r\n+//                                 <p>{post.body}</p>\r\n+//                             </div>\r\n+//                         </div>\r\n+//                     </div>\r\n+//                 ))}\r\n+//             </div>\r\n+//         </div>\r\n+//     );\r\n+// };\r\n+\r\n+import React, { useEffect, useState } from \"react\";\r\n+\r\n+export default function Posts() {\r\n+    const [posts, setPosts] = useState([]);\r\n+    const [page, setPage] = useState(1);\r\n+    const postsPerPage = 10;\r\n+    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n+    const [editId, setEditId] = useState(null);\r\n+\r\n+    useEffect(() => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+            .then(res => res.json())\r\n+            .then(data => setPosts(data));\r\n+    }, []);\r\n+\r\n+    // Add or Update Post\r\n+    const handleSubmit = (e) => {\r\n+        e.preventDefault();\r\n+        if (editId) {\r\n+            // PUT - update\r\n+            const updated = posts.map(p =>\r\n+                p.id === editId ? { ...p, title: form.title, body: form.body } : p\r\n+            );\r\n+            setPosts(updated);\r\n+            setEditId(null);\r\n+        } else {\r\n+            // POST - add\r\n+            const newId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) + 1 : 1;\r\n+            const newPost = { id: newId, title: form.title, body: form.body };\r\n+            setPosts([...posts, newPost]);\r\n+            const lastPage = Math.ceil((posts.length + 1) / postsPerPage);\r\n+            setPage(lastPage);\r\n+        }\r\n+        setForm({ title: \"\", body: \"\" });\r\n+    };\r\n+\r\n+    // DELETE\r\n+    const deletePost = (id) => {\r\n+        const updated = posts.filter(p => p.id !== id);\r\n+        setPosts(updated);\r\n+        const lastPage = Math.max(1, Math.ceil(updated.length / postsPerPage));\r\n+        if (page > lastPage) setPage(lastPage);\r\n+    };\r\n+\r\n+    // EDIT - populate form\r\n+    const editPost = (post) => {\r\n+        setForm({ title: post.title, body: post.body });\r\n+        setEditId(post.id);\r\n+    };\r\n+\r\n+    // Pagination\r\n+    const indexOfLastPost = page * postsPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n+    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n+\r\n+    return (\r\n+        <div>\r\n+            <h3>Total Pages: {Math.ceil(posts.length / postsPerPage)}</h3>\r\n+\r\n+            {/* Form */}\r\n+            <form onSubmit={handleSubmit} style={{ marginBottom: \"20px\" }}>\r\n+                <input\r\n+                    type=\"text\"\r\n+                    placeholder=\"Title\"\r\n+                    value={form.title}\r\n+                    onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n+                    required\r\n+                />\r\n+                <input\r\n+                    type=\"text\"\r\n+                    placeholder=\"Body\"\r\n+                    value={form.body}\r\n+                    onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n+                    required\r\n+                />\r\n+                <button type=\"submit\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n+            </form>\r\n+\r\n+            {/* Cards */}\r\n+            <div className=\"row\">\r\n+                {currentPosts.map((post, i) => (\r\n+                    <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\" }}>\r\n+                        <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n+                        <p>{post.body}</p>\r\n+                        <button onClick={() => editPost(post)}>Edit</button>\r\n+                        <button onClick={() => deletePost(post.id)}>Delete</button>\r\n+                    </div>\r\n+                ))}\r\n+            </div>\r\n+            {/* Pagination */}\r\n+            <div>\r\n+                {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n+                    <button\r\n+                        key={idx}\r\n+                        onClick={() => setPage(idx + 1)}\r\n+                        style={{\r\n+                            margin: \"5px\",\r\n+                            background: page === idx + 1 ? \"#ccc\" : \"white\"\r\n+                        }}\r\n+                    >\r\n+                        {idx + 1}\r\n+                    </button>\r\n+                ))}\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+}\r\n"
                },
                {
                    "date": 1757071694440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,9 +140,9 @@\n \r\n             {/* Cards */}\r\n             <div className=\"row\">\r\n                 {currentPosts.map((post, i) => (\r\n-                    <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\" }}>\r\n+                    <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\" ,width:'20rem'}}>\r\n                         <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n                         <p>{post.body}</p>\r\n                         <button onClick={() => editPost(post)}>Edit</button>\r\n                         <button onClick={() => deletePost(post.id)}>Delete</button>\r\n"
                },
                {
                    "date": 1757071705407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,9 +138,9 @@\n                 <button type=\"submit\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n             </form>\r\n \r\n             {/* Cards */}\r\n-            <div className=\"row\">\r\n+            <div className=\"row container\">\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\" ,width:'20rem'}}>\r\n                         <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n                         <p>{post.body}</p>\r\n@@ -166,172 +166,4 @@\n             </div>\r\n         </div>\r\n     );\r\n }\r\n-// import React, { useState, useEffect } from \"react\";\r\n-// import { Card } from \"react-bootstrap\";\r\n-\r\n-\r\n-//     export default function ApiCRUD() {\r\n-//     const [data, setData] = useState([]);\r\n-//     const [error, setError] = useState(null);\r\n-//     const [loading, setLoading] = useState(true);\r\n-//     const [showForm, setShowForm] = useState(false);\r\n-//     const [submission, setSubmissions] = useState({ title: \"\", body: \"\" });\r\n-//     const itemPerPage = 10;\r\n-//     let totalPages = 10;\r\n-\r\n-//     const handleFormSubmit = (data) => {\r\n-//         setSubmissions = (prev => [...prev, data]);\r\n-//         setShowForm(false);\r\n-//     }\r\n-\r\n-\r\n-//     useEffect(() => {\r\n-//         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-//             .then(res => res.json())\r\n-//             .then((data) => {\r\n-//                 setData(data);\r\n-//                 setLoading(false);\r\n-//             })\r\n-//             .catch(err => {\r\n-//                 setError(err);\r\n-//                 setLoading(false);\r\n-//             })\r\n-//     }, []);\r\n-\r\n-\r\n-// const addPost=()=>{\r\n-\r\n-// }\r\n-\r\n-//     if (loading) return <p>Loading...</p>;\r\n-//     if (error) return <p>Error occured!</p>;\r\n-\r\n-//     return (\r\n-//         <div className=\"container\">\r\n-//             <form onSubmit={addPost}>\r\n-//                 <input type=\"text\"\r\n-//                 placeholder=\"Enter title\" value={form.title}></input>\r\n-//             </form>\r\n-//             <div className=\"row\" style={{ gap: \"20px\" }}>\r\n-//                 {data.map((post) => (\r\n-//                     <div className=\"card\" style={{ width: '20rem' }}>\r\n-//                         <div className=\"card-body\">\r\n-//                             <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-//                                 <div className=\"card-title\">{post.id} {post.title}</div>\r\n-//                                 <p>{post.body}</p>\r\n-//                             </div>\r\n-//                         </div>\r\n-//                     </div>\r\n-//                 ))}\r\n-//             </div>\r\n-//         </div>\r\n-//     );\r\n-// };\r\n-\r\n-import React, { useEffect, useState } from \"react\";\r\n-\r\n-export default function Posts() {\r\n-  const [posts, setPosts] = useState([]);\r\n-  const [page, setPage] = useState(1);\r\n-  const postsPerPage = 10;\r\n-  const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n-  const [editId, setEditId] = useState(null);\r\n-\r\n-  useEffect(() => {\r\n-    fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-      .then(res => res.json())\r\n-      .then(data => setPosts(data));\r\n-  }, []);\r\n-\r\n-  // Add or Update Post\r\n-  const handleSubmit = (e) => {\r\n-    e.preventDefault();\r\n-    if (editId) {\r\n-      // PUT - update\r\n-      const updated = posts.map(p =>\r\n-        p.id === editId ? { ...p, title: form.title, body: form.body } : p\r\n-      );\r\n-      setPosts(updated);\r\n-      setEditId(null);\r\n-    } else {\r\n-      // POST - add\r\n-      const newId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) + 1 : 1;\r\n-      const newPost = { id: newId, title: form.title, body: form.body };\r\n-      setPosts([...posts, newPost]);\r\n-      const lastPage = Math.ceil((posts.length + 1) / postsPerPage);\r\n-      setPage(lastPage);\r\n-    }\r\n-    setForm({ title: \"\", body: \"\" });\r\n-  };\r\n-\r\n-  // DELETE\r\n-  const deletePost = (id) => {\r\n-    const updated = posts.filter(p => p.id !== id);\r\n-    setPosts(updated);\r\n-    const lastPage = Math.max(1, Math.ceil(updated.length / postsPerPage));\r\n-    if (page > lastPage) setPage(lastPage);\r\n-  };\r\n-\r\n-  // EDIT - populate form\r\n-  const editPost = (post) => {\r\n-    setForm({ title: post.title, body: post.body });\r\n-    setEditId(post.id);\r\n-  };\r\n-\r\n-  // Pagination\r\n-  const indexOfLastPost = page * postsPerPage;\r\n-  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n-  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n-\r\n-  return (\r\n-    <div>\r\n-      <h3>Total Pages: {Math.ceil(posts.length / postsPerPage)}</h3>\r\n-\r\n-      {/* Form */}\r\n-      <form onSubmit={handleSubmit} style={{ marginBottom: \"20px\" }}>\r\n-        <input\r\n-          type=\"text\"\r\n-          placeholder=\"Title\"\r\n-          value={form.title}\r\n-          onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n-          required\r\n-        />\r\n-        <input\r\n-          type=\"text\"\r\n-          placeholder=\"Body\"\r\n-          value={form.body}\r\n-          onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n-          required\r\n-        />\r\n-        <button type=\"submit\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n-      </form>\r\n-\r\n-      {/* Cards */}\r\n-      {currentPosts.map((post, i) => (\r\n-        <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\" }}>\r\n-          <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n-          <p>{post.body}</p>\r\n-          <button onClick={() => editPost(post)}>Edit</button>\r\n-          <button onClick={() => deletePost(post.id)}>Delete</button>\r\n-        </div>\r\n-      ))}\r\n-\r\n-      {/* Pagination */}\r\n-      <div>\r\n-        {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n-          <button\r\n-            key={idx}\r\n-            onClick={() => setPage(idx + 1)}\r\n-            style={{\r\n-              margin: \"5px\",\r\n-              background: page === idx + 1 ? \"#ccc\" : \"white\"\r\n-            }}\r\n-          >\r\n-            {idx + 1}\r\n-          </button>\r\n-        ))}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1757071730539,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,9 +138,10 @@\n                 <button type=\"submit\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n             </form>\r\n \r\n             {/* Cards */}\r\n-            <div className=\"row container\">\r\n+            <div className=\"container\">\r\n+            <div className=\"row\">\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\" ,width:'20rem'}}>\r\n                         <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n                         <p>{post.body}</p>\r\n@@ -148,8 +149,9 @@\n                         <button onClick={() => deletePost(post.id)}>Delete</button>\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n+            </div>\r\n             {/* Pagination */}\r\n             <div>\r\n                 {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n                     <button\r\n"
                },
                {
                    "date": 1757072004498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,8 @@\n \r\n \r\n //     export default function ApiCRUD() {\r\n //     const [data, setData] = useState([]);\r\n-//     const [error, setError] = useState(null);\r\n //     const [loading, setLoading] = useState(true);\r\n //     const [showForm, setShowForm] = useState(false);\r\n //     const [submission, setSubmissions] = useState({ title: \"\", body: \"\" });\r\n //     const itemPerPage = 10;\r\n"
                },
                {
                    "date": 1757072304414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,19 +138,19 @@\n             </form>\r\n \r\n             {/* Cards */}\r\n             <div className=\"container\">\r\n-            <div className=\"row\">\r\n-                {currentPosts.map((post, i) => (\r\n-                    <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\" ,width:'20rem'}}>\r\n-                        <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n-                        <p>{post.body}</p>\r\n-                        <button onClick={() => editPost(post)}>Edit</button>\r\n-                        <button onClick={() => deletePost(post.id)}>Delete</button>\r\n-                    </div>\r\n-                ))}\r\n+                <div className=\"row\">\r\n+                    {currentPosts.map((post, i) => (\r\n+                        <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\", width: '20rem' }}>\r\n+                            <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n+                            <p>{post.body}</p>\r\n+                            <button onClick={() => editPost(post)}>Edit</button>\r\n+                            <button onClick={() => deletePost(post.id)}>Delete</button>\r\n+                        </div>\r\n+                    ))}\r\n+                </div>\r\n             </div>\r\n-            </div>\r\n             {/* Pagination */}\r\n             <div>\r\n                 {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n                     <button\r\n"
                },
                {
                    "date": 1757072320931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,65 +1,4 @@\n-// import React, { useState, useEffect } from \"react\";\r\n-// import { Card } from \"react-bootstrap\";\r\n-\r\n-\r\n-//     export default function ApiCRUD() {\r\n-//     const [data, setData] = useState([]);\r\n-//     const [loading, setLoading] = useState(true);\r\n-//     const [showForm, setShowForm] = useState(false);\r\n-//     const [submission, setSubmissions] = useState({ title: \"\", body: \"\" });\r\n-//     const itemPerPage = 10;\r\n-//     let totalPages = 10;\r\n-\r\n-//     const handleFormSubmit = (data) => {\r\n-//         setSubmissions = (prev => [...prev, data]);\r\n-//         setShowForm(false);\r\n-//     }\r\n-\r\n-\r\n-//     useEffect(() => {\r\n-//         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-//             .then(res => res.json())\r\n-//             .then((data) => {\r\n-//                 setData(data);\r\n-//                 setLoading(false);\r\n-//             })\r\n-//             .catch(err => {\r\n-//                 setError(err);\r\n-//                 setLoading(false);\r\n-//             })\r\n-//     }, []);\r\n-\r\n-\r\n-// const addPost=()=>{\r\n-\r\n-// }\r\n-\r\n-//     if (loading) return <p>Loading...</p>;\r\n-//     if (error) return <p>Error occured!</p>;\r\n-\r\n-//     return (\r\n-//         <div className=\"container\">\r\n-//             <form onSubmit={addPost}>\r\n-//                 <input type=\"text\"\r\n-//                 placeholder=\"Enter title\" value={form.title}></input>\r\n-//             </form>\r\n-//             <div className=\"row\" style={{ gap: \"20px\" }}>\r\n-//                 {data.map((post) => (\r\n-//                     <div className=\"card\" style={{ width: '20rem' }}>\r\n-//                         <div className=\"card-body\">\r\n-//                             <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-//                                 <div className=\"card-title\">{post.id} {post.title}</div>\r\n-//                                 <p>{post.body}</p>\r\n-//                             </div>\r\n-//                         </div>\r\n-//                     </div>\r\n-//                 ))}\r\n-//             </div>\r\n-//         </div>\r\n-//     );\r\n-// };\r\n-\r\n import React, { useEffect, useState } from \"react\";\r\n \r\n export default function Posts() {\r\n     const [posts, setPosts] = useState([]);\r\n"
                },
                {
                    "date": 1757072382814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,64 @@\n+import React, { useState, useEffect } from \"react\";\r\n+\r\n+\r\n+    export default function ApiCRUD() {\r\n+    const [data, setData] = useState([]);\r\n+    const [loading, setLoading] = useState(true);\r\n+    const [showForm, setShowForm] = useState(false);\r\n+    const [submission, setSubmissions] = useState({ title: \"\", body: \"\" });\r\n+    const itemPerPage = 10;\r\n+    let totalPages = 10;\r\n+\r\n+    const handleFormSubmit = (data) => {\r\n+        setSubmissions = (prev => [...prev, data]);\r\n+        setShowForm(false);\r\n+    }\r\n+\r\n+\r\n+    useEffect(() => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+            .then(res => res.json())\r\n+            .then((data) => {\r\n+                setData(data);\r\n+                setLoading(false);\r\n+            })\r\n+            .catch(err => {\r\n+                setError(err);\r\n+                setLoading(false);\r\n+            })\r\n+    }, []);\r\n+\r\n+\r\n+const addPost=()=>{\r\n+\r\n+}\r\n+\r\n+    if (loading) return <p>Loading...</p>;\r\n+    if (error) return <p>Error occured!</p>;\r\n+\r\n+    return (\r\n+        <div className=\"container\">\r\n+            <form onSubmit={addPost}>\r\n+                <input type=\"text\"\r\n+                placeholder=\"Enter title\" value={form.title}></input>\r\n+            </form>\r\n+            <div className=\"row\" style={{ gap: \"20px\" }}>\r\n+                {data.map((post) => (\r\n+                    <div className=\"card\" style={{ width: '20rem' }}>\r\n+                        <div className=\"card-body\">\r\n+                            <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n+                                <div className=\"card-title\">{post.id} {post.title}</div>\r\n+                                <p>{post.body}</p>\r\n+                            </div>\r\n+                        </div>\r\n+                    </div>\r\n+                ))}\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n import React, { useEffect, useState } from \"react\";\r\n \r\n export default function Posts() {\r\n     const [posts, setPosts] = useState([]);\r\n"
                },
                {
                    "date": 1757072391941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,10 +57,8 @@\n         </div>\r\n     );\r\n };\r\n \r\n-import React, { useEffect, useState } from \"react\";\r\n-\r\n export default function Posts() {\r\n     const [posts, setPosts] = useState([]);\r\n     const [page, setPage] = useState(1);\r\n     const postsPerPage = 10;\r\n"
                },
                {
                    "date": 1757072407367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,10 +56,8 @@\n             </div>\r\n         </div>\r\n     );\r\n };\r\n-\r\n-export default function Posts() {\r\n     const [posts, setPosts] = useState([]);\r\n     const [page, setPage] = useState(1);\r\n     const postsPerPage = 10;\r\n     const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n"
                },
                {
                    "date": 1757072417933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,8 @@\n     const [loading, setLoading] = useState(true);\r\n     const [showForm, setShowForm] = useState(false);\r\n     const [submission, setSubmissions] = useState({ title: \"\", body: \"\" });\r\n     const itemPerPage = 10;\r\n-    let totalPages = 10;\r\n \r\n     const handleFormSubmit = (data) => {\r\n         setSubmissions = (prev => [...prev, data]);\r\n         setShowForm(false);\r\n"
                },
                {
                    "date": 1757072436753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,110 +55,5 @@\n             </div>\r\n         </div>\r\n     );\r\n };\r\n-    const [posts, setPosts] = useState([]);\r\n-    const [page, setPage] = useState(1);\r\n-    const postsPerPage = 10;\r\n-    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n-    const [editId, setEditId] = useState(null);\r\n-\r\n-    useEffect(() => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-            .then(res => res.json())\r\n-            .then(data => setPosts(data));\r\n-    }, []);\r\n-\r\n-    // Add or Update Post\r\n-    const handleSubmit = (e) => {\r\n-        e.preventDefault();\r\n-        if (editId) {\r\n-            // PUT - update\r\n-            const updated = posts.map(p =>\r\n-                p.id === editId ? { ...p, title: form.title, body: form.body } : p\r\n-            );\r\n-            setPosts(updated);\r\n-            setEditId(null);\r\n-        } else {\r\n-            // POST - add\r\n-            const newId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) + 1 : 1;\r\n-            const newPost = { id: newId, title: form.title, body: form.body };\r\n-            setPosts([...posts, newPost]);\r\n-            const lastPage = Math.ceil((posts.length + 1) / postsPerPage);\r\n-            setPage(lastPage);\r\n-        }\r\n-        setForm({ title: \"\", body: \"\" });\r\n-    };\r\n-\r\n-    // DELETE\r\n-    const deletePost = (id) => {\r\n-        const updated = posts.filter(p => p.id !== id);\r\n-        setPosts(updated);\r\n-        const lastPage = Math.max(1, Math.ceil(updated.length / postsPerPage));\r\n-        if (page > lastPage) setPage(lastPage);\r\n-    };\r\n-\r\n-    // EDIT - populate form\r\n-    const editPost = (post) => {\r\n-        setForm({ title: post.title, body: post.body });\r\n-        setEditId(post.id);\r\n-    };\r\n-\r\n-    // Pagination\r\n-    const indexOfLastPost = page * postsPerPage;\r\n-    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n-    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n-\r\n-    return (\r\n-        <div>\r\n-            <h3>Total Pages: {Math.ceil(posts.length / postsPerPage)}</h3>\r\n-\r\n-            {/* Form */}\r\n-            <form onSubmit={handleSubmit} style={{ marginBottom: \"20px\" }}>\r\n-                <input\r\n-                    type=\"text\"\r\n-                    placeholder=\"Title\"\r\n-                    value={form.title}\r\n-                    onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n-                    required\r\n-                />\r\n-                <input\r\n-                    type=\"text\"\r\n-                    placeholder=\"Body\"\r\n-                    value={form.body}\r\n-                    onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n-                    required\r\n-                />\r\n-                <button type=\"submit\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n-            </form>\r\n-\r\n-            {/* Cards */}\r\n-            <div className=\"container\">\r\n-                <div className=\"row\">\r\n-                    {currentPosts.map((post, i) => (\r\n-                        <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\", width: '20rem' }}>\r\n-                            <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n-                            <p>{post.body}</p>\r\n-                            <button onClick={() => editPost(post)}>Edit</button>\r\n-                            <button onClick={() => deletePost(post.id)}>Delete</button>\r\n-                        </div>\r\n-                    ))}\r\n-                </div>\r\n-            </div>\r\n-            {/* Pagination */}\r\n-            <div>\r\n-                {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n-                    <button\r\n-                        key={idx}\r\n-                        onClick={() => setPage(idx + 1)}\r\n-                        style={{\r\n-                            margin: \"5px\",\r\n-                            background: page === idx + 1 ? \"#ccc\" : \"white\"\r\n-                        }}\r\n-                    >\r\n-                        {idx + 1}\r\n-                    </button>\r\n-                ))}\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-}\r\n+   \n\\ No newline at end of file\n"
                },
                {
                    "date": 1757072489371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n \r\n     export default function ApiCRUD() {\r\n     const [data, setData] = useState([]);\r\n     const [loading, setLoading] = useState(true);\r\n+    const[error,setError]=useState(false);\r\n     const [showForm, setShowForm] = useState(false);\r\n     const [submission, setSubmissions] = useState({ title: \"\", body: \"\" });\r\n     const itemPerPage = 10;\r\n \r\n"
                },
                {
                    "date": 1757072624659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,60 +1,171 @@\n-import React, { useState, useEffect } from \"react\";\r\n+// import React, { useState, useEffect } from \"react\";\r\n+// import { Card } from \"react-bootstrap\";\r\n \r\n \r\n-    export default function ApiCRUD() {\r\n-    const [data, setData] = useState([]);\r\n-    const [loading, setLoading] = useState(true);\r\n-    const[error,setError]=useState(false);\r\n-    const [showForm, setShowForm] = useState(false);\r\n-    const [submission, setSubmissions] = useState({ title: \"\", body: \"\" });\r\n-    const itemPerPage = 10;\r\n+//     export default function ApiCRUD() {\r\n+//     const [data, setData] = useState([]);\r\n+//     const [error, setError] = useState(null);\r\n+//     const [loading, setLoading] = useState(true);\r\n+//     const [showForm, setShowForm] = useState(false);\r\n+//     const [submission, setSubmissions] = useState({ title: \"\", body: \"\" });\r\n+//     const itemPerPage = 10;\r\n+//     let totalPages = 10;\r\n \r\n-    const handleFormSubmit = (data) => {\r\n-        setSubmissions = (prev => [...prev, data]);\r\n-        setShowForm(false);\r\n-    }\r\n+//     const handleFormSubmit = (data) => {\r\n+//         setSubmissions = (prev => [...prev, data]);\r\n+//         setShowForm(false);\r\n+//     }\r\n \r\n \r\n+//     useEffect(() => {\r\n+//         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+//             .then(res => res.json())\r\n+//             .then((data) => {\r\n+//                 setData(data);\r\n+//                 setLoading(false);\r\n+//             })\r\n+//             .catch(err => {\r\n+//                 setError(err);\r\n+//                 setLoading(false);\r\n+//             })\r\n+//     }, []);\r\n+\r\n+\r\n+// const addPost=()=>{\r\n+\r\n+// }\r\n+\r\n+//     if (loading) return <p>Loading...</p>;\r\n+//     if (error) return <p>Error occured!</p>;\r\n+\r\n+//     return (\r\n+//         <div className=\"container\">\r\n+//             <form onSubmit={addPost}>\r\n+//                 <input type=\"text\"\r\n+//                 placeholder=\"Enter title\" value={form.title}></input>\r\n+//             </form>\r\n+//             <div className=\"row\" style={{ gap: \"20px\" }}>\r\n+//                 {data.map((post) => (\r\n\\ No newline at end of file\n+//                     <div className=\"card\" style={{ width: '20rem' }}>\r\n+//                         <div className=\"card-body\">\r\n+//                             <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n+//                                 <div className=\"card-title\">{post.id} {post.title}</div>\r\n+//                                 <p>{post.body}</p>\r\n+//                             </div>\r\n+//                         </div>\r\n+//                     </div>\r\n+//                 ))}\r\n+//             </div>\r\n+//         </div>\r\n+//     );\r\n+// };\r\n+\r\n+import React, { useEffect, useState } from \"react\";\r\n+\r\n+export default function Posts() {\r\n+    const [posts, setPosts] = useState([]);\r\n+    const [page, setPage] = useState(1);\r\n+    const postsPerPage = 10;\r\n+    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n+    const [editId, setEditId] = useState(null);\r\n+\r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n-            .then((data) => {\r\n-                setData(data);\r\n-                setLoading(false);\r\n-            })\r\n-            .catch(err => {\r\n-                setError(err);\r\n-                setLoading(false);\r\n-            })\r\n+            .then(data => setPosts(data));\r\n     }, []);\r\n \r\n+    // Add or Update Post\r\n+    const handleSubmit = (e) => {\r\n+        e.preventDefault();\r\n+        if (editId) {\r\n+            // PUT - update\r\n+            const updated = posts.map(p =>\r\n+                p.id === editId ? { ...p, title: form.title, body: form.body } : p\r\n+            );\r\n+            setPosts(updated);\r\n+            setEditId(null);\r\n+        } else {\r\n+            // POST - add\r\n+            const newId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) + 1 : 1;\r\n+            const newPost = { id: newId, title: form.title, body: form.body };\r\n+            setPosts([...posts, newPost]);\r\n+            const lastPage = Math.ceil((posts.length + 1) / postsPerPage);\r\n+            setPage(lastPage);\r\n+        }\r\n+        setForm({ title: \"\", body: \"\" });\r\n+    };\r\n \r\n-const addPost=()=>{\r\n+    // DELETE\r\n+    const deletePost = (id) => {\r\n+        const updated = posts.filter(p => p.id !== id);\r\n+        setPosts(updated);\r\n+        const lastPage = Math.max(1, Math.ceil(updated.length / postsPerPage));\r\n+        if (page > lastPage) setPage(lastPage);\r\n+    };\r\n \r\n-}\r\n+    // EDIT - populate form\r\n+    const editPost = (post) => {\r\n+        setForm({ title: post.title, body: post.body });\r\n+        setEditId(post.id);\r\n+    };\r\n \r\n-    if (loading) return <p>Loading...</p>;\r\n-    if (error) return <p>Error occured!</p>;\r\n+    // Pagination\r\n+    const indexOfLastPost = page * postsPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n+    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n \r\n     return (\r\n-        <div className=\"container\">\r\n-            <form onSubmit={addPost}>\r\n-                <input type=\"text\"\r\n-                placeholder=\"Enter title\" value={form.title}></input>\r\n+        <div>\r\n+            <h3>Total Pages: {Math.ceil(posts.length / postsPerPage)}</h3>\r\n+\r\n+            {/* Form */}\r\n+            <form onSubmit={handleSubmit} style={{ marginBottom: \"20px\" }}>\r\n+                <input\r\n+                    type=\"text\"\r\n+                    placeholder=\"Title\"\r\n+                    value={form.title}\r\n+                    onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n+                    required\r\n+                />\r\n+                <input\r\n+                    type=\"text\"\r\n+                    placeholder=\"Body\"\r\n+                    value={form.body}\r\n+                    onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n+                    required\r\n+                />\r\n+                <button type=\"submit\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n             </form>\r\n-            <div className=\"row\" style={{ gap: \"20px\" }}>\r\n-                {data.map((post) => (\r\n-                    <div className=\"card\" style={{ width: '20rem' }}>\r\n-                        <div className=\"card-body\">\r\n-                            <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-                                <div className=\"card-title\">{post.id} {post.title}</div>\r\n-                                <p>{post.body}</p>\r\n-                            </div>\r\n-                        </div>\r\n+\r\n+            {/* Cards */}\r\n+            <div className=\"container\">\r\n+            <div className=\"row\">\r\n+                {currentPosts.map((post, i) => (\r\n+                    <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\" ,width:'20rem'}}>\r\n+                        <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n+                        <p>{post.body}</p>\r\n+                        <button onClick={() => editPost(post)}>Edit</button>\r\n+                        <button onClick={() => deletePost(post.id)}>Delete</button>\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n+            </div>\r\n+            {/* Pagination */}\r\n+            <div>\r\n+                {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n+                    <button\r\n+                        key={idx}\r\n+                        onClick={() => setPage(idx + 1)}\r\n+                        style={{\r\n+                            margin: \"5px\",\r\n+                            background: page === idx + 1 ? \"#ccc\" : \"white\"\r\n+                        }}\r\n+                    >\r\n+                        {idx + 1}\r\n+                    </button>\r\n+                ))}\r\n+            </div>\r\n         </div>\r\n     );\r\n-};\r\n-   \n+}\r\n"
                },
                {
                    "date": 1757072669180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,9 +138,8 @@\n                 <button type=\"submit\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n             </form>\r\n \r\n             {/* Cards */}\r\n-            <div className=\"container\">\r\n             <div className=\"row\">\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\" ,width:'20rem'}}>\r\n                         <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n@@ -149,9 +148,8 @@\n                         <button onClick={() => deletePost(post.id)}>Delete</button>\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n-            </div>\r\n             {/* Pagination */}\r\n             <div>\r\n                 {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n                     <button\r\n@@ -167,5 +165,5 @@\n                 ))}\r\n             </div>\r\n         </div>\r\n     );\r\n-}\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1757072687613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,10 +115,9 @@\n     const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n     const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n \r\n     return (\r\n-        <div>\r\n-            <h3>Total Pages: {Math.ceil(posts.length / postsPerPage)}</h3>\r\n+        <div className=\"container\">\r\n \r\n             {/* Form */}\r\n             <form onSubmit={handleSubmit} style={{ marginBottom: \"20px\" }}>\r\n                 <input\r\n"
                },
                {
                    "date": 1757072757008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,8 +67,9 @@\n     const [page, setPage] = useState(1);\r\n     const postsPerPage = 10;\r\n     const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n     const [editId, setEditId] = useState(null);\r\n+    const[showForm,setShowForm]=useState(false);\r\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n@@ -116,8 +117,9 @@\n     const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n \r\n     return (\r\n         <div className=\"container\">\r\n+            <button onClick={showForm}></button>\r\n \r\n             {/* Form */}\r\n             <form onSubmit={handleSubmit} style={{ marginBottom: \"20px\" }}>\r\n                 <input\r\n"
                },
                {
                    "date": 1757072813875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,13 @@\n     const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n \r\n     return (\r\n         <div className=\"container\">\r\n-            <button onClick={showForm}></button>\r\n+            <div className='d-flex justify-content-center align-items-center'>\r\n+        <button className='start' onClick={() => setShowForm(!showForm)}>\r\n+          {showForm ? 'Hide Form' : 'Show Form'}\r\n+        </button>\r\n+      </div>\r\n \r\n             {/* Form */}\r\n             <form onSubmit={handleSubmit} style={{ marginBottom: \"20px\" }}>\r\n                 <input\r\n"
                },
                {
                    "date": 1757072821043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n     const [page, setPage] = useState(1);\r\n     const postsPerPage = 10;\r\n     const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n     const [editId, setEditId] = useState(null);\r\n-    const[showForm,setShowForm]=useState(false);\r\n+    const [showForm, setShowForm] = useState(false);\r\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n@@ -118,12 +118,12 @@\n \r\n     return (\r\n         <div className=\"container\">\r\n             <div className='d-flex justify-content-center align-items-center'>\r\n-        <button className='start' onClick={() => setShowForm(!showForm)}>\r\n-          {showForm ? 'Hide Form' : 'Show Form'}\r\n-        </button>\r\n-      </div>\r\n+                <button className='start' onClick={() => setShowForm(!showForm)}>\r\n+                    {showForm ? 'Hide Form' : 'Show Form'}\r\n+                </button>\r\n+            </div>\r\n \r\n             {/* Form */}\r\n             <form onSubmit={handleSubmit} style={{ marginBottom: \"20px\" }}>\r\n                 <input\r\n@@ -145,9 +145,9 @@\n \r\n             {/* Cards */}\r\n             <div className=\"row\">\r\n                 {currentPosts.map((post, i) => (\r\n-                    <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\" ,width:'20rem'}}>\r\n+                    <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\", width: '20rem' }}>\r\n                         <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n                         <p>{post.body}</p>\r\n                         <button onClick={() => editPost(post)}>Edit</button>\r\n                         <button onClick={() => deletePost(post.id)}>Delete</button>\r\n"
                },
                {
                    "date": 1757072830701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,9 @@\n     const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n \r\n     return (\r\n         <div className=\"container\">\r\n-            <div className='d-flex justify-content-center align-items-center'>\r\n+            <div className='d-flex justify-content-center align-items-center mt-5'>\r\n                 <button className='start' onClick={() => setShowForm(!showForm)}>\r\n                     {showForm ? 'Hide Form' : 'Show Form'}\r\n                 </button>\r\n             </div>\r\n"
                },
                {
                    "date": 1757072853206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,8 +124,9 @@\n                 </button>\r\n             </div>\r\n \r\n             {/* Form */}\r\n+            {showForm &&\r\n             <form onSubmit={handleSubmit} style={{ marginBottom: \"20px\" }}>\r\n                 <input\r\n                     type=\"text\"\r\n                     placeholder=\"Title\"\r\n@@ -140,9 +141,9 @@\n                     onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n                     required\r\n                 />\r\n                 <button type=\"submit\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n-            </form>\r\n+            </form>}\r\n \r\n             {/* Cards */}\r\n             <div className=\"row\">\r\n                 {currentPosts.map((post, i) => (\r\n"
                },
                {
                    "date": 1757072944817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,9 +118,9 @@\n \r\n     return (\r\n         <div className=\"container\">\r\n             <div className='d-flex justify-content-center align-items-center mt-5'>\r\n-                <button className='start' onClick={() => setShowForm(!showForm)}>\r\n+                <button className='start btn-btn-primary' onClick={() => setShowForm(!showForm)}>\r\n                     {showForm ? 'Hide Form' : 'Show Form'}\r\n                 </button>\r\n             </div>\r\n \r\n"
                },
                {
                    "date": 1757072957466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,9 +118,9 @@\n \r\n     return (\r\n         <div className=\"container\">\r\n             <div className='d-flex justify-content-center align-items-center mt-5'>\r\n-                <button className='start btn-btn-primary' onClick={() => setShowForm(!showForm)}>\r\n+                <button className='start btnBtnPrimary' onClick={() => setShowForm(!showForm)}>\r\n                     {showForm ? 'Hide Form' : 'Show Form'}\r\n                 </button>\r\n             </div>\r\n \r\n"
                },
                {
                    "date": 1757072965972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,9 +118,9 @@\n \r\n     return (\r\n         <div className=\"container\">\r\n             <div className='d-flex justify-content-center align-items-center mt-5'>\r\n-                <button className='start btnBtnPrimary' onClick={() => setShowForm(!showForm)}>\r\n+                <button className='start' onClick={() => setShowForm(!showForm)}>\r\n                     {showForm ? 'Hide Form' : 'Show Form'}\r\n                 </button>\r\n             </div>\r\n \r\n"
                },
                {
                    "date": 1757073054526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,8 +60,9 @@\n //     );\r\n // };\r\n \r\n import React, { useEffect, useState } from \"react\";\r\n+import '..App.css';\r\n \r\n export default function Posts() {\r\n     const [posts, setPosts] = useState([]);\r\n     const [page, setPage] = useState(1);\r\n"
                },
                {
                    "date": 1757073060073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,8 @@\n //     );\r\n // };\r\n \r\n import React, { useEffect, useState } from \"react\";\r\n-import '..App.css';\r\n \r\n export default function Posts() {\r\n     const [posts, setPosts] = useState([]);\r\n     const [page, setPage] = useState(1);\r\n"
                },
                {
                    "date": 1757073127842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,8 +60,9 @@\n //     );\r\n // };\r\n \r\n import React, { useEffect, useState } from \"react\";\r\n+import \"../App.css\"\r\n \r\n export default function Posts() {\r\n     const [posts, setPosts] = useState([]);\r\n     const [page, setPage] = useState(1);\r\n"
                },
                {
                    "date": 1757073238370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -150,10 +150,11 @@\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\", width: '20rem' }}>\r\n                         <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n                         <p>{post.body}</p>\r\n+                        <div className=\"row\">\r\n                         <button onClick={() => editPost(post)}>Edit</button>\r\n-                        <button onClick={() => deletePost(post.id)}>Delete</button>\r\n+                        <button onClick={() => deletePost(post.id)}>Delete</button></div>\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n             {/* Pagination */}\r\n"
                },
                {
                    "date": 1757073256992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -150,9 +150,9 @@\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\", width: '20rem' }}>\r\n                         <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n                         <p>{post.body}</p>\r\n-                        <div className=\"row\">\r\n+                        <div className=\"d-flex flex-row\">\r\n                         <button onClick={() => editPost(post)}>Edit</button>\r\n                         <button onClick={() => deletePost(post.id)}>Delete</button></div>\r\n                     </div>\r\n                 ))}\r\n"
                },
                {
                    "date": 1757073300393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,10 +151,10 @@\n                     <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\", width: '20rem' }}>\r\n                         <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n                         <p>{post.body}</p>\r\n                         <div className=\"d-flex flex-row\">\r\n-                        <button onClick={() => editPost(post)}>Edit</button>\r\n-                        <button onClick={() => deletePost(post.id)}>Delete</button></div>\r\n+                        <button onClick={() => editPost(post)} className=\"editBtn\">Edit</button>\r\n+                        <button onClick={() => deletePost(post.id)} className=\"deleteBtn\">Delete</button></div>\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n             {/* Pagination */}\r\n"
                },
                {
                    "date": 1757073354240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,10 +151,10 @@\n                     <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\", width: '20rem' }}>\r\n                         <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n                         <p>{post.body}</p>\r\n                         <div className=\"d-flex flex-row\">\r\n-                        <button onClick={() => editPost(post)} className=\"editBtn\">Edit</button>\r\n-                        <button onClick={() => deletePost(post.id)} className=\"deleteBtn\">Delete</button></div>\r\n+                        <button onClick={() => editPost(post)} className=\"btn btn-warning\">Edit</button>\r\n+                        <button onClick={() => deletePost(post.id)} className=\"btn btn-danger\">Delete</button></div>\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n             {/* Pagination */}\r\n"
                },
                {
                    "date": 1757073376105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,9 @@\n \r\n     return (\r\n         <div className=\"container\">\r\n             <div className='d-flex justify-content-center align-items-center mt-5'>\r\n-                <button className='start' onClick={() => setShowForm(!showForm)}>\r\n+                <button className='btn btn-primary' onClick={() => setShowForm(!showForm)}>\r\n                     {showForm ? 'Hide Form' : 'Show Form'}\r\n                 </button>\r\n             </div>\r\n \r\n"
                },
                {
                    "date": 1757073445549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,9 +164,9 @@\n                         key={idx}\r\n                         onClick={() => setPage(idx + 1)}\r\n                         style={{\r\n                             margin: \"5px\",\r\n-                            background: page === idx + 1 ? \"#ccc\" : \"white\"\r\n+                            background: page === idx + 1 ? \"#9b6262ff\" : \"white\"\r\n                         }}\r\n                     >\r\n                         {idx + 1}\r\n                     </button>\r\n"
                },
                {
                    "date": 1757073453299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,9 +164,9 @@\n                         key={idx}\r\n                         onClick={() => setPage(idx + 1)}\r\n                         style={{\r\n                             margin: \"5px\",\r\n-                            background: page === idx + 1 ? \"#9b6262ff\" : \"white\"\r\n+                            background: page === idx + 1 ? \"#3f1f8fff\" : \"white\"\r\n                         }}\r\n                     >\r\n                         {idx + 1}\r\n                     </button>\r\n"
                },
                {
                    "date": 1757073462164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,9 +164,9 @@\n                         key={idx}\r\n                         onClick={() => setPage(idx + 1)}\r\n                         style={{\r\n                             margin: \"5px\",\r\n-                            background: page === idx + 1 ? \"#3f1f8fff\" : \"white\"\r\n+                            background: page === idx + 1 ? \"blue\" : \"white\"\r\n                         }}\r\n                     >\r\n                         {idx + 1}\r\n                     </button>\r\n"
                },
                {
                    "date": 1757073521975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,9 +164,10 @@\n                         key={idx}\r\n                         onClick={() => setPage(idx + 1)}\r\n                         style={{\r\n                             margin: \"5px\",\r\n-                            background: page === idx + 1 ? \"blue\" : \"white\"\r\n+                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n+                            color:page===idx+1?\"white\":\"black\"\r\n                         }}\r\n                     >\r\n                         {idx + 1}\r\n                     </button>\r\n"
                },
                {
                    "date": 1757073565357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,179 @@\n+// import React, { useState, useEffect } from \"react\";\r\n+// import { Card } from \"react-bootstrap\";\r\n+\r\n+\r\n+//     export default function ApiCRUD() {\r\n+//     const [data, setData] = useState([]);\r\n+//     const [error, setError] = useState(null);\r\n+//     const [loading, setLoading] = useState(true);\r\n+//     const [showForm, setShowForm] = useState(false);\r\n+//     const [submission, setSubmissions] = useState({ title: \"\", body: \"\" });\r\n+//     const itemPerPage = 10;\r\n+//     let totalPages = 10;\r\n+\r\n+//     const handleFormSubmit = (data) => {\r\n+//         setSubmissions = (prev => [...prev, data]);\r\n+//         setShowForm(false);\r\n+//     }\r\n+\r\n+\r\n+//     useEffect(() => {\r\n+//         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+//             .then(res => res.json())\r\n+//             .then((data) => {\r\n+//                 setData(data);\r\n+//                 setLoading(false);\r\n+//             })\r\n+//             .catch(err => {\r\n+//                 setError(err);\r\n+//                 setLoading(false);\r\n+//             })\r\n+//     }, []);\r\n+\r\n+\r\n+// const addPost=()=>{\r\n+\r\n+// }\r\n+\r\n+//     if (loading) return <p>Loading...</p>;\r\n+//     if (error) return <p>Error occured!</p>;\r\n+\r\n+//     return (\r\n+//         <div className=\"container\">\r\n+//             <form onSubmit={addPost}>\r\n+//                 <input type=\"text\"\r\n+//                 placeholder=\"Enter title\" value={form.title}></input>\r\n+//             </form>\r\n+//             <div className=\"row\" style={{ gap: \"20px\" }}>\r\n+//                 {data.map((post) => (\r\n+//                     <div className=\"card\" style={{ width: '20rem' }}>\r\n+//                         <div className=\"card-body\">\r\n+//                             <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n+//                                 <div className=\"card-title\">{post.id} {post.title}</div>\r\n+//                                 <p>{post.body}</p>\r\n+//                             </div>\r\n+//                         </div>\r\n+//                     </div>\r\n+//                 ))}\r\n+//             </div>\r\n+//         </div>\r\n+//     );\r\n+// };\r\n+\r\n+import React, { useEffect, useState } from \"react\";\r\n+import \"../App.css\"\r\n+\r\n+export default function Posts() {\r\n+    const [posts, setPosts] = useState([]);\r\n+    const [page, setPage] = useState(1);\r\n+    const postsPerPage = 10;\r\n+    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n+    const [editId, setEditId] = useState(null);\r\n+    const [showForm, setShowForm] = useState(false);\r\n+\r\n+    useEffect(() => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+            .then(res => res.json())\r\n+            .then(data => setPosts(data));\r\n+    }, []);\r\n+\r\n+    // Add or Update Post\r\n+    const handleSubmit = (e) => {\r\n+        e.preventDefault();\r\n+        if (editId) {\r\n+            // PUT - update\r\n+            const updated = posts.map(p =>\r\n+                p.id === editId ? { ...p, title: form.title, body: form.body } : p\r\n+            );\r\n+            setPosts(updated);\r\n+            setEditId(null);\r\n+        } else {\r\n+            // POST - add\r\n+            const newId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) + 1 : 1;\r\n+            const newPost = { id: newId, title: form.title, body: form.body };\r\n+            setPosts([...posts, newPost]);\r\n+            const lastPage = Math.ceil((posts.length + 1) / postsPerPage);\r\n+            setPage(lastPage);\r\n+        }\r\n+        setForm({ title: \"\", body: \"\" });\r\n+    };\r\n+\r\n+    // DELETE\r\n+    const deletePost = (id) => {\r\n+        const updated = posts.filter(p => p.id !== id);\r\n+        setPosts(updated);\r\n+        const lastPage = Math.max(1, Math.ceil(updated.length / postsPerPage));\r\n+        if (page > lastPage) setPage(lastPage);\r\n+    };\r\n+\r\n+    // EDIT - populate form\r\n+    const editPost = (post) => {\r\n+        setForm({ title: post.title, body: post.body });\r\n+        setEditId(post.id);\r\n+    };\r\n+\r\n+    // Pagination\r\n+    const indexOfLastPost = page * postsPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n+    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n+\r\n+    return (\r\n+        <div className=\"container\">\r\n+            <div className='d-flex justify-content-center align-items-center mt-5'>\r\n+                <button className='btn btn-primary' onClick={() => setShowForm(!showForm)}>\r\n+                    {showForm ? 'Hide Form' : 'Show Form'}\r\n+                </button>\r\n+            </div>\r\n+\r\n+            {/* Form */}\r\n+            {showForm &&\r\n+            <form onSubmit={handleSubmit} style={{ marginBottom: \"20px\" }}>\r\n+                <input\r\n+                    type=\"text\"\r\n+                    placeholder=\"Title\"\r\n+                    value={form.title}\r\n+                    onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n+                    required\r\n+                />\r\n+                <input\r\n+                    type=\"text\"\r\n+                    placeholder=\"Body\"\r\n+                    value={form.body}\r\n+                    onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n+                    required\r\n+                />\r\n+                <button type=\"submit\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n+            </form>}\r\n+\r\n+            {/* Cards */}\r\n+            <div className=\"row\">\r\n+                {currentPosts.map((post, i) => (\r\n+                    <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\", width: '20rem' }}>\r\n+                        <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n+                        <p>{post.body}</p>\r\n+                        <div className=\"d-flex flex-row\">\r\n+                        <button onClick={() => editPost(post)} className=\"btn btn-warning\">Edit</button>\r\n+                        <button onClick={() => deletePost(post.id)} className=\"btn btn-danger\">Delete</button></div>\r\n+                    </div>\r\n+                ))}\r\n+            </div>\r\n+            {/* Pagination */}\r\n+            <div>\r\n+                {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n+                    <button\r\n+                        key={idx}\r\n+                        onClick={() => setPage(idx + 1)}\r\n+                        style={{\r\n+                            margin: \"5px\",\r\n+                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n+                            color:page===idx+1?\"white\":\"black\",\r\n+                            border:\"none\";\r\n+                        }}\r\n+                    >\r\n+                        {idx + 1}\r\n+                    </button>\r\n+                ))}\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+}\r\n"
                },
                {
                    "date": 1757073612499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -166,9 +166,10 @@\n                         style={{\r\n                             margin: \"5px\",\r\n                             background: page === idx + 1 ? \"blue\" : \"white\",\r\n                             color:page===idx+1?\"white\":\"black\",\r\n-                            border:\"none\";\r\n+                            border:\"none\",\r\n+                            border-radius:\"8px\",\r\n                         }}\r\n                     >\r\n                         {idx + 1}\r\n                     </button>\r\n@@ -176,182 +177,4 @@\n             </div>\r\n         </div>\r\n     );\r\n }\r\n-// import React, { useState, useEffect } from \"react\";\r\n-// import { Card } from \"react-bootstrap\";\r\n-\r\n-\r\n-//     export default function ApiCRUD() {\r\n-//     const [data, setData] = useState([]);\r\n-//     const [error, setError] = useState(null);\r\n-//     const [loading, setLoading] = useState(true);\r\n-//     const [showForm, setShowForm] = useState(false);\r\n-//     const [submission, setSubmissions] = useState({ title: \"\", body: \"\" });\r\n-//     const itemPerPage = 10;\r\n-//     let totalPages = 10;\r\n-\r\n-//     const handleFormSubmit = (data) => {\r\n-//         setSubmissions = (prev => [...prev, data]);\r\n-//         setShowForm(false);\r\n-//     }\r\n-\r\n-\r\n-//     useEffect(() => {\r\n-//         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-//             .then(res => res.json())\r\n-//             .then((data) => {\r\n-//                 setData(data);\r\n-//                 setLoading(false);\r\n-//             })\r\n-//             .catch(err => {\r\n-//                 setError(err);\r\n-//                 setLoading(false);\r\n-//             })\r\n-//     }, []);\r\n-\r\n-\r\n-// const addPost=()=>{\r\n-\r\n-// }\r\n-\r\n-//     if (loading) return <p>Loading...</p>;\r\n-//     if (error) return <p>Error occured!</p>;\r\n-\r\n-//     return (\r\n-//         <div className=\"container\">\r\n-//             <form onSubmit={addPost}>\r\n-//                 <input type=\"text\"\r\n-//                 placeholder=\"Enter title\" value={form.title}></input>\r\n-//             </form>\r\n-//             <div className=\"row\" style={{ gap: \"20px\" }}>\r\n-//                 {data.map((post) => (\r\n-//                     <div className=\"card\" style={{ width: '20rem' }}>\r\n-//                         <div className=\"card-body\">\r\n-//                             <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-//                                 <div className=\"card-title\">{post.id} {post.title}</div>\r\n-//                                 <p>{post.body}</p>\r\n-//                             </div>\r\n-//                         </div>\r\n-//                     </div>\r\n-//                 ))}\r\n-//             </div>\r\n-//         </div>\r\n-//     );\r\n-// };\r\n-\r\n-import React, { useEffect, useState } from \"react\";\r\n-import \"../App.css\"\r\n-\r\n-export default function Posts() {\r\n-    const [posts, setPosts] = useState([]);\r\n-    const [page, setPage] = useState(1);\r\n-    const postsPerPage = 10;\r\n-    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n-    const [editId, setEditId] = useState(null);\r\n-    const [showForm, setShowForm] = useState(false);\r\n-\r\n-    useEffect(() => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-            .then(res => res.json())\r\n-            .then(data => setPosts(data));\r\n-    }, []);\r\n-\r\n-    // Add or Update Post\r\n-    const handleSubmit = (e) => {\r\n-        e.preventDefault();\r\n-        if (editId) {\r\n-            // PUT - update\r\n-            const updated = posts.map(p =>\r\n-                p.id === editId ? { ...p, title: form.title, body: form.body } : p\r\n-            );\r\n-            setPosts(updated);\r\n-            setEditId(null);\r\n-        } else {\r\n-            // POST - add\r\n-            const newId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) + 1 : 1;\r\n-            const newPost = { id: newId, title: form.title, body: form.body };\r\n-            setPosts([...posts, newPost]);\r\n-            const lastPage = Math.ceil((posts.length + 1) / postsPerPage);\r\n-            setPage(lastPage);\r\n-        }\r\n-        setForm({ title: \"\", body: \"\" });\r\n-    };\r\n-\r\n-    // DELETE\r\n-    const deletePost = (id) => {\r\n-        const updated = posts.filter(p => p.id !== id);\r\n-        setPosts(updated);\r\n-        const lastPage = Math.max(1, Math.ceil(updated.length / postsPerPage));\r\n-        if (page > lastPage) setPage(lastPage);\r\n-    };\r\n-\r\n-    // EDIT - populate form\r\n-    const editPost = (post) => {\r\n-        setForm({ title: post.title, body: post.body });\r\n-        setEditId(post.id);\r\n-    };\r\n-\r\n-    // Pagination\r\n-    const indexOfLastPost = page * postsPerPage;\r\n-    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n-    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n-\r\n-    return (\r\n-        <div className=\"container\">\r\n-            <div className='d-flex justify-content-center align-items-center mt-5'>\r\n-                <button className='btn btn-primary' onClick={() => setShowForm(!showForm)}>\r\n-                    {showForm ? 'Hide Form' : 'Show Form'}\r\n-                </button>\r\n-            </div>\r\n-\r\n-            {/* Form */}\r\n-            {showForm &&\r\n-            <form onSubmit={handleSubmit} style={{ marginBottom: \"20px\" }}>\r\n-                <input\r\n-                    type=\"text\"\r\n-                    placeholder=\"Title\"\r\n-                    value={form.title}\r\n-                    onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n-                    required\r\n-                />\r\n-                <input\r\n-                    type=\"text\"\r\n-                    placeholder=\"Body\"\r\n-                    value={form.body}\r\n-                    onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n-                    required\r\n-                />\r\n-                <button type=\"submit\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n-            </form>}\r\n-\r\n-            {/* Cards */}\r\n-            <div className=\"row\">\r\n-                {currentPosts.map((post, i) => (\r\n-                    <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\", width: '20rem' }}>\r\n-                        <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n-                        <p>{post.body}</p>\r\n-                        <div className=\"d-flex flex-row\">\r\n-                        <button onClick={() => editPost(post)} className=\"btn btn-warning\">Edit</button>\r\n-                        <button onClick={() => deletePost(post.id)} className=\"btn btn-danger\">Delete</button></div>\r\n-                    </div>\r\n-                ))}\r\n-            </div>\r\n-            {/* Pagination */}\r\n-            <div>\r\n-                {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n-                    <button\r\n-                        key={idx}\r\n-                        onClick={() => setPage(idx + 1)}\r\n-                        style={{\r\n-                            margin: \"5px\",\r\n-                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n-                            color:page===idx+1?\"white\":\"black\"\r\n-                        }}\r\n-                    >\r\n-                        {idx + 1}\r\n-                    </button>\r\n-                ))}\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-}\r\n"
                },
                {
                    "date": 1757073619958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,9 +167,9 @@\n                             margin: \"5px\",\r\n                             background: page === idx + 1 ? \"blue\" : \"white\",\r\n                             color:page===idx+1?\"white\":\"black\",\r\n                             border:\"none\",\r\n-                            border-radius:\"8px\",\r\n+                            borderRadius:\"8px\",\r\n                         }}\r\n                     >\r\n                         {idx + 1}\r\n                     </button>\r\n"
                },
                {
                    "date": 1757073632263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,181 @@\n+// import React, { useState, useEffect } from \"react\";\r\n+// import { Card } from \"react-bootstrap\";\r\n+\r\n+\r\n+//     export default function ApiCRUD() {\r\n+//     const [data, setData] = useState([]);\r\n+//     const [error, setError] = useState(null);\r\n+//     const [loading, setLoading] = useState(true);\r\n+//     const [showForm, setShowForm] = useState(false);\r\n+//     const [submission, setSubmissions] = useState({ title: \"\", body: \"\" });\r\n+//     const itemPerPage = 10;\r\n+//     let totalPages = 10;\r\n+\r\n+//     const handleFormSubmit = (data) => {\r\n+//         setSubmissions = (prev => [...prev, data]);\r\n+//         setShowForm(false);\r\n+//     }\r\n+\r\n+\r\n+//     useEffect(() => {\r\n+//         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+//             .then(res => res.json())\r\n+//             .then((data) => {\r\n+//                 setData(data);\r\n+//                 setLoading(false);\r\n+//             })\r\n+//             .catch(err => {\r\n+//                 setError(err);\r\n+//                 setLoading(false);\r\n+//             })\r\n+//     }, []);\r\n+\r\n+\r\n+// const addPost=()=>{\r\n+\r\n+// }\r\n+\r\n+//     if (loading) return <p>Loading...</p>;\r\n+//     if (error) return <p>Error occured!</p>;\r\n+\r\n+//     return (\r\n+//         <div className=\"container\">\r\n+//             <form onSubmit={addPost}>\r\n+//                 <input type=\"text\"\r\n+//                 placeholder=\"Enter title\" value={form.title}></input>\r\n+//             </form>\r\n+//             <div className=\"row\" style={{ gap: \"20px\" }}>\r\n+//                 {data.map((post) => (\r\n+//                     <div className=\"card\" style={{ width: '20rem' }}>\r\n+//                         <div className=\"card-body\">\r\n+//                             <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n+//                                 <div className=\"card-title\">{post.id} {post.title}</div>\r\n+//                                 <p>{post.body}</p>\r\n+//                             </div>\r\n+//                         </div>\r\n+//                     </div>\r\n+//                 ))}\r\n+//             </div>\r\n+//         </div>\r\n+//     );\r\n+// };\r\n+\r\n+import React, { useEffect, useState } from \"react\";\r\n+import \"../App.css\"\r\n+\r\n+export default function Posts() {\r\n+    const [posts, setPosts] = useState([]);\r\n+    const [page, setPage] = useState(1);\r\n+    const postsPerPage = 10;\r\n+    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n+    const [editId, setEditId] = useState(null);\r\n+    const [showForm, setShowForm] = useState(false);\r\n+\r\n+    useEffect(() => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+            .then(res => res.json())\r\n+            .then(data => setPosts(data));\r\n+    }, []);\r\n+\r\n+    // Add or Update Post\r\n+    const handleSubmit = (e) => {\r\n+        e.preventDefault();\r\n+        if (editId) {\r\n+            // PUT - update\r\n+            const updated = posts.map(p =>\r\n+                p.id === editId ? { ...p, title: form.title, body: form.body } : p\r\n+            );\r\n+            setPosts(updated);\r\n+            setEditId(null);\r\n+        } else {\r\n+            // POST - add\r\n+            const newId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) + 1 : 1;\r\n+            const newPost = { id: newId, title: form.title, body: form.body };\r\n+            setPosts([...posts, newPost]);\r\n+            const lastPage = Math.ceil((posts.length + 1) / postsPerPage);\r\n+            setPage(lastPage);\r\n+        }\r\n+        setForm({ title: \"\", body: \"\" });\r\n+    };\r\n+\r\n+    // DELETE\r\n+    const deletePost = (id) => {\r\n+        const updated = posts.filter(p => p.id !== id);\r\n+        setPosts(updated);\r\n+        const lastPage = Math.max(1, Math.ceil(updated.length / postsPerPage));\r\n+        if (page > lastPage) setPage(lastPage);\r\n+    };\r\n+\r\n+    // EDIT - populate form\r\n+    const editPost = (post) => {\r\n+        setForm({ title: post.title, body: post.body });\r\n+        setEditId(post.id);\r\n+    };\r\n+\r\n+    // Pagination\r\n+    const indexOfLastPost = page * postsPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n+    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n+\r\n+    return (\r\n+        <div className=\"container\">\r\n+            <div className='d-flex justify-content-center align-items-center mt-5'>\r\n+                <button className='btn btn-primary' onClick={() => setShowForm(!showForm)}>\r\n+                    {showForm ? 'Hide Form' : 'Show Form'}\r\n+                </button>\r\n+            </div>\r\n+\r\n+            {/* Form */}\r\n+            {showForm &&\r\n+            <form onSubmit={handleSubmit} style={{ marginBottom: \"20px\" }}>\r\n+                <input\r\n+                    type=\"text\"\r\n+                    placeholder=\"Title\"\r\n+                    value={form.title}\r\n+                    onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n+                    required\r\n+                />\r\n+                <input\r\n+                    type=\"text\"\r\n+                    placeholder=\"Body\"\r\n+                    value={form.body}\r\n+                    onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n+                    required\r\n+                />\r\n+                <button type=\"submit\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n+            </form>}\r\n+\r\n+            {/* Cards */}\r\n+            <div className=\"row\">\r\n+                {currentPosts.map((post, i) => (\r\n+                    <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\", width: '20rem' }}>\r\n+                        <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n+                        <p>{post.body}</p>\r\n+                        <div className=\"d-flex flex-row\">\r\n+                        <button onClick={() => editPost(post)} className=\"btn btn-warning\">Edit</button>\r\n+                        <button onClick={() => deletePost(post.id)} className=\"btn btn-danger\">Delete</button></div>\r\n+                    </div>\r\n+                ))}\r\n+            </div>\r\n+            {/* Pagination */}\r\n+            <div>\r\n+                {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n+                    <button\r\n+                        key={idx}\r\n+                        onClick={() => setPage(idx + 1)}\r\n+                        style={{\r\n+                            margin: \"5px\",\r\n+                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n+                            color:page===idx+1?\"white\":\"black\",\r\n+                            border:\"none\",\r\n+                            borderRadius:\"8px\",\r\n+                            padding:\"5px\"\r\n+                        }}\r\n+                    >\r\n+                        {idx + 1}\r\n+                    </button>\r\n+                ))}\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+}\r\n"
                },
                {
                    "date": 1757073639523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,181 @@\n+// import React, { useState, useEffect } from \"react\";\r\n+// import { Card } from \"react-bootstrap\";\r\n+\r\n+\r\n+//     export default function ApiCRUD() {\r\n+//     const [data, setData] = useState([]);\r\n+//     const [error, setError] = useState(null);\r\n+//     const [loading, setLoading] = useState(true);\r\n+//     const [showForm, setShowForm] = useState(false);\r\n+//     const [submission, setSubmissions] = useState({ title: \"\", body: \"\" });\r\n+//     const itemPerPage = 10;\r\n+//     let totalPages = 10;\r\n+\r\n+//     const handleFormSubmit = (data) => {\r\n+//         setSubmissions = (prev => [...prev, data]);\r\n+//         setShowForm(false);\r\n+//     }\r\n+\r\n+\r\n+//     useEffect(() => {\r\n+//         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+//             .then(res => res.json())\r\n+//             .then((data) => {\r\n+//                 setData(data);\r\n+//                 setLoading(false);\r\n+//             })\r\n+//             .catch(err => {\r\n+//                 setError(err);\r\n+//                 setLoading(false);\r\n+//             })\r\n+//     }, []);\r\n+\r\n+\r\n+// const addPost=()=>{\r\n+\r\n+// }\r\n+\r\n+//     if (loading) return <p>Loading...</p>;\r\n+//     if (error) return <p>Error occured!</p>;\r\n+\r\n+//     return (\r\n+//         <div className=\"container\">\r\n+//             <form onSubmit={addPost}>\r\n+//                 <input type=\"text\"\r\n+//                 placeholder=\"Enter title\" value={form.title}></input>\r\n+//             </form>\r\n+//             <div className=\"row\" style={{ gap: \"20px\" }}>\r\n+//                 {data.map((post) => (\r\n+//                     <div className=\"card\" style={{ width: '20rem' }}>\r\n+//                         <div className=\"card-body\">\r\n+//                             <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n+//                                 <div className=\"card-title\">{post.id} {post.title}</div>\r\n+//                                 <p>{post.body}</p>\r\n+//                             </div>\r\n+//                         </div>\r\n+//                     </div>\r\n+//                 ))}\r\n+//             </div>\r\n+//         </div>\r\n+//     );\r\n+// };\r\n+\r\n+import React, { useEffect, useState } from \"react\";\r\n+import \"../App.css\"\r\n+\r\n+export default function Posts() {\r\n+    const [posts, setPosts] = useState([]);\r\n+    const [page, setPage] = useState(1);\r\n+    const postsPerPage = 10;\r\n+    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n+    const [editId, setEditId] = useState(null);\r\n+    const [showForm, setShowForm] = useState(false);\r\n+\r\n+    useEffect(() => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+            .then(res => res.json())\r\n+            .then(data => setPosts(data));\r\n+    }, []);\r\n+\r\n+    // Add or Update Post\r\n+    const handleSubmit = (e) => {\r\n+        e.preventDefault();\r\n+        if (editId) {\r\n+            // PUT - update\r\n+            const updated = posts.map(p =>\r\n+                p.id === editId ? { ...p, title: form.title, body: form.body } : p\r\n+            );\r\n+            setPosts(updated);\r\n+            setEditId(null);\r\n+        } else {\r\n+            // POST - add\r\n+            const newId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) + 1 : 1;\r\n+            const newPost = { id: newId, title: form.title, body: form.body };\r\n+            setPosts([...posts, newPost]);\r\n+            const lastPage = Math.ceil((posts.length + 1) / postsPerPage);\r\n+            setPage(lastPage);\r\n+        }\r\n+        setForm({ title: \"\", body: \"\" });\r\n+    };\r\n+\r\n+    // DELETE\r\n+    const deletePost = (id) => {\r\n+        const updated = posts.filter(p => p.id !== id);\r\n+        setPosts(updated);\r\n+        const lastPage = Math.max(1, Math.ceil(updated.length / postsPerPage));\r\n+        if (page > lastPage) setPage(lastPage);\r\n+    };\r\n+\r\n+    // EDIT - populate form\r\n+    const editPost = (post) => {\r\n+        setForm({ title: post.title, body: post.body });\r\n+        setEditId(post.id);\r\n+    };\r\n+\r\n+    // Pagination\r\n+    const indexOfLastPost = page * postsPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n+    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n+\r\n+    return (\r\n+        <div className=\"container\">\r\n+            <div className='d-flex justify-content-center align-items-center mt-5'>\r\n+                <button className='btn btn-primary' onClick={() => setShowForm(!showForm)}>\r\n+                    {showForm ? 'Hide Form' : 'Show Form'}\r\n+                </button>\r\n+            </div>\r\n+\r\n+            {/* Form */}\r\n+            {showForm &&\r\n+            <form onSubmit={handleSubmit} style={{ marginBottom: \"20px\" }}>\r\n+                <input\r\n+                    type=\"text\"\r\n+                    placeholder=\"Title\"\r\n+                    value={form.title}\r\n+                    onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n+                    required\r\n+                />\r\n+                <input\r\n+                    type=\"text\"\r\n+                    placeholder=\"Body\"\r\n+                    value={form.body}\r\n+                    onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n+                    required\r\n+                />\r\n+                <button type=\"submit\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n+            </form>}\r\n+\r\n+            {/* Cards */}\r\n+            <div className=\"row\">\r\n+                {currentPosts.map((post, i) => (\r\n+                    <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\", width: '20rem' }}>\r\n+                        <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n+                        <p>{post.body}</p>\r\n+                        <div className=\"d-flex flex-row\">\r\n+                        <button onClick={() => editPost(post)} className=\"btn btn-warning\">Edit</button>\r\n+                        <button onClick={() => deletePost(post.id)} className=\"btn btn-danger\">Delete</button></div>\r\n+                    </div>\r\n+                ))}\r\n+            </div>\r\n+            {/* Pagination */}\r\n+            <div>\r\n+                {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n+                    <button\r\n+                        key={idx}\r\n+                        onClick={() => setPage(idx + 1)}\r\n+                        style={{\r\n+                            margin: \"5px\",\r\n+                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n+                            color:page===idx+1?\"white\":\"black\",\r\n+                            border:\"none\",\r\n+                            borderRadius:\"8px\",\r\n+                            padding:\"15px\"\r\n+                        }}\r\n+                    >\r\n+                        {idx + 1}\r\n+                    </button>\r\n+                ))}\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+}\r\n"
                },
                {
                    "date": 1757073696359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,8 +109,9 @@\n     // EDIT - populate form\r\n     const editPost = (post) => {\r\n         setForm({ title: post.title, body: post.body });\r\n         setEditId(post.id);\r\n+        showForm(true)\r\n     };\r\n \r\n     // Pagination\r\n     const indexOfLastPost = page * postsPerPage;\r\n@@ -178,365 +179,4 @@\n             </div>\r\n         </div>\r\n     );\r\n }\r\n-// import React, { useState, useEffect } from \"react\";\r\n-// import { Card } from \"react-bootstrap\";\r\n-\r\n-\r\n-//     export default function ApiCRUD() {\r\n-//     const [data, setData] = useState([]);\r\n-//     const [error, setError] = useState(null);\r\n-//     const [loading, setLoading] = useState(true);\r\n-//     const [showForm, setShowForm] = useState(false);\r\n-//     const [submission, setSubmissions] = useState({ title: \"\", body: \"\" });\r\n-//     const itemPerPage = 10;\r\n-//     let totalPages = 10;\r\n-\r\n-//     const handleFormSubmit = (data) => {\r\n-//         setSubmissions = (prev => [...prev, data]);\r\n-//         setShowForm(false);\r\n-//     }\r\n-\r\n-\r\n-//     useEffect(() => {\r\n-//         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-//             .then(res => res.json())\r\n-//             .then((data) => {\r\n-//                 setData(data);\r\n-//                 setLoading(false);\r\n-//             })\r\n-//             .catch(err => {\r\n-//                 setError(err);\r\n-//                 setLoading(false);\r\n-//             })\r\n-//     }, []);\r\n-\r\n-\r\n-// const addPost=()=>{\r\n-\r\n-// }\r\n-\r\n-//     if (loading) return <p>Loading...</p>;\r\n-//     if (error) return <p>Error occured!</p>;\r\n-\r\n-//     return (\r\n-//         <div className=\"container\">\r\n-//             <form onSubmit={addPost}>\r\n-//                 <input type=\"text\"\r\n-//                 placeholder=\"Enter title\" value={form.title}></input>\r\n-//             </form>\r\n-//             <div className=\"row\" style={{ gap: \"20px\" }}>\r\n-//                 {data.map((post) => (\r\n-//                     <div className=\"card\" style={{ width: '20rem' }}>\r\n-//                         <div className=\"card-body\">\r\n-//                             <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-//                                 <div className=\"card-title\">{post.id} {post.title}</div>\r\n-//                                 <p>{post.body}</p>\r\n-//                             </div>\r\n-//                         </div>\r\n-//                     </div>\r\n-//                 ))}\r\n-//             </div>\r\n-//         </div>\r\n-//     );\r\n-// };\r\n-\r\n-import React, { useEffect, useState } from \"react\";\r\n-import \"../App.css\"\r\n-\r\n-export default function Posts() {\r\n-    const [posts, setPosts] = useState([]);\r\n-    const [page, setPage] = useState(1);\r\n-    const postsPerPage = 10;\r\n-    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n-    const [editId, setEditId] = useState(null);\r\n-    const [showForm, setShowForm] = useState(false);\r\n-\r\n-    useEffect(() => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-            .then(res => res.json())\r\n-            .then(data => setPosts(data));\r\n-    }, []);\r\n-\r\n-    // Add or Update Post\r\n-    const handleSubmit = (e) => {\r\n-        e.preventDefault();\r\n-        if (editId) {\r\n-            // PUT - update\r\n-            const updated = posts.map(p =>\r\n-                p.id === editId ? { ...p, title: form.title, body: form.body } : p\r\n-            );\r\n-            setPosts(updated);\r\n-            setEditId(null);\r\n-        } else {\r\n-            // POST - add\r\n-            const newId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) + 1 : 1;\r\n-            const newPost = { id: newId, title: form.title, body: form.body };\r\n-            setPosts([...posts, newPost]);\r\n-            const lastPage = Math.ceil((posts.length + 1) / postsPerPage);\r\n-            setPage(lastPage);\r\n-        }\r\n-        setForm({ title: \"\", body: \"\" });\r\n-    };\r\n-\r\n-    // DELETE\r\n-    const deletePost = (id) => {\r\n-        const updated = posts.filter(p => p.id !== id);\r\n-        setPosts(updated);\r\n-        const lastPage = Math.max(1, Math.ceil(updated.length / postsPerPage));\r\n-        if (page > lastPage) setPage(lastPage);\r\n-    };\r\n-\r\n-    // EDIT - populate form\r\n-    const editPost = (post) => {\r\n-        setForm({ title: post.title, body: post.body });\r\n-        setEditId(post.id);\r\n-    };\r\n-\r\n-    // Pagination\r\n-    const indexOfLastPost = page * postsPerPage;\r\n-    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n-    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n-\r\n-    return (\r\n-        <div className=\"container\">\r\n-            <div className='d-flex justify-content-center align-items-center mt-5'>\r\n-                <button className='btn btn-primary' onClick={() => setShowForm(!showForm)}>\r\n-                    {showForm ? 'Hide Form' : 'Show Form'}\r\n-                </button>\r\n-            </div>\r\n-\r\n-            {/* Form */}\r\n-            {showForm &&\r\n-            <form onSubmit={handleSubmit} style={{ marginBottom: \"20px\" }}>\r\n-                <input\r\n-                    type=\"text\"\r\n-                    placeholder=\"Title\"\r\n-                    value={form.title}\r\n-                    onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n-                    required\r\n-                />\r\n-                <input\r\n-                    type=\"text\"\r\n-                    placeholder=\"Body\"\r\n-                    value={form.body}\r\n-                    onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n-                    required\r\n-                />\r\n-                <button type=\"submit\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n-            </form>}\r\n-\r\n-            {/* Cards */}\r\n-            <div className=\"row\">\r\n-                {currentPosts.map((post, i) => (\r\n-                    <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\", width: '20rem' }}>\r\n-                        <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n-                        <p>{post.body}</p>\r\n-                        <div className=\"d-flex flex-row\">\r\n-                        <button onClick={() => editPost(post)} className=\"btn btn-warning\">Edit</button>\r\n-                        <button onClick={() => deletePost(post.id)} className=\"btn btn-danger\">Delete</button></div>\r\n-                    </div>\r\n-                ))}\r\n-            </div>\r\n-            {/* Pagination */}\r\n-            <div>\r\n-                {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n-                    <button\r\n-                        key={idx}\r\n-                        onClick={() => setPage(idx + 1)}\r\n-                        style={{\r\n-                            margin: \"5px\",\r\n-                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n-                            color:page===idx+1?\"white\":\"black\",\r\n-                            border:\"none\",\r\n-                            borderRadius:\"8px\",\r\n-                            padding:\"5px\"\r\n-                        }}\r\n-                    >\r\n-                        {idx + 1}\r\n-                    </button>\r\n-                ))}\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-}\r\n-// import React, { useState, useEffect } from \"react\";\r\n-// import { Card } from \"react-bootstrap\";\r\n-\r\n-\r\n-//     export default function ApiCRUD() {\r\n-//     const [data, setData] = useState([]);\r\n-//     const [error, setError] = useState(null);\r\n-//     const [loading, setLoading] = useState(true);\r\n-//     const [showForm, setShowForm] = useState(false);\r\n-//     const [submission, setSubmissions] = useState({ title: \"\", body: \"\" });\r\n-//     const itemPerPage = 10;\r\n-//     let totalPages = 10;\r\n-\r\n-//     const handleFormSubmit = (data) => {\r\n-//         setSubmissions = (prev => [...prev, data]);\r\n-//         setShowForm(false);\r\n-//     }\r\n-\r\n-\r\n-//     useEffect(() => {\r\n-//         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-//             .then(res => res.json())\r\n-//             .then((data) => {\r\n-//                 setData(data);\r\n-//                 setLoading(false);\r\n-//             })\r\n-//             .catch(err => {\r\n-//                 setError(err);\r\n-//                 setLoading(false);\r\n-//             })\r\n-//     }, []);\r\n-\r\n-\r\n-// const addPost=()=>{\r\n-\r\n-// }\r\n-\r\n-//     if (loading) return <p>Loading...</p>;\r\n-//     if (error) return <p>Error occured!</p>;\r\n-\r\n-//     return (\r\n-//         <div className=\"container\">\r\n-//             <form onSubmit={addPost}>\r\n-//                 <input type=\"text\"\r\n-//                 placeholder=\"Enter title\" value={form.title}></input>\r\n-//             </form>\r\n-//             <div className=\"row\" style={{ gap: \"20px\" }}>\r\n-//                 {data.map((post) => (\r\n-//                     <div className=\"card\" style={{ width: '20rem' }}>\r\n-//                         <div className=\"card-body\">\r\n-//                             <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-//                                 <div className=\"card-title\">{post.id} {post.title}</div>\r\n-//                                 <p>{post.body}</p>\r\n-//                             </div>\r\n-//                         </div>\r\n-//                     </div>\r\n-//                 ))}\r\n-//             </div>\r\n-//         </div>\r\n-//     );\r\n-// };\r\n-\r\n-import React, { useEffect, useState } from \"react\";\r\n-import \"../App.css\"\r\n-\r\n-export default function Posts() {\r\n-    const [posts, setPosts] = useState([]);\r\n-    const [page, setPage] = useState(1);\r\n-    const postsPerPage = 10;\r\n-    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n-    const [editId, setEditId] = useState(null);\r\n-    const [showForm, setShowForm] = useState(false);\r\n-\r\n-    useEffect(() => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-            .then(res => res.json())\r\n-            .then(data => setPosts(data));\r\n-    }, []);\r\n-\r\n-    // Add or Update Post\r\n-    const handleSubmit = (e) => {\r\n-        e.preventDefault();\r\n-        if (editId) {\r\n-            // PUT - update\r\n-            const updated = posts.map(p =>\r\n-                p.id === editId ? { ...p, title: form.title, body: form.body } : p\r\n-            );\r\n-            setPosts(updated);\r\n-            setEditId(null);\r\n-        } else {\r\n-            // POST - add\r\n-            const newId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) + 1 : 1;\r\n-            const newPost = { id: newId, title: form.title, body: form.body };\r\n-            setPosts([...posts, newPost]);\r\n-            const lastPage = Math.ceil((posts.length + 1) / postsPerPage);\r\n-            setPage(lastPage);\r\n-        }\r\n-        setForm({ title: \"\", body: \"\" });\r\n-    };\r\n-\r\n-    // DELETE\r\n-    const deletePost = (id) => {\r\n-        const updated = posts.filter(p => p.id !== id);\r\n-        setPosts(updated);\r\n-        const lastPage = Math.max(1, Math.ceil(updated.length / postsPerPage));\r\n-        if (page > lastPage) setPage(lastPage);\r\n-    };\r\n-\r\n-    // EDIT - populate form\r\n-    const editPost = (post) => {\r\n-        setForm({ title: post.title, body: post.body });\r\n-        setEditId(post.id);\r\n-    };\r\n-\r\n-    // Pagination\r\n-    const indexOfLastPost = page * postsPerPage;\r\n-    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n-    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n-\r\n-    return (\r\n-        <div className=\"container\">\r\n-            <div className='d-flex justify-content-center align-items-center mt-5'>\r\n-                <button className='btn btn-primary' onClick={() => setShowForm(!showForm)}>\r\n-                    {showForm ? 'Hide Form' : 'Show Form'}\r\n-                </button>\r\n-            </div>\r\n-\r\n-            {/* Form */}\r\n-            {showForm &&\r\n-            <form onSubmit={handleSubmit} style={{ marginBottom: \"20px\" }}>\r\n-                <input\r\n-                    type=\"text\"\r\n-                    placeholder=\"Title\"\r\n-                    value={form.title}\r\n-                    onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n-                    required\r\n-                />\r\n-                <input\r\n-                    type=\"text\"\r\n-                    placeholder=\"Body\"\r\n-                    value={form.body}\r\n-                    onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n-                    required\r\n-                />\r\n-                <button type=\"submit\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n-            </form>}\r\n-\r\n-            {/* Cards */}\r\n-            <div className=\"row\">\r\n-                {currentPosts.map((post, i) => (\r\n-                    <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\", width: '20rem' }}>\r\n-                        <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n-                        <p>{post.body}</p>\r\n-                        <div className=\"d-flex flex-row\">\r\n-                        <button onClick={() => editPost(post)} className=\"btn btn-warning\">Edit</button>\r\n-                        <button onClick={() => deletePost(post.id)} className=\"btn btn-danger\">Delete</button></div>\r\n-                    </div>\r\n-                ))}\r\n-            </div>\r\n-            {/* Pagination */}\r\n-            <div>\r\n-                {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n-                    <button\r\n-                        key={idx}\r\n-                        onClick={() => setPage(idx + 1)}\r\n-                        style={{\r\n-                            margin: \"5px\",\r\n-                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n-                            color:page===idx+1?\"white\":\"black\",\r\n-                            border:\"none\",\r\n-                            borderRadius:\"8px\",\r\n-                        }}\r\n-                    >\r\n-                        {idx + 1}\r\n-                    </button>\r\n-                ))}\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-}\r\n"
                },
                {
                    "date": 1757073719804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,182 @@\n+// import React, { useState, useEffect } from \"react\";\r\n+// import { Card } from \"react-bootstrap\";\r\n+\r\n+\r\n+//     export default function ApiCRUD() {\r\n+//     const [data, setData] = useState([]);\r\n+//     const [error, setError] = useState(null);\r\n+//     const [loading, setLoading] = useState(true);\r\n+//     const [showForm, setShowForm] = useState(false);\r\n+//     const [submission, setSubmissions] = useState({ title: \"\", body: \"\" });\r\n+//     const itemPerPage = 10;\r\n+//     let totalPages = 10;\r\n+\r\n+//     const handleFormSubmit = (data) => {\r\n+//         setSubmissions = (prev => [...prev, data]);\r\n+//         setShowForm(false);\r\n+//     }\r\n+\r\n+\r\n+//     useEffect(() => {\r\n+//         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+//             .then(res => res.json())\r\n+//             .then((data) => {\r\n+//                 setData(data);\r\n+//                 setLoading(false);\r\n+//             })\r\n+//             .catch(err => {\r\n+//                 setError(err);\r\n+//                 setLoading(false);\r\n+//             })\r\n+//     }, []);\r\n+\r\n+\r\n+// const addPost=()=>{\r\n+\r\n+// }\r\n+\r\n+//     if (loading) return <p>Loading...</p>;\r\n+//     if (error) return <p>Error occured!</p>;\r\n+\r\n+//     return (\r\n+//         <div className=\"container\">\r\n+//             <form onSubmit={addPost}>\r\n+//                 <input type=\"text\"\r\n+//                 placeholder=\"Enter title\" value={form.title}></input>\r\n+//             </form>\r\n+//             <div className=\"row\" style={{ gap: \"20px\" }}>\r\n+//                 {data.map((post) => (\r\n+//                     <div className=\"card\" style={{ width: '20rem' }}>\r\n+//                         <div className=\"card-body\">\r\n+//                             <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n+//                                 <div className=\"card-title\">{post.id} {post.title}</div>\r\n+//                                 <p>{post.body}</p>\r\n+//                             </div>\r\n+//                         </div>\r\n+//                     </div>\r\n+//                 ))}\r\n+//             </div>\r\n+//         </div>\r\n+//     );\r\n+// };\r\n+\r\n+import React, { useEffect, useState } from \"react\";\r\n+import \"../App.css\"\r\n+\r\n+export default function Posts() {\r\n+    const [posts, setPosts] = useState([]);\r\n+    const [page, setPage] = useState(1);\r\n+    const postsPerPage = 10;\r\n+    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n+    const [editId, setEditId] = useState(null);\r\n+    const [showForm, setShowForm] = useState(false);\r\n+\r\n+    useEffect(() => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+            .then(res => res.json())\r\n+            .then(data => setPosts(data));\r\n+    }, []);\r\n+\r\n+    // Add or Update Post\r\n+    const handleSubmit = (e) => {\r\n+        e.preventDefault();\r\n+        if (editId) {\r\n+            // PUT - update\r\n+            const updated = posts.map(p =>\r\n+                p.id === editId ? { ...p, title: form.title, body: form.body } : p\r\n+            );\r\n+            setPosts(updated);\r\n+            setEditId(null);\r\n+        } else {\r\n+            // POST - add\r\n+            const newId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) + 1 : 1;\r\n+            const newPost = { id: newId, title: form.title, body: form.body };\r\n+            setPosts([...posts, newPost]);\r\n+            const lastPage = Math.ceil((posts.length + 1) / postsPerPage);\r\n+            setPage(lastPage);\r\n+        }\r\n+        setForm({ title: \"\", body: \"\" });\r\n+    };\r\n+\r\n+    // DELETE\r\n+    const deletePost = (id) => {\r\n+        const updated = posts.filter(p => p.id !== id);\r\n+        setPosts(updated);\r\n+        const lastPage = Math.max(1, Math.ceil(updated.length / postsPerPage));\r\n+        if (page > lastPage) setPage(lastPage);\r\n+    };\r\n+\r\n+    // EDIT - populate form\r\n+    const editPost = (post) => {\r\n+        setForm({ title: post.title, body: post.body });\r\n+        setEditId(post.id);\r\n+        setShowForm(true);\r\n+    };\r\n+\r\n+    // Pagination\r\n+    const indexOfLastPost = page * postsPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n+    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n+\r\n+    return (\r\n+        <div className=\"container\">\r\n+            <div className='d-flex justify-content-center align-items-center mt-5'>\r\n+                <button className='btn btn-primary' onClick={() => setShowForm(!showForm)}>\r\n+                    {showForm ? 'Hide Form' : 'Show Form'}\r\n+                </button>\r\n+            </div>\r\n+\r\n+            {/* Form */}\r\n+            {showForm &&\r\n+            <form onSubmit={handleSubmit} style={{ marginBottom: \"20px\" }}>\r\n+                <input\r\n+                    type=\"text\"\r\n+                    placeholder=\"Title\"\r\n+                    value={form.title}\r\n+                    onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n+                    required\r\n+                />\r\n+                <input\r\n+                    type=\"text\"\r\n+                    placeholder=\"Body\"\r\n+                    value={form.body}\r\n+                    onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n+                    required\r\n+                />\r\n+                <button type=\"submit\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n+            </form>}\r\n+\r\n+            {/* Cards */}\r\n+            <div className=\"row\">\r\n+                {currentPosts.map((post, i) => (\r\n+                    <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\", width: '20rem' }}>\r\n+                        <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n+                        <p>{post.body}</p>\r\n+                        <div className=\"d-flex flex-row\">\r\n+                        <button onClick={() => editPost(post)} className=\"btn btn-warning\">Edit</button>\r\n+                        <button onClick={() => deletePost(post.id)} className=\"btn btn-danger\">Delete</button></div>\r\n+                    </div>\r\n+                ))}\r\n+            </div>\r\n+            {/* Pagination */}\r\n+            <div>\r\n+                {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n+                    <button\r\n+                        key={idx}\r\n+                        onClick={() => setPage(idx + 1)}\r\n+                        style={{\r\n+                            margin: \"5px\",\r\n+                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n+                            color:page===idx+1?\"white\":\"black\",\r\n+                            border:\"none\",\r\n+                            borderRadius:\"8px\",\r\n+                            padding:\"15px\"\r\n+                        }}\r\n+                    >\r\n+                        {idx + 1}\r\n+                    </button>\r\n+                ))}\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+}\r\n"
                },
                {
                    "date": 1757073767819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,8 +95,9 @@\n             const lastPage = Math.ceil((posts.length + 1) / postsPerPage);\r\n             setPage(lastPage);\r\n         }\r\n         setForm({ title: \"\", body: \"\" });\r\n+        setShowForm(false);\r\n     };\r\n \r\n     // DELETE\r\n     const deletePost = (id) => {\r\n@@ -179,186 +180,4 @@\n             </div>\r\n         </div>\r\n     );\r\n }\r\n-// import React, { useState, useEffect } from \"react\";\r\n-// import { Card } from \"react-bootstrap\";\r\n-\r\n-\r\n-//     export default function ApiCRUD() {\r\n-//     const [data, setData] = useState([]);\r\n-//     const [error, setError] = useState(null);\r\n-//     const [loading, setLoading] = useState(true);\r\n-//     const [showForm, setShowForm] = useState(false);\r\n-//     const [submission, setSubmissions] = useState({ title: \"\", body: \"\" });\r\n-//     const itemPerPage = 10;\r\n-//     let totalPages = 10;\r\n-\r\n-//     const handleFormSubmit = (data) => {\r\n-//         setSubmissions = (prev => [...prev, data]);\r\n-//         setShowForm(false);\r\n-//     }\r\n-\r\n-\r\n-//     useEffect(() => {\r\n-//         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-//             .then(res => res.json())\r\n-//             .then((data) => {\r\n-//                 setData(data);\r\n-//                 setLoading(false);\r\n-//             })\r\n-//             .catch(err => {\r\n-//                 setError(err);\r\n-//                 setLoading(false);\r\n-//             })\r\n-//     }, []);\r\n-\r\n-\r\n-// const addPost=()=>{\r\n-\r\n-// }\r\n-\r\n-//     if (loading) return <p>Loading...</p>;\r\n-//     if (error) return <p>Error occured!</p>;\r\n-\r\n-//     return (\r\n-//         <div className=\"container\">\r\n-//             <form onSubmit={addPost}>\r\n-//                 <input type=\"text\"\r\n-//                 placeholder=\"Enter title\" value={form.title}></input>\r\n-//             </form>\r\n-//             <div className=\"row\" style={{ gap: \"20px\" }}>\r\n-//                 {data.map((post) => (\r\n-//                     <div className=\"card\" style={{ width: '20rem' }}>\r\n-//                         <div className=\"card-body\">\r\n-//                             <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-//                                 <div className=\"card-title\">{post.id} {post.title}</div>\r\n-//                                 <p>{post.body}</p>\r\n-//                             </div>\r\n-//                         </div>\r\n-//                     </div>\r\n-//                 ))}\r\n-//             </div>\r\n-//         </div>\r\n-//     );\r\n-// };\r\n-\r\n-import React, { useEffect, useState } from \"react\";\r\n-import \"../App.css\"\r\n-\r\n-export default function Posts() {\r\n-    const [posts, setPosts] = useState([]);\r\n-    const [page, setPage] = useState(1);\r\n-    const postsPerPage = 10;\r\n-    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n-    const [editId, setEditId] = useState(null);\r\n-    const [showForm, setShowForm] = useState(false);\r\n-\r\n-    useEffect(() => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-            .then(res => res.json())\r\n-            .then(data => setPosts(data));\r\n-    }, []);\r\n-\r\n-    // Add or Update Post\r\n-    const handleSubmit = (e) => {\r\n-        e.preventDefault();\r\n-        if (editId) {\r\n-            // PUT - update\r\n-            const updated = posts.map(p =>\r\n-                p.id === editId ? { ...p, title: form.title, body: form.body } : p\r\n-            );\r\n-            setPosts(updated);\r\n-            setEditId(null);\r\n-        } else {\r\n-            // POST - add\r\n-            const newId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) + 1 : 1;\r\n-            const newPost = { id: newId, title: form.title, body: form.body };\r\n-            setPosts([...posts, newPost]);\r\n-            const lastPage = Math.ceil((posts.length + 1) / postsPerPage);\r\n-            setPage(lastPage);\r\n-        }\r\n-        setForm({ title: \"\", body: \"\" });\r\n-    };\r\n-\r\n-    // DELETE\r\n-    const deletePost = (id) => {\r\n-        const updated = posts.filter(p => p.id !== id);\r\n-        setPosts(updated);\r\n-        const lastPage = Math.max(1, Math.ceil(updated.length / postsPerPage));\r\n-        if (page > lastPage) setPage(lastPage);\r\n-    };\r\n-\r\n-    // EDIT - populate form\r\n-    const editPost = (post) => {\r\n-        setForm({ title: post.title, body: post.body });\r\n-        setEditId(post.id);\r\n-        showForm(true)\r\n-    };\r\n-\r\n-    // Pagination\r\n-    const indexOfLastPost = page * postsPerPage;\r\n-    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n-    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n-\r\n-    return (\r\n-        <div className=\"container\">\r\n-            <div className='d-flex justify-content-center align-items-center mt-5'>\r\n-                <button className='btn btn-primary' onClick={() => setShowForm(!showForm)}>\r\n-                    {showForm ? 'Hide Form' : 'Show Form'}\r\n-                </button>\r\n-            </div>\r\n-\r\n-            {/* Form */}\r\n-            {showForm &&\r\n-            <form onSubmit={handleSubmit} style={{ marginBottom: \"20px\" }}>\r\n-                <input\r\n-                    type=\"text\"\r\n-                    placeholder=\"Title\"\r\n-                    value={form.title}\r\n-                    onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n-                    required\r\n-                />\r\n-                <input\r\n-                    type=\"text\"\r\n-                    placeholder=\"Body\"\r\n-                    value={form.body}\r\n-                    onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n-                    required\r\n-                />\r\n-                <button type=\"submit\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n-            </form>}\r\n-\r\n-            {/* Cards */}\r\n-            <div className=\"row\">\r\n-                {currentPosts.map((post, i) => (\r\n-                    <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\", width: '20rem' }}>\r\n-                        <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n-                        <p>{post.body}</p>\r\n-                        <div className=\"d-flex flex-row\">\r\n-                        <button onClick={() => editPost(post)} className=\"btn btn-warning\">Edit</button>\r\n-                        <button onClick={() => deletePost(post.id)} className=\"btn btn-danger\">Delete</button></div>\r\n-                    </div>\r\n-                ))}\r\n-            </div>\r\n-            {/* Pagination */}\r\n-            <div>\r\n-                {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n-                    <button\r\n-                        key={idx}\r\n-                        onClick={() => setPage(idx + 1)}\r\n-                        style={{\r\n-                            margin: \"5px\",\r\n-                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n-                            color:page===idx+1?\"white\":\"black\",\r\n-                            border:\"none\",\r\n-                            borderRadius:\"8px\",\r\n-                            padding:\"15px\"\r\n-                        }}\r\n-                    >\r\n-                        {idx + 1}\r\n-                    </button>\r\n-                ))}\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-}\r\n"
                },
                {
                    "date": 1757074077032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -154,9 +154,9 @@\n                         <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n                         <p>{post.body}</p>\r\n                         <div className=\"d-flex flex-row\">\r\n                         <button onClick={() => editPost(post)} className=\"btn btn-warning\">Edit</button>\r\n-                        <button onClick={() => deletePost(post.id)} className=\"btn btn-danger\">Delete</button></div>\r\n+                        <button onClick={() => deletePost(post.id)} className=\"btn btn-danger m-2\">Delete</button></div>\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n             {/* Pagination */}\r\n"
                },
                {
                    "date": 1757074086547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -154,9 +154,9 @@\n                         <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n                         <p>{post.body}</p>\r\n                         <div className=\"d-flex flex-row\">\r\n                         <button onClick={() => editPost(post)} className=\"btn btn-warning\">Edit</button>\r\n-                        <button onClick={() => deletePost(post.id)} className=\"btn btn-danger m-2\">Delete</button></div>\r\n+                        <button onClick={() => deletePost(post.id)} className=\"btn btn-danger ml-2\">Delete</button></div>\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n             {/* Pagination */}\r\n"
                },
                {
                    "date": 1757074138828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -150,9 +150,9 @@\n             {/* Cards */}\r\n             <div className=\"row\">\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\", width: '20rem' }}>\r\n-                        <h5>{indexOfFirstPost + i + 1}th Card - {post.title}</h5>\r\n+                        <h5>{indexOfFirstPost + i + 1} - {post.title}</h5>\r\n                         <p>{post.body}</p>\r\n                         <div className=\"d-flex flex-row\">\r\n                         <button onClick={() => editPost(post)} className=\"btn btn-warning\">Edit</button>\r\n                         <button onClick={() => deletePost(post.id)} className=\"btn btn-danger ml-2\">Delete</button></div>\r\n"
                },
                {
                    "date": 1757074154604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -150,9 +150,9 @@\n             {/* Cards */}\r\n             <div className=\"row\">\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\", width: '20rem' }}>\r\n-                        <h5>{indexOfFirstPost + i + 1} - {post.title}</h5>\r\n+                        <h5>{indexOfFirstPost + i + 1} \")\" {post.title}</h5>\r\n                         <p>{post.body}</p>\r\n                         <div className=\"d-flex flex-row\">\r\n                         <button onClick={() => editPost(post)} className=\"btn btn-warning\">Edit</button>\r\n                         <button onClick={() => deletePost(post.id)} className=\"btn btn-danger ml-2\">Delete</button></div>\r\n"
                },
                {
                    "date": 1757074164787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -150,9 +150,9 @@\n             {/* Cards */}\r\n             <div className=\"row\">\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\", width: '20rem' }}>\r\n-                        <h5>{indexOfFirstPost + i + 1} \")\" {post.title}</h5>\r\n+                        <h5>{indexOfFirstPost + i + 1} {post.title}</h5>\r\n                         <p>{post.body}</p>\r\n                         <div className=\"d-flex flex-row\">\r\n                         <button onClick={() => editPost(post)} className=\"btn btn-warning\">Edit</button>\r\n                         <button onClick={() => deletePost(post.id)} className=\"btn btn-danger ml-2\">Delete</button></div>\r\n"
                },
                {
                    "date": 1757074218977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n                     value={form.body}\r\n                     onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n                     required\r\n                 />\r\n-                <button type=\"submit\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n+                <button type=\"submit\" className=\"btn btn-success\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n             </form>}\r\n \r\n             {/* Cards */}\r\n             <div className=\"row\">\r\n"
                },
                {
                    "date": 1757074241527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,8 +137,9 @@\n                     onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n                     required\r\n                 />\r\n                 <input\r\n+                className=\"ml-20\"\r\n                     type=\"text\"\r\n                     placeholder=\"Body\"\r\n                     value={form.body}\r\n                     onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n"
                },
                {
                    "date": 1757074259839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -144,9 +144,9 @@\n                     value={form.body}\r\n                     onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n                     required\r\n                 />\r\n-                <button type=\"submit\" className=\"btn btn-success\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n+                <button type=\"submit\" className=\"btn btn-success ml-20\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n             </form>}\r\n \r\n             {/* Cards */}\r\n             <div className=\"row\">\r\n"
                },
                {
                    "date": 1757074277731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,16 +137,16 @@\n                     onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n                     required\r\n                 />\r\n                 <input\r\n-                className=\"ml-20\"\r\n+                className=\"ml-2\"\r\n                     type=\"text\"\r\n                     placeholder=\"Body\"\r\n                     value={form.body}\r\n                     onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n                     required\r\n                 />\r\n-                <button type=\"submit\" className=\"btn btn-success ml-20\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n+                <button type=\"submit\" className=\"btn btn-success ml-2\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n             </form>}\r\n \r\n             {/* Cards */}\r\n             <div className=\"row\">\r\n"
                },
                {
                    "date": 1757074405118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,8 +161,9 @@\n                 ))}\r\n             </div>\r\n             {/* Pagination */}\r\n             <div>\r\n+                <button>Prev</button>\r\n                 {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n                     <button\r\n                         key={idx}\r\n                         onClick={() => setPage(idx + 1)}\r\n"
                },
                {
                    "date": 1757074458509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,13 +173,13 @@\n                             color:page===idx+1?\"white\":\"black\",\r\n                             border:\"none\",\r\n                             borderRadius:\"8px\",\r\n                             padding:\"15px\"\r\n-                        }}\r\n-                    >\r\n+                        }}>\r\n                         {idx + 1}\r\n                     </button>\r\n                 ))}\r\n+                 <button>Next</button>\r\n             </div>\r\n         </div>\r\n     );\r\n }\r\n"
                },
                {
                    "date": 1757074536772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,58 +128,58 @@\n             </div>\r\n \r\n             {/* Form */}\r\n             {showForm &&\r\n-            <form onSubmit={handleSubmit} style={{ marginBottom: \"20px\" }}>\r\n-                <input\r\n-                    type=\"text\"\r\n-                    placeholder=\"Title\"\r\n-                    value={form.title}\r\n-                    onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n-                    required\r\n-                />\r\n-                <input\r\n-                className=\"ml-2\"\r\n-                    type=\"text\"\r\n-                    placeholder=\"Body\"\r\n-                    value={form.body}\r\n-                    onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n-                    required\r\n-                />\r\n-                <button type=\"submit\" className=\"btn btn-success ml-2\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n-            </form>}\r\n+                <form onSubmit={handleSubmit} style={{ marginBottom: \"20px\" }}>\r\n+                    <input\r\n+                        type=\"text\"\r\n+                        placeholder=\"Title\"\r\n+                        value={form.title}\r\n+                        onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n+                        required\r\n+                    />\r\n+                    <input\r\n+                        className=\"ml-2\"\r\n+                        type=\"text\"\r\n+                        placeholder=\"Body\"\r\n+                        value={form.body}\r\n+                        onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n+                        required\r\n+                    />\r\n+                    <button type=\"submit\" className=\"btn btn-success ml-2\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n+                </form>}\r\n \r\n             {/* Cards */}\r\n             <div className=\"row\">\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\", width: '20rem' }}>\r\n                         <h5>{indexOfFirstPost + i + 1} {post.title}</h5>\r\n                         <p>{post.body}</p>\r\n                         <div className=\"d-flex flex-row\">\r\n-                        <button onClick={() => editPost(post)} className=\"btn btn-warning\">Edit</button>\r\n-                        <button onClick={() => deletePost(post.id)} className=\"btn btn-danger ml-2\">Delete</button></div>\r\n+                            <button onClick={() => editPost(post)} className=\"btn btn-warning\">Edit</button>\r\n+                            <button onClick={() => deletePost(post.id)} className=\"btn btn-danger ml-2\">Delete</button></div>\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n             {/* Pagination */}\r\n             <div>\r\n-                <button>Prev</button>\r\n+                <button onClick={setPage() => (prev => prev - 1)} disabled={setPage === 1}>Prev</button>\r\n                 {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n                     <button\r\n                         key={idx}\r\n                         onClick={() => setPage(idx + 1)}\r\n                         style={{\r\n                             margin: \"5px\",\r\n                             background: page === idx + 1 ? \"blue\" : \"white\",\r\n-                            color:page===idx+1?\"white\":\"black\",\r\n-                            border:\"none\",\r\n-                            borderRadius:\"8px\",\r\n-                            padding:\"15px\"\r\n+                            color: page === idx + 1 ? \"white\" : \"black\",\r\n+                            border: \"none\",\r\n+                            borderRadius: \"8px\",\r\n+                            padding: \"15px\"\r\n                         }}>\r\n                         {idx + 1}\r\n                     </button>\r\n                 ))}\r\n-                 <button>Next</button>\r\n+                <button>Next</button>\r\n             </div>\r\n         </div>\r\n     );\r\n }\r\n"
                },
                {
                    "date": 1757074562571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,9 +161,9 @@\n                 ))}\r\n             </div>\r\n             {/* Pagination */}\r\n             <div>\r\n-                <button onClick={setPage() => (prev => prev - 1)} disabled={setPage === 1}>Prev</button>\r\n+                <button onClick={setPage => (prev => prev - 1)} disabled={page === 1}>Prev</button>\r\n                 {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n                     <button\r\n                         key={idx}\r\n                         onClick={() => setPage(idx + 1)}\r\n"
                },
                {
                    "date": 1757074621648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,9 +177,9 @@\n                         }}>\r\n                         {idx + 1}\r\n                     </button>\r\n                 ))}\r\n-                <button>Next</button>\r\n+                <button onClick={setPage => (prev => prev +1)} disabled={page ===  Math.ceil(posts.length / postsPerPage)}>Next</button>\r\n             </div>\r\n         </div>\r\n     );\r\n }\r\n"
                },
                {
                    "date": 1757074708516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,9 +177,9 @@\n                         }}>\r\n                         {idx + 1}\r\n                     </button>\r\n                 ))}\r\n-                <button onClick={setPage => (prev => prev +1)} disabled={page ===  Math.ceil(posts.length / postsPerPage)}>Next</button>\r\n+                <button onClick={setPage(prev => prev +1)} disabled={page ===  Math.ceil(posts.length / postsPerPage)}>Next</button>\r\n             </div>\r\n         </div>\r\n     );\r\n }\r\n"
                },
                {
                    "date": 1757074726064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,9 +177,9 @@\n                         }}>\r\n                         {idx + 1}\r\n                     </button>\r\n                 ))}\r\n-                <button onClick={setPage(prev => prev +1)} disabled={page ===  Math.ceil(posts.length / postsPerPage)}>Next</button>\r\n+                <button onClick={()=>{setPage(prev => prev +1)}} disabled={page ===  Math.ceil(posts.length / postsPerPage)}>Next</button>\r\n             </div>\r\n         </div>\r\n     );\r\n }\r\n"
                },
                {
                    "date": 1757074753583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,9 +161,9 @@\n                 ))}\r\n             </div>\r\n             {/* Pagination */}\r\n             <div>\r\n-                <button onClick={setPage => (prev => prev - 1)} disabled={page === 1}>Prev</button>\r\n+                <button onClick={() => {setPage(prev => prev - 1)}} disabled={page === 1}>Prev</button>\r\n                 {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n                     <button\r\n                         key={idx}\r\n                         onClick={() => setPage(idx + 1)}\r\n"
                },
                {
                    "date": 1757074940234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,8 @@\n     // Add or Update Post\r\n     const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n         if (editId) {\r\n-            // PUT - update\r\n             const updated = posts.map(p =>\r\n                 p.id === editId ? { ...p, title: form.title, body: form.body } : p\r\n             );\r\n             setPosts(updated);\r\n"
                },
                {
                    "date": 1757075552436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,9 +169,9 @@\n                         style={{\r\n                             margin: \"5px\",\r\n                             background: page === idx + 1 ? \"blue\" : \"white\",\r\n                             color: page === idx + 1 ? \"white\" : \"black\",\r\n-                            border: \"none\",\r\n+                            border: \"1px solid black\",\r\n                             borderRadius: \"8px\",\r\n                             padding: \"15px\"\r\n                         }}>\r\n                         {idx + 1}\r\n"
                },
                {
                    "date": 1757075559899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,9 +171,9 @@\n                             background: page === idx + 1 ? \"blue\" : \"white\",\r\n                             color: page === idx + 1 ? \"white\" : \"black\",\r\n                             border: \"1px solid black\",\r\n                             borderRadius: \"8px\",\r\n-                            padding: \"15px\"\r\n+                            padding: \"10px\"\r\n                         }}>\r\n                         {idx + 1}\r\n                     </button>\r\n                 ))}\r\n"
                },
                {
                    "date": 1757075596100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,9 +171,9 @@\n                             background: page === idx + 1 ? \"blue\" : \"white\",\r\n                             color: page === idx + 1 ? \"white\" : \"black\",\r\n                             border: \"1px solid black\",\r\n                             borderRadius: \"8px\",\r\n-                            padding: \"10px\"\r\n+                            padding: \"10px\",\r\n                         }}>\r\n                         {idx + 1}\r\n                     </button>\r\n                 ))}\r\n"
                },
                {
                    "date": 1757308531116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,184 +1,184 @@\n-// import React, { useState, useEffect } from \"react\";\r\n-// import { Card } from \"react-bootstrap\";\r\n+// // import React, { useState, useEffect } from \"react\";\r\n+// // import { Card } from \"react-bootstrap\";\r\n \r\n \r\n-//     export default function ApiCRUD() {\r\n-//     const [data, setData] = useState([]);\r\n-//     const [error, setError] = useState(null);\r\n-//     const [loading, setLoading] = useState(true);\r\n-//     const [showForm, setShowForm] = useState(false);\r\n-//     const [submission, setSubmissions] = useState({ title: \"\", body: \"\" });\r\n-//     const itemPerPage = 10;\r\n-//     let totalPages = 10;\r\n+// //     export default function ApiCRUD() {\r\n+// //     const [data, setData] = useState([]);\r\n+// //     const [error, setError] = useState(null);\r\n+// //     const [loading, setLoading] = useState(true);\r\n+// //     const [showForm, setShowForm] = useState(false);\r\n+// //     const [submission, setSubmissions] = useState({ title: \"\", body: \"\" });\r\n+// //     const itemPerPage = 10;\r\n+// //     let totalPages = 10;\r\n \r\n-//     const handleFormSubmit = (data) => {\r\n-//         setSubmissions = (prev => [...prev, data]);\r\n-//         setShowForm(false);\r\n-//     }\r\n+// //     const handleFormSubmit = (data) => {\r\n+// //         setSubmissions = (prev => [...prev, data]);\r\n+// //         setShowForm(false);\r\n+// //     }\r\n \r\n \r\n+// //     useEffect(() => {\r\n+// //         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+// //             .then(res => res.json())\r\n+// //             .then((data) => {\r\n+// //                 setData(data);\r\n+// //                 setLoading(false);\r\n+// //             })\r\n+// //             .catch(err => {\r\n+// //                 setError(err);\r\n+// //                 setLoading(false);\r\n+// //             })\r\n+// //     }, []);\r\n+\r\n+\r\n+// // const addPost=()=>{\r\n+\r\n+// // }\r\n+\r\n+// //     if (loading) return <p>Loading...</p>;\r\n+// //     if (error) return <p>Error occured!</p>;\r\n+\r\n+// //     return (\r\n+// //         <div className=\"container\">\r\n+// //             <form onSubmit={addPost}>\r\n+// //                 <input type=\"text\"\r\n+// //                 placeholder=\"Enter title\" value={form.title}></input>\r\n+// //             </form>\r\n+// //             <div className=\"row\" style={{ gap: \"20px\" }}>\r\n+// //                 {data.map((post) => (\r\n+// //                     <div className=\"card\" style={{ width: '20rem' }}>\r\n+// //                         <div className=\"card-body\">\r\n+// //                             <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n+// //                                 <div className=\"card-title\">{post.id} {post.title}</div>\r\n+// //                                 <p>{post.body}</p>\r\n+// //                             </div>\r\n+// //                         </div>\r\n+// //                     </div>\r\n+// //                 ))}\r\n+// //             </div>\r\n+// //         </div>\r\n+// //     );\r\n+// // };\r\n+\r\n+// import React, { useEffect, useState } from \"react\";\r\n+// import \"../App.css\"\r\n+\r\n+// export default function Posts() {\r\n+//     const [posts, setPosts] = useState([]);\r\n+//     const [page, setPage] = useState(1);\r\n+//     const postsPerPage = 10;\r\n+//     const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n+//     const [editId, setEditId] = useState(null);\r\n+//     const [showForm, setShowForm] = useState(false);\r\n+\r\n //     useEffect(() => {\r\n //         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n //             .then(res => res.json())\r\n-//             .then((data) => {\r\n-//                 setData(data);\r\n-//                 setLoading(false);\r\n-//             })\r\n-//             .catch(err => {\r\n-//                 setError(err);\r\n-//                 setLoading(false);\r\n-//             })\r\n+//             .then(data => setPosts(data));\r\n //     }, []);\r\n \r\n+//     // Add or Update Post\r\n+//     const handleSubmit = (e) => {\r\n+//         e.preventDefault();\r\n+//         if (editId) {\r\n+//             const updated = posts.map(p =>\r\n+//                 p.id === editId ? { ...p, title: form.title, body: form.body } : p\r\n+//             );\r\n+//             setPosts(updated);\r\n+//             setEditId(null);\r\n+//         } else {\r\n+//             // POST - add\r\n+//             const newId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) + 1 : 1;\r\n+//             const newPost = { id: newId, title: form.title, body: form.body };\r\n+//             setPosts([...posts, newPost]);\r\n+//             const lastPage = Math.ceil((posts.length + 1) / postsPerPage);\r\n+//             setPage(lastPage);\r\n+//         }\r\n+//         setForm({ title: \"\", body: \"\" });\r\n+//         setShowForm(false);\r\n+//     };\r\n \r\n-// const addPost=()=>{\r\n+//     // DELETE\r\n+//     const deletePost = (id) => {\r\n+//         const updated = posts.filter(p => p.id !== id);\r\n+//         setPosts(updated);\r\n+//         const lastPage = Math.max(1, Math.ceil(updated.length / postsPerPage));\r\n+//         if (page > lastPage) setPage(lastPage);\r\n+//     };\r\n \r\n-// }\r\n+//     // EDIT - populate form\r\n+//     const editPost = (post) => {\r\n+//         setForm({ title: post.title, body: post.body });\r\n+//         setEditId(post.id);\r\n+//         setShowForm(true);\r\n+//     };\r\n \r\n-//     if (loading) return <p>Loading...</p>;\r\n-//     if (error) return <p>Error occured!</p>;\r\n+//     // Pagination\r\n+//     const indexOfLastPost = page * postsPerPage;\r\n+//     const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n+//     const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n \r\n //     return (\r\n //         <div className=\"container\">\r\n-//             <form onSubmit={addPost}>\r\n-//                 <input type=\"text\"\r\n-//                 placeholder=\"Enter title\" value={form.title}></input>\r\n-//             </form>\r\n-//             <div className=\"row\" style={{ gap: \"20px\" }}>\r\n-//                 {data.map((post) => (\r\n-//                     <div className=\"card\" style={{ width: '20rem' }}>\r\n-//                         <div className=\"card-body\">\r\n-//                             <div key={post.id} style={{ marginBottom: \"1rem\" }}>\r\n-//                                 <div className=\"card-title\">{post.id} {post.title}</div>\r\n-//                                 <p>{post.body}</p>\r\n-//                             </div>\r\n-//                         </div>\r\n+//             <div className='d-flex justify-content-center align-items-center mt-5'>\r\n+//                 <button className='btn btn-primary' onClick={() => setShowForm(!showForm)}>\r\n+//                     {showForm ? 'Hide Form' : 'Show Form'}\r\n+//                 </button>\r\n+//             </div>\r\n+\r\n+//             {/* Form */}\r\n+//             {showForm &&\r\n+//                 <form onSubmit={handleSubmit} style={{ marginBottom: \"20px\" }}>\r\n+//                     <input\r\n+//                         type=\"text\"\r\n+//                         placeholder=\"Title\"\r\n+//                         value={form.title}\r\n+//                         onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n+//                         required\r\n+//                     />\r\n+//                     <input\r\n+//                         className=\"ml-2\"\r\n+//                         type=\"text\"\r\n+//                         placeholder=\"Body\"\r\n+//                         value={form.body}\r\n+//                         onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n+//                         required\r\n+//                     />\r\n+//                     <button type=\"submit\" className=\"btn btn-success ml-2\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n+//                 </form>}\r\n+\r\n+//             {/* Cards */}\r\n+//             <div className=\"row\">\r\n+//                 {currentPosts.map((post, i) => (\r\n+//                     <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\", width: '20rem' }}>\r\n+//                         <h5>{indexOfFirstPost + i + 1} {post.title}</h5>\r\n+//                         <p>{post.body}</p>\r\n+//                         <div className=\"d-flex flex-row\">\r\n+//                             <button onClick={() => editPost(post)} className=\"btn btn-warning\">Edit</button>\r\n+//                             <button onClick={() => deletePost(post.id)} className=\"btn btn-danger ml-2\">Delete</button></div>\r\n //                     </div>\r\n //                 ))}\r\n //             </div>\r\n+//             {/* Pagination */}\r\n+//             <div>\r\n+//                 <button onClick={() => {setPage(prev => prev - 1)}} disabled={page === 1}>Prev</button>\r\n+//                 {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n+//                     <button\r\n+//                         key={idx}\r\n+//                         onClick={() => setPage(idx + 1)}\r\n+//                         style={{\r\n+//                             margin: \"5px\",\r\n+//                             background: page === idx + 1 ? \"blue\" : \"white\",\r\n+//                             color: page === idx + 1 ? \"white\" : \"black\",\r\n+//                             border: \"1px solid black\",\r\n+//                             borderRadius: \"8px\",\r\n+//                             padding: \"10px\",\r\n+//                         }}>\r\n+//                         {idx + 1}\r\n+//                     </button>\r\n+//                 ))}\r\n+//                 <button onClick={()=>{setPage(prev => prev +1)}} disabled={page ===  Math.ceil(posts.length / postsPerPage)}>Next</button>\r\n+//             </div>\r\n //         </div>\r\n //     );\r\n-// };\r\n-\r\n-import React, { useEffect, useState } from \"react\";\r\n-import \"../App.css\"\r\n-\r\n-export default function Posts() {\r\n-    const [posts, setPosts] = useState([]);\r\n-    const [page, setPage] = useState(1);\r\n-    const postsPerPage = 10;\r\n-    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n-    const [editId, setEditId] = useState(null);\r\n-    const [showForm, setShowForm] = useState(false);\r\n-\r\n-    useEffect(() => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-            .then(res => res.json())\r\n-            .then(data => setPosts(data));\r\n-    }, []);\r\n-\r\n-    // Add or Update Post\r\n-    const handleSubmit = (e) => {\r\n-        e.preventDefault();\r\n-        if (editId) {\r\n-            const updated = posts.map(p =>\r\n-                p.id === editId ? { ...p, title: form.title, body: form.body } : p\r\n-            );\r\n-            setPosts(updated);\r\n-            setEditId(null);\r\n-        } else {\r\n-            // POST - add\r\n-            const newId = posts.length > 0 ? Math.max(...posts.map(p => p.id)) + 1 : 1;\r\n-            const newPost = { id: newId, title: form.title, body: form.body };\r\n-            setPosts([...posts, newPost]);\r\n-            const lastPage = Math.ceil((posts.length + 1) / postsPerPage);\r\n-            setPage(lastPage);\r\n-        }\r\n-        setForm({ title: \"\", body: \"\" });\r\n-        setShowForm(false);\r\n-    };\r\n-\r\n-    // DELETE\r\n-    const deletePost = (id) => {\r\n-        const updated = posts.filter(p => p.id !== id);\r\n-        setPosts(updated);\r\n-        const lastPage = Math.max(1, Math.ceil(updated.length / postsPerPage));\r\n-        if (page > lastPage) setPage(lastPage);\r\n-    };\r\n-\r\n-    // EDIT - populate form\r\n-    const editPost = (post) => {\r\n-        setForm({ title: post.title, body: post.body });\r\n-        setEditId(post.id);\r\n-        setShowForm(true);\r\n-    };\r\n-\r\n-    // Pagination\r\n-    const indexOfLastPost = page * postsPerPage;\r\n-    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n-    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n-\r\n-    return (\r\n-        <div className=\"container\">\r\n-            <div className='d-flex justify-content-center align-items-center mt-5'>\r\n-                <button className='btn btn-primary' onClick={() => setShowForm(!showForm)}>\r\n-                    {showForm ? 'Hide Form' : 'Show Form'}\r\n-                </button>\r\n-            </div>\r\n-\r\n-            {/* Form */}\r\n-            {showForm &&\r\n-                <form onSubmit={handleSubmit} style={{ marginBottom: \"20px\" }}>\r\n-                    <input\r\n-                        type=\"text\"\r\n-                        placeholder=\"Title\"\r\n-                        value={form.title}\r\n-                        onChange={(e) => setForm({ ...form, title: e.target.value })}\r\n-                        required\r\n-                    />\r\n-                    <input\r\n-                        className=\"ml-2\"\r\n-                        type=\"text\"\r\n-                        placeholder=\"Body\"\r\n-                        value={form.body}\r\n-                        onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n-                        required\r\n-                    />\r\n-                    <button type=\"submit\" className=\"btn btn-success ml-2\">{editId ? \"Update Post\" : \"Add Post\"}</button>\r\n-                </form>}\r\n-\r\n-            {/* Cards */}\r\n-            <div className=\"row\">\r\n-                {currentPosts.map((post, i) => (\r\n-                    <div key={post.id} className=\"card\" style={{ margin: \"10px\", padding: \"10px\", width: '20rem' }}>\r\n-                        <h5>{indexOfFirstPost + i + 1} {post.title}</h5>\r\n-                        <p>{post.body}</p>\r\n-                        <div className=\"d-flex flex-row\">\r\n-                            <button onClick={() => editPost(post)} className=\"btn btn-warning\">Edit</button>\r\n-                            <button onClick={() => deletePost(post.id)} className=\"btn btn-danger ml-2\">Delete</button></div>\r\n-                    </div>\r\n-                ))}\r\n-            </div>\r\n-            {/* Pagination */}\r\n-            <div>\r\n-                <button onClick={() => {setPage(prev => prev - 1)}} disabled={page === 1}>Prev</button>\r\n-                {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n-                    <button\r\n-                        key={idx}\r\n-                        onClick={() => setPage(idx + 1)}\r\n-                        style={{\r\n-                            margin: \"5px\",\r\n-                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n-                            color: page === idx + 1 ? \"white\" : \"black\",\r\n-                            border: \"1px solid black\",\r\n-                            borderRadius: \"8px\",\r\n-                            padding: \"10px\",\r\n-                        }}>\r\n-                        {idx + 1}\r\n-                    </button>\r\n-                ))}\r\n-                <button onClick={()=>{setPage(prev => prev +1)}} disabled={page ===  Math.ceil(posts.length / postsPerPage)}>Next</button>\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-}\r\n+// }\r\n"
                }
            ],
            "date": 1756964381295,
            "name": "Commit-0",
            "content": ""
        }
    ]
}