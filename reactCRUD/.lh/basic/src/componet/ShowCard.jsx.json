{
    "sourceFile": "basic/src/componet/ShowCard.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 63,
            "patches": [
                {
                    "date": 1757330921140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757330928384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n   return (\r\n     <Card style={{ width: '18rem' }}>\r\n       <Card.Body>\r\n         <Card.Title>Card Title</Card.Title>\r\n-        <ht></ht>\r\n+        <hr></hr>\r\n         <Card.Text>\r\n           Some quick example text to build on the card title and make up the\r\n           bulk of the card's content.\r\n         </Card.Text>\r\n"
                },
                {
                    "date": 1757330981489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,37 @@\n import Card from 'react-bootstrap/Card';\r\n+import { useEffect } from 'react';\r\n \r\n function TextExample() {\r\n-  return (\r\n-    <Card style={{ width: '18rem' }}>\r\n-      <Card.Body>\r\n-        <Card.Title>Card Title</Card.Title>\r\n-        <hr></hr>\r\n-        <Card.Text>\r\n-          Some quick example text to build on the card title and make up the\r\n-          bulk of the card's content.\r\n-        </Card.Text>\r\n-        <Card.Link href=\"#\">Card Link</Card.Link>\r\n-        <Card.Link href=\"#\">Another Link</Card.Link>\r\n-      </Card.Body>\r\n-    </Card>\r\n-  );\r\n+    useEffect(() => {\r\n+        const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n+        if (Array.isArray(lcData) && lcData.length > 0) {\r\n+            setData(lcData);\r\n+        }\r\n+        else {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+                .then(res => res.json())\r\n+                .then(data => {\r\n+                    setData(data);\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n+                }\r\n+                )\r\n+        }\r\n+    }, []);\r\n+\r\n+    return (\r\n+        <Card style={{ width: '18rem' }}>\r\n+            <Card.Body>\r\n+                <Card.Title></Card.Title>\r\n+                <hr></hr>\r\n+                <Card.Text>\r\n+                    Some quick example text to build on the card title and make up the\r\n+                    bulk of the card's content.\r\n+                </Card.Text>\r\n+                <Card.Link href=\"#\">Card Link</Card.Link>\r\n+                <Card.Link href=\"#\">Another Link</Card.Link>\r\n+            </Card.Body>\r\n+        </Card>\r\n+    );\r\n }\r\n \r\n export default TextExample;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757331009791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,11 @@\n import Card from 'react-bootstrap/Card';\r\n-import { useEffect } from 'react';\r\n+import { useEffect, useState } from 'react';\r\n \r\n+\r\n+\r\n function TextExample() {\r\n+    const [data,setData]=useState([]);\r\n     useEffect(() => {\r\n         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n         if (Array.isArray(lcData) && lcData.length > 0) {\r\n             setData(lcData);\r\n"
                },
                {
                    "date": 1757331038586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { useEffect, useState } from 'react';\r\n \r\n \r\n \r\n-function TextExample() {\r\n+function CardOfInfo() {\r\n     const [data,setData]=useState([]);\r\n     useEffect(() => {\r\n         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n         if (Array.isArray(lcData) && lcData.length > 0) {\r\n@@ -36,5 +36,5 @@\n         </Card>\r\n     );\r\n }\r\n \r\n-export default TextExample;\n\\ No newline at end of file\n+export default CardOfInfo;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757331158103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,14 @@\n                 )\r\n         }\r\n     }, []);\r\n \r\n+    const indexOfLastPost = page * cardPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+\r\n     return (\r\n+\r\n         <Card style={{ width: '18rem' }}>\r\n             <Card.Body>\r\n                 <Card.Title></Card.Title>\r\n                 <hr></hr>\r\n"
                },
                {
                    "date": 1757331181257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n \r\n \r\n function CardOfInfo() {\r\n     const [data,setData]=useState([]);\r\n+    const cardPerPage=10;\r\n     useEffect(() => {\r\n         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n         if (Array.isArray(lcData) && lcData.length > 0) {\r\n             setData(lcData);\r\n"
                },
                {
                    "date": 1757331215534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,11 @@\n \r\n \r\n \r\n function CardOfInfo() {\r\n-    const [data,setData]=useState([]);\r\n-    const cardPerPage=10;\r\n+    const [data, setData] = useState([]);\r\n+    const cardPerPage = 10;\r\n+    const [page,setPage]=useState(1);\r\n     useEffect(() => {\r\n         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n         if (Array.isArray(lcData) && lcData.length > 0) {\r\n             setData(lcData);\r\n"
                },
                {
                    "date": 1757331300476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \r\n function CardOfInfo() {\r\n     const [data, setData] = useState([]);\r\n     const cardPerPage = 10;\r\n-    const [page,setPage]=useState(1);\r\n+    const [page, setPage] = useState(1);\r\n     useEffect(() => {\r\n         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n         if (Array.isArray(lcData) && lcData.length > 0) {\r\n             setData(lcData);\r\n@@ -27,9 +27,9 @@\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n     const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n \r\n     return (\r\n-\r\n+        { currentPosts.map((post,i) =>{\r\n         <Card style={{ width: '18rem' }}>\r\n             <Card.Body>\r\n                 <Card.Title></Card.Title>\r\n                 <hr></hr>\r\n@@ -40,8 +40,10 @@\n                 <Card.Link href=\"#\">Card Link</Card.Link>\r\n                 <Card.Link href=\"#\">Another Link</Card.Link>\r\n             </Card.Body>\r\n         </Card>\r\n+        }\r\n+    )}\r\n     );\r\n }\r\n \r\n export default CardOfInfo;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757331317115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n     const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n \r\n     return (\r\n-        { currentPosts.map((post,i) =>{\r\n+        { currentPosts.map((post,i) =>(\r\n         <Card style={{ width: '18rem' }}>\r\n             <Card.Body>\r\n                 <Card.Title></Card.Title>\r\n                 <hr></hr>\r\n@@ -40,9 +40,9 @@\n                 <Card.Link href=\"#\">Card Link</Card.Link>\r\n                 <Card.Link href=\"#\">Another Link</Card.Link>\r\n             </Card.Body>\r\n         </Card>\r\n-        }\r\n+        )\r\n     )}\r\n     );\r\n }\r\n \r\n"
                },
                {
                    "date": 1757331349903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n     const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n \r\n     return (\r\n-        { currentPosts.map((post,i) =>(\r\n+        {currentPosts.map((post,i) =>(\r\n         <Card style={{ width: '18rem' }}>\r\n             <Card.Body>\r\n                 <Card.Title></Card.Title>\r\n                 <hr></hr>\r\n"
                },
                {
                    "date": 1757331367504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n function CardOfInfo() {\r\n     const [data, setData] = useState([]);\r\n     const cardPerPage = 10;\r\n     const [page, setPage] = useState(1);\r\n+    \r\n     useEffect(() => {\r\n         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n         if (Array.isArray(lcData) && lcData.length > 0) {\r\n             setData(lcData);\r\n"
                },
                {
                    "date": 1757331421512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n function CardOfInfo() {\r\n     const [data, setData] = useState([]);\r\n     const cardPerPage = 10;\r\n     const [page, setPage] = useState(1);\r\n-    \r\n+\r\n     useEffect(() => {\r\n         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n         if (Array.isArray(lcData) && lcData.length > 0) {\r\n             setData(lcData);\r\n@@ -29,9 +29,9 @@\n     const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n \r\n     return (\r\n         {currentPosts.map((post,i) =>(\r\n-        <Card style={{ width: '18rem' }}>\r\n+        <Card key={post.id} style={{ width: '18rem' }}>\r\n             <Card.Body>\r\n                 <Card.Title></Card.Title>\r\n                 <hr></hr>\r\n                 <Card.Text>\r\n"
                },
                {
                    "date": 1757331445089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \r\n     const indexOfLastPost = page * cardPerPage;\r\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n     const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-\r\n+console.log(currentPosts)\r\n     return (\r\n         {currentPosts.map((post,i) =>(\r\n         <Card key={post.id} style={{ width: '18rem' }}>\r\n             <Card.Body>\r\n"
                },
                {
                    "date": 1757331466450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \r\n     const indexOfLastPost = page * cardPerPage;\r\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n     const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-console.log(currentPosts)\r\n+console.log(typeof( currentPosts))\r\n     return (\r\n         {currentPosts.map((post,i) =>(\r\n         <Card key={post.id} style={{ width: '18rem' }}>\r\n             <Card.Body>\r\n"
                },
                {
                    "date": 1757331850057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,25 +26,45 @@\n \r\n     const indexOfLastPost = page * cardPerPage;\r\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n     const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-console.log(typeof( currentPosts))\r\n+    console.log(typeof (currentPosts))\r\n     return (\r\n-        {currentPosts.map((post,i) =>(\r\n-        <Card key={post.id} style={{ width: '18rem' }}>\r\n-            <Card.Body>\r\n-                <Card.Title></Card.Title>\r\n-                <hr></hr>\r\n-                <Card.Text>\r\n-                    Some quick example text to build on the card title and make up the\r\n-                    bulk of the card's content.\r\n-                </Card.Text>\r\n-                <Card.Link href=\"#\">Card Link</Card.Link>\r\n-                <Card.Link href=\"#\">Another Link</Card.Link>\r\n-            </Card.Body>\r\n-        </Card>\r\n-        )\r\n-    )}\r\n-    );\r\n+        //     {currentPosts.map((post,i) =>(\r\n+        //     <Card key={post.id} style={{ width: '18rem' }}>\r\n+        //         <Card.Body>\r\n+        //             <Card.Title></Card.Title>\r\n+        //             <hr></hr>\r\n+        //             <Card.Text>\r\n+        //                 Some quick example text to build on the card title and make up the\r\n+        //                 bulk of the card's content.\r\n+        //             </Card.Text>\r\n+        //             <Card.Link href=\"#\">Card Link</Card.Link>\r\n+        //             <Card.Link href=\"#\">Another Link</Card.Link>\r\n+        //         </Card.Body>\r\n+        //     </Card>\r\n+        //     )\r\n+        // )}\r\n+        // );\r\n+        {\r\n+            currentPosts.map((post, i) => (\r\n+                <div key={post.id} className='col-md-4 col-sm-12'>\r\n+                    <div className='card mb-4' >\r\n+                        <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n+                        <hr></hr>\r\n+                        <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n+                        <div className='d-flex flex-row'>\r\n+                            <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><i className=\"bi bi-trash3-fill\"></i></button>\r\n+                            <button onClick={() => {\r\n+                                setForm({ title: post.title, body: post.body });\r\n+                                setEditId(post.id);\r\n+                                setShowForm(true);\r\n+                            }} className='btn btn-warning'><i className=\"bi bi-pencil-fill\"></i></button>\r\n+                        </div>\r\n+                    </div>\r\n+                </div>\r\n+            ))\r\n+        }\r\n+    )\r\n }\r\n \r\n export default CardOfInfo;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757331900344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,70 @@\n+import Card from 'react-bootstrap/Card';\r\n+import { useEffect, useState } from 'react';\r\n+\r\n+\r\n+\r\n+function CardOfInfo() {\r\n+    const [data, setData] = useState([]);\r\n+    const cardPerPage = 10;\r\n+    const [page, setPage] = useState(1);\r\n+\r\n+    useEffect(() => {\r\n+        const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n+        if (Array.isArray(lcData) && lcData.length > 0) {\r\n+            setData(lcData);\r\n+        }\r\n+        else {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+                .then(res => res.json())\r\n+                .then(data => {\r\n+                    setData(data);\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n+                }\r\n+                )\r\n+        }\r\n+    }, []);\r\n+\r\n+    const indexOfLastPost = page * cardPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+    console.log(typeof (currentPosts))\r\n+    return (\r\n+            {currentPosts.map((post,i) =>(\r\n+            <Card key={post.id} style={{ width: '18rem' }}>\r\n+                <Card.Body>\r\n+                    <Card.Title>{post.title}</Card.Title>\r\n+                    <hr></hr>\r\n+                    <Card.Text>\r\n+                        Some quick example text to build on the card title and make up the\r\n+                        bulk of the card's content.\r\n+                    </Card.Text>\r\n+                    <Card.Link href=\"#\">Card Link</Card.Link>\r\n+                    <Card.Link href=\"#\">Another Link</Card.Link>\r\n+                </Card.Body>\r\n+            </Card>\r\n+            )\r\n+        )}\r\n+        );\r\n+        {\r\n+            currentPosts.map((post, i) => (\r\n+                <div key={post.id} className='col-md-4 col-sm-12'>\r\n+                    <div className='card mb-4' >\r\n+                        <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n+                        <hr></hr>\r\n+                        <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n+                        <div className='d-flex flex-row'>\r\n+                            <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><i className=\"bi bi-trash3-fill\"></i></button>\r\n+                            <button onClick={() => {\r\n+                                setForm({ title: post.title, body: post.body });\r\n+                                setEditId(post.id);\r\n+                                setShowForm(true);\r\n+                            }} className='btn btn-warning'><i className=\"bi bi-pencil-fill\"></i></button>\r\n+                        </div>\r\n+                    </div>\r\n+                </div>\r\n+            ))\r\n+        }\r\n+    )\r\n+}\r\n+\r\n+export default CardOfInfo;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757331922549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,10 +34,9 @@\n                 <Card.Body>\r\n                     <Card.Title>{post.title}</Card.Title>\r\n                     <hr></hr>\r\n                     <Card.Text>\r\n-                        Some quick example text to build on the card title and make up the\r\n-                        bulk of the card's content.\r\n+                        {post.body}\r\n                     </Card.Text>\r\n                     <Card.Link href=\"#\">Card Link</Card.Link>\r\n                     <Card.Link href=\"#\">Another Link</Card.Link>\r\n                 </Card.Body>\r\n@@ -66,75 +65,5 @@\n         }\r\n     )\r\n }\r\n \r\n-export default CardOfInfo;\n-import Card from 'react-bootstrap/Card';\r\n-import { useEffect, useState } from 'react';\r\n-\r\n-\r\n-\r\n-function CardOfInfo() {\r\n-    const [data, setData] = useState([]);\r\n-    const cardPerPage = 10;\r\n-    const [page, setPage] = useState(1);\r\n-\r\n-    useEffect(() => {\r\n-        const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        if (Array.isArray(lcData) && lcData.length > 0) {\r\n-            setData(lcData);\r\n-        }\r\n-        else {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-                .then(res => res.json())\r\n-                .then(data => {\r\n-                    setData(data);\r\n-                    localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n-                }\r\n-                )\r\n-        }\r\n-    }, []);\r\n-\r\n-    const indexOfLastPost = page * cardPerPage;\r\n-    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-    console.log(typeof (currentPosts))\r\n-    return (\r\n-        //     {currentPosts.map((post,i) =>(\r\n-        //     <Card key={post.id} style={{ width: '18rem' }}>\r\n-        //         <Card.Body>\r\n-        //             <Card.Title></Card.Title>\r\n-        //             <hr></hr>\r\n-        //             <Card.Text>\r\n-        //                 Some quick example text to build on the card title and make up the\r\n-        //                 bulk of the card's content.\r\n-        //             </Card.Text>\r\n-        //             <Card.Link href=\"#\">Card Link</Card.Link>\r\n-        //             <Card.Link href=\"#\">Another Link</Card.Link>\r\n-        //         </Card.Body>\r\n-        //     </Card>\r\n-        //     )\r\n-        // )}\r\n-        // );\r\n-        {\r\n-            currentPosts.map((post, i) => (\r\n-                <div key={post.id} className='col-md-4 col-sm-12'>\r\n-                    <div className='card mb-4' >\r\n-                        <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n-                        <hr></hr>\r\n-                        <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n-                        <div className='d-flex flex-row'>\r\n-                            <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><i className=\"bi bi-trash3-fill\"></i></button>\r\n-                            <button onClick={() => {\r\n-                                setForm({ title: post.title, body: post.body });\r\n-                                setEditId(post.id);\r\n-                                setShowForm(true);\r\n-                            }} className='btn btn-warning'><i className=\"bi bi-pencil-fill\"></i></button>\r\n-                        </div>\r\n-                    </div>\r\n-                </div>\r\n-            ))\r\n-        }\r\n-    )\r\n-}\r\n-\r\n export default CardOfInfo;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757331931640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,10 +36,8 @@\n                     <hr></hr>\r\n                     <Card.Text>\r\n                         {post.body}\r\n                     </Card.Text>\r\n-                    <Card.Link href=\"#\">Card Link</Card.Link>\r\n-                    <Card.Link href=\"#\">Another Link</Card.Link>\r\n                 </Card.Body>\r\n             </Card>\r\n             )\r\n         )}\r\n"
                },
                {
                    "date": 1757331950855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,67 @@\n+import Card from 'react-bootstrap/Card';\r\n+import { useEffect, useState } from 'react';\r\n+\r\n+\r\n+\r\n+function CardOfInfo() {\r\n+    const [data, setData] = useState([]);\r\n+    const cardPerPage = 10;\r\n+    const [page, setPage] = useState(1);\r\n+\r\n+    useEffect(() => {\r\n+        const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n+        if (Array.isArray(lcData) && lcData.length > 0) {\r\n+            setData(lcData);\r\n+        }\r\n+        else {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+                .then(res => res.json())\r\n+                .then(data => {\r\n+                    setData(data);\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n+                }\r\n+                )\r\n+        }\r\n+    }, []);\r\n+\r\n+    const indexOfLastPost = page * cardPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+    console.log(typeof (currentPosts));\r\n+    return (\r\n+            {currentPosts.map((post,i) =>(\r\n+            <Card key={post.id} style={{ width: '18rem' }}>\r\n+                <Card.Body>\r\n+                    <Card.Title>{post.title}</Card.Title>\r\n+                    <hr></hr>\r\n+                    <Card.Text>\r\n+                        {post.body}\r\n+                    </Card.Text>\r\n+                </Card.Body>\r\n+            </Card>\r\n+            )\r\n+        )}\r\n+        );\r\n+        {\r\n+            currentPosts.map((post, i) => (\r\n+                <div key={post.id} className='col-md-4 col-sm-12'>\r\n+                    <div className='card mb-4' >\r\n+                        <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n+                        <hr></hr>\r\n+                        <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n+                        <div className='d-flex flex-row'>\r\n+                            <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><i className=\"bi bi-trash3-fill\"></i></button>\r\n+                            <button onClick={() => {\r\n+                                setForm({ title: post.title, body: post.body });\r\n+                                setEditId(post.id);\r\n+                                setShowForm(true);\r\n+                            }} className='btn btn-warning'><i className=\"bi bi-pencil-fill\"></i></button>\r\n+                        </div>\r\n+                    </div>\r\n+                </div>\r\n+            ))\r\n+        }\r\n+    )\r\n+}\r\n+\r\n+export default CardOfInfo;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757331991514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,108 +27,42 @@\n     const indexOfLastPost = page * cardPerPage;\r\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n     const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n     console.log(typeof (currentPosts));\r\n-    return (\r\n-            {currentPosts.map((post,i) =>(\r\n-            <Card key={post.id} style={{ width: '18rem' }}>\r\n-                <Card.Body>\r\n-                    <Card.Title>{post.title}</Card.Title>\r\n-                    <hr></hr>\r\n-                    <Card.Text>\r\n-                        {post.body}\r\n-                    </Card.Text>\r\n-                </Card.Body>\r\n-            </Card>\r\n-            )\r\n-        )}\r\n-        );\r\n-        {\r\n-            currentPosts.map((post, i) => (\r\n-                <div key={post.id} className='col-md-4 col-sm-12'>\r\n-                    <div className='card mb-4' >\r\n-                        <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n-                        <hr></hr>\r\n-                        <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n-                        <div className='d-flex flex-row'>\r\n-                            <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><i className=\"bi bi-trash3-fill\"></i></button>\r\n-                            <button onClick={() => {\r\n-                                setForm({ title: post.title, body: post.body });\r\n-                                setEditId(post.id);\r\n-                                setShowForm(true);\r\n-                            }} className='btn btn-warning'><i className=\"bi bi-pencil-fill\"></i></button>\r\n-                        </div>\r\n-                    </div>\r\n-                </div>\r\n-            ))\r\n-        }\r\n-    )\r\n-}\r\n+    return ()\r\n+    //         {currentPosts.map((post,i) =>(\r\n+    //         <Card key={post.id} style={{ width: '18rem' }}>\r\n+    //             <Card.Body>\r\n+    //                 <Card.Title>{post.title}</Card.Title>\r\n+    //                 <hr></hr>\r\n+    //                 <Card.Text>\r\n+    //                     {post.body}\r\n+    //                 </Card.Text>\r\n+    //             </Card.Body>\r\n+    //         </Card>\r\n+    //         )\r\n+    //     )}\r\n+    //     );\r\n+    //     {\r\n+    //         currentPosts.map((post, i) => (\r\n+    //             <div key={post.id} className='col-md-4 col-sm-12'>\r\n+    //                 <div className='card mb-4' >\r\n+    //                     <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n+    //                     <hr></hr>\r\n+    //                     <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n+    //                     <div className='d-flex flex-row'>\r\n+    //                         <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><i className=\"bi bi-trash3-fill\"></i></button>\r\n+    //                         <button onClick={() => {\r\n+    //                             setForm({ title: post.title, body: post.body });\r\n+    //                             setEditId(post.id);\r\n+    //                             setShowForm(true);\r\n+    //                         }} className='btn btn-warning'><i className=\"bi bi-pencil-fill\"></i></button>\r\n+    //                     </div>\r\n+    //                 </div>\r\n+    //             </div>\r\n+    //         ))\r\n+    //     }\r\n+    // )\r\n \r\n-export default CardOfInfo;\n-import Card from 'react-bootstrap/Card';\r\n-import { useEffect, useState } from 'react';\r\n-\r\n-\r\n-\r\n-function CardOfInfo() {\r\n-    const [data, setData] = useState([]);\r\n-    const cardPerPage = 10;\r\n-    const [page, setPage] = useState(1);\r\n-\r\n-    useEffect(() => {\r\n-        const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        if (Array.isArray(lcData) && lcData.length > 0) {\r\n-            setData(lcData);\r\n-        }\r\n-        else {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-                .then(res => res.json())\r\n-                .then(data => {\r\n-                    setData(data);\r\n-                    localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n-                }\r\n-                )\r\n-        }\r\n-    }, []);\r\n-\r\n-    const indexOfLastPost = page * cardPerPage;\r\n-    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-    console.log(typeof (currentPosts))\r\n-    return (\r\n-            {currentPosts.map((post,i) =>(\r\n-            <Card key={post.id} style={{ width: '18rem' }}>\r\n-                <Card.Body>\r\n-                    <Card.Title>{post.title}</Card.Title>\r\n-                    <hr></hr>\r\n-                    <Card.Text>\r\n-                        {post.body}\r\n-                    </Card.Text>\r\n-                </Card.Body>\r\n-            </Card>\r\n-            )\r\n-        )}\r\n-        );\r\n-        {\r\n-            currentPosts.map((post, i) => (\r\n-                <div key={post.id} className='col-md-4 col-sm-12'>\r\n-                    <div className='card mb-4' >\r\n-                        <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n-                        <hr></hr>\r\n-                        <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n-                        <div className='d-flex flex-row'>\r\n-                            <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><i className=\"bi bi-trash3-fill\"></i></button>\r\n-                            <button onClick={() => {\r\n-                                setForm({ title: post.title, body: post.body });\r\n-                                setEditId(post.id);\r\n-                                setShowForm(true);\r\n-                            }} className='btn btn-warning'><i className=\"bi bi-pencil-fill\"></i></button>\r\n-                        </div>\r\n-                    </div>\r\n-                </div>\r\n-            ))\r\n-        }\r\n-    )\r\n }\r\n \r\n export default CardOfInfo;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757332004565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,12 @@\n     const indexOfLastPost = page * cardPerPage;\r\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n     const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n     console.log(typeof (currentPosts));\r\n-    return ()\r\n+    return (\r\n+        <>\r\n+        </>\r\n+    );\r\n     //         {currentPosts.map((post,i) =>(\r\n     //         <Card key={post.id} style={{ width: '18rem' }}>\r\n     //             <Card.Body>\r\n     //                 <Card.Title>{post.title}</Card.Title>\r\n"
                },
                {
                    "date": 1757332093519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,20 @@\n     const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n     console.log(typeof (currentPosts));\r\n     return (\r\n         <>\r\n+            {currentPosts.map((post, i) => (\r\n+                <Card key={post.id} style={{ width: '18rem' }}>\r\n+                    <Card.Body>\r\n+                        <Card.Title>{post.title}</Card.Title>\r\n+                        <hr></hr>\r\n+                        <Card.Text>\r\n+                            {post.body}\r\n+                        </Card.Text>\r\n+                    </Card.Body>\r\n+                </Card>\r\n+            )\r\n+            )}\r\n         </>\r\n     );\r\n     //         {currentPosts.map((post,i) =>(\r\n     //         <Card key={post.id} style={{ width: '18rem' }}>\r\n"
                },
                {
                    "date": 1757332116556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n         <>\r\n             {currentPosts.map((post, i) => (\r\n                 <Card key={post.id} style={{ width: '18rem' }}>\r\n                     <Card.Body>\r\n-                        <Card.Title>{post.title}</Card.Title>\r\n+                        <Card.Title>{post.id}){post.title}</Card.Title>\r\n                         <hr></hr>\r\n                         <Card.Text>\r\n                             {post.body}\r\n                         </Card.Text>\r\n"
                },
                {
                    "date": 1757332169023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,11 @@\n     const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n     console.log(typeof (currentPosts));\r\n     return (\r\n         <>\r\n+        <div className='row'>\r\n             {currentPosts.map((post, i) => (\r\n+                <div className='col-md-4 col-sm-12'\r\n                 <Card key={post.id} style={{ width: '18rem' }}>\r\n                     <Card.Body>\r\n                         <Card.Title>{post.id}){post.title}</Card.Title>\r\n                         <hr></hr>\r\n"
                },
                {
                    "date": 1757332178351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n     return (\r\n         <>\r\n         <div className='row'>\r\n             {currentPosts.map((post, i) => (\r\n-                <div className='col-md-4 col-sm-12'\r\n+                <div className='col-md-4 col-sm-12'>\r\n                 <Card key={post.id} style={{ width: '18rem' }}>\r\n                     <Card.Body>\r\n                         <Card.Title>{post.id}){post.title}</Card.Title>\r\n                         <hr></hr>\r\n@@ -41,8 +41,9 @@\n                             {post.body}\r\n                         </Card.Text>\r\n                     </Card.Body>\r\n                 </Card>\r\n+                </div>\r\n             )\r\n             )}\r\n         </>\r\n     );\r\n"
                },
                {
                    "date": 1757332184153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,8 +44,9 @@\n                 </Card>\r\n                 </div>\r\n             )\r\n             )}\r\n+            </div>\r\n         </>\r\n     );\r\n     //         {currentPosts.map((post,i) =>(\r\n     //         <Card key={post.id} style={{ width: '18rem' }}>\r\n"
                },
                {
                    "date": 1757332198213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,87 @@\n+import Card from 'react-bootstrap/Card';\r\n+import { useEffect, useState } from 'react';\r\n+\r\n+\r\n+\r\n+function CardOfInfo() {\r\n+    const [data, setData] = useState([]);\r\n+    const cardPerPage = 10;\r\n+    const [page, setPage] = useState(1);\r\n+\r\n+    useEffect(() => {\r\n+        const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n+        if (Array.isArray(lcData) && lcData.length > 0) {\r\n+            setData(lcData);\r\n+        }\r\n+        else {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+                .then(res => res.json())\r\n+                .then(data => {\r\n+                    setData(data);\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n+                }\r\n+                )\r\n+        }\r\n+    }, []);\r\n+\r\n+    const indexOfLastPost = page * cardPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+    console.log(typeof (currentPosts));\r\n+    return (\r\n+        <>\r\n+        <div className='grid'>\r\n+            {currentPosts.map((post, i) => (\r\n+                <div className='col-md-4 col-sm-12'>\r\n+                <Card key={post.id} style={{ width: '18rem' }}>\r\n+                    <Card.Body>\r\n+                        <Card.Title>{post.id}){post.title}</Card.Title>\r\n+                        <hr></hr>\r\n+                        <Card.Text>\r\n+                            {post.body}\r\n+                        </Card.Text>\r\n+                    </Card.Body>\r\n+                </Card>\r\n+                </div>\r\n+            )\r\n+            )}\r\n+            </div>\r\n+        </>\r\n+    );\r\n+    //         {currentPosts.map((post,i) =>(\r\n+    //         <Card key={post.id} style={{ width: '18rem' }}>\r\n+    //             <Card.Body>\r\n+    //                 <Card.Title>{post.title}</Card.Title>\r\n+    //                 <hr></hr>\r\n+    //                 <Card.Text>\r\n+    //                     {post.body}\r\n+    //                 </Card.Text>\r\n+    //             </Card.Body>\r\n+    //         </Card>\r\n+    //         )\r\n+    //     )}\r\n+    //     );\r\n+    //     {\r\n+    //         currentPosts.map((post, i) => (\r\n+    //             <div key={post.id} className='col-md-4 col-sm-12'>\r\n+    //                 <div className='card mb-4' >\r\n+    //                     <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n+    //                     <hr></hr>\r\n+    //                     <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n+    //                     <div className='d-flex flex-row'>\r\n+    //                         <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><i className=\"bi bi-trash3-fill\"></i></button>\r\n+    //                         <button onClick={() => {\r\n+    //                             setForm({ title: post.title, body: post.body });\r\n+    //                             setEditId(post.id);\r\n+    //                             setShowForm(true);\r\n+    //                         }} className='btn btn-warning'><i className=\"bi bi-pencil-fill\"></i></button>\r\n+    //                     </div>\r\n+    //                 </div>\r\n+    //             </div>\r\n+    //         ))\r\n+    //     }\r\n+    // )\r\n+\r\n+}\r\n+\r\n+export default CardOfInfo;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757332205378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,8 @@\n     return (\r\n         <>\r\n         <div className='grid'>\r\n             {currentPosts.map((post, i) => (\r\n-                <div className='col-md-4 col-sm-12'>\r\n                 <Card key={post.id} style={{ width: '18rem' }}>\r\n                     <Card.Body>\r\n                         <Card.Title>{post.id}){post.title}</Card.Title>\r\n                         <hr></hr>\r\n@@ -41,9 +40,8 @@\n                             {post.body}\r\n                         </Card.Text>\r\n                     </Card.Body>\r\n                 </Card>\r\n-                </div>\r\n             )\r\n             )}\r\n             </div>\r\n         </>\r\n@@ -83,92 +81,5 @@\n     // )\r\n \r\n }\r\n \r\n-export default CardOfInfo;\n-import Card from 'react-bootstrap/Card';\r\n-import { useEffect, useState } from 'react';\r\n-\r\n-\r\n-\r\n-function CardOfInfo() {\r\n-    const [data, setData] = useState([]);\r\n-    const cardPerPage = 10;\r\n-    const [page, setPage] = useState(1);\r\n-\r\n-    useEffect(() => {\r\n-        const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        if (Array.isArray(lcData) && lcData.length > 0) {\r\n-            setData(lcData);\r\n-        }\r\n-        else {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-                .then(res => res.json())\r\n-                .then(data => {\r\n-                    setData(data);\r\n-                    localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n-                }\r\n-                )\r\n-        }\r\n-    }, []);\r\n-\r\n-    const indexOfLastPost = page * cardPerPage;\r\n-    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-    console.log(typeof (currentPosts));\r\n-    return (\r\n-        <>\r\n-        <div className='row'>\r\n-            {currentPosts.map((post, i) => (\r\n-                <div className='col-md-4 col-sm-12'>\r\n-                <Card key={post.id} style={{ width: '18rem' }}>\r\n-                    <Card.Body>\r\n-                        <Card.Title>{post.id}){post.title}</Card.Title>\r\n-                        <hr></hr>\r\n-                        <Card.Text>\r\n-                            {post.body}\r\n-                        </Card.Text>\r\n-                    </Card.Body>\r\n-                </Card>\r\n-                </div>\r\n-            )\r\n-            )}\r\n-            </div>\r\n-        </>\r\n-    );\r\n-    //         {currentPosts.map((post,i) =>(\r\n-    //         <Card key={post.id} style={{ width: '18rem' }}>\r\n-    //             <Card.Body>\r\n-    //                 <Card.Title>{post.title}</Card.Title>\r\n-    //                 <hr></hr>\r\n-    //                 <Card.Text>\r\n-    //                     {post.body}\r\n-    //                 </Card.Text>\r\n-    //             </Card.Body>\r\n-    //         </Card>\r\n-    //         )\r\n-    //     )}\r\n-    //     );\r\n-    //     {\r\n-    //         currentPosts.map((post, i) => (\r\n-    //             <div key={post.id} className='col-md-4 col-sm-12'>\r\n-    //                 <div className='card mb-4' >\r\n-    //                     <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n-    //                     <hr></hr>\r\n-    //                     <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n-    //                     <div className='d-flex flex-row'>\r\n-    //                         <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><i className=\"bi bi-trash3-fill\"></i></button>\r\n-    //                         <button onClick={() => {\r\n-    //                             setForm({ title: post.title, body: post.body });\r\n-    //                             setEditId(post.id);\r\n-    //                             setShowForm(true);\r\n-    //                         }} className='btn btn-warning'><i className=\"bi bi-pencil-fill\"></i></button>\r\n-    //                     </div>\r\n-    //                 </div>\r\n-    //             </div>\r\n-    //         ))\r\n-    //     }\r\n-    // )\r\n-\r\n-}\r\n-\r\n export default CardOfInfo;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757332255456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n         <div className='grid'>\r\n             {currentPosts.map((post, i) => (\r\n                 <Card key={post.id} style={{ width: '18rem' }}>\r\n                     <Card.Body>\r\n-                        <Card.Title>{post.id}){post.title}</Card.Title>\r\n+                        <Card.Title>indexOfFirstPost+i+1){post.title}</Card.Title>\r\n                         <hr></hr>\r\n                         <Card.Text>\r\n                             {post.body}\r\n                         </Card.Text>\r\n"
                },
                {
                    "date": 1757332273870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n         <div className='grid'>\r\n             {currentPosts.map((post, i) => (\r\n                 <Card key={post.id} style={{ width: '18rem' }}>\r\n                     <Card.Body>\r\n-                        <Card.Title>indexOfFirstPost+i+1){post.title}</Card.Title>\r\n+                        <Card.Title>{indexOfFirstPost+i+1}){post.title}</Card.Title>\r\n                         <hr></hr>\r\n                         <Card.Text>\r\n                             {post.body}\r\n                         </Card.Text>\r\n"
                },
                {
                    "date": 1757332327926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+import Card from 'react-bootstrap/Card';\r\n+import { useEffect, useState } from 'react';\r\n+\r\n+\r\n+\r\n+function CardOfInfo() {\r\n+    const [data, setData] = useState([]);\r\n+    const cardPerPage = 10;\r\n+    const [page, setPage] = useState(1);\r\n+\r\n+    useEffect(() => {\r\n+        const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n+        if (Array.isArray(lcData) && lcData.length > 0) {\r\n+            setData(lcData);\r\n+        }\r\n+        else {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+                .then(res => res.json())\r\n+                .then(data => {\r\n+                    setData(data);\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n+                }\r\n+                )\r\n+        }\r\n+    }, []);\r\n+\r\n+    const indexOfLastPost = page * cardPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+    console.log(typeof (currentPosts));\r\n+    return (\r\n+        <>\r\n+            <div className='grid'>\r\n+                {currentPosts.map((post, i) => (\r\n+                    <Card key={post.id} style={{ width: '18rem' }}>\r\n+                        <Card.Body>\r\n+                            <Card.Title>{indexOfFirstPost + i + 1}){post.title}</Card.Title>\r\n+                            <hr></hr>\r\n+                            <Card.Text>\r\n+                                {post.body}\r\n+                            </Card.Text>\r\n+                            <div className='d-flex flex-row'>\r\n+                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><i className=\"bi bi-trash3-fill\"></i></button>\r\n+                                <button onClick={() => {\r\n+                                    setForm({ title: post.title, body: post.body });\r\n+                                    setEditId(post.id);\r\n+                                    setShowForm(true);\r\n+                                }} className='btn btn-warning'><i className=\"bi bi-pencil-fill\"></i></button>\r\n+                            </div>\r\n+\r\n+                        </Card.Body>\r\n+                    </Card>\r\n+                )\r\n+                )}\r\n+            </div >\r\n+        </>\r\n+    );\r\n+    //         {currentPosts.map((post,i) =>(\r\n+    //         <Card key={post.id} style={{ width: '18rem' }}>\r\n+    //             <Card.Body>\r\n+    //                 <Card.Title>{post.title}</Card.Title>\r\n+    //                 <hr></hr>\r\n+    //                 <Card.Text>\r\n+    //                     {post.body}\r\n+    //                 </Card.Text>\r\n+    //             </Card.Body>\r\n+    //         </Card>\r\n+    //         )\r\n+    //     )}\r\n+    //     );\r\n+    //     {\r\n+    //         currentPosts.map((post, i) => (\r\n+    //             <div key={post.id} className='col-md-4 col-sm-12'>\r\n+    //                 <div className='card mb-4' >\r\n+    //                     <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n+    //                     <hr></hr>\r\n+    //                     <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n+    //                     <div className='d-flex flex-row'>\r\n+    //                         <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><i className=\"bi bi-trash3-fill\"></i></button>\r\n+    //                         <button onClick={() => {\r\n+    //                             setForm({ title: post.title, body: post.body });\r\n+    //                             setEditId(post.id);\r\n+    //                             setShowForm(true);\r\n+    //                         }} className='btn btn-warning'><i className=\"bi bi-pencil-fill\"></i></button>\r\n+    //                     </div>\r\n+    //                 </div>\r\n+    //             </div>\r\n+    //         ))\r\n+    //     }\r\n+    // )\r\n+\r\n+}\r\n+\r\n+export default CardOfInfo;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757332364210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n function CardOfInfo() {\r\n     const [data, setData] = useState([]);\r\n     const cardPerPage = 10;\r\n     const [page, setPage] = useState(1);\r\n+    const[form,setForm]=useState({title:\"\",body:\"\"})\r\n \r\n     useEffect(() => {\r\n         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n         if (Array.isArray(lcData) && lcData.length > 0) {\r\n@@ -90,90 +91,5 @@\n     // )\r\n \r\n }\r\n \r\n-export default CardOfInfo;\n-import Card from 'react-bootstrap/Card';\r\n-import { useEffect, useState } from 'react';\r\n-\r\n-\r\n-\r\n-function CardOfInfo() {\r\n-    const [data, setData] = useState([]);\r\n-    const cardPerPage = 10;\r\n-    const [page, setPage] = useState(1);\r\n-\r\n-    useEffect(() => {\r\n-        const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        if (Array.isArray(lcData) && lcData.length > 0) {\r\n-            setData(lcData);\r\n-        }\r\n-        else {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-                .then(res => res.json())\r\n-                .then(data => {\r\n-                    setData(data);\r\n-                    localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n-                }\r\n-                )\r\n-        }\r\n-    }, []);\r\n-\r\n-    const indexOfLastPost = page * cardPerPage;\r\n-    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-    console.log(typeof (currentPosts));\r\n-    return (\r\n-        <>\r\n-        <div className='grid'>\r\n-            {currentPosts.map((post, i) => (\r\n-                <Card key={post.id} style={{ width: '18rem' }}>\r\n-                    <Card.Body>\r\n-                        <Card.Title>{indexOfFirstPost+i+1}){post.title}</Card.Title>\r\n-                        <hr></hr>\r\n-                        <Card.Text>\r\n-                            {post.body}\r\n-                        </Card.Text>\r\n-                    </Card.Body>\r\n-                </Card>\r\n-            )\r\n-            )}\r\n-            </div>\r\n-        </>\r\n-    );\r\n-    //         {currentPosts.map((post,i) =>(\r\n-    //         <Card key={post.id} style={{ width: '18rem' }}>\r\n-    //             <Card.Body>\r\n-    //                 <Card.Title>{post.title}</Card.Title>\r\n-    //                 <hr></hr>\r\n-    //                 <Card.Text>\r\n-    //                     {post.body}\r\n-    //                 </Card.Text>\r\n-    //             </Card.Body>\r\n-    //         </Card>\r\n-    //         )\r\n-    //     )}\r\n-    //     );\r\n-    //     {\r\n-    //         currentPosts.map((post, i) => (\r\n-    //             <div key={post.id} className='col-md-4 col-sm-12'>\r\n-    //                 <div className='card mb-4' >\r\n-    //                     <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n-    //                     <hr></hr>\r\n-    //                     <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n-    //                     <div className='d-flex flex-row'>\r\n-    //                         <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><i className=\"bi bi-trash3-fill\"></i></button>\r\n-    //                         <button onClick={() => {\r\n-    //                             setForm({ title: post.title, body: post.body });\r\n-    //                             setEditId(post.id);\r\n-    //                             setShowForm(true);\r\n-    //                         }} className='btn btn-warning'><i className=\"bi bi-pencil-fill\"></i></button>\r\n-    //                     </div>\r\n-    //                 </div>\r\n-    //             </div>\r\n-    //         ))\r\n-    //     }\r\n-    // )\r\n-\r\n-}\r\n-\r\n export default CardOfInfo;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757332395360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,8 @@\n                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><i className=\"bi bi-trash3-fill\"></i></button>\r\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n                                     setEditId(post.id);\r\n-                                    setShowForm(true);\r\n                                 }} className='btn btn-warning'><i className=\"bi bi-pencil-fill\"></i></button>\r\n                             </div>\r\n \r\n                         </Card.Body>\r\n"
                },
                {
                    "date": 1757332684929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,12 @@\n                 )\r\n         }\r\n     }, []);\r\n \r\n+    const handleDelete=(id)=>{\r\n+        \r\n+    }\r\n+\r\n     const indexOfLastPost = page * cardPerPage;\r\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n     const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n     console.log(typeof (currentPosts));\r\n@@ -42,10 +46,10 @@\n                             </Card.Text>\r\n                             <div className='d-flex flex-row'>\r\n                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><i className=\"bi bi-trash3-fill\"></i></button>\r\n                                 <button onClick={() => {\r\n-                                    setForm({ title: post.title, body: post.body });\r\n-                                    setEditId(post.id);\r\n+                                    \r\n+\r\n                                 }} className='btn btn-warning'><i className=\"bi bi-pencil-fill\"></i></button>\r\n                             </div>\r\n \r\n                         </Card.Body>\r\n@@ -54,41 +58,8 @@\n                 )}\r\n             </div >\r\n         </>\r\n     );\r\n-    //         {currentPosts.map((post,i) =>(\r\n-    //         <Card key={post.id} style={{ width: '18rem' }}>\r\n-    //             <Card.Body>\r\n-    //                 <Card.Title>{post.title}</Card.Title>\r\n-    //                 <hr></hr>\r\n-    //                 <Card.Text>\r\n-    //                     {post.body}\r\n-    //                 </Card.Text>\r\n-    //             </Card.Body>\r\n-    //         </Card>\r\n-    //         )\r\n-    //     )}\r\n-    //     );\r\n-    //     {\r\n-    //         currentPosts.map((post, i) => (\r\n-    //             <div key={post.id} className='col-md-4 col-sm-12'>\r\n-    //                 <div className='card mb-4' >\r\n-    //                     <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n-    //                     <hr></hr>\r\n-    //                     <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n-    //                     <div className='d-flex flex-row'>\r\n-    //                         <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><i className=\"bi bi-trash3-fill\"></i></button>\r\n-    //                         <button onClick={() => {\r\n-    //                             setForm({ title: post.title, body: post.body });\r\n-    //                             setEditId(post.id);\r\n-    //                             setShowForm(true);\r\n-    //                         }} className='btn btn-warning'><i className=\"bi bi-pencil-fill\"></i></button>\r\n-    //                     </div>\r\n-    //                 </div>\r\n-    //             </div>\r\n-    //         ))\r\n-    //     }\r\n-    // )\r\n-\r\n+    \r\n }\r\n \r\n export default CardOfInfo;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757332854915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,65 +1,194 @@\n-import Card from 'react-bootstrap/Card';\r\n-import { useEffect, useState } from 'react';\r\n+// import Card from 'react-bootstrap/Card';\r\n+// import { useEffect, useState } from 'react';\r\n \r\n \r\n \r\n-function CardOfInfo() {\r\n-    const [data, setData] = useState([]);\r\n-    const cardPerPage = 10;\r\n-    const [page, setPage] = useState(1);\r\n-    const[form,setForm]=useState({title:\"\",body:\"\"})\r\n+// function CardOfInfo() {\r\n+//     const [data, setData] = useState([]);\r\n+//     const cardPerPage = 10;\r\n+//     const [page, setPage] = useState(1);\r\n+//     const[form,setForm]=useState({title:\"\",body:\"\"})\r\n \r\n-    useEffect(() => {\r\n-        const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        if (Array.isArray(lcData) && lcData.length > 0) {\r\n-            setData(lcData);\r\n-        }\r\n-        else {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-                .then(res => res.json())\r\n-                .then(data => {\r\n-                    setData(data);\r\n-                    localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n-                }\r\n-                )\r\n-        }\r\n-    }, []);\r\n+//     useEffect(() => {\r\n+//         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n+//         if (Array.isArray(lcData) && lcData.length > 0) {\r\n+//             setData(lcData);\r\n+//         }\r\n+//         else {\r\n+//             fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+//                 .then(res => res.json())\r\n+//                 .then(data => {\r\n+//                     setData(data);\r\n+//                     localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n+//                 }\r\n+//                 )\r\n+//         }\r\n+//     }, []);\r\n \r\n-    const handleDelete=(id)=>{\r\n+//     const handleDelete=(id)=>{\r\n         \r\n-    }\r\n+//     }\r\n \r\n-    const indexOfLastPost = page * cardPerPage;\r\n-    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-    console.log(typeof (currentPosts));\r\n-    return (\r\n-        <>\r\n-            <div className='grid'>\r\n-                {currentPosts.map((post, i) => (\r\n-                    <Card key={post.id} style={{ width: '18rem' }}>\r\n-                        <Card.Body>\r\n\\ No newline at end of file\n-                            <Card.Title>{indexOfFirstPost + i + 1}){post.title}</Card.Title>\r\n-                            <hr></hr>\r\n-                            <Card.Text>\r\n-                                {post.body}\r\n-                            </Card.Text>\r\n-                            <div className='d-flex flex-row'>\r\n-                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><i className=\"bi bi-trash3-fill\"></i></button>\r\n-                                <button onClick={() => {\r\n+//     const indexOfLastPost = page * cardPerPage;\r\n+//     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+//     const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+//     console.log(typeof (currentPosts));\r\n+//     return (\r\n+//         <>\r\n+//             <div className='grid'>\r\n+//                 {currentPosts.map((post, i) => (\r\n+//                     <Card key={post.id} style={{ width: '18rem' }}>\r\n+//                         <Card.Body>\r\n+//                             <Card.Title>{indexOfFirstPost + i + 1}){post.title}</Card.Title>\r\n+//                             <hr></hr>\r\n+//                             <Card.Text>\r\n+//                                 {post.body}\r\n+//                             </Card.Text>\r\n+//                             <div className='d-flex flex-row'>\r\n+//                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><i className=\"bi bi-trash3-fill\"></i></button>\r\n+//                                 <button onClick={() => {\r\n                                     \r\n \r\n-                                }} className='btn btn-warning'><i className=\"bi bi-pencil-fill\"></i></button>\r\n-                            </div>\r\n+//                                 }} className='btn btn-warning'><i className=\"bi bi-pencil-fill\"></i></button>\r\n+//                             </div>\r\n \r\n-                        </Card.Body>\r\n-                    </Card>\r\n-                )\r\n-                )}\r\n-            </div >\r\n-        </>\r\n+//                         </Card.Body>\r\n+//                     </Card>\r\n+//                 )\r\n+//                 )}\r\n+//             </div >\r\n+//         </>\r\n+//     );\r\n+    \r\n+// }\r\n+\r\n+// export default CardOfInfo;\r\n+\r\n+import Card from \"react-bootstrap/Card\";\r\n+import { useEffect, useState } from \"react\";\r\n+import Button from \"react-bootstrap/Button\";\r\n+import Modal from \"react-bootstrap/Modal\";\r\n+import PostModal from \"./PostModal\"; // ✅ reuse your add/edit modal\r\n+\r\n+function CardOfInfo() {\r\n+  const [data, setData] = useState([]);\r\n+  const cardPerPage = 10;\r\n+  const [page, setPage] = useState(1);\r\n+\r\n+  // For delete modal\r\n+  const [showDelete, setShowDelete] = useState(false);\r\n+  const [deleteId, setDeleteId] = useState(null);\r\n+\r\n+  // For edit modal\r\n+  const [editData, setEditData] = useState(null);\r\n+\r\n+  useEffect(() => {\r\n+    const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n+    if (Array.isArray(lcData) && lcData.length > 0) {\r\n+      setData(lcData);\r\n+    } else {\r\n+      fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+        .then((res) => res.json())\r\n+        .then((data) => {\r\n+          setData(data);\r\n+          localStorage.setItem(\"cardData\", JSON.stringify(data));\r\n+        });\r\n+    }\r\n+  }, []);\r\n+\r\n+  // ✅ Delete handler\r\n+  const handleDelete = (id) => {\r\n+    setDeleteId(id);\r\n+    setShowDelete(true);\r\n+  };\r\n+\r\n+  const confirmDelete = () => {\r\n+    fetch(`https://jsonplaceholder.typicode.com/posts/${deleteId}`, {\r\n+      method: \"DELETE\",\r\n+    }).then(() => {\r\n+      const updated = data.filter((post) => post.id !== deleteId);\r\n+      setData(updated);\r\n+      localStorage.setItem(\"cardData\", JSON.stringify(updated));\r\n+      setShowDelete(false);\r\n+    });\r\n+  };\r\n+\r\n+  // ✅ Edit handler\r\n+  const handleEdit = (post) => {\r\n+    setEditData(post); // send data to modal\r\n+  };\r\n+\r\n+  const handleUpdate = (updatedPost) => {\r\n+    const updated = data.map((post) =>\r\n+      post.id === updatedPost.id ? updatedPost : post\r\n     );\r\n-    \r\n+    setData(updated);\r\n+    localStorage.setItem(\"cardData\", JSON.stringify(updated));\r\n+    setEditData(null); // close modal\r\n+  };\r\n+\r\n+  // Pagination slice\r\n+  const indexOfLastPost = page * cardPerPage;\r\n+  const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+  const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"grid\">\r\n+        {currentPosts.map((post, i) => (\r\n+          <Card key={post.id} style={{ width: \"18rem\" }}>\r\n+            <Card.Body>\r\n+              <Card.Title>\r\n+                {indexOfFirstPost + i + 1}) {post.title}\r\n+              </Card.Title>\r\n+              <hr />\r\n+              <Card.Text>{post.body}</Card.Text>\r\n+              <div className=\"d-flex flex-row\">\r\n+                <button\r\n+                  onClick={() => handleDelete(post.id)}\r\n+                  className=\"btn btn-danger me-2\"\r\n+                >\r\n+                  <i className=\"bi bi-trash3-fill\"></i>\r\n+                </button>\r\n+                <button\r\n+                  onClick={() => handleEdit(post)}\r\n+                  className=\"btn btn-warning\"\r\n+                >\r\n+                  <i className=\"bi bi-pencil-fill\"></i>\r\n+                </button>\r\n+              </div>\r\n+            </Card.Body>\r\n+          </Card>\r\n+        ))}\r\n+      </div>\r\n+\r\n+      {/* 🔹 Delete Confirmation Modal */}\r\n+      <Modal show={showDelete} onHide={() => setShowDelete(false)}>\r\n+        <Modal.Header closeButton>\r\n+          <Modal.Title>Confirm Delete</Modal.Title>\r\n+        </Modal.Header>\r\n+        <Modal.Body>Are you sure you want to delete this post?</Modal.Body>\r\n+        <Modal.Footer>\r\n+          <Button variant=\"secondary\" onClick={() => setShowDelete(false)}>\r\n+            Cancel\r\n+          </Button>\r\n+          <Button variant=\"danger\" onClick={confirmDelete}>\r\n+            Delete\r\n+          </Button>\r\n+        </Modal.Footer>\r\n+      </Modal>\r\n+\r\n+      {/* 🔹 Reuse PostModal for Edit */}\r\n+      {editData && (\r\n+        <PostModal\r\n+          show={true}\r\n+          initialData={editData}\r\n+          onClose={() => setEditData(null)}\r\n+          onSave={handleUpdate}\r\n+        />\r\n+      )}\r\n+    </>\r\n+  );\r\n }\r\n \r\n-export default CardOfInfo;\n+export default CardOfInfo;\r\n"
                },
                {
                    "date": 1757332878471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n import Card from \"react-bootstrap/Card\";\r\n import { useEffect, useState } from \"react\";\r\n import Button from \"react-bootstrap/Button\";\r\n import Modal from \"react-bootstrap/Modal\";\r\n-import PostModal from \"./PostModal\"; // ✅ reuse your add/edit modal\r\n+import PostModal from \"./PostModal\"; \r\n \r\n function CardOfInfo() {\r\n   const [data, setData] = useState([]);\r\n   const cardPerPage = 10;\r\n"
                },
                {
                    "date": 1757332894902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n import Card from \"react-bootstrap/Card\";\r\n import { useEffect, useState } from \"react\";\r\n import Button from \"react-bootstrap/Button\";\r\n import Modal from \"react-bootstrap/Modal\";\r\n-import PostModal from \"./PostModal\"; \r\n+import PostModal from \"./Addpost\"; \r\n \r\n function CardOfInfo() {\r\n   const [data, setData] = useState([]);\r\n   const cardPerPage = 10;\r\n"
                },
                {
                    "date": 1757332956626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,9 @@\n         });\r\n     }\r\n   }, []);\r\n \r\n-  // ✅ Delete handler\r\n+\r\n   const handleDelete = (id) => {\r\n     setDeleteId(id);\r\n     setShowDelete(true);\r\n   };\r\n@@ -161,9 +161,9 @@\n           </Card>\r\n         ))}\r\n       </div>\r\n \r\n-      {/* 🔹 Delete Confirmation Modal */}\r\n+      {/*  Delete Confirmation Modal */}\r\n       <Modal show={showDelete} onHide={() => setShowDelete(false)}>\r\n         <Modal.Header closeButton>\r\n           <Modal.Title>Confirm Delete</Modal.Title>\r\n         </Modal.Header>\r\n"
                },
                {
                    "date": 1757332976073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,9 +163,9 @@\n       </div>\r\n \r\n       {/*  Delete Confirmation Modal */}\r\n       <Modal show={showDelete} onHide={() => setShowDelete(false)}>\r\n-        <Modal.Header closeButton>\r\n+        <Modal.Header >\r\n           <Modal.Title>Confirm Delete</Modal.Title>\r\n         </Modal.Header>\r\n         <Modal.Body>Are you sure you want to delete this post?</Modal.Body>\r\n         <Modal.Footer>\r\n"
                },
                {
                    "date": 1757333014023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,196 @@\n+// import Card from 'react-bootstrap/Card';\r\n+// import { useEffect, useState } from 'react';\r\n+\r\n+\r\n+\r\n+// function CardOfInfo() {\r\n+//     const [data, setData] = useState([]);\r\n+//     const cardPerPage = 10;\r\n+//     const [page, setPage] = useState(1);\r\n+//     const[form,setForm]=useState({title:\"\",body:\"\"})\r\n+\r\n+//     useEffect(() => {\r\n+//         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n+//         if (Array.isArray(lcData) && lcData.length > 0) {\r\n+//             setData(lcData);\r\n+//         }\r\n+//         else {\r\n+//             fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+//                 .then(res => res.json())\r\n+//                 .then(data => {\r\n+//                     setData(data);\r\n+//                     localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n+//                 }\r\n+//                 )\r\n+//         }\r\n+//     }, []);\r\n+\r\n+//     const handleDelete=(id)=>{\r\n+        \r\n+//     }\r\n+\r\n+//     const indexOfLastPost = page * cardPerPage;\r\n+//     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+//     const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+//     console.log(typeof (currentPosts));\r\n+//     return (\r\n+//         <>\r\n+//             <div className='grid'>\r\n+//                 {currentPosts.map((post, i) => (\r\n+//                     <Card key={post.id} style={{ width: '18rem' }}>\r\n+//                         <Card.Body>\r\n+//                             <Card.Title>{indexOfFirstPost + i + 1}){post.title}</Card.Title>\r\n+//                             <hr></hr>\r\n+//                             <Card.Text>\r\n+//                                 {post.body}\r\n+//                             </Card.Text>\r\n+//                             <div className='d-flex flex-row'>\r\n+//                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><i className=\"bi bi-trash3-fill\"></i></button>\r\n+//                                 <button onClick={() => {\r\n+                                    \r\n+\r\n+//                                 }} className='btn btn-warning'><i className=\"bi bi-pencil-fill\"></i></button>\r\n+//                             </div>\r\n+\r\n+//                         </Card.Body>\r\n+//                     </Card>\r\n+//                 )\r\n+//                 )}\r\n+//             </div >\r\n+//         </>\r\n+//     );\r\n+    \r\n+// }\r\n+\r\n+// export default CardOfInfo;\r\n+\r\n+import Card from \"react-bootstrap/Card\";\r\n+import { useEffect, useState } from \"react\";\r\n+import Button from \"react-bootstrap/Button\";\r\n+import Modal from \"react-bootstrap/Modal\";\r\n+import PostModal from \"./Addpost\"; \r\n+\r\n+function CardOfInfo() {\r\n+  const [data, setData] = useState([]);\r\n+  const cardPerPage = 10;\r\n+  const [page, setPage] = useState(1);\r\n+\r\n+  // For delete modal\r\n+  const [showDelete, setShowDelete] = useState(false);\r\n+  const [deleteId, setDeleteId] = useState(null);\r\n+\r\n+  // For edit modal\r\n+  const [editData, setEditData] = useState(null);\r\n+\r\n+  useEffect(() => {\r\n+    const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n+    if (Array.isArray(lcData) && lcData.length > 0) {\r\n+      setData(lcData);\r\n+    } else {\r\n+      fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+        .then((res) => res.json())\r\n+        .then((data) => {\r\n+          setData(data);\r\n+          localStorage.setItem(\"cardData\", JSON.stringify(data));\r\n+        });\r\n+    }\r\n+  }, []);\r\n+\r\n+\r\n+  const handleDelete = (id) => {\r\n+    setDeleteId(id);\r\n+    setShowDelete(true);\r\n+  };\r\n+\r\n+  const confirmDelete = () => {\r\n+    fetch(`https://jsonplaceholder.typicode.com/posts/${deleteId}`, {\r\n+      method: \"DELETE\",\r\n+    }).then(() => {\r\n+      const updated = data.filter((post) => post.id !== deleteId);\r\n+      setData(updated);\r\n+      localStorage.setItem(\"cardData\", JSON.stringify(updated));\r\n+      setShowDelete(false);\r\n+    });\r\n+  };\r\n+\r\n+  // ✅ Edit handler\r\n+  const handleEdit = (post) => {\r\n+    setEditData(post); // send data to modal\r\n+  };\r\n+\r\n+  const handleUpdate = (updatedPost) => {\r\n+    const updated = data.map((post) =>\r\n+      post.id === updatedPost.id ? updatedPost : post\r\n+    );\r\n+    setData(updated);\r\n+    localStorage.setItem(\"cardData\", JSON.stringify(updated));\r\n+    setEditData(null); // close modal\r\n+  };\r\n+\r\n+  // Pagination slice\r\n+  const indexOfLastPost = page * cardPerPage;\r\n+  const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+  const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"grid\">\r\n+        {currentPosts.map((post, i) => (\r\n+          <Card key={post.id} style={{ width: \"18rem\" }}>\r\n+            <Card.Body>\r\n+              <Card.Title>\r\n+                {indexOfFirstPost + i + 1}) {post.title}\r\n+              </Card.Title>\r\n+              <hr />\r\n+              <Card.Text>{post.body}</Card.Text>\r\n+              <div className=\"d-flex flex-row\">\r\n+                <button\r\n+                  onClick={() => handleDelete(post.id)}\r\n+                  className=\"btn btn-danger me-2\"\r\n+                >\r\n+                  <i className=\"bi bi-trash3-fill\"></i>\r\n+                </button>\r\n+                <button\r\n+                  onClick={() => handleEdit(post)}\r\n+                  className=\"btn btn-warning\"\r\n+                >\r\n+                  <i className=\"bi bi-pencil-fill\"></i>\r\n+                </button>\r\n+              </div>\r\n+            </Card.Body>\r\n+          </Card>\r\n+        ))}\r\n+      </div>\r\n+\r\n+      {/*  Delete Confirmation Modal */}\r\n+      <Modal show={showDelete} onHide={() => setShowDelete(false)}>\r\n+        <Modal.Header >\r\n+          <Modal.Title>Confirm Delete</Modal.Title>\r\n+          <button type=\"button\" className=\"btn-close\" onClick={() => handleClose(false)} ></button>\r\n+\r\n+        </Modal.Header>\r\n+        <Modal.Body>Are you sure you want to delete this post?</Modal.Body>\r\n+        <Modal.Footer>\r\n+          <Button variant=\"secondary\" onClick={() => setShowDelete(false)}>\r\n+            Cancel\r\n+          </Button>\r\n+          <Button variant=\"danger\" onClick={confirmDelete}>\r\n+            Delete\r\n+          </Button>\r\n+        </Modal.Footer>\r\n+      </Modal>\r\n+\r\n+      {/* 🔹 Reuse PostModal for Edit */}\r\n+      {editData && (\r\n+        <PostModal\r\n+          show={true}\r\n+          initialData={editData}\r\n+          onClose={() => setEditData(null)}\r\n+          onSave={handleUpdate}\r\n+        />\r\n+      )}\r\n+    </>\r\n+  );\r\n+}\r\n+\r\n+export default CardOfInfo;\r\n"
                },
                {
                    "date": 1757333063815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,9 +165,9 @@\n       {/*  Delete Confirmation Modal */}\r\n       <Modal show={showDelete} onHide={() => setShowDelete(false)}>\r\n         <Modal.Header >\r\n           <Modal.Title>Confirm Delete</Modal.Title>\r\n-          <button type=\"button\" className=\"btn-close\" onClick={() => handleClose(false)} ></button>\r\n+          <button type=\"button\" className=\"btn-close\" onClick={() => setShowDelete(false)} ></button>\r\n \r\n         </Modal.Header>\r\n         <Modal.Body>Are you sure you want to delete this post?</Modal.Body>\r\n         <Modal.Footer>\r\n@@ -193,198 +193,4 @@\n   );\r\n }\r\n \r\n export default CardOfInfo;\r\n-// import Card from 'react-bootstrap/Card';\r\n-// import { useEffect, useState } from 'react';\r\n-\r\n-\r\n-\r\n-// function CardOfInfo() {\r\n-//     const [data, setData] = useState([]);\r\n-//     const cardPerPage = 10;\r\n-//     const [page, setPage] = useState(1);\r\n-//     const[form,setForm]=useState({title:\"\",body:\"\"})\r\n-\r\n-//     useEffect(() => {\r\n-//         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n-//         if (Array.isArray(lcData) && lcData.length > 0) {\r\n-//             setData(lcData);\r\n-//         }\r\n-//         else {\r\n-//             fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-//                 .then(res => res.json())\r\n-//                 .then(data => {\r\n-//                     setData(data);\r\n-//                     localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n-//                 }\r\n-//                 )\r\n-//         }\r\n-//     }, []);\r\n-\r\n-//     const handleDelete=(id)=>{\r\n-        \r\n-//     }\r\n-\r\n-//     const indexOfLastPost = page * cardPerPage;\r\n-//     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-//     const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-//     console.log(typeof (currentPosts));\r\n-//     return (\r\n-//         <>\r\n-//             <div className='grid'>\r\n-//                 {currentPosts.map((post, i) => (\r\n-//                     <Card key={post.id} style={{ width: '18rem' }}>\r\n-//                         <Card.Body>\r\n-//                             <Card.Title>{indexOfFirstPost + i + 1}){post.title}</Card.Title>\r\n-//                             <hr></hr>\r\n-//                             <Card.Text>\r\n-//                                 {post.body}\r\n-//                             </Card.Text>\r\n-//                             <div className='d-flex flex-row'>\r\n-//                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><i className=\"bi bi-trash3-fill\"></i></button>\r\n-//                                 <button onClick={() => {\r\n-                                    \r\n-\r\n-//                                 }} className='btn btn-warning'><i className=\"bi bi-pencil-fill\"></i></button>\r\n-//                             </div>\r\n-\r\n-//                         </Card.Body>\r\n-//                     </Card>\r\n-//                 )\r\n-//                 )}\r\n-//             </div >\r\n-//         </>\r\n-//     );\r\n-    \r\n-// }\r\n-\r\n-// export default CardOfInfo;\r\n-\r\n-import Card from \"react-bootstrap/Card\";\r\n-import { useEffect, useState } from \"react\";\r\n-import Button from \"react-bootstrap/Button\";\r\n-import Modal from \"react-bootstrap/Modal\";\r\n-import PostModal from \"./Addpost\"; \r\n-\r\n-function CardOfInfo() {\r\n-  const [data, setData] = useState([]);\r\n-  const cardPerPage = 10;\r\n-  const [page, setPage] = useState(1);\r\n-\r\n-  // For delete modal\r\n-  const [showDelete, setShowDelete] = useState(false);\r\n-  const [deleteId, setDeleteId] = useState(null);\r\n-\r\n-  // For edit modal\r\n-  const [editData, setEditData] = useState(null);\r\n-\r\n-  useEffect(() => {\r\n-    const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n-    if (Array.isArray(lcData) && lcData.length > 0) {\r\n-      setData(lcData);\r\n-    } else {\r\n-      fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-        .then((res) => res.json())\r\n-        .then((data) => {\r\n-          setData(data);\r\n-          localStorage.setItem(\"cardData\", JSON.stringify(data));\r\n-        });\r\n-    }\r\n-  }, []);\r\n-\r\n-\r\n-  const handleDelete = (id) => {\r\n-    setDeleteId(id);\r\n-    setShowDelete(true);\r\n-  };\r\n-\r\n-  const confirmDelete = () => {\r\n-    fetch(`https://jsonplaceholder.typicode.com/posts/${deleteId}`, {\r\n-      method: \"DELETE\",\r\n-    }).then(() => {\r\n-      const updated = data.filter((post) => post.id !== deleteId);\r\n-      setData(updated);\r\n-      localStorage.setItem(\"cardData\", JSON.stringify(updated));\r\n-      setShowDelete(false);\r\n-    });\r\n-  };\r\n-\r\n-  // ✅ Edit handler\r\n-  const handleEdit = (post) => {\r\n-    setEditData(post); // send data to modal\r\n-  };\r\n-\r\n-  const handleUpdate = (updatedPost) => {\r\n-    const updated = data.map((post) =>\r\n-      post.id === updatedPost.id ? updatedPost : post\r\n-    );\r\n-    setData(updated);\r\n-    localStorage.setItem(\"cardData\", JSON.stringify(updated));\r\n-    setEditData(null); // close modal\r\n-  };\r\n-\r\n-  // Pagination slice\r\n-  const indexOfLastPost = page * cardPerPage;\r\n-  const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-  const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"grid\">\r\n-        {currentPosts.map((post, i) => (\r\n-          <Card key={post.id} style={{ width: \"18rem\" }}>\r\n-            <Card.Body>\r\n-              <Card.Title>\r\n-                {indexOfFirstPost + i + 1}) {post.title}\r\n-              </Card.Title>\r\n-              <hr />\r\n-              <Card.Text>{post.body}</Card.Text>\r\n-              <div className=\"d-flex flex-row\">\r\n-                <button\r\n-                  onClick={() => handleDelete(post.id)}\r\n-                  className=\"btn btn-danger me-2\"\r\n-                >\r\n-                  <i className=\"bi bi-trash3-fill\"></i>\r\n-                </button>\r\n-                <button\r\n-                  onClick={() => handleEdit(post)}\r\n-                  className=\"btn btn-warning\"\r\n-                >\r\n-                  <i className=\"bi bi-pencil-fill\"></i>\r\n-                </button>\r\n-              </div>\r\n-            </Card.Body>\r\n-          </Card>\r\n-        ))}\r\n-      </div>\r\n-\r\n-      {/*  Delete Confirmation Modal */}\r\n-      <Modal show={showDelete} onHide={() => setShowDelete(false)}>\r\n-        <Modal.Header >\r\n-          <Modal.Title>Confirm Delete</Modal.Title>\r\n-        </Modal.Header>\r\n-        <Modal.Body>Are you sure you want to delete this post?</Modal.Body>\r\n-        <Modal.Footer>\r\n-          <Button variant=\"secondary\" onClick={() => setShowDelete(false)}>\r\n-            Cancel\r\n-          </Button>\r\n-          <Button variant=\"danger\" onClick={confirmDelete}>\r\n-            Delete\r\n-          </Button>\r\n-        </Modal.Footer>\r\n-      </Modal>\r\n-\r\n-      {/* 🔹 Reuse PostModal for Edit */}\r\n-      {editData && (\r\n-        <PostModal\r\n-          show={true}\r\n-          initialData={editData}\r\n-          onClose={() => setEditData(null)}\r\n-          onSave={handleUpdate}\r\n-        />\r\n-      )}\r\n-    </>\r\n-  );\r\n-}\r\n-\r\n-export default CardOfInfo;\r\n"
                },
                {
                    "date": 1757333101975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,9 +163,9 @@\n       </div>\r\n \r\n       {/*  Delete Confirmation Modal */}\r\n       <Modal show={showDelete} onHide={() => setShowDelete(false)}>\r\n-        <Modal.Header >\r\n+        <Modal.Header style={{justifyContent:\"space-between\"}}>\r\n           <Modal.Title>Confirm Delete</Modal.Title>\r\n           <button type=\"button\" className=\"btn-close\" onClick={() => setShowDelete(false)} ></button>\r\n \r\n         </Modal.Header>\r\n"
                },
                {
                    "date": 1757333135219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,70 +1,4 @@\n-// import Card from 'react-bootstrap/Card';\r\n-// import { useEffect, useState } from 'react';\r\n-\r\n-\r\n-\r\n-// function CardOfInfo() {\r\n-//     const [data, setData] = useState([]);\r\n-//     const cardPerPage = 10;\r\n-//     const [page, setPage] = useState(1);\r\n-//     const[form,setForm]=useState({title:\"\",body:\"\"})\r\n-\r\n-//     useEffect(() => {\r\n-//         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n-//         if (Array.isArray(lcData) && lcData.length > 0) {\r\n-//             setData(lcData);\r\n-//         }\r\n-//         else {\r\n-//             fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-//                 .then(res => res.json())\r\n-//                 .then(data => {\r\n-//                     setData(data);\r\n-//                     localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n-//                 }\r\n-//                 )\r\n-//         }\r\n-//     }, []);\r\n-\r\n-//     const handleDelete=(id)=>{\r\n-        \r\n-//     }\r\n-\r\n-//     const indexOfLastPost = page * cardPerPage;\r\n-//     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-//     const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-//     console.log(typeof (currentPosts));\r\n-//     return (\r\n-//         <>\r\n-//             <div className='grid'>\r\n-//                 {currentPosts.map((post, i) => (\r\n-//                     <Card key={post.id} style={{ width: '18rem' }}>\r\n-//                         <Card.Body>\r\n-//                             <Card.Title>{indexOfFirstPost + i + 1}){post.title}</Card.Title>\r\n-//                             <hr></hr>\r\n-//                             <Card.Text>\r\n-//                                 {post.body}\r\n-//                             </Card.Text>\r\n-//                             <div className='d-flex flex-row'>\r\n-//                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><i className=\"bi bi-trash3-fill\"></i></button>\r\n-//                                 <button onClick={() => {\r\n-                                    \r\n-\r\n-//                                 }} className='btn btn-warning'><i className=\"bi bi-pencil-fill\"></i></button>\r\n-//                             </div>\r\n-\r\n-//                         </Card.Body>\r\n-//                     </Card>\r\n-//                 )\r\n-//                 )}\r\n-//             </div >\r\n-//         </>\r\n-//     );\r\n-    \r\n-// }\r\n-\r\n-// export default CardOfInfo;\r\n-\r\n import Card from \"react-bootstrap/Card\";\r\n import { useEffect, useState } from \"react\";\r\n import Button from \"react-bootstrap/Button\";\r\n import Modal from \"react-bootstrap/Modal\";\r\n"
                },
                {
                    "date": 1757333170676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n   const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n \r\n   return (\r\n     <>\r\n-      <div className=\"grid\">\r\n+      <div className=\"row\">\r\n         {currentPosts.map((post, i) => (\r\n           <Card key={post.id} style={{ width: \"18rem\" }}>\r\n             <Card.Body>\r\n               <Card.Title>\r\n"
                },
                {
                    "date": 1757333185147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n   const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n \r\n   return (\r\n     <>\r\n-      <div className=\"row\">\r\n+      <div className=\"row\" style={gap:\"20px\"}>\r\n         {currentPosts.map((post, i) => (\r\n           <Card key={post.id} style={{ width: \"18rem\" }}>\r\n             <Card.Body>\r\n               <Card.Title>\r\n"
                },
                {
                    "date": 1757333191265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n   const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n \r\n   return (\r\n     <>\r\n-      <div className=\"row\" style={gap:\"20px\"}>\r\n+      <div className=\"row\" style={{gap:\"20px\"}}>\r\n         {currentPosts.map((post, i) => (\r\n           <Card key={post.id} style={{ width: \"18rem\" }}>\r\n             <Card.Body>\r\n               <Card.Title>\r\n"
                },
                {
                    "date": 1757333240445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,10 @@\n                 {indexOfFirstPost + i + 1}) {post.title}\r\n               </Card.Title>\r\n               <hr />\r\n               <Card.Text>{post.body}</Card.Text>\r\n-              <div className=\"d-flex flex-row\">\r\n+            </Card.Body>\r\n+            <div className=\"d-flex flex-row\">\r\n                 <button\r\n                   onClick={() => handleDelete(post.id)}\r\n                   className=\"btn btn-danger me-2\"\r\n                 >\r\n@@ -90,9 +91,8 @@\n                 >\r\n                   <i className=\"bi bi-pencil-fill\"></i>\r\n                 </button>\r\n               </div>\r\n-            </Card.Body>\r\n           </Card>\r\n         ))}\r\n       </div>\r\n \r\n"
                },
                {
                    "date": 1757333259348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n   return (\r\n     <>\r\n       <div className=\"row\" style={{gap:\"20px\"}}>\r\n         {currentPosts.map((post, i) => (\r\n-          <Card key={post.id} style={{ width: \"18rem\" }}>\r\n+          <Card key={post.id} style={{ width: \"21rem\" }}>\r\n             <Card.Body>\r\n               <Card.Title>\r\n                 {indexOfFirstPost + i + 1}) {post.title}\r\n               </Card.Title>\r\n"
                },
                {
                    "date": 1757333265844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n   return (\r\n     <>\r\n       <div className=\"row\" style={{gap:\"20px\"}}>\r\n         {currentPosts.map((post, i) => (\r\n-          <Card key={post.id} style={{ width: \"21rem\" }}>\r\n+          <Card key={post.id} style={{ width: \"25rem\" }}>\r\n             <Card.Body>\r\n               <Card.Title>\r\n                 {indexOfFirstPost + i + 1}) {post.title}\r\n               </Card.Title>\r\n"
                },
                {
                    "date": 1757333276908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n   return (\r\n     <>\r\n       <div className=\"row\" style={{gap:\"20px\"}}>\r\n         {currentPosts.map((post, i) => (\r\n-          <Card key={post.id} style={{ width: \"25rem\" }}>\r\n+          <Card key={post.id} style={{ width: \"22.2rem\" }}>\r\n             <Card.Body>\r\n               <Card.Title>\r\n                 {indexOfFirstPost + i + 1}) {post.title}\r\n               </Card.Title>\r\n"
                },
                {
                    "date": 1757333284658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n   return (\r\n     <>\r\n       <div className=\"row\" style={{gap:\"20px\"}}>\r\n         {currentPosts.map((post, i) => (\r\n-          <Card key={post.id} style={{ width: \"22.2rem\" }}>\r\n+          <Card key={post.id} style={{ width: \"22.4rem\" }}>\r\n             <Card.Body>\r\n               <Card.Title>\r\n                 {indexOfFirstPost + i + 1}) {post.title}\r\n               </Card.Title>\r\n"
                },
                {
                    "date": 1757333549914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n function CardOfInfo() {\r\n   const [data, setData] = useState([]);\r\n   const cardPerPage = 10;\r\n   const [page, setPage] = useState(1);\r\n+  const [showAdd,setShowAdd]=useState(false);\r\n \r\n   // For delete modal\r\n   const [showDelete, setShowDelete] = useState(false);\r\n   const [deleteId, setDeleteId] = useState(null);\r\n"
                },
                {
                    "date": 1757334160404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import PostModal from \"./Addpost\"; \r\n \r\n function CardOfInfo() {\r\n   const [data, setData] = useState([]);\r\n-  const cardPerPage = 10;\r\n+  const cardPerPage = 9;\r\n   const [page, setPage] = useState(1);\r\n   const [showAdd,setShowAdd]=useState(false);\r\n \r\n   // For delete modal\r\n"
                },
                {
                    "date": 1757335316926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,131 +1,136 @@\n import Card from \"react-bootstrap/Card\";\r\n import { useEffect, useState } from \"react\";\r\n import Button from \"react-bootstrap/Button\";\r\n import Modal from \"react-bootstrap/Modal\";\r\n-import PostModal from \"./Addpost\"; \r\n+import PostModal from \"./Addpost\";\r\n \r\n function CardOfInfo() {\r\n-  const [data, setData] = useState([]);\r\n-  const cardPerPage = 9;\r\n-  const [page, setPage] = useState(1);\r\n-  const [showAdd,setShowAdd]=useState(false);\r\n+    const [data, setData] = useState([]);\r\n+    const cardPerPage = 9;\r\n+    const [page, setPage] = useState(1);\r\n+    const [showAdd, setShowAdd] = useState(false);\r\n \r\n-  // For delete modal\r\n-  const [showDelete, setShowDelete] = useState(false);\r\n-  const [deleteId, setDeleteId] = useState(null);\r\n+    // For delete modal\r\n+    const [showDelete, setShowDelete] = useState(false);\r\n+    const [deleteId, setDeleteId] = useState(null);\r\n \r\n-  // For edit modal\r\n-  const [editData, setEditData] = useState(null);\r\n+    // For edit modal\r\n+    const [editData, setEditData] = useState(null);\r\n \r\n-  useEffect(() => {\r\n-    const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n-    if (Array.isArray(lcData) && lcData.length > 0) {\r\n-      setData(lcData);\r\n-    } else {\r\n-      fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-        .then((res) => res.json())\r\n-        .then((data) => {\r\n-          setData(data);\r\n-          localStorage.setItem(\"cardData\", JSON.stringify(data));\r\n-        });\r\n-    }\r\n-  }, []);\r\n+    useEffect(() => {\r\n+        const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n+        if (Array.isArray(lcData) && lcData.length > 0) {\r\n+            setData(lcData);\r\n+        } else {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+                .then((res) => res.json())\r\n+                .then((data) => {\r\n+                    setData(data);\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(data));\r\n+                });\r\n+        }\r\n+    }, []);\r\n \r\n \r\n-  const handleDelete = (id) => {\r\n-    setDeleteId(id);\r\n-    setShowDelete(true);\r\n-  };\r\n+    const handleDelete = (id) => {\r\n+        setDeleteId(id);\r\n+        setShowDelete(true);\r\n+    };\r\n \r\n-  const confirmDelete = () => {\r\n-    fetch(`https://jsonplaceholder.typicode.com/posts/${deleteId}`, {\r\n-      method: \"DELETE\",\r\n-    }).then(() => {\r\n-      const updated = data.filter((post) => post.id !== deleteId);\r\n-      setData(updated);\r\n-      localStorage.setItem(\"cardData\", JSON.stringify(updated));\r\n-      setShowDelete(false);\r\n-    });\r\n-  };\r\n+    const confirmDelete = () => {\r\n+        fetch(`https://jsonplaceholder.typicode.com/posts/${deleteId}`, {\r\n+            method: \"DELETE\",\r\n+        }).then(() => {\r\n+            const updated = data.filter((post) => post.id !== deleteId);\r\n+            setData(updated);\r\n+            localStorage.setItem(\"cardData\", JSON.stringify(updated));\r\n+            setShowDelete(false);\r\n+        });\r\n+    };\r\n \r\n-  // ✅ Edit handler\r\n-  const handleEdit = (post) => {\r\n-    setEditData(post); // send data to modal\r\n-  };\r\n+    // ✅ Edit handler\r\n+    const handleEdit = (post) => {\r\n+        setEditData(post); // send data to modal\r\n+    };\r\n \r\n-  const handleUpdate = (updatedPost) => {\r\n-    const updated = data.map((post) =>\r\n-      post.id === updatedPost.id ? updatedPost : post\r\n-    );\r\n-    setData(updated);\r\n-    localStorage.setItem(\"cardData\", JSON.stringify(updated));\r\n-    setEditData(null); // close modal\r\n-  };\r\n+    const handleUpdate = (updatedPost) => {\r\n+        const updated = data.map((post) =>\r\n+            post.id === updatedPost.id ? updatedPost : post\r\n+        );\r\n+        setData(updated);\r\n+        localStorage.setItem(\"cardData\", JSON.stringify(updated));\r\n+        setEditData(null); // close modal\r\n+    };\r\n \r\n-  // Pagination slice\r\n-  const indexOfLastPost = page * cardPerPage;\r\n-  const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-  const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+    // Pagination slice\r\n+    const indexOfLastPost = page * cardPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n \r\n-  return (\r\n-    <>\r\n-      <div className=\"row\" style={{gap:\"20px\"}}>\r\n-        {currentPosts.map((post, i) => (\r\n-          <Card key={post.id} style={{ width: \"22.4rem\" }}>\r\n-            <Card.Body>\r\n-              <Card.Title>\r\n-                {indexOfFirstPost + i + 1}) {post.title}\r\n-              </Card.Title>\r\n-              <hr />\r\n-              <Card.Text>{post.body}</Card.Text>\r\n-            </Card.Body>\r\n-            <div className=\"d-flex flex-row\">\r\n-                <button\r\n-                  onClick={() => handleDelete(post.id)}\r\n-                  className=\"btn btn-danger me-2\"\r\n-                >\r\n-                  <i className=\"bi bi-trash3-fill\"></i>\r\n-                </button>\r\n-                <button\r\n-                  onClick={() => handleEdit(post)}\r\n-                  className=\"btn btn-warning\"\r\n-                >\r\n-                  <i className=\"bi bi-pencil-fill\"></i>\r\n-                </button>\r\n-              </div>\r\n-          </Card>\r\n-        ))}\r\n-      </div>\r\n+    const truncate = (text, maxChars) => {\r\n+        if (text.length <= maxChars) return text;\r\n+        return text.slice(0, maxChars) + \"...\";\r\n+    };\r\n \r\n-      {/*  Delete Confirmation Modal */}\r\n-      <Modal show={showDelete} onHide={() => setShowDelete(false)}>\r\n-        <Modal.Header style={{justifyContent:\"space-between\"}}>\r\n-          <Modal.Title>Confirm Delete</Modal.Title>\r\n-          <button type=\"button\" className=\"btn-close\" onClick={() => setShowDelete(false)} ></button>\r\n+    return (\r\n+        <>\r\n+            <div className=\"row\" style={{ gap: \"20px\" }}>\r\n+                {currentPosts.map((post, i) => (\r\n+                    <Card key={post.id} style={{ width: \"22.4rem\" }}>\r\n+                        <Card.Body>\r\n+                            <Card.Title>\r\n+                                {indexOfFirstPost + i + 1}) truncate({post.title},16)\r\n+                            </Card.Title>\r\n+                            <hr />\r\n+                            <Card.Text>truncate({post.body},100)</Card.Text>\r\n+                        </Card.Body>\r\n+                        <div className=\"d-flex flex-row\">\r\n+                            <button\r\n+                                onClick={() => handleDelete(post.id)}\r\n+                                className=\"btn btn-danger me-2\"\r\n+                            >\r\n+                                <i className=\"bi bi-trash3-fill\"></i>\r\n+                            </button>\r\n+                            <button\r\n+                                onClick={() => handleEdit(post)}\r\n+                                className=\"btn btn-warning\"\r\n+                            >\r\n+                                <i className=\"bi bi-pencil-fill\"></i>\r\n+                            </button>\r\n+                        </div>\r\n+                    </Card>\r\n+                ))}\r\n+            </div>\r\n \r\n-        </Modal.Header>\r\n-        <Modal.Body>Are you sure you want to delete this post?</Modal.Body>\r\n-        <Modal.Footer>\r\n-          <Button variant=\"secondary\" onClick={() => setShowDelete(false)}>\r\n-            Cancel\r\n-          </Button>\r\n-          <Button variant=\"danger\" onClick={confirmDelete}>\r\n-            Delete\r\n-          </Button>\r\n-        </Modal.Footer>\r\n-      </Modal>\r\n+            {/*  Delete Confirmation Modal */}\r\n+            <Modal show={showDelete} onHide={() => setShowDelete(false)}>\r\n+                <Modal.Header style={{ justifyContent: \"space-between\" }}>\r\n+                    <Modal.Title>Confirm Delete</Modal.Title>\r\n+                    <button type=\"button\" className=\"btn-close\" onClick={() => setShowDelete(false)} ></button>\r\n \r\n-      {/* 🔹 Reuse PostModal for Edit */}\r\n-      {editData && (\r\n-        <PostModal\r\n-          show={true}\r\n-          initialData={editData}\r\n-          onClose={() => setEditData(null)}\r\n-          onSave={handleUpdate}\r\n-        />\r\n-      )}\r\n-    </>\r\n-  );\r\n+                </Modal.Header>\r\n+                <Modal.Body>Are you sure you want to delete this post?</Modal.Body>\r\n+                <Modal.Footer>\r\n+                    <Button variant=\"secondary\" onClick={() => setShowDelete(false)}>\r\n+                        Cancel\r\n+                    </Button>\r\n+                    <Button variant=\"danger\" onClick={confirmDelete}>\r\n+                        Delete\r\n+                    </Button>\r\n+                </Modal.Footer>\r\n+            </Modal>\r\n+\r\n+            {/* 🔹 Reuse PostModal for Edit */}\r\n+            {editData && (\r\n+                <PostModal\r\n+                    show={true}\r\n+                    initialData={editData}\r\n+                    onClose={() => setEditData(null)}\r\n+                    onSave={handleUpdate}\r\n+                />\r\n+            )}\r\n+        </>\r\n+    );\r\n }\r\n \r\n export default CardOfInfo;\r\n"
                },
                {
                    "date": 1757335333228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,12 +78,12 @@\n                 {currentPosts.map((post, i) => (\r\n                     <Card key={post.id} style={{ width: \"22.4rem\" }}>\r\n                         <Card.Body>\r\n                             <Card.Title>\r\n-                                {indexOfFirstPost + i + 1}) truncate({post.title},16)\r\n+                                {indexOfFirstPost + i + 1}) truncate(post.title,16)\r\n                             </Card.Title>\r\n                             <hr />\r\n-                            <Card.Text>truncate({post.body},100)</Card.Text>\r\n+                            <Card.Text>truncate(post.body,100)</Card.Text>\r\n                         </Card.Body>\r\n                         <div className=\"d-flex flex-row\">\r\n                             <button\r\n                                 onClick={() => handleDelete(post.id)}\r\n"
                },
                {
                    "date": 1757335365717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,12 +78,12 @@\n                 {currentPosts.map((post, i) => (\r\n                     <Card key={post.id} style={{ width: \"22.4rem\" }}>\r\n                         <Card.Body>\r\n                             <Card.Title>\r\n-                                {indexOfFirstPost + i + 1}) truncate(post.title,16)\r\n+                                {indexOfFirstPost + i + 1}) {truncate(post.title,16)}\r\n                             </Card.Title>\r\n                             <hr />\r\n-                            <Card.Text>truncate(post.body,100)</Card.Text>\r\n+                            <Card.Text>{truncate(post.body,100)}</Card.Text>\r\n                         </Card.Body>\r\n                         <div className=\"d-flex flex-row\">\r\n                             <button\r\n                                 onClick={() => handleDelete(post.id)}\r\n"
                },
                {
                    "date": 1757335405176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n             <div className=\"row\" style={{ gap: \"20px\" }}>\r\n                 {currentPosts.map((post, i) => (\r\n                     <Card key={post.id} style={{ width: \"22.4rem\" }}>\r\n                         <Card.Body>\r\n-                            <Card.Title>\r\n+                            <Card.Title title={post.title}>\r\n                                 {indexOfFirstPost + i + 1}) {truncate(post.title,16)}\r\n                             </Card.Title>\r\n                             <hr />\r\n                             <Card.Text>{truncate(post.body,100)}</Card.Text>\r\n"
                },
                {
                    "date": 1757335428415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n                             <Card.Title title={post.title}>\r\n                                 {indexOfFirstPost + i + 1}) {truncate(post.title,16)}\r\n                             </Card.Title>\r\n                             <hr />\r\n-                            <Card.Text>{truncate(post.body,100)}</Card.Text>\r\n+                            <Card.Text title={post.body}>{truncate(post.body,100)}</Card.Text>\r\n                         </Card.Body>\r\n                         <div className=\"d-flex flex-row\">\r\n                             <button\r\n                                 onClick={() => handleDelete(post.id)}\r\n"
                },
                {
                    "date": 1757335453153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,11 @@\n     return (\r\n         <>\r\n             <div className=\"row\" style={{ gap: \"20px\" }}>\r\n                 {currentPosts.map((post, i) => (\r\n-                    <Card key={post.id} style={{ width: \"22.4rem\" }}>\r\n+                    <Card key={post.id} style={{ width: \"22.4rem\",\r\n+                        cursor:\"pointer\"\r\n+                     }}>\r\n                         <Card.Body>\r\n                             <Card.Title title={post.title}>\r\n                                 {indexOfFirstPost + i + 1}) {truncate(post.title,16)}\r\n                             </Card.Title>\r\n"
                },
                {
                    "date": 1757335498459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,12 +73,14 @@\n     };\r\n \r\n     return (\r\n         <>\r\n-            <div className=\"row\" style={{ gap: \"20px\" }}>\r\n+            <div className=\"row\" style={{ gap: \"20px\", \r\n+                margin:\"20px\"\r\n+            }}>\r\n                 {currentPosts.map((post, i) => (\r\n                     <Card key={post.id} style={{ width: \"22.4rem\",\r\n-                        cursor:\"pointer\"\r\n+                        cursor:\"pointer\"        \r\n                      }}>\r\n                         <Card.Body>\r\n                             <Card.Title title={post.title}>\r\n                                 {indexOfFirstPost + i + 1}) {truncate(post.title,16)}\r\n"
                },
                {
                    "date": 1757335513949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n \r\n     return (\r\n         <>\r\n             <div className=\"row\" style={{ gap: \"20px\", \r\n-                margin:\"20px\"\r\n+                marginBottom:\"10px\"\r\n             }}>\r\n                 {currentPosts.map((post, i) => (\r\n                     <Card key={post.id} style={{ width: \"22.4rem\",\r\n                         cursor:\"pointer\"        \r\n"
                },
                {
                    "date": 1757335519850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n \r\n     return (\r\n         <>\r\n             <div className=\"row\" style={{ gap: \"20px\", \r\n-                marginBottom:\"10px\"\r\n+                marginBottom:\"20px\"\r\n             }}>\r\n                 {currentPosts.map((post, i) => (\r\n                     <Card key={post.id} style={{ width: \"22.4rem\",\r\n                         cursor:\"pointer\"        \r\n"
                },
                {
                    "date": 1757335872816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -123,9 +123,8 @@\n                     </Button>\r\n                 </Modal.Footer>\r\n             </Modal>\r\n \r\n-            {/* 🔹 Reuse PostModal for Edit */}\r\n             {editData && (\r\n                 <PostModal\r\n                     show={true}\r\n                     initialData={editData}\r\n"
                }
            ],
            "date": 1757330921140,
            "name": "Commit-0",
            "content": "import Card from 'react-bootstrap/Card';\r\n\r\nfunction TextExample() {\r\n  return (\r\n    <Card style={{ width: '18rem' }}>\r\n      <Card.Body>\r\n        <Card.Title>Card Title</Card.Title>\r\n        <ht></ht>\r\n        <Card.Text>\r\n          Some quick example text to build on the card title and make up the\r\n          bulk of the card's content.\r\n        </Card.Text>\r\n        <Card.Link href=\"#\">Card Link</Card.Link>\r\n        <Card.Link href=\"#\">Another Link</Card.Link>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default TextExample;"
        }
    ]
}