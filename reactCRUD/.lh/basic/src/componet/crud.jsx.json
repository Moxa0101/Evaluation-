{
    "sourceFile": "basic/src/componet/crud.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 423,
            "patches": [
                {
                    "date": 1757075677649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757075714719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n-import React from 'react'\r\n+import React, {useState,useEffect} from 'react'\r\n \r\n export const crud = () => {\r\n-  return (\r\n-    <div>crud</div>\r\n-  )\r\n+\r\n+\r\n+\r\n }\r\n"
                },
                {
                    "date": 1757075756922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, {useState,useEffect} from 'react'\r\n \r\n-export const crud = () => {\r\n+export default function crud () {\r\n \r\n \r\n \r\n }\r\n"
                },
                {
                    "date": 1757075826021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import React, {useState,useEffect} from 'react'\r\n \r\n export default function crud () {\r\n+    const [showForm,setShowForm]=useState(false);\r\n \r\n \r\n \r\n }\r\n"
                },
                {
                    "date": 1757075935353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,11 @@\n-import React, {useState,useEffect} from 'react'\r\n+import React, { useState, useEffect } from 'react'\r\n \r\n-export default function crud () {\r\n-    const [showForm,setShowForm]=useState(false);\r\n+export default function crud() {\r\n+    const [showForm, setShowForm] = useState(false);\r\n+    const[page,setPage]=useState(1);\r\n \r\n \r\n \r\n+\r\n+\r\n }\r\n"
                },
                {
                    "date": 1757076103461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,12 @@\n import React, { useState, useEffect } from 'react'\r\n \r\n export default function crud() {\r\n     const [showForm, setShowForm] = useState(false);\r\n-    const[page,setPage]=useState(1);\r\n+    const[form,setForm]=useState({title:\"\",description:\"\"});\r\n \r\n \r\n \r\n \r\n \r\n+\r\n }\r\n"
                },
                {
                    "date": 1757076480060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,32 @@\n import React, { useState, useEffect } from 'react'\r\n \r\n export default function crud() {\r\n     const [showForm, setShowForm] = useState(false);\r\n-    const[form,setForm]=useState({title:\"\",description:\"\"});\r\n+    const [form, setForm] = useState({ title: \"\", description: \"\" });\r\n+    const [edit, setEdit] = useState(null);\r\n+    const [posts, setPosts] = useState([]);\r\n \r\n \r\n+    useEffect = () => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+            .then(res => res.json)\r\n+            .then(data => setPosts(data))\r\n+    }\r\n \r\n \r\n \r\n+    return (\r\n+        <div className='container'>\r\n+            <div className='card'>\r\n+                <div className='card.tirle'></div>\r\n+                <div className='card.body'></div>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n \r\n+\r\n+\r\n+\r\n+\r\n+\r\n }\r\n"
                },
                {
                    "date": 1757076553078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,16 +6,14 @@\n     const [edit, setEdit] = useState(null);\r\n     const [posts, setPosts] = useState([]);\r\n \r\n \r\n-    useEffect = () => {\r\n+    useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json)\r\n             .then(data => setPosts(data))\r\n-    }\r\n+    }, []);\r\n \r\n-\r\n-\r\n     return (\r\n         <div className='container'>\r\n             <div className='card'>\r\n                 <div className='card.tirle'></div>\r\n"
                },
                {
                    "date": 1757076740390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,12 +14,15 @@\n     }, []);\r\n \r\n     return (\r\n         <div className='container'>\r\n-            <div className='card'>\r\n-                <div className='card.tirle'></div>\r\n+            {data.map((post)=>{\r\n+                <div className='card' key={post.id}>\r\n+                <div className='card.title'>{post.title}</div>\r\n                 <div className='card.body'></div>\r\n             </div>\r\n+            })}\r\n+            \r\n         </div>\r\n     )\r\n \r\n \r\n"
                },
                {
                    "date": 1757078151017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n \r\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-            .then(res => res.json)\r\n+            .then(res => res.json())\r\n             .then(data => setPosts(data))\r\n     }, []);\r\n \r\n     return (\r\n"
                },
                {
                    "date": 1757078164096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n     }, []);\r\n \r\n     return (\r\n         <div className='container'>\r\n-            {data.map((post)=>{\r\n+            {posts.map((post)=>{\r\n                 <div className='card' key={post.id}>\r\n                 <div className='card.title'>{post.title}</div>\r\n                 <div className='card.body'></div>\r\n             </div>\r\n"
                },
                {
                    "date": 1757078189225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,10 +16,10 @@\n     return (\r\n         <div className='container'>\r\n             {posts.map((post)=>{\r\n                 <div className='card' key={post.id}>\r\n-                <div className='card.title'>{post.title}</div>\r\n-                <div className='card.body'></div>\r\n+                <div className='card-title'>{post.title}</div>\r\n+                <div className='card-body'></div>\r\n             </div>\r\n             })}\r\n             \r\n         </div>\r\n"
                },
                {
                    "date": 1757078228824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState, useEffect } from 'react'\r\n \r\n-export default function crud() {\r\n+export default function Crud() {\r\n     const [showForm, setShowForm] = useState(false);\r\n     const [form, setForm] = useState({ title: \"\", description: \"\" });\r\n     const [edit, setEdit] = useState(null);\r\n     const [posts, setPosts] = useState([]);\r\n"
                },
                {
                    "date": 1757078264975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n export default function Crud() {\r\n     const [showForm, setShowForm] = useState(false);\r\n     const [form, setForm] = useState({ title: \"\", description: \"\" });\r\n     const [edit, setEdit] = useState(null);\r\n-    const [posts, setPosts] = useState([]);\r\n+    const [data, setData] = useState([]);\r\n \r\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n@@ -14,9 +14,9 @@\n     }, []);\r\n \r\n     return (\r\n         <div className='container'>\r\n-            {posts.map((post)=>{\r\n+            {data.map((post)=>{\r\n                 <div className='card' key={post.id}>\r\n                 <div className='card-title'>{post.title}</div>\r\n                 <div className='card-body'></div>\r\n             </div>\r\n"
                },
                {
                    "date": 1757078270462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n-            .then(data => setPosts(data))\r\n+            .then(data => setData(data))\r\n     }, []);\r\n \r\n     return (\r\n         <div className='container'>\r\n"
                },
                {
                    "date": 1757078357947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n         <div className='container'>\r\n             {data.map((post)=>{\r\n                 <div className='card' key={post.id}>\r\n                 <div className='card-title'>{post.title}</div>\r\n-                <div className='card-body'></div>\r\n+                <div className='card-body'>{post.body}</div>\r\n             </div>\r\n             })}\r\n             \r\n         </div>\r\n"
                },
                {
                    "date": 1757078407626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,16 +14,15 @@\n     }, []);\r\n \r\n     return (\r\n         <div className='container'>\r\n-            {data.map((post)=>{\r\n+            {data.map=(post)=>{\r\n                 <div className='card' key={post.id}>\r\n                 <div className='card-title'>{post.title}</div>\r\n                 <div className='card-body'>{post.body}</div>\r\n             </div>\r\n-            })}\r\n-            \r\n-        </div>\r\n+            }\r\n+            </div>\r\n     )\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1757078421448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n                 <div className='card' key={post.id}>\r\n                 <div className='card-title'>{post.title}</div>\r\n                 <div className='card-body'>{post.body}</div>\r\n             </div>\r\n-            }\r\n+            }}\r\n             </div>\r\n     )\r\n \r\n \r\n"
                },
                {
                    "date": 1757078716371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,15 +14,16 @@\n     }, []);\r\n \r\n     return (\r\n         <div className='container'>\r\n-            {data.map=(post)=>{\r\n+            {data.map((post)=>{\r\n                 <div className='card' key={post.id}>\r\n                 <div className='card-title'>{post.title}</div>\r\n                 <div className='card-body'>{post.body}</div>\r\n             </div>\r\n-            }}\r\n-            </div>\r\n+            })}\r\n+            \r\n+        </div>\r\n     )\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1757134359151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,17 +12,27 @@\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n     }, []);\r\n \r\n+    useEffect(() => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/posts\",{\r\n+            method:\"POST\",\r\n+        })\r\n+        \r\n+        headers:{\"content-type\":\"application/js; charset=UTF-8\"},\r\n+\r\n+\r\n+    })\r\n+\r\n     return (\r\n         <div className='container'>\r\n-            {data.map((post)=>{\r\n+            {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n-                <div className='card-title'>{post.title}</div>\r\n-                <div className='card-body'>{post.body}</div>\r\n-            </div>\r\n+                    <div className='card-title'>{post.title}</div>\r\n+                    <div className='card-body'>{post.body}</div>\r\n+                </div>\r\n             })}\r\n-            \r\n+\r\n         </div>\r\n     )\r\n \r\n \r\n"
                },
                {
                    "date": 1757134511345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,13 +13,17 @@\n             .then(data => setData(data))\r\n     }, []);\r\n \r\n     useEffect(() => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/posts\",{\r\n-            method:\"POST\",\r\n-        })\r\n-        \r\n-        headers:{\"content-type\":\"application/js; charset=UTF-8\"},\r\n+        fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+            method: \"POST\",\r\n+            body: JSON.stringify({\r\n+                title: 'foo',\r\n+                body: 'bar',\r\n+                userId: 1,\r\n+            }),\r\n+        }),\r\n+            headers: { \"content-type\": \"application/js; charset=UTF-8\" },\r\n \r\n \r\n     })\r\n \r\n"
                },
                {
                    "date": 1757134571422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,12 +20,16 @@\n                 title: 'foo',\r\n                 body: 'bar',\r\n                 userId: 1,\r\n             }),\r\n+\r\n+            headers: {\r\n+                'Content-type': 'application/json; charset=UTF-8',\r\n+            },\r\n         }),\r\n-            headers: { \"content-type\": \"application/js; charset=UTF-8\" },\r\n+            .then((response) => response.json())\r\n+                .then((json) => console.log(json));\r\n \r\n-\r\n     })\r\n \r\n     return (\r\n         <div className='container'>\r\n"
                },
                {
                    "date": 1757134589589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,11 +24,11 @@\n \r\n             headers: {\r\n                 'Content-type': 'application/json; charset=UTF-8',\r\n             },\r\n-        }),\r\n+        })\r\n             .then((response) => response.json())\r\n-                .then((json) => console.log(json));\r\n+            .then((json) => console.log(json));\r\n \r\n     })\r\n \r\n     return (\r\n"
                },
                {
                    "date": 1757134874795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,24 +16,24 @@\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n             method: \"POST\",\r\n             body: JSON.stringify({\r\n-                title: 'foo',\r\n-                body: 'bar',\r\n-                userId: 1,\r\n+                title: ,\r\n+                body: ,\r\n+                userId: ,\r\n             }),\r\n \r\n             headers: {\r\n                 'Content-type': 'application/json; charset=UTF-8',\r\n             },\r\n         })\r\n             .then((response) => response.json())\r\n-            .then((json) => console.log(json));\r\n-\r\n+            // .then((json) => console.log(json));\r\n     })\r\n \r\n     return (\r\n         <div className='container'>\r\n+            <button onClick={setShowForm(!showForm)}>{showForm===true?:Hide:Show}</button>\r\n             {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n                     <div className='card-title'>{post.title}</div>\r\n                     <div className='card-body'>{post.body}</div>\r\n"
                },
                {
                    "date": 1757134915917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n     })\r\n \r\n     return (\r\n         <div className='container'>\r\n-            <button onClick={setShowForm(!showForm)}>{showForm===true?:Hide:Show}</button>\r\n+            <button onClick={setShowForm(!showForm)}>{showForm?:\"Hide\":\"Show\"}</button>\r\n             {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n                     <div className='card-title'>{post.title}</div>\r\n                     <div className='card-body'>{post.body}</div>\r\n"
                },
                {
                    "date": 1757134932935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n     })\r\n \r\n     return (\r\n         <div className='container'>\r\n-            <button onClick={setShowForm(!showForm)}>{showForm?:\"Hide\":\"Show\"}</button>\r\n+            <button onClick={()=>{setShowForm(!showForm)}}>{showForm?:\"Hide\":\"Show\"}</button>\r\n             {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n                     <div className='card-title'>{post.title}</div>\r\n                     <div className='card-body'>{post.body}</div>\r\n"
                },
                {
                    "date": 1757134971170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,14 +26,15 @@\n                 'Content-type': 'application/json; charset=UTF-8',\r\n             },\r\n         })\r\n             .then((response) => response.json())\r\n-            // .then((json) => console.log(json));\r\n+        // .then((json) => console.log(json));\r\n     })\r\n \r\n     return (\r\n         <div className='container'>\r\n-            <button onClick={()=>{setShowForm(!showForm)}}>{showForm?:\"Hide\":\"Show\"}</button>\r\n+            <button onClick={() => { setShowForm(!showForm) }}>\r\n+                {showForm ? 'Hide Form' : 'Show Form'}</button>\r\n             {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n                     <div className='card-title'>{post.title}</div>\r\n                     <div className='card-body'>{post.body}</div>\r\n"
                },
                {
                    "date": 1757134986306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,15 +26,14 @@\n                 'Content-type': 'application/json; charset=UTF-8',\r\n             },\r\n         })\r\n             .then((response) => response.json())\r\n-        // .then((json) => console.log(json));\r\n+            // .then((json) => console.log(json));\r\n     })\r\n \r\n     return (\r\n         <div className='container'>\r\n-            <button onClick={() => { setShowForm(!showForm) }}>\r\n-                {showForm ? 'Hide Form' : 'Show Form'}</button>\r\n+            <button onClick={()=>{setShowForm(!showForm)}}>{showForm ? 'Hide Form' : 'Show Form'}</button>\r\n             {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n                     <div className='card-title'>{post.title}</div>\r\n                     <div className='card-body'>{post.body}</div>\r\n"
                },
                {
                    "date": 1757135041006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,28 +12,28 @@\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n     }, []);\r\n \r\n-    useEffect(() => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-            method: \"POST\",\r\n-            body: JSON.stringify({\r\n-                title: ,\r\n-                body: ,\r\n-                userId: ,\r\n-            }),\r\n+    // // useEffect(() => {\r\n+    // //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+    // //         method: \"POST\",\r\n+    // //         body: JSON.stringify({\r\n+    // //             title: ,\r\n+    // //             body: ,\r\n+    // //             userId: ,\r\n+    // //         }),\r\n \r\n-            headers: {\r\n-                'Content-type': 'application/json; charset=UTF-8',\r\n-            },\r\n-        })\r\n-            .then((response) => response.json())\r\n-            // .then((json) => console.log(json));\r\n-    })\r\n+    // //         headers: {\r\n+    // //             'Content-type': 'application/json; charset=UTF-8',\r\n+    // //         },\r\n+    // //     })\r\n+    //         .then((response) => response.json())\r\n+    //         // .then((json) => console.log(json));\r\n+    // })\r\n \r\n     return (\r\n         <div className='container'>\r\n-            <button onClick={()=>{setShowForm(!showForm)}}>{showForm ? 'Hide Form' : 'Show Form'}</button>\r\n+            <button onClick={()=>{setShowForm(!showForm)}}>{showForm? \"Hide\":\"Show\"}</button>\r\n             {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n                     <div className='card-title'>{post.title}</div>\r\n                     <div className='card-body'>{post.body}</div>\r\n"
                },
                {
                    "date": 1757135743452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,28 +12,44 @@\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n     }, []);\r\n \r\n-    // // useEffect(() => {\r\n-    // //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-    // //         method: \"POST\",\r\n-    // //         body: JSON.stringify({\r\n-    // //             title: ,\r\n-    // //             body: ,\r\n-    // //             userId: ,\r\n-    // //         }),\r\n+    const handleChange=(event)=>{\r\n+        setForm({...form,[event.target.name]:event.target.value})\r\n+    };\r\n+    const handleSubmit=(e)=>{\r\n+        e.preventDefault();\r\n+    }\r\n+    if(editId){\r\n \r\n-    // //         headers: {\r\n-    // //             'Content-type': 'application/json; charset=UTF-8',\r\n-    // //         },\r\n-    // //     })\r\n-    //         .then((response) => response.json())\r\n-    //         // .then((json) => console.log(json));\r\n-    // })\r\n+    }\r\n+    const handleDelte=(id)=>{\r\n+        fetch('https://jsonplaceholder.typicode.com/posts', {\r\n+  method: 'POST',\r\n+  body: JSON.stringify({\r\n+    title: 'foo',\r\n+    body: 'bar',\r\n+    userId: 1,\r\n+  }),\r\n+  headers: {\r\n+    'Content-type': 'application/json; charset=UTF-8',\r\n+  },\r\n+})\r\n+  .then((response) => response.json())\r\n+  .then((json) => console.log(json));\r\n+    }\r\n \r\n+    useEffect(() => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/posts\",{\r\n+            method:\"DELETE\"\r\n+    }).then(()=>setData(data.filter(data.id!=id)))\r\n+\r\n+    })\r\n+\r\n     return (\r\n         <div className='container'>\r\n             <button onClick={()=>{setShowForm(!showForm)}}>{showForm? \"Hide\":\"Show\"}</button>\r\n+\r\n             {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n                     <div className='card-title'>{post.title}</div>\r\n                     <div className='card-body'>{post.body}</div>\r\n"
                },
                {
                    "date": 1757135842912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,56 +12,59 @@\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n     }, []);\r\n \r\n-    const handleChange=(event)=>{\r\n-        setForm({...form,[event.target.name]:event.target.value})\r\n+    const handleChange = (event) => {\r\n+        setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n-    const handleSubmit=(e)=>{\r\n+    const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n     }\r\n-    if(editId){\r\n+    if (editId) {\r\n \r\n     }\r\n-    const handleDelte=(id)=>{\r\n+    const handleDelte = (id) => {\r\n         fetch('https://jsonplaceholder.typicode.com/posts', {\r\n-  method: 'POST',\r\n-  body: JSON.stringify({\r\n-    title: 'foo',\r\n-    body: 'bar',\r\n-    userId: 1,\r\n-  }),\r\n-  headers: {\r\n-    'Content-type': 'application/json; charset=UTF-8',\r\n-  },\r\n-})\r\n-  .then((response) => response.json())\r\n-  .then((json) => console.log(json));\r\n+            method: 'POST',\r\n+            body: JSON.stringify({\r\n+                title: 'foo',\r\n+                body: 'bar',\r\n+                userId: 1,\r\n+            }),\r\n+            headers: {\r\n+                'Content-type': 'application/json; charset=UTF-8',\r\n+            },\r\n+        })\r\n+            .then((response) => response.json())\r\n+            .then((json) => console.log(json));\r\n     }\r\n \r\n-    useEffect(() => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/posts\",{\r\n-            method:\"DELETE\"\r\n-    }).then(()=>setData(data.filter(data.id!=id)))\r\n+    const handleDelete = (id) => {\r\n+        useEffect(() => {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+                method: \"DELETE\"\r\n+            }).then(() => setData(data.filter(data => data.id != id)))\r\n+        }),\r\n \r\n-    })\r\n+        }\r\n \r\n+\r\n     return (\r\n-        <div className='container'>\r\n-            <button onClick={()=>{setShowForm(!showForm)}}>{showForm? \"Hide\":\"Show\"}</button>\r\n+            <div className='container'>\r\n+                <button onClick={() => { setShowForm(!showForm) }}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n \r\n-            {data.map((post) => {\r\n-                <div className='card' key={post.id}>\r\n-                    <div className='card-title'>{post.title}</div>\r\n-                    <div className='card-body'>{post.body}</div>\r\n-                </div>\r\n-            })}\r\n+                {data.map((post) => {\r\n+                    <div className='card' key={post.id}>\r\n+                        <div className='card-title'>{post.title}</div>\r\n+                        <div className='card-body'>{post.body}</div>\r\n+                    </div>\r\n+                })}\r\n \r\n-        </div>\r\n-    )\r\n+            </div>\r\n+        )\r\n \r\n \r\n \r\n \r\n \r\n \r\n-}\r\n+    }\r\n"
                },
                {
                    "date": 1757135857177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,14 +41,13 @@\n     const handleDelete = (id) => {\r\n         useEffect(() => {\r\n             fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n                 method: \"DELETE\"\r\n-            }).then(() => setData(data.filter(data => data.id != id)))\r\n+            }).then(() => setData(data.filter(data => data.id != id)));\r\n         }),\r\n+    }\r\n \r\n-        }\r\n \r\n-\r\n     return (\r\n             <div className='container'>\r\n                 <button onClick={() => { setShowForm(!showForm) }}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n \r\n"
                },
                {
                    "date": 1757136914859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,53 +17,45 @@\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n     const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n-    }\r\n-    if (editId) {\r\n \r\n-    }\r\n-    const handleDelte = (id) => {\r\n-        fetch('https://jsonplaceholder.typicode.com/posts', {\r\n-            method: 'POST',\r\n-            body: JSON.stringify({\r\n-                title: 'foo',\r\n-                body: 'bar',\r\n-                userId: 1,\r\n+        if (edit) {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+                method: \"PUT\",\r\n+                 headers:{'Content-type': 'application/json; charset=UTF-8',},\r\n+                 body:JSON.stringify({...form,id:edit})\r\n             }),\r\n-            headers: {\r\n-                'Content-type': 'application/json; charset=UTF-8',\r\n-            },\r\n-        })\r\n-            .then((response) => response.json())\r\n-            .then((json) => console.log(json));\r\n+            .then((res=>res.json())),\r\n+            .then(updated=>{\r\n+                setData(data.map(data=>(data.id === edit?updated:data)))\r\n+            })\r\n     }\r\n \r\n     const handleDelete = (id) => {\r\n-        useEffect(() => {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-                method: \"DELETE\"\r\n-            }).then(() => setData(data.filter(data => data.id != id)));\r\n-        }),\r\n-    }\r\n+        fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+            method: \"DELETE\"\r\n+        })\r\n+            .then(() => setData(data.filter(data => data.id != id)));\r\n+    };\r\n \r\n \r\n     return (\r\n-            <div className='container'>\r\n-                <button onClick={() => { setShowForm(!showForm) }}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+        <div className='container'>\r\n+            <button onClick={() => { setShowForm(!showForm) }}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n \r\n-                {data.map((post) => {\r\n-                    <div className='card' key={post.id}>\r\n-                        <div className='card-title'>{post.title}</div>\r\n-                        <div className='card-body'>{post.body}</div>\r\n-                    </div>\r\n-                })}\r\n+            {data.map((post) => {\r\n+                <div className='card' key={post.id}>\r\n+                    <div className='card-title'>{post.title}</div>\r\n+                    <div className='card-body'>{post.body}</div>\r\n+                </div>\r\n+            })}\r\n \r\n-            </div>\r\n-        )\r\n+        </div>\r\n+    )\r\n \r\n \r\n \r\n \r\n \r\n \r\n-    }\r\n+}\r\n"
                },
                {
                    "date": 1757137022623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \r\n export default function Crud() {\r\n     const [showForm, setShowForm] = useState(false);\r\n     const [form, setForm] = useState({ title: \"\", description: \"\" });\r\n-    const [edit, setEdit] = useState(null);\r\n+    const [editId, setEditId] = useState(null);\r\n     const [data, setData] = useState([]);\r\n \r\n \r\n     useEffect(() => {\r\n@@ -22,13 +22,15 @@\n         if (edit) {\r\n             fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n                 method: \"PUT\",\r\n                  headers:{'Content-type': 'application/json; charset=UTF-8',},\r\n-                 body:JSON.stringify({...form,id:edit})\r\n+                 body:JSON.stringify({...form,id:editId})\r\n             }),\r\n             .then((res=>res.json())),\r\n             .then(updated=>{\r\n-                setData(data.map(data=>(data.id === edit?updated:data)))\r\n+                setData(data.map(data=>(data.id === editId?updated:data)))\r\n+                setForm({title:\"\",description:\"\"});\r\n+                setEditId(null);\r\n             })\r\n     }\r\n \r\n     const handleDelete = (id) => {\r\n"
                },
                {
                    "date": 1757137036056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,17 +23,20 @@\n             fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n                 method: \"PUT\",\r\n                  headers:{'Content-type': 'application/json; charset=UTF-8',},\r\n                  body:JSON.stringify({...form,id:editId})\r\n-            }),\r\n+            })\r\n             .then((res=>res.json())),\r\n             .then(updated=>{\r\n                 setData(data.map(data=>(data.id === editId?updated:data)))\r\n                 setForm({title:\"\",description:\"\"});\r\n                 setEditId(null);\r\n             })\r\n     }\r\n+    else{\r\n \r\n+    }\r\n+\r\n     const handleDelete = (id) => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n             method: \"DELETE\"\r\n         })\r\n"
                },
                {
                    "date": 1757137335227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,17 +24,26 @@\n                 method: \"PUT\",\r\n                  headers:{'Content-type': 'application/json; charset=UTF-8',},\r\n                  body:JSON.stringify({...form,id:editId})\r\n             })\r\n-            .then((res=>res.json())),\r\n+            .then((res=>res.json()))\r\n             .then(updated=>{\r\n                 setData(data.map(data=>(data.id === editId?updated:data)))\r\n                 setForm({title:\"\",description:\"\"});\r\n                 setEditId(null);\r\n             })\r\n     }\r\n     else{\r\n-\r\n+        fetch(\"https://jsonplaceholder.typicode.com/posts\",{\r\n+            method:\"POST\",\r\n+            headers:{'Content-type': 'application/json; charset=UTF-8',},\r\n+            body:JSON.stringify(form),\r\n+        })\r\n+        .then(res=>res.json())\r\n+        .then(newData=>{\r\n+            setData([newData,...data]);\r\n+            setForm({title:\"\",description:\"\"});\r\n+        })\r\n     }\r\n \r\n     const handleDelete = (id) => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n"
                },
                {
                    "date": 1757137435873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,31 +21,31 @@\n \r\n         if (edit) {\r\n             fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n                 method: \"PUT\",\r\n-                 headers:{'Content-type': 'application/json; charset=UTF-8',},\r\n-                 body:JSON.stringify({...form,id:editId})\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify({ ...form, id: editId })\r\n             })\r\n-            .then((res=>res.json()))\r\n-            .then(updated=>{\r\n-                setData(data.map(data=>(data.id === editId?updated:data)))\r\n-                setForm({title:\"\",description:\"\"});\r\n-                setEditId(null);\r\n+                .then((res => res.json()))\r\n+                .then(updated => {\r\n+                    setData(data.map(data => (data.id === editId ? updated : data)))\r\n+                    setForm({ title: \"\", description: \"\" });\r\n+                    setEditId(null);\r\n+                })\r\n+        }\r\n+        else {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+                method: \"POST\",\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify(form),\r\n             })\r\n-    }\r\n-    else{\r\n-        fetch(\"https://jsonplaceholder.typicode.com/posts\",{\r\n-            method:\"POST\",\r\n-            headers:{'Content-type': 'application/json; charset=UTF-8',},\r\n-            body:JSON.stringify(form),\r\n-        })\r\n-        .then(res=>res.json())\r\n-        .then(newData=>{\r\n-            setData([newData,...data]);\r\n-            setForm({title:\"\",description:\"\"});\r\n-        })\r\n-    }\r\n-\r\n+                .then(res => res.json())\r\n+                .then(newData => {\r\n+                    setData([newData, ...data]);\r\n+                    setForm({ title: \"\", description: \"\" });\r\n+                });\r\n+        }\r\n+    };\r\n     const handleDelete = (id) => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n             method: \"DELETE\"\r\n         })\r\n"
                },
                {
                    "date": 1757137580607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     };\r\n     const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n \r\n-        if (edit) {\r\n+        if (editId) {\r\n             fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n                 method: \"PUT\",\r\n                 headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n                 body: JSON.stringify({ ...form, id: editId })\r\n@@ -55,8 +55,12 @@\n \r\n     return (\r\n         <div className='container'>\r\n             <button onClick={() => { setShowForm(!showForm) }}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+            <form onSubmit={handleSubmit}>\r\n+                <input type='text'>Title:</input>\r\n+                <input type='text'>Description</input>\r\n+            </form>\r\n \r\n             {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n                     <div className='card-title'>{post.title}</div>\r\n"
                },
                {
                    "date": 1757137663456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,12 @@\n     return (\r\n         <div className='container'>\r\n             <button onClick={() => { setShowForm(!showForm) }}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n             <form onSubmit={handleSubmit}>\r\n-                <input type='text'>Title:</input>\r\n+                <input type='text'\r\n+                name='title'\r\n+                placeholder='Enter title'\r\n+                onChange={handleChange}/>\r\n                 <input type='text'>Description</input>\r\n             </form>\r\n \r\n             {data.map((post) => {\r\n"
                },
                {
                    "date": 1757137763116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,10 +59,17 @@\n             <form onSubmit={handleSubmit}>\r\n                 <input type='text'\r\n                 name='title'\r\n                 placeholder='Enter title'\r\n-                onChange={handleChange}/>\r\n-                <input type='text'>Description</input>\r\n+                onChange={handleChange}\r\n+                className='form-control mb-2'\r\n+                required/>\r\n+                <input type='text'\r\n+                title='Description'\r\n+                placeholder='Enter Description'\r\n+                onChange={handleChange}\r\n+                className='form-control mb-2'\r\n+                required/>\r\n             </form>\r\n \r\n             {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n"
                },
                {
                    "date": 1757137822442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,8 +69,10 @@\n                 onChange={handleChange}\r\n                 className='form-control mb-2'\r\n                 required/>\r\n             </form>\r\n+            <button className='btn btn-warning'>Edit</button>\r\n+            <button className='btn btn-danger'>Delete</button>\r\n \r\n             {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n                     <div className='card-title'>{post.title}</div>\r\n"
                },
                {
                    "date": 1757137838331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n                 onChange={handleChange}\r\n                 className='form-control mb-2'\r\n                 required/>\r\n             </form>\r\n-            <button className='btn btn-warning'>Edit</button>\r\n+            <button className='btn btn-warning'>Reset</button>\r\n             <button className='btn btn-danger'>Delete</button>\r\n \r\n             {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n"
                },
                {
                    "date": 1757137852775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,8 @@\n                 className='form-control mb-2'\r\n                 required/>\r\n             </form>\r\n             <button className='btn btn-warning'>Reset</button>\r\n-            <button className='btn btn-danger'>Delete</button>\r\n \r\n             {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n                     <div className='card-title'>{post.title}</div>\r\n"
                },
                {
                    "date": 1757137883881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n                 onChange={handleChange}\r\n                 className='form-control mb-2'\r\n                 required/>\r\n             </form>\r\n-            <button className='btn btn-warning'>Reset</button>\r\n+            <button className='btn btn-warning' onClick={setForm({title:\"\",description:\"\"})}>Reset</button>\r\n \r\n             {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n                     <div className='card-title'>{post.title}</div>\r\n"
                },
                {
                    "date": 1757137898623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n                 onChange={handleChange}\r\n                 className='form-control mb-2'\r\n                 required/>\r\n             </form>\r\n-            <button className='btn btn-warning' onClick={setForm({title:\"\",description:\"\"})}>Reset</button>\r\n+            <button className='btn btn-warning' onClick={()=>setForm({title:\"\",description:\"\"})}>Reset</button>\r\n \r\n             {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n                     <div className='card-title'>{post.title}</div>\r\n"
                },
                {
                    "date": 1757137908402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n                 onChange={handleChange}\r\n                 className='form-control mb-2'\r\n                 required/>\r\n             </form>\r\n-            <button className='btn btn-warning' onClick={()=>setForm({title:\"\",description:\"\"})}>Reset</button>\r\n+            <button className='btn btn-warning' onClick={()=>{setForm({title:\"\",description:\"\"})}}>Reset</button>\r\n \r\n             {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n                     <div className='card-title'>{post.title}</div>\r\n"
                },
                {
                    "date": 1757137950753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,8 +69,9 @@\n                 onChange={handleChange}\r\n                 className='form-control mb-2'\r\n                 required/>\r\n             </form>\r\n+            <button className='btn btn-success'>Submit</button>\r\n             <button className='btn btn-warning' onClick={()=>{setForm({title:\"\",description:\"\"})}}>Reset</button>\r\n \r\n             {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n"
                },
                {
                    "date": 1757138106373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,10 +50,12 @@\n             method: \"DELETE\"\r\n         })\r\n             .then(() => setData(data.filter(data => data.id != id)));\r\n     };\r\n+const handleReset=()=>{\r\n+    setForm({title:\"\",description:\"\"})\r\n+}\r\n \r\n-\r\n     return (\r\n         <div className='container'>\r\n             <button onClick={() => { setShowForm(!showForm) }}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n             <form onSubmit={handleSubmit}>\r\n@@ -70,9 +72,9 @@\n                 className='form-control mb-2'\r\n                 required/>\r\n             </form>\r\n             <button className='btn btn-success'>Submit</button>\r\n-            <button className='btn btn-warning' onClick={()=>{setForm({title:\"\",description:\"\"})}}>Reset</button>\r\n+            <button className='btn btn-warning' onClick={handleReset}>Reset</button>\r\n \r\n             {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n                     <div className='card-title'>{post.title}</div>\r\n"
                },
                {
                    "date": 1757138132451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,28 +50,28 @@\n             method: \"DELETE\"\r\n         })\r\n             .then(() => setData(data.filter(data => data.id != id)));\r\n     };\r\n-const handleReset=()=>{\r\n-    setForm({title:\"\",description:\"\"})\r\n-}\r\n+    const handleReset = () => {\r\n+        setForm({ title: \"\", description: \"\" })\r\n+    }\r\n \r\n     return (\r\n         <div className='container'>\r\n             <button onClick={() => { setShowForm(!showForm) }}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n             <form onSubmit={handleSubmit}>\r\n                 <input type='text'\r\n-                name='title'\r\n-                placeholder='Enter title'\r\n-                onChange={handleChange}\r\n-                className='form-control mb-2'\r\n-                required/>\r\n+                    name='title'\r\n+                    placeholder='Enter title'\r\n+                    onChange={handleChange}\r\n+                    className='form-control mb-2'\r\n+                    required />\r\n                 <input type='text'\r\n-                title='Description'\r\n-                placeholder='Enter Description'\r\n-                onChange={handleChange}\r\n-                className='form-control mb-2'\r\n-                required/>\r\n+                    title='Description'\r\n+                    placeholder='Enter Description'\r\n+                    onChange={handleChange}\r\n+                    className='form-control mb-2'\r\n+                    required />\r\n             </form>\r\n             <button className='btn btn-success'>Submit</button>\r\n             <button className='btn btn-warning' onClick={handleReset}>Reset</button>\r\n \r\n"
                },
                {
                    "date": 1757138151709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n     const handleDelete = (id) => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n             method: \"DELETE\"\r\n         })\r\n-            .then(() => setData(data.filter(data => data.id != id)));\r\n+            .then(() => setData(data.filter(data => data.id !== id)));\r\n     };\r\n     const handleReset = () => {\r\n         setForm({ title: \"\", description: \"\" })\r\n     }\r\n"
                },
                {
                    "date": 1757138169737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,14 +74,14 @@\n             </form>\r\n             <button className='btn btn-success'>Submit</button>\r\n             <button className='btn btn-warning' onClick={handleReset}>Reset</button>\r\n \r\n-            {data.map((post) => {\r\n+            {/* {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n                     <div className='card-title'>{post.title}</div>\r\n                     <div className='card-body'>{post.body}</div>\r\n                 </div>\r\n-            })}\r\n+            })} */}\r\n \r\n         </div>\r\n     )\r\n \r\n"
                },
                {
                    "date": 1757138194360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,8 +51,9 @@\n         })\r\n             .then(() => setData(data.filter(data => data.id !== id)));\r\n     };\r\n     const handleReset = () => {\r\n+        console.log(\"enter\")\r\n         setForm({ title: \"\", description: \"\" })\r\n     }\r\n \r\n     return (\r\n"
                },
                {
                    "date": 1757138339331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n                     className='form-control mb-2'\r\n                     required />\r\n             </form>\r\n             <button className='btn btn-success'>Submit</button>\r\n-            <button className='btn btn-warning' onClick={handleReset}>Reset</button>\r\n+            <button className='btn btn-warning' type='button' onClick={handleReset}>Reset</button>\r\n \r\n             {/* {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n                     <div className='card-title'>{post.title}</div>\r\n"
                },
                {
                    "date": 1757138352289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n                     className='form-control mb-2'\r\n                     required />\r\n             </form>\r\n             <button className='btn btn-success'>Submit</button>\r\n-            <button className='btn btn-warning' type='button' onClick={handleReset}>Reset</button>\r\n+            <button className='btn btn-warning' type='reset' onClick={handleReset}>Reset</button>\r\n \r\n             {/* {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n                     <div className='card-title'>{post.title}</div>\r\n"
                },
                {
                    "date": 1757138396681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n                     className='form-control mb-2'\r\n                     required />\r\n             </form>\r\n             <button className='btn btn-success'>Submit</button>\r\n-            <button className='btn btn-warning' type='reset' onClick={handleReset}>Reset</button>\r\n+            <button className='btn btn-warning' type='button' onClick={handleReset}>Reset</button>\r\n \r\n             {/* {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n                     <div className='card-title'>{post.title}</div>\r\n"
                },
                {
                    "date": 1757138413639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,14 +63,16 @@\n                 <input type='text'\r\n                     name='title'\r\n                     placeholder='Enter title'\r\n                     onChange={handleChange}\r\n+                    value={form.title}\r\n                     className='form-control mb-2'\r\n                     required />\r\n                 <input type='text'\r\n                     title='Description'\r\n                     placeholder='Enter Description'\r\n                     onChange={handleChange}\r\n+                    value={form.description}\r\n                     className='form-control mb-2'\r\n                     required />\r\n             </form>\r\n             <button className='btn btn-success'>Submit</button>\r\n"
                },
                {
                    "date": 1757138477958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,8 @@\n         })\r\n             .then(() => setData(data.filter(data => data.id !== id)));\r\n     };\r\n     const handleReset = () => {\r\n-        console.log(\"enter\")\r\n         setForm({ title: \"\", description: \"\" })\r\n     }\r\n \r\n     return (\r\n"
                },
                {
                    "date": 1757138492420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n             })\r\n                 .then(res => res.json())\r\n                 .then(newData => {\r\n                     setData([newData, ...data]);\r\n-                    setForm({ title: \"\", description: \"\" });\r\n+                    handleReset();\r\n                 });\r\n         }\r\n     };\r\n     const handleDelete = (id) => {\r\n"
                },
                {
                    "date": 1757138514435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n             })\r\n                 .then(res => res.json())\r\n                 .then(newData => {\r\n                     setData([newData, ...data]);\r\n-                    handleReset();\r\n+                    setForm({ title: \"\", description: \"\" });\r\n                 });\r\n         }\r\n     };\r\n     const handleDelete = (id) => {\r\n"
                },
                {
                    "date": 1757138554297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,95 @@\n+import React, { useState, useEffect } from 'react'\r\n+\r\n+export default function Crud() {\r\n+    const [showForm, setShowForm] = useState(false);\r\n+    const [form, setForm] = useState({ title: \"\", description: \"\" });\r\n+    const [editId, setEditId] = useState(null);\r\n+    const [data, setData] = useState([]);\r\n+\r\n+\r\n+    useEffect(() => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+            .then(res => res.json())\r\n+            .then(data => setData(data))\r\n+    }, []);\r\n+\r\n+    const handleChange = (event) => {\r\n+        setForm({ ...form, [event.target.name]: event.target.value })\r\n+    };\r\n+    const handleSubmit = (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        if (editId) {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+                method: \"PUT\",\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify({ ...form, id: editId })\r\n+            })\r\n+                .then((res => res.json()))\r\n+                .then(updated => {\r\n+                    setData(data.map(data => (data.id === editId ? updated : data)))\r\n+                    setForm({ title: \"\", description: \"\" });\r\n+                    setEditId(null);\r\n+                })\r\n+        }\r\n+        else {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+                method: \"POST\",\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify(form),\r\n+            })\r\n+                .then(res => res.json())\r\n+                .then(newData => {\r\n+                    setData([newData, ...data]);\r\n+                    setForm({ title: \"\", description: \"\" });\r\n+                });\r\n+        }\r\n+    };\r\n+    const handleDelete = (id) => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+            method: \"DELETE\"\r\n+        })\r\n+            .then(() => setData(data.filter(data => data.id !== id)));\r\n+    };\r\n+    const handleReset = () => {\r\n+        setForm({ title: \"\", description: \"\" })\r\n+    }\r\n+\r\n+    return (\r\n+        <div className='container'>\r\n+            <button onClick={() => { setShowForm(!showForm) }}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+            <form onSubmit={handleSubmit}>\r\n+                <input type='text'\r\n+                    name='title'\r\n+                    placeholder='Enter title'\r\n+                    onChange={handleChange}\r\n+                    value={form.title}\r\n+                    className='form-control mb-2'\r\n+                    required />\r\n+                <input type='text'\r\n+                    title='Description'\r\n+                    placeholder='Enter Description'\r\n+                    onChange={handleChange}\r\n+                    value={form.description}\r\n+                    className='form-control mb-2'\r\n+                    required />\r\n+            </form>\r\n+            <button className='btn btn-success'>Submit</button>\r\n+            <button className='btn btn-warning' type='button' onClick={()=>{setForm({title=\"\",description=\"\"})}}>Reset</button>\r\n+\r\n+            {/* {data.map((post) => {\r\n+                <div className='card' key={post.id}>\r\n+                    <div className='card-title'>{post.title}</div>\r\n+                    <div className='card-body'>{post.body}</div>\r\n+                </div>\r\n+            })} */}\r\n+\r\n+        </div>\r\n+    )\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+}\r\n"
                },
                {
                    "date": 1757138560541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n                     className='form-control mb-2'\r\n                     required />\r\n             </form>\r\n             <button className='btn btn-success'>Submit</button>\r\n-            <button className='btn btn-warning' type='button' onClick={()=>{setForm({title=\"\",description=\"\"})}}>Reset</button>\r\n+            <button className='btn btn-warning' type='button' onClick={()=>{setForm({title:\"\",description:\"\"})}}>Reset</button>\r\n \r\n             {/* {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n                     <div className='card-title'>{post.title}</div>\r\n@@ -92,99 +92,4 @@\n \r\n \r\n \r\n }\r\n-import React, { useState, useEffect } from 'react'\r\n-\r\n-export default function Crud() {\r\n-    const [showForm, setShowForm] = useState(false);\r\n-    const [form, setForm] = useState({ title: \"\", description: \"\" });\r\n-    const [editId, setEditId] = useState(null);\r\n-    const [data, setData] = useState([]);\r\n-\r\n-\r\n-    useEffect(() => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-            .then(res => res.json())\r\n-            .then(data => setData(data))\r\n-    }, []);\r\n-\r\n-    const handleChange = (event) => {\r\n-        setForm({ ...form, [event.target.name]: event.target.value })\r\n-    };\r\n-    const handleSubmit = (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        if (editId) {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-                method: \"PUT\",\r\n-                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify({ ...form, id: editId })\r\n-            })\r\n-                .then((res => res.json()))\r\n-                .then(updated => {\r\n-                    setData(data.map(data => (data.id === editId ? updated : data)))\r\n-                    setForm({ title: \"\", description: \"\" });\r\n-                    setEditId(null);\r\n-                })\r\n-        }\r\n-        else {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-                method: \"POST\",\r\n-                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify(form),\r\n-            })\r\n-                .then(res => res.json())\r\n-                .then(newData => {\r\n-                    setData([newData, ...data]);\r\n-                    setForm({ title: \"\", description: \"\" });\r\n-                });\r\n-        }\r\n-    };\r\n-    const handleDelete = (id) => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-            method: \"DELETE\"\r\n-        })\r\n-            .then(() => setData(data.filter(data => data.id !== id)));\r\n-    };\r\n-    const handleReset = () => {\r\n-        setForm({ title: \"\", description: \"\" })\r\n-    }\r\n-\r\n-    return (\r\n-        <div className='container'>\r\n-            <button onClick={() => { setShowForm(!showForm) }}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n-            <form onSubmit={handleSubmit}>\r\n-                <input type='text'\r\n-                    name='title'\r\n-                    placeholder='Enter title'\r\n-                    onChange={handleChange}\r\n-                    value={form.title}\r\n-                    className='form-control mb-2'\r\n-                    required />\r\n-                <input type='text'\r\n-                    title='Description'\r\n-                    placeholder='Enter Description'\r\n-                    onChange={handleChange}\r\n-                    value={form.description}\r\n-                    className='form-control mb-2'\r\n-                    required />\r\n-            </form>\r\n-            <button className='btn btn-success'>Submit</button>\r\n-            <button className='btn btn-warning' type='button' onClick={handleReset}>Reset</button>\r\n-\r\n-            {/* {data.map((post) => {\r\n-                <div className='card' key={post.id}>\r\n-                    <div className='card-title'>{post.title}</div>\r\n-                    <div className='card-body'>{post.body}</div>\r\n-                </div>\r\n-            })} */}\r\n-\r\n-        </div>\r\n-    )\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-}\r\n"
                },
                {
                    "date": 1757138631828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,11 +50,8 @@\n             method: \"DELETE\"\r\n         })\r\n             .then(() => setData(data.filter(data => data.id !== id)));\r\n     };\r\n-    const handleReset = () => {\r\n-        setForm({ title: \"\", description: \"\" })\r\n-    }\r\n \r\n     return (\r\n         <div className='container'>\r\n             <button onClick={() => { setShowForm(!showForm) }}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n@@ -73,9 +70,9 @@\n                     value={form.description}\r\n                     className='form-control mb-2'\r\n                     required />\r\n             </form>\r\n-            <button className='btn btn-success'>Submit</button>\r\n+            <button className='btn btn-success' onClick={handleChange}>Submit</button>\r\n             <button className='btn btn-warning' type='button' onClick={()=>{setForm({title:\"\",description:\"\"})}}>Reset</button>\r\n \r\n             {/* {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n"
                },
                {
                    "date": 1757138652612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,16 +58,14 @@\n             <form onSubmit={handleSubmit}>\r\n                 <input type='text'\r\n                     name='title'\r\n                     placeholder='Enter title'\r\n-                    onChange={handleChange}\r\n                     value={form.title}\r\n                     className='form-control mb-2'\r\n                     required />\r\n                 <input type='text'\r\n                     title='Description'\r\n                     placeholder='Enter Description'\r\n-                    onChange={handleChange}\r\n                     value={form.description}\r\n                     className='form-control mb-2'\r\n                     required />\r\n             </form>\r\n"
                },
                {
                    "date": 1757138665935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,14 +58,16 @@\n             <form onSubmit={handleSubmit}>\r\n                 <input type='text'\r\n                     name='title'\r\n                     placeholder='Enter title'\r\n+                    onChange={handleChange}\r\n                     value={form.title}\r\n                     className='form-control mb-2'\r\n                     required />\r\n                 <input type='text'\r\n                     title='Description'\r\n                     placeholder='Enter Description'\r\n+                    onChange={handleChange}\r\n                     value={form.description}\r\n                     className='form-control mb-2'\r\n                     required />\r\n             </form>\r\n"
                },
                {
                    "date": 1757138696594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n                     onChange={handleChange}\r\n                     value={form.title}\r\n                     className='form-control mb-2'\r\n                     required />\r\n-                <input type='text'\r\n+                <input type='textarea'\r\n                     title='Description'\r\n                     placeholder='Enter Description'\r\n                     onChange={handleChange}\r\n                     value={form.description}\r\n"
                },
                {
                    "date": 1757138721452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n                     onChange={handleChange}\r\n                     value={form.title}\r\n                     className='form-control mb-2'\r\n                     required />\r\n-                <input type='textarea'\r\n+                <input type='text'\r\n                     title='Description'\r\n                     placeholder='Enter Description'\r\n                     onChange={handleChange}\r\n                     value={form.description}\r\n"
                },
                {
                    "date": 1757138748732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n                     value={form.description}\r\n                     className='form-control mb-2'\r\n                     required />\r\n             </form>\r\n-            <button className='btn btn-success' onClick={handleChange}>Submit</button>\r\n+            <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n             <button className='btn btn-warning' type='button' onClick={()=>{setForm({title:\"\",description:\"\"})}}>Reset</button>\r\n \r\n             {/* {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n"
                },
                {
                    "date": 1757138784732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,14 +73,14 @@\n             </form>\r\n             <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n             <button className='btn btn-warning' type='button' onClick={()=>{setForm({title:\"\",description:\"\"})}}>Reset</button>\r\n \r\n-            {/* {data.map((post) => {\r\n+            {data.map((post) => {\r\n                 <div className='card' key={post.id}>\r\n                     <div className='card-title'>{post.title}</div>\r\n                     <div className='card-body'>{post.body}</div>\r\n                 </div>\r\n-            })} */}\r\n+            })}\r\n \r\n         </div>\r\n     )\r\n \r\n"
                },
                {
                    "date": 1757138819190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,12 +74,14 @@\n             <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n             <button className='btn btn-warning' type='button' onClick={()=>{setForm({title:\"\",description:\"\"})}}>Reset</button>\r\n \r\n             {data.map((post) => {\r\n-                <div className='card' key={post.id}>\r\n+                <div  key={post.id}>\r\n+                    <div className='card'>\r\n                     <div className='card-title'>{post.title}</div>\r\n                     <div className='card-body'>{post.body}</div>\r\n                 </div>\r\n+                </div>\r\n             })}\r\n \r\n         </div>\r\n     )\r\n"
                },
                {
                    "date": 1757138840898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n             </form>\r\n             <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n             <button className='btn btn-warning' type='button' onClick={()=>{setForm({title:\"\",description:\"\"})}}>Reset</button>\r\n \r\n-            {data.map((post) => {\r\n+            {data.map(post => {\r\n                 <div  key={post.id}>\r\n                     <div className='card'>\r\n                     <div className='card-title'>{post.title}</div>\r\n                     <div className='card-body'>{post.body}</div>\r\n"
                },
                {
                    "date": 1757138853161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,16 +73,16 @@\n             </form>\r\n             <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n             <button className='btn btn-warning' type='button' onClick={()=>{setForm({title:\"\",description:\"\"})}}>Reset</button>\r\n \r\n-            {data.map(post => {\r\n+            {data.map(post => (\r\n                 <div  key={post.id}>\r\n                     <div className='card'>\r\n                     <div className='card-title'>{post.title}</div>\r\n                     <div className='card-body'>{post.body}</div>\r\n                 </div>\r\n                 </div>\r\n-            })}\r\n+            ))}\r\n \r\n         </div>\r\n     )\r\n \r\n"
                },
                {
                    "date": 1757138904268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n             <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n             <button className='btn btn-warning' type='button' onClick={()=>{setForm({title:\"\",description:\"\"})}}>Reset</button>\r\n \r\n             {data.map(post => (\r\n-                <div  key={post.id}>\r\n+                <div  key={post.id} className='col-md-4 col-sm-12'>\r\n                     <div className='card'>\r\n                     <div className='card-title'>{post.title}</div>\r\n                     <div className='card-body'>{post.body}</div>\r\n                 </div>\r\n"
                },
                {
                    "date": 1757138928226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,14 +74,16 @@\n             <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n             <button className='btn btn-warning' type='button' onClick={()=>{setForm({title:\"\",description:\"\"})}}>Reset</button>\r\n \r\n             {data.map(post => (\r\n+                <div className='row'>\r\n                 <div  key={post.id} className='col-md-4 col-sm-12'>\r\n                     <div className='card'>\r\n                     <div className='card-title'>{post.title}</div>\r\n                     <div className='card-body'>{post.body}</div>\r\n                 </div>\r\n                 </div>\r\n+                </div>\r\n             ))}\r\n \r\n         </div>\r\n     )\r\n"
                },
                {
                    "date": 1757138947598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n \r\n             {data.map(post => (\r\n                 <div className='row'>\r\n                 <div  key={post.id} className='col-md-4 col-sm-12'>\r\n-                    <div className='card'>\r\n+                    <div className='card' style={{width:\"18rem\"}}>\r\n                     <div className='card-title'>{post.title}</div>\r\n                     <div className='card-body'>{post.body}</div>\r\n                 </div>\r\n                 </div>\r\n"
                },
                {
                    "date": 1757138960517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n             <button className='btn btn-warning' type='button' onClick={()=>{setForm({title:\"\",description:\"\"})}}>Reset</button>\r\n \r\n             {data.map(post => (\r\n                 <div className='row'>\r\n-                <div  key={post.id} className='col-md-4 col-sm-12'>\r\n+                <div  key={post.id} className='col-lg-4 col-sm-12'>\r\n                     <div className='card' style={{width:\"18rem\"}}>\r\n                     <div className='card-title'>{post.title}</div>\r\n                     <div className='card-body'>{post.body}</div>\r\n                 </div>\r\n"
                },
                {
                    "date": 1757138967094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n             <button className='btn btn-warning' type='button' onClick={()=>{setForm({title:\"\",description:\"\"})}}>Reset</button>\r\n \r\n             {data.map(post => (\r\n                 <div className='row'>\r\n-                <div  key={post.id} className='col-lg-4 col-sm-12'>\r\n+                <div  key={post.id} className='col-lg-6 col-sm-12'>\r\n                     <div className='card' style={{width:\"18rem\"}}>\r\n                     <div className='card-title'>{post.title}</div>\r\n                     <div className='card-body'>{post.body}</div>\r\n                 </div>\r\n"
                },
                {
                    "date": 1757139013960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n             <button className='btn btn-warning' type='button' onClick={()=>{setForm({title:\"\",description:\"\"})}}>Reset</button>\r\n \r\n             {data.map(post => (\r\n                 <div className='row'>\r\n-                <div  key={post.id} className='col-lg-6 col-sm-12'>\r\n+                <div  key={post.id} className='col-md-4 col-sm-12'>\r\n                     <div className='card' style={{width:\"18rem\"}}>\r\n                     <div className='card-title'>{post.title}</div>\r\n                     <div className='card-body'>{post.body}</div>\r\n                 </div>\r\n"
                },
                {
                    "date": 1757139113979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,20 +71,20 @@\n                     className='form-control mb-2'\r\n                     required />\r\n             </form>\r\n             <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n-            <button className='btn btn-warning' type='button' onClick={()=>{setForm({title:\"\",description:\"\"})}}>Reset</button>\r\n+            <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n \r\n+            <div className='row'>\r\n             {data.map(post => (\r\n-                <div className='row'>\r\n-                <div  key={post.id} className='col-md-4 col-sm-12'>\r\n-                    <div className='card' style={{width:\"18rem\"}}>\r\n-                    <div className='card-title'>{post.title}</div>\r\n-                    <div className='card-body'>{post.body}</div>\r\n+                <div key={post.id} className='col-md-4 col-sm-12'>\r\n+                    <div className='card' style={{ width: \"18rem\" }}>\r\n+                        <div className='card-title'>{post.title}</div>\r\n+                        <div className='card-body'>{post.body}</div>\r\n+                    </div>\r\n                 </div>\r\n-                </div>\r\n-                </div>\r\n             ))}\r\n+            </div>\r\n \r\n         </div>\r\n     )\r\n \r\n"
                },
                {
                    "date": 1757139145501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n \r\n             <div className='row'>\r\n             {data.map(post => (\r\n                 <div key={post.id} className='col-md-4 col-sm-12'>\r\n-                    <div className='card' style={{ width: \"18rem\" }}>\r\n+                    <div className='card' >\r\n                         <div className='card-title'>{post.title}</div>\r\n                         <div className='card-body'>{post.body}</div>\r\n                     </div>\r\n                 </div>\r\n"
                },
                {
                    "date": 1757139167974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,10 +75,10 @@\n             <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n \r\n             <div className='row'>\r\n             {data.map(post => (\r\n-                <div key={post.id} className='col-md-4 col-sm-12'>\r\n-                    <div className='card' >\r\n+                <div key={post.id} className='col-md-4 col-sm-12' style={gap:\"20px\"}>\r\n+                    <div className='card'>\r\n                         <div className='card-title'>{post.title}</div>\r\n                         <div className='card-body'>{post.body}</div>\r\n                     </div>\r\n                 </div>\r\n"
                },
                {
                    "date": 1757139176165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n             <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n \r\n             <div className='row'>\r\n             {data.map(post => (\r\n-                <div key={post.id} className='col-md-4 col-sm-12' style={gap:\"20px\"}>\r\n+                <div key={post.id} className='col-md-4 col-sm-12' style={{gap:\"20px\"}}>\r\n                     <div className='card'>\r\n                         <div className='card-title'>{post.title}</div>\r\n                         <div className='card-body'>{post.body}</div>\r\n                     </div>\r\n"
                },
                {
                    "date": 1757139200778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n \r\n             <div className='row'>\r\n             {data.map(post => (\r\n                 <div key={post.id} className='col-md-4 col-sm-12' style={{gap:\"20px\"}}>\r\n-                    <div className='card'>\r\n+                    <div className='card mb-2'>\r\n                         <div className='card-title'>{post.title}</div>\r\n                         <div className='card-body'>{post.body}</div>\r\n                     </div>\r\n                 </div>\r\n"
                },
                {
                    "date": 1757139205919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n \r\n             <div className='row'>\r\n             {data.map(post => (\r\n                 <div key={post.id} className='col-md-4 col-sm-12' style={{gap:\"20px\"}}>\r\n-                    <div className='card mb-2'>\r\n+                    <div className='card mb-5'>\r\n                         <div className='card-title'>{post.title}</div>\r\n                         <div className='card-body'>{post.body}</div>\r\n                     </div>\r\n                 </div>\r\n"
                },
                {
                    "date": 1757139216596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n \r\n             <div className='row'>\r\n             {data.map(post => (\r\n                 <div key={post.id} className='col-md-4 col-sm-12' style={{gap:\"20px\"}}>\r\n-                    <div className='card mb-5'>\r\n+                    <div className='card mb-4'>\r\n                         <div className='card-title'>{post.title}</div>\r\n                         <div className='card-body'>{post.body}</div>\r\n                     </div>\r\n                 </div>\r\n"
                },
                {
                    "date": 1757139285124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useState, useEffect } from 'react'\r\n \r\n export default function Crud() {\r\n-    const [showForm, setShowForm] = useState(false);\r\n+    const [showForm, setShowForm] = useState(true);\r\n     const [form, setForm] = useState({ title: \"\", description: \"\" });\r\n     const [editId, setEditId] = useState(null);\r\n     const [data, setData] = useState([]);\r\n \r\n"
                },
                {
                    "date": 1757139324450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useState, useEffect } from 'react'\r\n \r\n export default function Crud() {\r\n-    const [showForm, setShowForm] = useState(true);\r\n+    const [showForm, setShowForm] = useState(false);\r\n     const [form, setForm] = useState({ title: \"\", description: \"\" });\r\n     const [editId, setEditId] = useState(null);\r\n     const [data, setData] = useState([]);\r\n \r\n"
                },
                {
                    "date": 1757139370267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n     };\r\n \r\n     return (\r\n         <div className='container'>\r\n-            <button onClick={() => { setShowForm(!showForm) }}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+            <button onClick={() =>  setShowForm(!showForm) }>{showForm ? \"Hide\" : \"Show\"}</button>\r\n             <form onSubmit={handleSubmit}>\r\n                 <input type='text'\r\n                     name='title'\r\n                     placeholder='Enter title'\r\n"
                },
                {
                    "date": 1757139451808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,8 +54,9 @@\n \r\n     return (\r\n         <div className='container'>\r\n             <button onClick={() =>  setShowForm(!showForm) }>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+            showForm &&{\r\n             <form onSubmit={handleSubmit}>\r\n                 <input type='text'\r\n                     name='title'\r\n                     placeholder='Enter title'\r\n@@ -70,8 +71,9 @@\n                     value={form.description}\r\n                     className='form-control mb-2'\r\n                     required />\r\n             </form>\r\n+}\r\n             <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n             <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n \r\n             <div className='row'>\r\n"
                },
                {
                    "date": 1757139468648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n \r\n     return (\r\n         <div className='container'>\r\n             <button onClick={() =>  setShowForm(!showForm) }>{showForm ? \"Hide\" : \"Show\"}</button>\r\n-            showForm &&{\r\n+            {showForm &&\r\n             <form onSubmit={handleSubmit}>\r\n                 <input type='text'\r\n                     name='title'\r\n                     placeholder='Enter title'\r\n"
                },
                {
                    "date": 1757139480498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,12 +71,11 @@\n                     value={form.description}\r\n                     className='form-control mb-2'\r\n                     required />\r\n             </form>\r\n-}\r\n             <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n             <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n-\r\n+            }\r\n             <div className='row'>\r\n             {data.map(post => (\r\n                 <div key={post.id} className='col-md-4 col-sm-12' style={{gap:\"20px\"}}>\r\n                     <div className='card mb-4'>\r\n"
                },
                {
                    "date": 1757139525067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,10 +52,12 @@\n             .then(() => setData(data.filter(data => data.id !== id)));\r\n     };\r\n \r\n     return (\r\n+        <>\r\n         <div className='container'>\r\n             <button onClick={() =>  setShowForm(!showForm) }>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+\r\n             {showForm &&\r\n             <form onSubmit={handleSubmit}>\r\n                 <input type='text'\r\n                     name='title'\r\n@@ -86,8 +88,9 @@\n             ))}\r\n             </div>\r\n \r\n         </div>\r\n+        </>\r\n     )\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1757139538117,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,12 +52,11 @@\n             .then(() => setData(data.filter(data => data.id !== id)));\r\n     };\r\n \r\n     return (\r\n-        <>\r\n         <div className='container'>\r\n             <button onClick={() =>  setShowForm(!showForm) }>{showForm ? \"Hide\" : \"Show\"}</button>\r\n-\r\n+            \r\n             {showForm &&\r\n             <form onSubmit={handleSubmit}>\r\n                 <input type='text'\r\n                     name='title'\r\n@@ -88,9 +87,8 @@\n             ))}\r\n             </div>\r\n \r\n         </div>\r\n-        </>\r\n     )\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1757139564981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,11 +53,11 @@\n     };\r\n \r\n     return (\r\n         <div className='container'>\r\n-            <button onClick={() =>  setShowForm(!showForm) }>{showForm ? \"Hide\" : \"Show\"}</button>\r\n-            \r\n-            {showForm &&\r\n+            <button onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+\r\n+        {showForm &&\r\n             <form onSubmit={handleSubmit}>\r\n                 <input type='text'\r\n                     name='title'\r\n                     placeholder='Enter title'\r\n@@ -76,16 +76,16 @@\n             <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n             <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n             }\r\n             <div className='row'>\r\n-            {data.map(post => (\r\n-                <div key={post.id} className='col-md-4 col-sm-12' style={{gap:\"20px\"}}>\r\n-                    <div className='card mb-4'>\r\n-                        <div className='card-title'>{post.title}</div>\r\n-                        <div className='card-body'>{post.body}</div>\r\n+                {data.map(post => (\r\n+                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n+                        <div className='card mb-4'>\r\n+                            <div className='card-title'>{post.title}</div>\r\n+                            <div className='card-body'>{post.body}</div>\r\n+                        </div>\r\n                     </div>\r\n-                </div>\r\n-            ))}\r\n+                ))}\r\n             </div>\r\n \r\n         </div>\r\n     )\r\n"
                },
                {
                    "date": 1757139570369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n                     required />\r\n             </form>\r\n             <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n             <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n-            }\r\n+        }\r\n             <div className='row'>\r\n                 {data.map(post => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n"
                },
                {
                    "date": 1757139589094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,11 +72,12 @@\n                     value={form.description}\r\n                     className='form-control mb-2'\r\n                     required />\r\n             </form>\r\n+}\r\n             <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n             <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n-        }\r\n+        \r\n             <div className='row'>\r\n                 {data.map(post => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n"
                },
                {
                    "date": 1757139619364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n     return (\r\n         <div className='container'>\r\n             <button onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n \r\n-        {showForm &&\r\n+            {showForm &&\r\n             <form onSubmit={handleSubmit}>\r\n                 <input type='text'\r\n                     name='title'\r\n                     placeholder='Enter title'\r\n@@ -71,13 +71,15 @@\n                     onChange={handleChange}\r\n                     value={form.description}\r\n                     className='form-control mb-2'\r\n                     required />\r\n-            </form>\r\n-}\r\n+\r\n             <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n             <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n-        \r\n+            </form>\r\n+\r\n+            }\r\n+\r\n             <div className='row'>\r\n                 {data.map(post => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n"
                },
                {
                    "date": 1757139646714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n     };\r\n \r\n     return (\r\n         <div className='container'>\r\n-            <button onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+            <button className=\"btn btn-primary\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n \r\n             {showForm &&\r\n             <form onSubmit={handleSubmit}>\r\n                 <input type='text'\r\n"
                },
                {
                    "date": 1757139661808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n     };\r\n \r\n     return (\r\n         <div className='container'>\r\n-            <button className=\"btn btn-primary\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+            <button className=\"btn btn-primary mb-2\"     onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n \r\n             {showForm &&\r\n             <form onSubmit={handleSubmit}>\r\n                 <input type='text'\r\n"
                },
                {
                    "date": 1757139681360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n         <div className='container'>\r\n             <button className=\"btn btn-primary mb-2\"     onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n \r\n             {showForm &&\r\n-            <form onSubmit={handleSubmit}>\r\n+            <form onSubmit={handleSubmit} className='mb-4'>\r\n                 <input type='text'\r\n                     name='title'\r\n                     placeholder='Enter title'\r\n                     onChange={handleChange}\r\n"
                },
                {
                    "date": 1757139690718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n     };\r\n \r\n     return (\r\n         <div className='container'>\r\n-            <button className=\"btn btn-primary mb-2\"     onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+            <button className=\"btn btn-primary mb-2 mt-3\"     onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n \r\n             {showForm &&\r\n             <form onSubmit={handleSubmit} className='mb-4'>\r\n                 <input type='text'\r\n"
                },
                {
                    "date": 1757139696776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n     };\r\n \r\n     return (\r\n         <div className='container'>\r\n-            <button className=\"btn btn-primary mb-2 mt-3\"     onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n \r\n             {showForm &&\r\n             <form onSubmit={handleSubmit} className='mb-4'>\r\n                 <input type='text'\r\n"
                },
                {
                    "date": 1757139723520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n                     onChange={handleChange}\r\n                     value={form.title}\r\n                     className='form-control mb-2'\r\n                     required />\r\n-                <input type='text'\r\n+                <input type='textarea'\r\n                     title='Description'\r\n                     placeholder='Enter Description'\r\n                     onChange={handleChange}\r\n                     value={form.description}\r\n"
                },
                {
                    "date": 1757139743179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n                     onChange={handleChange}\r\n                     value={form.title}\r\n                     className='form-control mb-2'\r\n                     required />\r\n-                <input type='textarea'\r\n+                <input type='text'\r\n                     title='Description'\r\n                     placeholder='Enter Description'\r\n                     onChange={handleChange}\r\n                     value={form.description}\r\n"
                },
                {
                    "date": 1757139752042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n                     onChange={handleChange}\r\n                     value={form.title}\r\n                     className='form-control mb-2'\r\n                     required />\r\n-                <input type='text'\r\n+                <textarea\r\n                     title='Description'\r\n                     placeholder='Enter Description'\r\n                     onChange={handleChange}\r\n                     value={form.description}\r\n"
                },
                {
                    "date": 1757139811569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,10 +67,10 @@\n                     required />\r\n                 <textarea\r\n                     title='Description'\r\n                     placeholder='Enter Description'\r\n-                    onChange={handleChange}\r\n-                    value={form.description}\r\n+                    // onChange={handleChange}\r\n+                    // value={form.description}\r\n                     className='form-control mb-2'\r\n                     required />\r\n \r\n             <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n"
                },
                {
                    "date": 1757139919611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,10 +67,12 @@\n                     required />\r\n                 <textarea\r\n                     title='Description'\r\n                     placeholder='Enter Description'\r\n-                    // onChange={handleChange}\r\n-                    // value={form.description}\r\n+                    value={form.description}\r\n+                    onChange={(e)=>{\r\n+                        setForm(..form,e.target.value)\r\n+                    }}\r\n                     className='form-control mb-2'\r\n                     required />\r\n \r\n             <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n"
                },
                {
                    "date": 1757139947801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n                     title='Description'\r\n                     placeholder='Enter Description'\r\n                     value={form.description}\r\n                     onChange={(e)=>{\r\n-                        setForm(..form,e.target.value)\r\n+                        setForm(...form,description:e.target.value)\r\n                     }}\r\n                     className='form-control mb-2'\r\n                     required />\r\n \r\n"
                },
                {
                    "date": 1757139963254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n                     title='Description'\r\n                     placeholder='Enter Description'\r\n                     value={form.description}\r\n                     onChange={(e)=>{\r\n-                        setForm(...form,description:e.target.value)\r\n+                        setForm({...form,description:e.target.value})\r\n                     }}\r\n                     className='form-control mb-2'\r\n                     required />\r\n \r\n"
                },
                {
                    "date": 1757140308470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,8 +86,10 @@\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'>{post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n+                            <button onClick={handleDelete}>Delete</button>\r\n+                            <button onClick={handleChange}>Edit</button>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n"
                },
                {
                    "date": 1757140340852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'>{post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n-                            <button onClick={handleDelete}>Delete</button>\r\n+                            <button onClick={handleDelete(post.id)}>Delete</button>\r\n                             <button onClick={handleChange}>Edit</button>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n"
                },
                {
                    "date": 1757140375741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n             <div className='row'>\r\n                 {data.map(post => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n-                            <div className='card-title'>{post.title}</div>\r\n+                            <div className='card-title'>{post.id} -{post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n                             <button onClick={handleDelete(post.id)}>Delete</button>\r\n                             <button onClick={handleChange}>Edit</button>\r\n                         </div>\r\n"
                },
                {
                    "date": 1757140391507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n             <div className='row'>\r\n                 {data.map(post => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n-                            <div className='card-title'>{post.id} -{post.title}</div>\r\n+                            <div className='card-title'><h3>{post.id}</h3> -{post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n                             <button onClick={handleDelete(post.id)}>Delete</button>\r\n                             <button onClick={handleChange}>Edit</button>\r\n                         </div>\r\n"
                },
                {
                    "date": 1757140447587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n     const handleDelete = (id) => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n             method: \"DELETE\"\r\n         })\r\n-            .then(() => setData(data.filter(data => data.id !== id)));\r\n+            .then(() => setData(data.filter(data => data.id === id)));\r\n     };\r\n \r\n     return (\r\n         <div className='container'>\r\n"
                },
                {
                    "date": 1757140631683,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n-            .then(data => setData(data))\r\n+            .then(data => setData(newdata,...data))\r\n     }, []);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n"
                },
                {
                    "date": 1757140645709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n-            .then(data => setData(newdata,...data))\r\n+            .then(data => setData([newdata,...data]))\r\n     }, []);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n"
                },
                {
                    "date": 1757140652556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n-            .then(data => setData([newdata,...data]))\r\n+            .then(data => setData([newData,...data]))\r\n     }, []);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n"
                },
                {
                    "date": 1757140674330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n     const handleDelete = (id) => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n             method: \"DELETE\"\r\n         })\r\n-            .then(() => setData(data.filter(data => data.id === id)));\r\n+            .then(() => setData(data.filter(data => data.id !== id)));\r\n     };\r\n \r\n     return (\r\n         <div className='container'>\r\n"
                },
                {
                    "date": 1757140681189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n-            .then(data => setData([newData,...data]))\r\n+            .then(data => setData([...data]))\r\n     }, []);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n"
                },
                {
                    "date": 1757140772105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n             <div className='row'>\r\n                 {data.map(post => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n-                            <div className='card-title'><h3>{post.id}</h3> -{post.title}</div>\r\n+                            <div className='card-title'><h3>{post.id}</h3> {post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n                             <button onClick={handleDelete(post.id)}>Delete</button>\r\n                             <button onClick={handleChange}>Edit</button>\r\n                         </div>\r\n"
                },
                {
                    "date": 1757140990791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n-            .then(data => setData([...data]))\r\n+            .then(data => setData([{ ...newPost, id: Date.now() }, ...posts}]))\r\n     }, []);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n"
                },
                {
                    "date": 1757141000111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n-            .then(data => setData([{ ...newPost, id: Date.now() }, ...posts}]))\r\n+            .then(data => setData([{ ...newPost, id: Date.now() }, ...posts])\r\n     }, []);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n"
                },
                {
                    "date": 1757141005966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n-            .then(data => setData([{ ...newPost, id: Date.now() }, ...posts])\r\n+            .then(data => setData([{ ...newPost, id: Date.now() }, ...posts]))\r\n     }, []);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n"
                },
                {
                    "date": 1757141016515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n-            .then(data => setData([{ ...newPost, id: Date.now() }, ...posts]))\r\n+            .then(data => setData([{ ...newPost, id: Date.now() }, ...posts])\r\n     }, []);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n"
                },
                {
                    "date": 1757141032282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n-            .then(data => setData([{ ...newPost, id: Date.now() }, ...posts])\r\n+            .then(data => setData([{ ...newData, id: Date.now() }, ...data]))\r\n     }, []);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n"
                },
                {
                    "date": 1757141063381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,13 +6,9 @@\n     const [editId, setEditId] = useState(null);\r\n     const [data, setData] = useState([]);\r\n \r\n \r\n-    useEffect(() => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-            .then(res => res.json())\r\n-            .then(data => setData([{ ...newData, id: Date.now() }, ...data]))\r\n-    }, []);\r\n+    \r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n@@ -44,8 +40,14 @@\n                     setForm({ title: \"\", description: \"\" });\r\n                 });\r\n         }\r\n     };\r\n+\r\n+    useEffect(() => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+            .then(res => res.json())\r\n+            .then(data => setData([{ ...newData, id: Date.now() }, ...data]))\r\n+    }, []);\r\n     const handleDelete = (id) => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n             method: \"DELETE\"\r\n         })\r\n"
                },
                {
                    "date": 1757141114464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,13 @@\n     const [editId, setEditId] = useState(null);\r\n     const [data, setData] = useState([]);\r\n \r\n \r\n-    \r\n+    useEffect(() => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+            .then(res => res.json())\r\n+            .then(data => setData(data)\r\n+    }, []);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n@@ -40,14 +44,8 @@\n                     setForm({ title: \"\", description: \"\" });\r\n                 });\r\n         }\r\n     };\r\n-\r\n-    useEffect(() => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-            .then(res => res.json())\r\n-            .then(data => setData([{ ...newData, id: Date.now() }, ...data]))\r\n-    }, []);\r\n     const handleDelete = (id) => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n             method: \"DELETE\"\r\n         })\r\n"
                },
                {
                    "date": 1757141128086,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n-            .then(data => setData(data)\r\n+            .then(data => setData(data))\r\n     }, []);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n"
                },
                {
                    "date": 1757141347214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,10 +86,10 @@\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{post.id}</h3> {post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n-                            <button onClick={handleDelete(post.id)}>Delete</button>\r\n-                            <button onClick={handleChange}>Edit</button>\r\n+                            {/* <button onClick={handleDelete(post.id)}>Delete</button>\r\n+                            <button onClick={handleChange}>Edit</button> */}\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n"
                },
                {
                    "date": 1757141385634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,10 +86,10 @@\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{post.id}</h3> {post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n-                            {/* <button onClick={handleDelete(post.id)}>Delete</button>\r\n-                            <button onClick={handleChange}>Edit</button> */}\r\n+                            {/* <button onClick={handleDelete(post.id)}>Delete</button> */}\r\n+                            <button onClick={handleChange}>Edit</button>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n"
                },
                {
                    "date": 1757141458582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,41 +44,54 @@\n                     setForm({ title: \"\", description: \"\" });\r\n                 });\r\n         }\r\n     };\r\n-    const handleDelete = (id) => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-            method: \"DELETE\"\r\n-        })\r\n-            .then(() => setData(data.filter(data => data.id !== id)));\r\n+    const handleDelete = async (id) => {\r\n+        try {\r\n+            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n+                method: \"DELETE\"\r\n+            });\r\n+\r\n+            // update local state so UI changes\r\n+            setData(data.filter(post => post.id !== id));\r\n+        } catch (err) {\r\n+            console.error(\"Delete failed:\", err);\r\n+        }\r\n     };\r\n \r\n+    // const handleDelete = (id) => {\r\n+    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+    //         method: \"DELETE\"\r\n+    //     })\r\n+    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n+    // };\r\n+\r\n     return (\r\n         <div className='container'>\r\n             <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n \r\n             {showForm &&\r\n-            <form onSubmit={handleSubmit} className='mb-4'>\r\n-                <input type='text'\r\n-                    name='title'\r\n-                    placeholder='Enter title'\r\n-                    onChange={handleChange}\r\n-                    value={form.title}\r\n-                    className='form-control mb-2'\r\n-                    required />\r\n-                <textarea\r\n-                    title='Description'\r\n-                    placeholder='Enter Description'\r\n-                    value={form.description}\r\n-                    onChange={(e)=>{\r\n-                        setForm({...form,description:e.target.value})\r\n-                    }}\r\n-                    className='form-control mb-2'\r\n-                    required />\r\n+                <form onSubmit={handleSubmit} className='mb-4'>\r\n+                    <input type='text'\r\n+                        name='title'\r\n+                        placeholder='Enter title'\r\n+                        onChange={handleChange}\r\n+                        value={form.title}\r\n+                        className='form-control mb-2'\r\n+                        required />\r\n+                    <textarea\r\n+                        title='Description'\r\n+                        placeholder='Enter Description'\r\n+                        value={form.description}\r\n+                        onChange={(e) => {\r\n+                            setForm({ ...form, description: e.target.value })\r\n+                        }}\r\n+                        className='form-control mb-2'\r\n+                        required />\r\n \r\n-            <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n-            <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n-            </form>\r\n+                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n+                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n+                </form>\r\n \r\n             }\r\n \r\n             <div className='row'>\r\n@@ -86,9 +99,9 @@\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{post.id}</h3> {post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n-                            {/* <button onClick={handleDelete(post.id)}>Delete</button> */}\r\n+                             <button onClick={handleDelete(post.id)}>Delete</button> \r\n                             <button onClick={handleChange}>Edit</button>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n"
                },
                {
                    "date": 1757141485489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{post.id}</h3> {post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n-                             <button onClick={handleDelete(post.id)}>Delete</button> \r\n+                            {/* <button onClick={handleDelete(post.id)}>Delete</button> */}\r\n                             <button onClick={handleChange}>Edit</button>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n"
                },
                {
                    "date": 1757141511720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{post.id}</h3> {post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n-                            {/* <button onClick={handleDelete(post.id)}>Delete</button> */}\r\n+                             <button onClick={handleDelete}>Delete</button> \r\n                             <button onClick={handleChange}>Edit</button>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n"
                },
                {
                    "date": 1757141593943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{post.id}</h3> {post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n                              <button onClick={handleDelete}>Delete</button> \r\n-                            <button onClick={handleChange}>Edit</button>\r\n+                            <button onClick={handleChange(post)}>Edit</button>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n"
                },
                {
                    "date": 1757141627997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,15 +94,15 @@\n \r\n             }\r\n \r\n             <div className='row'>\r\n-                {data.map(post => (\r\n-                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n+                {data.map(data => (\r\n+                    <div key={data.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n-                            <div className='card-title'><h3>{post.id}</h3> {post.title}</div>\r\n-                            <div className='card-body'>{post.body}</div>\r\n-                             <button onClick={handleDelete}>Delete</button> \r\n-                            <button onClick={handleChange(post)}>Edit</button>\r\n+                            <div className='card-title'><h3>{data.id}</h3> {data.title}</div>\r\n+                            <div className='card-body'>{data.body}</div>\r\n+                             <button onClick={handleDelete(data.id)}>Delete</button> \r\n+                            <button onClick={handleChange(data)}>Edit</button>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n"
                },
                {
                    "date": 1757141682903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,15 +94,15 @@\n \r\n             }\r\n \r\n             <div className='row'>\r\n-                {data.map(data => (\r\n-                    <div key={data.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n+                {data.map(post => (\r\n+                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n-                            <div className='card-title'><h3>{data.id}</h3> {data.title}</div>\r\n-                            <div className='card-body'>{data.body}</div>\r\n-                             <button onClick={handleDelete(data.id)}>Delete</button> \r\n-                            <button onClick={handleChange(data)}>Edit</button>\r\n+                            <div className='card-title'><h3>{post.id}</h3> {data.title}</div>\r\n+                            <div className='card-body'>{post.body}</div>\r\n+                             <button onClick={handleDelete(post.id)}>Delete</button> \r\n+                            <button onClick={handleChange(post)}>Edit</button>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n"
                },
                {
                    "date": 1757141694419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,9 @@\n             <div className='row'>\r\n                 {data.map(post => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n-                            <div className='card-title'><h3>{post.id}</h3> {data.title}</div>\r\n+                            <div className='card-title'><h3>{post.id}</h3> {post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n                              <button onClick={handleDelete(post.id)}>Delete</button> \r\n                             <button onClick={handleChange(post)}>Edit</button>\r\n                         </div>\r\n"
                },
                {
                    "date": 1757141723844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n             .then(data => setData(data))\r\n     }, []);\r\n \r\n     const handleChange = (event) => {\r\n-        setForm({ ...form, [event.target.name]: event.target.value })\r\n+        setForm({ ...form, [event.target.title]: event.target.value })\r\n     };\r\n     const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n \r\n"
                },
                {
                    "date": 1757141752488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n             .then(data => setData(data))\r\n     }, []);\r\n \r\n     const handleChange = (event) => {\r\n-        setForm({ ...form, [event.target.title]: event.target.value })\r\n+        // setForm({ ...form, [event.target.title]: event.target.value})\r\n     };\r\n     const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n \r\n"
                },
                {
                    "date": 1757142029957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n             .then(data => setData(data))\r\n     }, []);\r\n \r\n     const handleChange = (event) => {\r\n-        // setForm({ ...form, [event.target.title]: event.target.value})\r\n+         setForm({ ...form, [event.target.title]: event.target.value})\r\n     };\r\n     const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n \r\n"
                },
                {
                    "date": 1757142112659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n             .then(data => setData(data))\r\n     }, []);\r\n \r\n     const handleChange = (event) => {\r\n-         setForm({ ...form, [event.target.title]: event.target.value})\r\n+        setForm({ ...form, [event.target.title]: event.target.value })\r\n     };\r\n     const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n \r\n@@ -26,10 +26,12 @@\n                 body: JSON.stringify({ ...form, id: editId })\r\n             })\r\n                 .then((res => res.json()))\r\n                 .then(updated => {\r\n-                    setData(data.map(data => (data.id === editId ? updated : data)))\r\n-                    setForm({ title: \"\", description: \"\" });\r\n+                    const updated = posts.map(p =>\r\n+                        p.id === editId ? { ...p, title: form.title, body: form.body } : p\r\n+                    );\r\n+                    setPosts(updated);\r\n                     setEditId(null);\r\n                 })\r\n         }\r\n         else {\r\n@@ -99,9 +101,9 @@\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{post.id}</h3> {post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n-                             <button onClick={handleDelete(post.id)}>Delete</button> \r\n+                            <button onClick={handleDelete(post.id)}>Delete</button>\r\n                             <button onClick={handleChange(post)}>Edit</button>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n"
                },
                {
                    "date": 1757142137853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n             .then(data => setData(data))\r\n     }, []);\r\n \r\n     const handleChange = (event) => {\r\n-        setForm({ ...form, [event.target.title]: event.target.value })\r\n+         setForm({ ...form, [event.target.title]: event.target.value})\r\n     };\r\n     const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n \r\n@@ -26,12 +26,10 @@\n                 body: JSON.stringify({ ...form, id: editId })\r\n             })\r\n                 .then((res => res.json()))\r\n                 .then(updated => {\r\n-                    const updated = posts.map(p =>\r\n-                        p.id === editId ? { ...p, title: form.title, body: form.body } : p\r\n-                    );\r\n-                    setPosts(updated);\r\n+                    setData(data.map(data => (data.id === editId ? updated : data)))\r\n+                    setForm({ title: \"\", description: \"\" });\r\n                     setEditId(null);\r\n                 })\r\n         }\r\n         else {\r\n@@ -101,9 +99,9 @@\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{post.id}</h3> {post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n-                            <button onClick={handleDelete(post.id)}>Delete</button>\r\n+                             <button onClick={handleDelete(post.id)}>Delete</button> \r\n                             <button onClick={handleChange(post)}>Edit</button>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n"
                },
                {
                    "date": 1757143376345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,118 @@\n+import React, { useState, useEffect } from 'react'\r\n+\r\n+export default function Crud() {\r\n+    const [showForm, setShowForm] = useState(false);\r\n+    const [form, setForm] = useState({ title: \"\", description: \"\" });\r\n+    const [editId, setEditId] = useState(null);\r\n+    const [data, setData] = useState([]);\r\n+\r\n+\r\n+    useEffect(() => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+            .then(res => res.json())\r\n+            .then(data => setData(data))\r\n+    }, []);\r\n+\r\n+    const handleChange = (event) => {\r\n+        //  setForm({ ...form, [event.target.title]: event.target.value})\r\n+    };\r\n+    const handleSubmit = (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        if (editId) {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+                method: \"PUT\",\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify({ ...form, id: editId })\r\n+            })\r\n+                .then((res => res.json()))\r\n+                .then(updated => {\r\n+                    setData(data.map(data => (data.id === editId ? updated : data)))\r\n+                    setForm({ title: \"\", description: \"\" });\r\n+                    setEditId(null);\r\n+                })\r\n+        }\r\n+        else {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+                method: \"POST\",\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify(form),\r\n+            })\r\n+                .then(res => res.json())\r\n+                .then(newData => {\r\n+                    setData([newData, ...data]);\r\n+                    setForm({ title: \"\", description: \"\" });\r\n+                });\r\n+        }\r\n+    };\r\n+    const handleDelete = async (id) => {\r\n+        try {\r\n+            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n+                method: \"DELETE\"\r\n+            });\r\n+\r\n+            // update local state so UI changes\r\n+            setData(data.filter(post => post.id !== id));\r\n+        } catch (err) {\r\n+            console.error(\"Delete failed:\", err);\r\n+        }\r\n+    };\r\n+\r\n+    // const handleDelete = (id) => {\r\n+    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+    //         method: \"DELETE\"\r\n+    //     })\r\n+    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n+    // };\r\n+\r\n+    return (\r\n+        <div className='container'>\r\n+            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+\r\n+            {showForm &&\r\n+                <form onSubmit={handleSubmit} className='mb-4'>\r\n+                    <input type='text'\r\n+                        name='title'\r\n+                        placeholder='Enter title'\r\n+                        onChange={handleChange}\r\n+                        value={form.title}\r\n+                        className='form-control mb-2'\r\n+                        required />\r\n+                    <textarea\r\n+                        title='Description'\r\n+                        placeholder='Enter Description'\r\n+                        value={form.description}\r\n+                        onChange={(e) => {\r\n+                            setForm({ ...form, description: e.target.value })\r\n+                        }}\r\n+                        className='form-control mb-2'\r\n+                        required />\r\n+\r\n+                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n+                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n+                </form>\r\n+\r\n+            }\r\n+\r\n+            <div className='row'>\r\n+                {data.map(post => (\r\n+                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n+                        <div className='card mb-4'>\r\n+                            <div className='card-title'><h3>{post.id}</h3> {post.title}</div>\r\n+                            <div className='card-body'>{post.body}</div>\r\n+                             <button onClick={handleDelete(post.id)}>Delete</button> \r\n+                            <button onClick={handleChange(post)}>Edit</button>\r\n+                        </div>\r\n+                    </div>\r\n+                ))}\r\n+            </div>\r\n+\r\n+        </div>\r\n+    )\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+}\r\n"
                },
                {
                    "date": 1757143411360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n             .then(data => setData(data))\r\n     }, []);\r\n \r\n     const handleChange = (event) => {\r\n-        //  setForm({ ...form, [event.target.title]: event.target.value})\r\n+         setForm({ ...form, [event.target.title]: event.target.value})\r\n     };\r\n     const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n \r\n"
                },
                {
                    "date": 1757143501712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n             .then(data => setData(data))\r\n     }, []);\r\n \r\n     const handleChange = (event) => {\r\n-         setForm({ ...form, [event.target.title]: event.target.value})\r\n+         setForm({ ...form, e.target.value)\r\n     };\r\n     const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n \r\n@@ -115,122 +115,4 @@\n \r\n \r\n \r\n }\r\n-import React, { useState, useEffect } from 'react'\r\n-\r\n-export default function Crud() {\r\n-    const [showForm, setShowForm] = useState(false);\r\n-    const [form, setForm] = useState({ title: \"\", description: \"\" });\r\n-    const [editId, setEditId] = useState(null);\r\n-    const [data, setData] = useState([]);\r\n-\r\n-\r\n-    useEffect(() => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-            .then(res => res.json())\r\n-            .then(data => setData(data))\r\n-    }, []);\r\n-\r\n-    const handleChange = (event) => {\r\n-         setForm({ ...form, [event.target.title]: event.target.value})\r\n-    };\r\n-    const handleSubmit = (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        if (editId) {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-                method: \"PUT\",\r\n-                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify({ ...form, id: editId })\r\n-            })\r\n-                .then((res => res.json()))\r\n-                .then(updated => {\r\n-                    setData(data.map(data => (data.id === editId ? updated : data)))\r\n-                    setForm({ title: \"\", description: \"\" });\r\n-                    setEditId(null);\r\n-                })\r\n-        }\r\n-        else {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-                method: \"POST\",\r\n-                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify(form),\r\n-            })\r\n-                .then(res => res.json())\r\n-                .then(newData => {\r\n-                    setData([newData, ...data]);\r\n-                    setForm({ title: \"\", description: \"\" });\r\n-                });\r\n-        }\r\n-    };\r\n-    const handleDelete = async (id) => {\r\n-        try {\r\n-            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n-                method: \"DELETE\"\r\n-            });\r\n-\r\n-            // update local state so UI changes\r\n-            setData(data.filter(post => post.id !== id));\r\n-        } catch (err) {\r\n-            console.error(\"Delete failed:\", err);\r\n-        }\r\n-    };\r\n-\r\n-    // const handleDelete = (id) => {\r\n-    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-    //         method: \"DELETE\"\r\n-    //     })\r\n-    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n-    // };\r\n-\r\n-    return (\r\n-        <div className='container'>\r\n-            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n-\r\n-            {showForm &&\r\n-                <form onSubmit={handleSubmit} className='mb-4'>\r\n-                    <input type='text'\r\n-                        name='title'\r\n-                        placeholder='Enter title'\r\n-                        onChange={handleChange}\r\n-                        value={form.title}\r\n-                        className='form-control mb-2'\r\n-                        required />\r\n-                    <textarea\r\n-                        title='Description'\r\n-                        placeholder='Enter Description'\r\n-                        value={form.description}\r\n-                        onChange={(e) => {\r\n-                            setForm({ ...form, description: e.target.value })\r\n-                        }}\r\n-                        className='form-control mb-2'\r\n-                        required />\r\n-\r\n-                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n-                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n-                </form>\r\n-\r\n-            }\r\n-\r\n-            <div className='row'>\r\n-                {data.map(post => (\r\n-                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n-                        <div className='card mb-4'>\r\n-                            <div className='card-title'><h3>{post.id}</h3> {post.title}</div>\r\n-                            <div className='card-body'>{post.body}</div>\r\n-                             <button onClick={handleDelete(post.id)}>Delete</button> \r\n-                            <button onClick={handleChange(post)}>Edit</button>\r\n-                        </div>\r\n-                    </div>\r\n-                ))}\r\n-            </div>\r\n-\r\n-        </div>\r\n-    )\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-}\r\n"
                },
                {
                    "date": 1757143587443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n             .then(data => setData(data))\r\n     }, []);\r\n \r\n     const handleChange = (event) => {\r\n-         setForm({ ...form, e.target.value)\r\n+         setForm({ ...form,[e.target.name]: e.target.value)\r\n     };\r\n     const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n \r\n"
                },
                {
                    "date": 1757143593949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n             .then(data => setData(data))\r\n     }, []);\r\n \r\n     const handleChange = (event) => {\r\n-         setForm({ ...form,[e.target.name]: e.target.value)\r\n+         setForm({ ...form,[e.target.name]: e.target.value})\r\n     };\r\n     const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n \r\n"
                },
                {
                    "date": 1757143602851,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n             .then(data => setData(data))\r\n     }, []);\r\n \r\n     const handleChange = (event) => {\r\n-         setForm({ ...form,[e.target.name]: e.target.value})\r\n+         setForm({ ...form,[event.target.name]: event.target.value})\r\n     };\r\n     const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n \r\n"
                },
                {
                    "date": 1757307062937,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n \r\n         if (editId) {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts/id\", {\r\n                 method: \"PUT\",\r\n                 headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n                 body: JSON.stringify({ ...form, id: editId })\r\n             })\r\n"
                },
                {
                    "date": 1757307084626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n \r\n         if (editId) {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts/id\", {\r\n+            fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"PUT\",\r\n                 headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n                 body: JSON.stringify({ ...form, id: editId })\r\n             })\r\n"
                },
                {
                    "date": 1757307132613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n \r\n         if (editId) {\r\n-            fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n+            fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n                 method: \"PUT\",\r\n                 headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n                 body: JSON.stringify({ ...form, id: editId })\r\n             })\r\n"
                },
                {
                    "date": 1757307240459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{post.id}</h3> {post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n                              <button onClick={handleDelete(post.id)}>Delete</button> \r\n-                            <button onClick={handleChange(post)}>Edit</button>\r\n+                            <button onClick={handleSubmit(post)}>Edit</button>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n"
                },
                {
                    "date": 1757307294228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{post.id}</h3> {post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n                              <button onClick={handleDelete(post.id)}>Delete</button> \r\n-                            <button onClick={handleSubmit(post)}>Edit</button>\r\n+                            <button onClick={handleChange(post)}>Edit</button>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n"
                },
                {
                    "date": 1757307411172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,11 +81,9 @@\n                     <textarea\r\n                         title='Description'\r\n                         placeholder='Enter Description'\r\n                         value={form.description}\r\n-                        onChange={(e) => {\r\n-                            setForm({ ...form, description: e.target.value })\r\n-                        }}\r\n+                        onChange={handleChange}\r\n                         className='form-control mb-2'\r\n                         required />\r\n \r\n                     <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n"
                },
                {
                    "date": 1757307444926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n             .then(data => setData(data))\r\n     }, []);\r\n \r\n     const handleChange = (event) => {\r\n-         setForm({ ...form,[event.target.name]: event.target.value})\r\n+        setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n     const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n \r\n@@ -97,10 +97,16 @@\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{post.id}</h3> {post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n-                             <button onClick={handleDelete(post.id)}>Delete</button> \r\n-                            <button onClick={handleChange(post)}>Edit</button>\r\n+                            <button onClick={handleDelete(post.id)}>Delete</button>\r\n+                            <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n+                            <button onClick={() => {\r\n+                                setForm({ title: post.title, description: post.body });\r\n+                                setEditId(post.id);\r\n+                                setShowForm(true);\r\n+                            }}>Edit</button>\r\n+\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n"
                },
                {
                    "date": 1757307468194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,8 @@\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{post.id}</h3> {post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n-                            <button onClick={handleDelete(post.id)}>Delete</button>\r\n                             <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n                             <button onClick={() => {\r\n                                 setForm({ title: post.title, description: post.body });\r\n                                 setEditId(post.id);\r\n"
                },
                {
                    "date": 1757307543883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,11 @@\n                     <textarea\r\n                         title='Description'\r\n                         placeholder='Enter Description'\r\n                         value={form.description}\r\n-                        onChange={handleChange}\r\n+                        onChange={(e) => {\r\n+                            setForm({ ...form, description: e.target.value })\r\n+                        }}\r\n                         className='form-control mb-2'\r\n                         required />\r\n \r\n                     <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n"
                },
                {
                    "date": 1757307613670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,9 +105,8 @@\n                                 setForm({ title: post.title, description: post.body });\r\n                                 setEditId(post.id);\r\n                                 setShowForm(true);\r\n                             }}>Edit</button>\r\n-\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n"
                },
                {
                    "date": 1757307639389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n     const [showForm, setShowForm] = useState(false);\r\n     const [form, setForm] = useState({ title: \"\", description: \"\" });\r\n     const [editId, setEditId] = useState(null);\r\n     const [data, setData] = useState([]);\r\n+    const cardPerPage=10;\r\n \r\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n"
                },
                {
                    "date": 1757307752240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,10 @@\n     const [showForm, setShowForm] = useState(false);\r\n     const [form, setForm] = useState({ title: \"\", description: \"\" });\r\n     const [editId, setEditId] = useState(null);\r\n     const [data, setData] = useState([]);\r\n-    const cardPerPage=10;\r\n+    const cardPerPage = 10;\r\n+    const [page,setPage]=useState(1);\r\n \r\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n@@ -110,9 +111,27 @@\n                         </div>\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n-\r\n+            <div>\r\n+                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}>Prev</button>\r\n+                {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n+                    <button\r\n+                        key={idx}\r\n+                        onClick={() => setPage(idx + 1)}\r\n+                        style={{\r\n+                            margin: \"5px\",\r\n+                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n+                            color: page === idx + 1 ? \"white\" : \"black\",\r\n+                            border: \"1px solid black\",\r\n+                            borderRadius: \"8px\",\r\n+                            padding: \"10px\",\r\n+                        }}>\r\n+                        {idx + 1}\r\n+                    </button>\r\n+                ))}\r\n+                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(posts.length / postsPerPage)}>Next</button>\r\n+            </div>\r\n         </div>\r\n     )\r\n \r\n \r\n"
                },
                {
                    "date": 1757307796330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,9 +113,9 @@\n                 ))}\r\n             </div>\r\n             <div>\r\n                 <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}>Prev</button>\r\n-                {Array.from({ length: Math.ceil(posts.length / postsPerPage) }, (_, idx) => (\r\n+                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n                     <button\r\n                         key={idx}\r\n                         onClick={() => setPage(idx + 1)}\r\n                         style={{\r\n@@ -128,9 +128,9 @@\n                         }}>\r\n                         {idx + 1}\r\n                     </button>\r\n                 ))}\r\n-                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(posts.length / postsPerPage)}>Next</button>\r\n+                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}>Next</button>\r\n             </div>\r\n         </div>\r\n     )\r\n \r\n"
                },
                {
                    "date": 1757307922603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n     const [form, setForm] = useState({ title: \"\", description: \"\" });\r\n     const [editId, setEditId] = useState(null);\r\n     const [data, setData] = useState([]);\r\n     const cardPerPage = 10;\r\n-    const [page,setPage]=useState(1);\r\n+    const [page, setPage] = useState(1);\r\n \r\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n@@ -44,8 +44,10 @@\n                 .then(newData => {\r\n                     setData([newData, ...data]);\r\n                     setForm({ title: \"\", description: \"\" });\r\n                 });\r\n+            const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n+            setPage(lastPage);\r\n         }\r\n     };\r\n     const handleDelete = async (id) => {\r\n         try {\r\n"
                },
                {
                    "date": 1757308432815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,8 +48,11 @@\n             const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n             setPage(lastPage);\r\n         }\r\n     };\r\n+    const indexOfLastPost = page * postsPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n+    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n     const handleDelete = async (id) => {\r\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n@@ -101,9 +104,9 @@\n             <div className='row'>\r\n                 {data.map(post => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n-                            <div className='card-title'><h3>{post.id}</h3> {post.title}</div>\r\n+                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3> {post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n                             <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n                             <button onClick={() => {\r\n                                 setForm({ title: post.title, description: post.body });\r\n"
                },
                {
                    "date": 1757308448685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,11 +48,11 @@\n             const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n             setPage(lastPage);\r\n         }\r\n     };\r\n-    const indexOfLastPost = page * postsPerPage;\r\n-    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n-    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n+    const indexOfLastPost = page * cardPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n     const handleDelete = async (id) => {\r\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n"
                },
                {
                    "date": 1757308481958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,9 +101,9 @@\n \r\n             }\r\n \r\n             <div className='row'>\r\n-                {data.map(post => (\r\n+                {currentPosts.map(post,i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3> {post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n"
                },
                {
                    "date": 1757308494415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,9 +101,9 @@\n \r\n             }\r\n \r\n             <div className='row'>\r\n-                {currentPosts.map(post,i) => (\r\n+                {currentPosts.map((post,i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3> {post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n"
                },
                {
                    "date": 1757308568795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n-import React, { useState, useEffect } from 'react'\r\n+import React, { useState, useEffect } from 'react';\r\n+import '../app.css';\r\n \r\n export default function Crud() {\r\n     const [showForm, setShowForm] = useState(false);\r\n     const [form, setForm] = useState({ title: \"\", description: \"\" });\r\n"
                },
                {
                    "date": 1757308589340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n import React, { useState, useEffect } from 'react';\r\n-import '../app.css';\r\n \r\n export default function Crud() {\r\n     const [showForm, setShowForm] = useState(false);\r\n     const [form, setForm] = useState({ title: \"\", description: \"\" });\r\n"
                },
                {
                    "date": 1757308845508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,13 +39,14 @@\n                 method: \"POST\",\r\n                 headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n                 body: JSON.stringify(form),\r\n             })\r\n-                .then(res => res.json())\r\n-                .then(newData => {\r\n-                    setData([newData, ...data]);\r\n-                    setForm({ title: \"\", description: \"\" });\r\n-                });\r\n+                // .then(res => res.json())\r\n+                // .then(newData => {\r\n+                //     setData([newData, ...data]);\r\n+                //     setForm({ title: \"\", description: \"\" });\r\n+                // });\r\n+                setData([...data,newData])\r\n             const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n             setPage(lastPage);\r\n         }\r\n     };\r\n"
                },
                {
                    "date": 1757308887427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,11 @@\n                 // .then(newData => {\r\n                 //     setData([newData, ...data]);\r\n                 //     setForm({ title: \"\", description: \"\" });\r\n                 // });\r\n-                setData([...data,newData])\r\n+                .then(res=>res.JSON())\r\n+                .then(newData=>\r\n+                setData([...data,newData]))\r\n             const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n             setPage(lastPage);\r\n         }\r\n     };\r\n"
                },
                {
                    "date": 1757308942524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,10 +45,11 @@\n                 //     setData([newData, ...data]);\r\n                 //     setForm({ title: \"\", description: \"\" });\r\n                 // });\r\n                 .then(res=>res.JSON())\r\n-                .then(newData=>\r\n-                setData([...data,newData]))\r\n+                .then(newData=>{\r\n+                setData([...data,newData])\r\n+            })\r\n             const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n             setPage(lastPage);\r\n         }\r\n     };\r\n"
                },
                {
                    "date": 1757308983184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,17 +39,12 @@\n                 method: \"POST\",\r\n                 headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n                 body: JSON.stringify(form),\r\n             })\r\n-                // .then(res => res.json())\r\n-                // .then(newData => {\r\n-                //     setData([newData, ...data]);\r\n-                //     setForm({ title: \"\", description: \"\" });\r\n-                // });\r\n                 .then(res=>res.JSON())\r\n                 .then(newData=>{\r\n                 setData([...data,newData])\r\n-            })\r\n+            });\r\n             const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n             setPage(lastPage);\r\n         }\r\n     };\r\n"
                },
                {
                    "date": 1757309009866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,105 +39,110 @@\n                 method: \"POST\",\r\n                 headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n                 body: JSON.stringify(form),\r\n             })\r\n-                .then(res=>res.JSON())\r\n-                .then(newData=>{\r\n-                setData([...data,newData])\r\n-            });\r\n+            // .then(res => res.json())\r\n+            // .then(newData => {\r\n+            //     setData([newData, ...data]);\r\n+            //     setForm({ title: \"\", description: \"\" });\r\n+            // });\r\n             const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n             setPage(lastPage);\r\n-        }\r\n+                .then(res => res.JSON())\r\n+        .then(newData => {\r\n+            setData([...data, newData])\r\n+        });\r\n+}\r\n     };\r\n-    const indexOfLastPost = page * cardPerPage;\r\n-    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-    const handleDelete = async (id) => {\r\n-        try {\r\n-            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n-                method: \"DELETE\"\r\n-            });\r\n+const indexOfLastPost = page * cardPerPage;\r\n+const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+const handleDelete = async (id) => {\r\n+    try {\r\n+        await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n+            method: \"DELETE\"\r\n+        });\r\n \r\n-            // update local state so UI changes\r\n-            setData(data.filter(post => post.id !== id));\r\n-        } catch (err) {\r\n-            console.error(\"Delete failed:\", err);\r\n-        }\r\n-    };\r\n+        // update local state so UI changes\r\n+        setData(data.filter(post => post.id !== id));\r\n+    } catch (err) {\r\n+        console.error(\"Delete failed:\", err);\r\n+    }\r\n+};\r\n \r\n-    // const handleDelete = (id) => {\r\n-    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-    //         method: \"DELETE\"\r\n-    //     })\r\n-    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n-    // };\r\n+// const handleDelete = (id) => {\r\n+//     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+//         method: \"DELETE\"\r\n+//     })\r\n+//         .then(() => setData(data.filter(data => data.id !== id)));\r\n+// };\r\n \r\n-    return (\r\n-        <div className='container'>\r\n-            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+return (\r\n+    <div className='container'>\r\n+        <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n \r\n-            {showForm &&\r\n-                <form onSubmit={handleSubmit} className='mb-4'>\r\n-                    <input type='text'\r\n-                        name='title'\r\n-                        placeholder='Enter title'\r\n-                        onChange={handleChange}\r\n-                        value={form.title}\r\n-                        className='form-control mb-2'\r\n-                        required />\r\n-                    <textarea\r\n-                        title='Description'\r\n-                        placeholder='Enter Description'\r\n-                        value={form.description}\r\n-                        onChange={(e) => {\r\n-                            setForm({ ...form, description: e.target.value })\r\n-                        }}\r\n-                        className='form-control mb-2'\r\n-                        required />\r\n+        {showForm &&\r\n+            <form onSubmit={handleSubmit} className='mb-4'>\r\n+                <input type='text'\r\n+                    name='title'\r\n+                    placeholder='Enter title'\r\n+                    onChange={handleChange}\r\n+                    value={form.title}\r\n+                    className='form-control mb-2'\r\n+                    required />\r\n+                <textarea\r\n+                    title='Description'\r\n+                    placeholder='Enter Description'\r\n+                    value={form.description}\r\n+                    onChange={(e) => {\r\n+                        setForm({ ...form, description: e.target.value })\r\n+                    }}\r\n+                    className='form-control mb-2'\r\n+                    required />\r\n \r\n-                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n-                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n-                </form>\r\n+                <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n+                <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n+            </form>\r\n \r\n-            }\r\n+        }\r\n \r\n-            <div className='row'>\r\n-                {currentPosts.map((post,i) => (\r\n-                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n-                        <div className='card mb-4'>\r\n-                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3> {post.title}</div>\r\n-                            <div className='card-body'>{post.body}</div>\r\n-                            <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n-                            <button onClick={() => {\r\n-                                setForm({ title: post.title, description: post.body });\r\n-                                setEditId(post.id);\r\n-                                setShowForm(true);\r\n-                            }}>Edit</button>\r\n-                        </div>\r\n+        <div className='row'>\r\n+            {currentPosts.map((post, i) => (\r\n+                <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n+                    <div className='card mb-4'>\r\n+                        <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3> {post.title}</div>\r\n+                        <div className='card-body'>{post.body}</div>\r\n+                        <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n+                        <button onClick={() => {\r\n+                            setForm({ title: post.title, description: post.body });\r\n+                            setEditId(post.id);\r\n+                            setShowForm(true);\r\n+                        }}>Edit</button>\r\n                     </div>\r\n-                ))}\r\n-            </div>\r\n-            <div>\r\n-                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}>Prev</button>\r\n-                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n-                    <button\r\n-                        key={idx}\r\n-                        onClick={() => setPage(idx + 1)}\r\n-                        style={{\r\n-                            margin: \"5px\",\r\n-                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n-                            color: page === idx + 1 ? \"white\" : \"black\",\r\n-                            border: \"1px solid black\",\r\n-                            borderRadius: \"8px\",\r\n-                            padding: \"10px\",\r\n-                        }}>\r\n-                        {idx + 1}\r\n-                    </button>\r\n-                ))}\r\n-                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}>Next</button>\r\n-            </div>\r\n+                </div>\r\n+            ))}\r\n         </div>\r\n-    )\r\n+        <div>\r\n+            <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}>Prev</button>\r\n+            {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n+                <button\r\n+                    key={idx}\r\n+                    onClick={() => setPage(idx + 1)}\r\n+                    style={{\r\n+                        margin: \"5px\",\r\n+                        background: page === idx + 1 ? \"blue\" : \"white\",\r\n+                        color: page === idx + 1 ? \"white\" : \"black\",\r\n+                        border: \"1px solid black\",\r\n+                        borderRadius: \"8px\",\r\n+                        padding: \"10px\",\r\n+                    }}>\r\n+                    {idx + 1}\r\n+                </button>\r\n+            ))}\r\n+            <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}>Next</button>\r\n+        </div>\r\n+    </div>\r\n+)\r\n \r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1757309026991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,110 +39,110 @@\n                 method: \"POST\",\r\n                 headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n                 body: JSON.stringify(form),\r\n             })\r\n-            // .then(res => res.json())\r\n-            // .then(newData => {\r\n-            //     setData([newData, ...data]);\r\n-            //     setForm({ title: \"\", description: \"\" });\r\n-            // });\r\n+                // .then(res => res.json())\r\n+                // .then(newData => {\r\n+                //     setData([newData, ...data]);\r\n+                //     setForm({ title: \"\", description: \"\" });\r\n+                // });\r\n+                .then(res=>res.JSON())\r\n+                .then(newData=>{\r\n+                setData([...data,newData])\r\n+            });\r\n             const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n             setPage(lastPage);\r\n-                .then(res => res.JSON())\r\n-        .then(newData => {\r\n-            setData([...data, newData])\r\n-        });\r\n-}\r\n+        }\r\n     };\r\n-const indexOfLastPost = page * cardPerPage;\r\n-const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-const handleDelete = async (id) => {\r\n-    try {\r\n-        await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n-            method: \"DELETE\"\r\n-        });\r\n+    const indexOfLastPost = page * cardPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+    const handleDelete = async (id) => {\r\n+        try {\r\n+            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n+                method: \"DELETE\"\r\n+            });\r\n \r\n-        // update local state so UI changes\r\n-        setData(data.filter(post => post.id !== id));\r\n-    } catch (err) {\r\n-        console.error(\"Delete failed:\", err);\r\n-    }\r\n-};\r\n+            // update local state so UI changes\r\n+            setData(data.filter(post => post.id !== id));\r\n+        } catch (err) {\r\n+            console.error(\"Delete failed:\", err);\r\n+        }\r\n+    };\r\n \r\n-// const handleDelete = (id) => {\r\n-//     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-//         method: \"DELETE\"\r\n-//     })\r\n-//         .then(() => setData(data.filter(data => data.id !== id)));\r\n-// };\r\n+    // const handleDelete = (id) => {\r\n+    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+    //         method: \"DELETE\"\r\n+    //     })\r\n+    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n+    // };\r\n \r\n-return (\r\n-    <div className='container'>\r\n-        <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+    return (\r\n+        <div className='container'>\r\n+            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n \r\n-        {showForm &&\r\n-            <form onSubmit={handleSubmit} className='mb-4'>\r\n-                <input type='text'\r\n-                    name='title'\r\n-                    placeholder='Enter title'\r\n-                    onChange={handleChange}\r\n-                    value={form.title}\r\n-                    className='form-control mb-2'\r\n-                    required />\r\n-                <textarea\r\n-                    title='Description'\r\n-                    placeholder='Enter Description'\r\n-                    value={form.description}\r\n-                    onChange={(e) => {\r\n-                        setForm({ ...form, description: e.target.value })\r\n-                    }}\r\n-                    className='form-control mb-2'\r\n-                    required />\r\n+            {showForm &&\r\n+                <form onSubmit={handleSubmit} className='mb-4'>\r\n+                    <input type='text'\r\n+                        name='title'\r\n+                        placeholder='Enter title'\r\n+                        onChange={handleChange}\r\n+                        value={form.title}\r\n+                        className='form-control mb-2'\r\n+                        required />\r\n+                    <textarea\r\n+                        title='Description'\r\n+                        placeholder='Enter Description'\r\n+                        value={form.description}\r\n+                        onChange={(e) => {\r\n+                            setForm({ ...form, description: e.target.value })\r\n+                        }}\r\n+                        className='form-control mb-2'\r\n+                        required />\r\n \r\n-                <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n-                <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n-            </form>\r\n+                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n+                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n+                </form>\r\n \r\n-        }\r\n+            }\r\n \r\n-        <div className='row'>\r\n-            {currentPosts.map((post, i) => (\r\n-                <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n-                    <div className='card mb-4'>\r\n-                        <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3> {post.title}</div>\r\n-                        <div className='card-body'>{post.body}</div>\r\n-                        <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n-                        <button onClick={() => {\r\n-                            setForm({ title: post.title, description: post.body });\r\n-                            setEditId(post.id);\r\n-                            setShowForm(true);\r\n-                        }}>Edit</button>\r\n+            <div className='row'>\r\n+                {currentPosts.map((post,i) => (\r\n+                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n+                        <div className='card mb-4'>\r\n+                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3> {post.title}</div>\r\n+                            <div className='card-body'>{post.body}</div>\r\n+                            <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n+                            <button onClick={() => {\r\n+                                setForm({ title: post.title, description: post.body });\r\n+                                setEditId(post.id);\r\n+                                setShowForm(true);\r\n+                            }}>Edit</button>\r\n+                        </div>\r\n                     </div>\r\n-                </div>\r\n-            ))}\r\n+                ))}\r\n+            </div>\r\n+            <div>\r\n+                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}>Prev</button>\r\n+                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n+                    <button\r\n+                        key={idx}\r\n+                        onClick={() => setPage(idx + 1)}\r\n+                        style={{\r\n+                            margin: \"5px\",\r\n+                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n+                            color: page === idx + 1 ? \"white\" : \"black\",\r\n+                            border: \"1px solid black\",\r\n+                            borderRadius: \"8px\",\r\n+                            padding: \"10px\",\r\n+                        }}>\r\n+                        {idx + 1}\r\n+                    </button>\r\n+                ))}\r\n+                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}>Next</button>\r\n+            </div>\r\n         </div>\r\n-        <div>\r\n-            <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}>Prev</button>\r\n-            {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n-                <button\r\n-                    key={idx}\r\n-                    onClick={() => setPage(idx + 1)}\r\n-                    style={{\r\n-                        margin: \"5px\",\r\n-                        background: page === idx + 1 ? \"blue\" : \"white\",\r\n-                        color: page === idx + 1 ? \"white\" : \"black\",\r\n-                        border: \"1px solid black\",\r\n-                        borderRadius: \"8px\",\r\n-                        padding: \"10px\",\r\n-                    }}>\r\n-                    {idx + 1}\r\n-                </button>\r\n-            ))}\r\n-            <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}>Next</button>\r\n-        </div>\r\n-    </div>\r\n-)\r\n+    )\r\n \r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1757309083483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,17 +39,16 @@\n                 method: \"POST\",\r\n                 headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n                 body: JSON.stringify(form),\r\n             })\r\n-                // .then(res => res.json())\r\n-                // .then(newData => {\r\n-                //     setData([newData, ...data]);\r\n-                //     setForm({ title: \"\", description: \"\" });\r\n-                // });\r\n-                .then(res=>res.JSON())\r\n-                .then(newData=>{\r\n-                setData([...data,newData])\r\n-            });\r\n+            // .then(res => res.json())\r\n+            // .then(newData => {\r\n+            //     setData([newData, ...data]);\r\n+            //     setForm({ title: \"\", description: \"\" });\r\n+            // });\r\n+            const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n+            const newPost = { id: newId, title: form.title, body: form.body };\r\n+            setData([...data, newPost]);\r\n             const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n             setPage(lastPage);\r\n         }\r\n     };\r\n@@ -105,9 +104,9 @@\n \r\n             }\r\n \r\n             <div className='row'>\r\n-                {currentPosts.map((post,i) => (\r\n+                {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3> {post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n"
                },
                {
                    "date": 1757309129242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,9 @@\n             const newPost = { id: newId, title: form.title, body: form.body };\r\n             setData([...data, newPost]);\r\n             const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n             setPage(lastPage);\r\n+            setForm({title:\"\",description:\"\"})\r\n         }\r\n     };\r\n     const indexOfLastPost = page * cardPerPage;\r\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n"
                },
                {
                    "date": 1757309417657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,140 +12,142 @@\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n-    }, []);\r\n+            .then(res => {\r\n+                console.log(\"API called:\", res.status); // shows 200 if successful\r\n+            }, []);\r\n \r\n-    const handleChange = (event) => {\r\n-        setForm({ ...form, [event.target.name]: event.target.value })\r\n-    };\r\n-    const handleSubmit = (e) => {\r\n-        e.preventDefault();\r\n+        const handleChange = (event) => {\r\n+            setForm({ ...form, [event.target.name]: event.target.value })\r\n+        };\r\n+        const handleSubmit = (e) => {\r\n+            e.preventDefault();\r\n \r\n-        if (editId) {\r\n-            fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n-                method: \"PUT\",\r\n-                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify({ ...form, id: editId })\r\n-            })\r\n-                .then((res => res.json()))\r\n-                .then(updated => {\r\n-                    setData(data.map(data => (data.id === editId ? updated : data)))\r\n-                    setForm({ title: \"\", description: \"\" });\r\n-                    setEditId(null);\r\n+            if (editId) {\r\n+                fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n+                    method: \"PUT\",\r\n+                    headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                    body: JSON.stringify({ ...form, id: editId })\r\n                 })\r\n-        }\r\n-        else {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-                method: \"POST\",\r\n-                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify(form),\r\n-            })\r\n-            // .then(res => res.json())\r\n-            // .then(newData => {\r\n-            //     setData([newData, ...data]);\r\n-            //     setForm({ title: \"\", description: \"\" });\r\n-            // });\r\n-            const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n-            const newPost = { id: newId, title: form.title, body: form.body };\r\n-            setData([...data, newPost]);\r\n-            const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n-            setPage(lastPage);\r\n-            setForm({title:\"\",description:\"\"})\r\n-        }\r\n-    };\r\n-    const indexOfLastPost = page * cardPerPage;\r\n-    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-    const handleDelete = async (id) => {\r\n-        try {\r\n-            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n-                method: \"DELETE\"\r\n-            });\r\n+                    .then((res => res.json()))\r\n+                    .then(updated => {\r\n+                        setData(data.map(data => (data.id === editId ? updated : data)))\r\n+                        setForm({ title: \"\", description: \"\" });\r\n+                        setEditId(null);\r\n+                    })\r\n+            }\r\n+            else {\r\n+                fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+                    method: \"POST\",\r\n+                    headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                    body: JSON.stringify(form),\r\n+                })\r\n+                // .then(res => res.json())\r\n+                // .then(newData => {\r\n+                //     setData([newData, ...data]);\r\n+                //     setForm({ title: \"\", description: \"\" });\r\n+                // });\r\n+                const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n+                const newPost = { id: newId, title: form.title, body: form.body };\r\n+                setData([...data, newPost]);\r\n+                const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n+                setPage(lastPage);\r\n+                setForm({ title: \"\", description: \"\" });\r\n+            }\r\n+        };\r\n+        const indexOfLastPost = page * cardPerPage;\r\n+        const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+        const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+        const handleDelete = async (id) => {\r\n+            try {\r\n+                await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n+                    method: \"DELETE\"\r\n+                });\r\n \r\n-            // update local state so UI changes\r\n-            setData(data.filter(post => post.id !== id));\r\n-        } catch (err) {\r\n-            console.error(\"Delete failed:\", err);\r\n-        }\r\n-    };\r\n+                // update local state so UI changes\r\n+                setData(data.filter(post => post.id !== id));\r\n+            } catch (err) {\r\n+                console.error(\"Delete failed:\", err);\r\n+            }\r\n+        };\r\n \r\n-    // const handleDelete = (id) => {\r\n-    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-    //         method: \"DELETE\"\r\n-    //     })\r\n-    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n-    // };\r\n+        // const handleDelete = (id) => {\r\n+        //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+        //         method: \"DELETE\"\r\n+        //     })\r\n+        //         .then(() => setData(data.filter(data => data.id !== id)));\r\n+        // };\r\n \r\n-    return (\r\n-        <div className='container'>\r\n-            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+        return (\r\n+            <div className='container'>\r\n+                <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n \r\n-            {showForm &&\r\n-                <form onSubmit={handleSubmit} className='mb-4'>\r\n-                    <input type='text'\r\n-                        name='title'\r\n-                        placeholder='Enter title'\r\n-                        onChange={handleChange}\r\n-                        value={form.title}\r\n-                        className='form-control mb-2'\r\n-                        required />\r\n-                    <textarea\r\n-                        title='Description'\r\n-                        placeholder='Enter Description'\r\n-                        value={form.description}\r\n-                        onChange={(e) => {\r\n-                            setForm({ ...form, description: e.target.value })\r\n-                        }}\r\n-                        className='form-control mb-2'\r\n-                        required />\r\n+                {showForm &&\r\n+                    <form onSubmit={handleSubmit} className='mb-4'>\r\n+                        <input type='text'\r\n+                            name='title'\r\n+                            placeholder='Enter title'\r\n+                            onChange={handleChange}\r\n+                            value={form.title}\r\n+                            className='form-control mb-2'\r\n+                            required />\r\n+                        <textarea\r\n+                            title='Description'\r\n+                            placeholder='Enter Description'\r\n+                            value={form.description}\r\n+                            onChange={(e) => {\r\n+                                setForm({ ...form, description: e.target.value })\r\n+                            }}\r\n+                            className='form-control mb-2'\r\n+                            required />\r\n \r\n-                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n-                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n-                </form>\r\n+                        <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n+                        <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n+                    </form>\r\n \r\n-            }\r\n+                }\r\n \r\n-            <div className='row'>\r\n-                {currentPosts.map((post, i) => (\r\n-                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n-                        <div className='card mb-4'>\r\n-                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3> {post.title}</div>\r\n-                            <div className='card-body'>{post.body}</div>\r\n-                            <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n-                            <button onClick={() => {\r\n-                                setForm({ title: post.title, description: post.body });\r\n-                                setEditId(post.id);\r\n-                                setShowForm(true);\r\n-                            }}>Edit</button>\r\n+                <div className='row'>\r\n+                    {currentPosts.map((post, i) => (\r\n+                        <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n+                            <div className='card mb-4'>\r\n+                                <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3> {post.title}</div>\r\n+                                <div className='card-body'>{post.body}</div>\r\n+                                <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n+                                <button onClick={() => {\r\n+                                    setForm({ title: post.title, description: post.body });\r\n+                                    setEditId(post.id);\r\n+                                    setShowForm(true);\r\n+                                }}>Edit</button>\r\n+                            </div>\r\n                         </div>\r\n-                    </div>\r\n-                ))}\r\n+                    ))}\r\n+                </div>\r\n+                <div>\r\n+                    <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}>Prev</button>\r\n+                    {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n+                        <button\r\n+                            key={idx}\r\n+                            onClick={() => setPage(idx + 1)}\r\n+                            style={{\r\n+                                margin: \"5px\",\r\n+                                background: page === idx + 1 ? \"blue\" : \"white\",\r\n+                                color: page === idx + 1 ? \"white\" : \"black\",\r\n+                                border: \"1px solid black\",\r\n+                                borderRadius: \"8px\",\r\n+                                padding: \"10px\",\r\n+                            }}>\r\n+                            {idx + 1}\r\n+                        </button>\r\n+                    ))}\r\n+                    <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}>Next</button>\r\n+                </div>\r\n             </div>\r\n-            <div>\r\n-                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}>Prev</button>\r\n-                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n-                    <button\r\n-                        key={idx}\r\n-                        onClick={() => setPage(idx + 1)}\r\n-                        style={{\r\n-                            margin: \"5px\",\r\n-                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n-                            color: page === idx + 1 ? \"white\" : \"black\",\r\n-                            border: \"1px solid black\",\r\n-                            borderRadius: \"8px\",\r\n-                            padding: \"10px\",\r\n-                        }}>\r\n-                        {idx + 1}\r\n-                    </button>\r\n-                ))}\r\n-                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}>Next</button>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n+        )\r\n \r\n \r\n \r\n \r\n \r\n \r\n-}\r\n+    }\r\n"
                },
                {
                    "date": 1757309425022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,142 +12,140 @@\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n-            .then(res => {\r\n-                console.log(\"API called:\", res.status); // shows 200 if successful\r\n-            }, []);\r\n+    }, []);\r\n \r\n-        const handleChange = (event) => {\r\n-            setForm({ ...form, [event.target.name]: event.target.value })\r\n-        };\r\n-        const handleSubmit = (e) => {\r\n-            e.preventDefault();\r\n+    const handleChange = (event) => {\r\n+        setForm({ ...form, [event.target.name]: event.target.value })\r\n+    };\r\n+    const handleSubmit = (e) => {\r\n+        e.preventDefault();\r\n \r\n-            if (editId) {\r\n-                fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n-                    method: \"PUT\",\r\n-                    headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                    body: JSON.stringify({ ...form, id: editId })\r\n+        if (editId) {\r\n+            fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n+                method: \"PUT\",\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify({ ...form, id: editId })\r\n+            })\r\n+                .then((res => res.json()))\r\n+                .then(updated => {\r\n+                    setData(data.map(data => (data.id === editId ? updated : data)))\r\n+                    setForm({ title: \"\", description: \"\" });\r\n+                    setEditId(null);\r\n                 })\r\n-                    .then((res => res.json()))\r\n-                    .then(updated => {\r\n-                        setData(data.map(data => (data.id === editId ? updated : data)))\r\n-                        setForm({ title: \"\", description: \"\" });\r\n-                        setEditId(null);\r\n-                    })\r\n-            }\r\n-            else {\r\n-                fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-                    method: \"POST\",\r\n-                    headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                    body: JSON.stringify(form),\r\n-                })\r\n-                // .then(res => res.json())\r\n-                // .then(newData => {\r\n-                //     setData([newData, ...data]);\r\n-                //     setForm({ title: \"\", description: \"\" });\r\n-                // });\r\n-                const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n-                const newPost = { id: newId, title: form.title, body: form.body };\r\n-                setData([...data, newPost]);\r\n-                const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n-                setPage(lastPage);\r\n-                setForm({ title: \"\", description: \"\" });\r\n-            }\r\n-        };\r\n-        const indexOfLastPost = page * cardPerPage;\r\n-        const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-        const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-        const handleDelete = async (id) => {\r\n-            try {\r\n-                await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n-                    method: \"DELETE\"\r\n-                });\r\n+        }\r\n+        else {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+                method: \"POST\",\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify(form),\r\n+            })\r\n+            // .then(res => res.json())\r\n+            // .then(newData => {\r\n+            //     setData([newData, ...data]);\r\n+            //     setForm({ title: \"\", description: \"\" });\r\n+            // });\r\n+            const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n+            const newPost = { id: newId, title: form.title, body: form.body };\r\n+            setData([...data, newPost]);\r\n+            const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n+            setPage(lastPage);\r\n+            setForm({title:\"\",description:\"\"});\r\n+        }\r\n+    };\r\n+    const indexOfLastPost = page * cardPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+    const handleDelete = async (id) => {\r\n+        try {\r\n+            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n+                method: \"DELETE\"\r\n+            });\r\n \r\n-                // update local state so UI changes\r\n-                setData(data.filter(post => post.id !== id));\r\n-            } catch (err) {\r\n-                console.error(\"Delete failed:\", err);\r\n-            }\r\n-        };\r\n+            // update local state so UI changes\r\n+            setData(data.filter(post => post.id !== id));\r\n+        } catch (err) {\r\n+            console.error(\"Delete failed:\", err);\r\n+        }\r\n+    };\r\n \r\n-        // const handleDelete = (id) => {\r\n-        //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-        //         method: \"DELETE\"\r\n-        //     })\r\n-        //         .then(() => setData(data.filter(data => data.id !== id)));\r\n-        // };\r\n+    // const handleDelete = (id) => {\r\n+    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+    //         method: \"DELETE\"\r\n+    //     })\r\n+    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n+    // };\r\n \r\n-        return (\r\n-            <div className='container'>\r\n-                <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+    return (\r\n+        <div className='container'>\r\n+            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n \r\n-                {showForm &&\r\n-                    <form onSubmit={handleSubmit} className='mb-4'>\r\n-                        <input type='text'\r\n-                            name='title'\r\n-                            placeholder='Enter title'\r\n-                            onChange={handleChange}\r\n-                            value={form.title}\r\n-                            className='form-control mb-2'\r\n-                            required />\r\n-                        <textarea\r\n-                            title='Description'\r\n-                            placeholder='Enter Description'\r\n-                            value={form.description}\r\n-                            onChange={(e) => {\r\n-                                setForm({ ...form, description: e.target.value })\r\n-                            }}\r\n-                            className='form-control mb-2'\r\n-                            required />\r\n+            {showForm &&\r\n+                <form onSubmit={handleSubmit} className='mb-4'>\r\n+                    <input type='text'\r\n+                        name='title'\r\n+                        placeholder='Enter title'\r\n+                        onChange={handleChange}\r\n+                        value={form.title}\r\n+                        className='form-control mb-2'\r\n+                        required />\r\n+                    <textarea\r\n+                        title='Description'\r\n+                        placeholder='Enter Description'\r\n+                        value={form.description}\r\n+                        onChange={(e) => {\r\n+                            setForm({ ...form, description: e.target.value })\r\n+                        }}\r\n+                        className='form-control mb-2'\r\n+                        required />\r\n \r\n-                        <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n-                        <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n-                    </form>\r\n+                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n+                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n+                </form>\r\n \r\n-                }\r\n+            }\r\n \r\n-                <div className='row'>\r\n-                    {currentPosts.map((post, i) => (\r\n-                        <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n-                            <div className='card mb-4'>\r\n-                                <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3> {post.title}</div>\r\n-                                <div className='card-body'>{post.body}</div>\r\n-                                <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n-                                <button onClick={() => {\r\n-                                    setForm({ title: post.title, description: post.body });\r\n-                                    setEditId(post.id);\r\n-                                    setShowForm(true);\r\n-                                }}>Edit</button>\r\n-                            </div>\r\n+            <div className='row'>\r\n+                {currentPosts.map((post, i) => (\r\n+                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n+                        <div className='card mb-4'>\r\n+                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3> {post.title}</div>\r\n+                            <div className='card-body'>{post.body}</div>\r\n+                            <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n+                            <button onClick={() => {\r\n+                                setForm({ title: post.title, description: post.body });\r\n+                                setEditId(post.id);\r\n+                                setShowForm(true);\r\n+                            }}>Edit</button>\r\n                         </div>\r\n-                    ))}\r\n-                </div>\r\n-                <div>\r\n-                    <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}>Prev</button>\r\n-                    {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n-                        <button\r\n-                            key={idx}\r\n-                            onClick={() => setPage(idx + 1)}\r\n-                            style={{\r\n-                                margin: \"5px\",\r\n-                                background: page === idx + 1 ? \"blue\" : \"white\",\r\n-                                color: page === idx + 1 ? \"white\" : \"black\",\r\n-                                border: \"1px solid black\",\r\n-                                borderRadius: \"8px\",\r\n-                                padding: \"10px\",\r\n-                            }}>\r\n-                            {idx + 1}\r\n-                        </button>\r\n-                    ))}\r\n-                    <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}>Next</button>\r\n-                </div>\r\n+                    </div>\r\n+                ))}\r\n             </div>\r\n-        )\r\n+            <div>\r\n+                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}>Prev</button>\r\n+                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n+                    <button\r\n+                        key={idx}\r\n+                        onClick={() => setPage(idx + 1)}\r\n+                        style={{\r\n+                            margin: \"5px\",\r\n+                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n+                            color: page === idx + 1 ? \"white\" : \"black\",\r\n+                            border: \"1px solid black\",\r\n+                            borderRadius: \"8px\",\r\n+                            padding: \"10px\",\r\n+                        }}>\r\n+                        {idx + 1}\r\n+                    </button>\r\n+                ))}\r\n+                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}>Next</button>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n \r\n \r\n \r\n \r\n \r\n \r\n-    }\r\n+}\r\n"
                },
                {
                    "date": 1757309433113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,16 +25,19 @@\n             fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n                 method: \"PUT\",\r\n                 headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n                 body: JSON.stringify({ ...form, id: editId })\r\n-            })\r\n-                .then((res => res.json()))\r\n-                .then(updated => {\r\n-                    setData(data.map(data => (data.id === editId ? updated : data)))\r\n-                    setForm({ title: \"\", description: \"\" });\r\n-                    setEditId(null);\r\n-                })\r\n-        }\r\n+                    .then(res => {\r\n+                        console.log(\"API called:\", res.status); // shows 200 if successful\r\n+                        return res.json();\r\n+                    })\r\n+                    .then((res => res.json()))\r\n+                    .then(updated => {\r\n+                        setData(data.map(data => (data.id === editId ? updated : data)))\r\n+                        setForm({ title: \"\", description: \"\" });\r\n+                        setEditId(null);\r\n+                    })\r\n+            }\r\n         else {\r\n             fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n                 method: \"POST\",\r\n                 headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n@@ -49,9 +52,9 @@\n             const newPost = { id: newId, title: form.title, body: form.body };\r\n             setData([...data, newPost]);\r\n             const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n             setPage(lastPage);\r\n-            setForm({title:\"\",description:\"\"});\r\n+            setForm({ title: \"\", description: \"\" });\r\n         }\r\n     };\r\n     const indexOfLastPost = page * cardPerPage;\r\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n"
                },
                {
                    "date": 1757309446341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,9 @@\n                     .then(res => {\r\n                         console.log(\"API called:\", res.status); // shows 200 if successful\r\n                         return res.json();\r\n                     })\r\n+                })\r\n                     .then((res => res.json()))\r\n                     .then(updated => {\r\n                         setData(data.map(data => (data.id === editId ? updated : data)))\r\n                         setForm({ title: \"\", description: \"\" });\r\n"
                },
                {
                    "date": 1757309462048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,127 +29,131 @@\n                     .then(res => {\r\n                         console.log(\"API called:\", res.status); // shows 200 if successful\r\n                         return res.json();\r\n                     })\r\n+            })\r\n+                .then((res => res.json()))\r\n+                .then(updated => {\r\n+                    setData(data.map(data => (data.id === editId ? updated : data)))\r\n+                    setForm({ title: \"\", description: \"\" });\r\n+                    setEditId(null);\r\n                 })\r\n-                    .then((res => res.json()))\r\n-                    .then(updated => {\r\n-                        setData(data.map(data => (data.id === editId ? updated : data)))\r\n-                        setForm({ title: \"\", description: \"\" });\r\n-                        setEditId(null);\r\n-                    })\r\n-            }\r\n+        }\r\n         else {\r\n             fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n                 method: \"POST\",\r\n                 headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n                 body: JSON.stringify(form),\r\n+                 .then(res => {\r\n+                    console.log(\"API called:\", res.status); // shows 200 if successful\r\n+                    return res.json();\r\n+                })\r\n             })\r\n             // .then(res => res.json())\r\n             // .then(newData => {\r\n             //     setData([newData, ...data]);\r\n             //     setForm({ title: \"\", description: \"\" });\r\n             // });\r\n             const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n-            const newPost = { id: newId, title: form.title, body: form.body };\r\n-            setData([...data, newPost]);\r\n+                const newPost = { id: newId, title: form.title, body: form.body };\r\n+                setData([...data, newPost]);\r\n             const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n-            setPage(lastPage);\r\n+                setPage(lastPage);\r\n             setForm({ title: \"\", description: \"\" });\r\n-        }\r\n+            }\r\n     };\r\n-    const indexOfLastPost = page * cardPerPage;\r\n-    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-    const handleDelete = async (id) => {\r\n-        try {\r\n-            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n-                method: \"DELETE\"\r\n-            });\r\n+        const indexOfLastPost = page * cardPerPage;\r\n+        const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+        const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+        const handleDelete = async (id) => {\r\n+            try {\r\n+                await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n+                    method: \"DELETE\"\r\n+                });\r\n \r\n-            // update local state so UI changes\r\n-            setData(data.filter(post => post.id !== id));\r\n-        } catch (err) {\r\n-            console.error(\"Delete failed:\", err);\r\n-        }\r\n-    };\r\n+                // update local state so UI changes\r\n+                setData(data.filter(post => post.id !== id));\r\n+            } catch (err) {\r\n+                console.error(\"Delete failed:\", err);\r\n+            }\r\n+        };\r\n \r\n-    // const handleDelete = (id) => {\r\n-    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-    //         method: \"DELETE\"\r\n-    //     })\r\n-    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n-    // };\r\n+        // const handleDelete = (id) => {\r\n+        //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+        //         method: \"DELETE\"\r\n+        //     })\r\n+        //         .then(() => setData(data.filter(data => data.id !== id)));\r\n+        // };\r\n \r\n-    return (\r\n-        <div className='container'>\r\n-            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+        return (\r\n+            <div className='container'>\r\n+                <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n \r\n-            {showForm &&\r\n-                <form onSubmit={handleSubmit} className='mb-4'>\r\n-                    <input type='text'\r\n-                        name='title'\r\n-                        placeholder='Enter title'\r\n-                        onChange={handleChange}\r\n-                        value={form.title}\r\n-                        className='form-control mb-2'\r\n-                        required />\r\n-                    <textarea\r\n-                        title='Description'\r\n-                        placeholder='Enter Description'\r\n-                        value={form.description}\r\n-                        onChange={(e) => {\r\n-                            setForm({ ...form, description: e.target.value })\r\n-                        }}\r\n-                        className='form-control mb-2'\r\n-                        required />\r\n+                {showForm &&\r\n+                    <form onSubmit={handleSubmit} className='mb-4'>\r\n+                        <input type='text'\r\n+                            name='title'\r\n+                            placeholder='Enter title'\r\n+                            onChange={handleChange}\r\n+                            value={form.title}\r\n+                            className='form-control mb-2'\r\n+                            required />\r\n+                        <textarea\r\n+                            title='Description'\r\n+                            placeholder='Enter Description'\r\n+                            value={form.description}\r\n+                            onChange={(e) => {\r\n+                                setForm({ ...form, description: e.target.value })\r\n+                            }}\r\n+                            className='form-control mb-2'\r\n+                            required />\r\n \r\n-                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n-                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n-                </form>\r\n+                        <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n+                        <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n+                    </form>\r\n \r\n-            }\r\n+                }\r\n \r\n-            <div className='row'>\r\n-                {currentPosts.map((post, i) => (\r\n-                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n-                        <div className='card mb-4'>\r\n-                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3> {post.title}</div>\r\n-                            <div className='card-body'>{post.body}</div>\r\n-                            <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n-                            <button onClick={() => {\r\n-                                setForm({ title: post.title, description: post.body });\r\n-                                setEditId(post.id);\r\n-                                setShowForm(true);\r\n-                            }}>Edit</button>\r\n+                <div className='row'>\r\n+                    {currentPosts.map((post, i) => (\r\n+                        <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n+                            <div className='card mb-4'>\r\n+                                <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3> {post.title}</div>\r\n+                                <div className='card-body'>{post.body}</div>\r\n+                                <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n+                                <button onClick={() => {\r\n+                                    setForm({ title: post.title, description: post.body });\r\n+                                    setEditId(post.id);\r\n+                                    setShowForm(true);\r\n+                                }}>Edit</button>\r\n+                            </div>\r\n                         </div>\r\n-                    </div>\r\n-                ))}\r\n+                    ))}\r\n+                </div>\r\n+                <div>\r\n+                    <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}>Prev</button>\r\n+                    {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n+                        <button\r\n+                            key={idx}\r\n+                            onClick={() => setPage(idx + 1)}\r\n+                            style={{\r\n+                                margin: \"5px\",\r\n+                                background: page === idx + 1 ? \"blue\" : \"white\",\r\n+                                color: page === idx + 1 ? \"white\" : \"black\",\r\n+                                border: \"1px solid black\",\r\n+                                borderRadius: \"8px\",\r\n+                                padding: \"10px\",\r\n+                            }}>\r\n+                            {idx + 1}\r\n+                        </button>\r\n+                    ))}\r\n+                    <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}>Next</button>\r\n+                </div>\r\n             </div>\r\n-            <div>\r\n-                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}>Prev</button>\r\n-                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n-                    <button\r\n-                        key={idx}\r\n-                        onClick={() => setPage(idx + 1)}\r\n-                        style={{\r\n-                            margin: \"5px\",\r\n-                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n-                            color: page === idx + 1 ? \"white\" : \"black\",\r\n-                            border: \"1px solid black\",\r\n-                            borderRadius: \"8px\",\r\n-                            padding: \"10px\",\r\n-                        }}>\r\n-                        {idx + 1}\r\n-                    </button>\r\n-                ))}\r\n-                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}>Next</button>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n+        )\r\n \r\n \r\n \r\n \r\n \r\n \r\n-}\r\n+    }\r\n"
                },
                {
                    "date": 1757309471549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n         else {\r\n             fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n                 method: \"POST\",\r\n                 headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify(form),\r\n+                body: JSON.stringify(form)\r\n                  .then(res => {\r\n                     console.log(\"API called:\", res.status); // shows 200 if successful\r\n                     return res.json();\r\n                 })\r\n"
                },
                {
                    "date": 1757309483470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,118 +42,122 @@\n             fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n                 method: \"POST\",\r\n                 headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n                 body: JSON.stringify(form)\r\n-                 .then(res => {\r\n-                    console.log(\"API called:\", res.status); // shows 200 if successful\r\n-                    return res.json();\r\n-                })\r\n+                    .then(res => {\r\n+                        console.log(\"API called:\", res.status); // shows 200 if successful\r\n+                        return res.json();\r\n+                    })\r\n             })\r\n             // .then(res => res.json())\r\n             // .then(newData => {\r\n             //     setData([newData, ...data]);\r\n             //     setForm({ title: \"\", description: \"\" });\r\n             // });\r\n             const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n-                const newPost = { id: newId, title: form.title, body: form.body };\r\n-                setData([...data, newPost]);\r\n+            const newPost = { id: newId, title: form.title, body: form.body };\r\n+            setData([...data, newPost]);\r\n             const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n-                setPage(lastPage);\r\n+            setPage(lastPage);\r\n             setForm({ title: \"\", description: \"\" });\r\n-            }\r\n+        }\r\n     };\r\n-        const indexOfLastPost = page * cardPerPage;\r\n-        const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-        const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-        const handleDelete = async (id) => {\r\n-            try {\r\n-                await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n-                    method: \"DELETE\"\r\n+    const indexOfLastPost = page * cardPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+    const handleDelete = async (id) => {\r\n+        try {\r\n+            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n+                method: \"DELETE\"\r\n+                    .then(res => {\r\n+                        console.log(\"API called:\", res.status); // shows 200 if successful\r\n+                        return res.json();\r\n+                    })\r\n                 });\r\n \r\n                 // update local state so UI changes\r\n                 setData(data.filter(post => post.id !== id));\r\n-            } catch (err) {\r\n-                console.error(\"Delete failed:\", err);\r\n-            }\r\n-        };\r\n+        } catch (err) {\r\n+            console.error(\"Delete failed:\", err);\r\n+        }\r\n+    };\r\n \r\n-        // const handleDelete = (id) => {\r\n-        //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-        //         method: \"DELETE\"\r\n-        //     })\r\n-        //         .then(() => setData(data.filter(data => data.id !== id)));\r\n-        // };\r\n+    // const handleDelete = (id) => {\r\n+    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+    //         method: \"DELETE\"\r\n+    //     })\r\n+    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n+    // };\r\n \r\n-        return (\r\n-            <div className='container'>\r\n-                <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+    return (\r\n+        <div className='container'>\r\n+            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n \r\n-                {showForm &&\r\n-                    <form onSubmit={handleSubmit} className='mb-4'>\r\n-                        <input type='text'\r\n-                            name='title'\r\n-                            placeholder='Enter title'\r\n-                            onChange={handleChange}\r\n-                            value={form.title}\r\n-                            className='form-control mb-2'\r\n-                            required />\r\n-                        <textarea\r\n-                            title='Description'\r\n-                            placeholder='Enter Description'\r\n-                            value={form.description}\r\n-                            onChange={(e) => {\r\n-                                setForm({ ...form, description: e.target.value })\r\n-                            }}\r\n-                            className='form-control mb-2'\r\n-                            required />\r\n+            {showForm &&\r\n+                <form onSubmit={handleSubmit} className='mb-4'>\r\n+                    <input type='text'\r\n+                        name='title'\r\n+                        placeholder='Enter title'\r\n+                        onChange={handleChange}\r\n+                        value={form.title}\r\n+                        className='form-control mb-2'\r\n+                        required />\r\n+                    <textarea\r\n+                        title='Description'\r\n+                        placeholder='Enter Description'\r\n+                        value={form.description}\r\n+                        onChange={(e) => {\r\n+                            setForm({ ...form, description: e.target.value })\r\n+                        }}\r\n+                        className='form-control mb-2'\r\n+                        required />\r\n \r\n-                        <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n-                        <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n-                    </form>\r\n+                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n+                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n+                </form>\r\n \r\n-                }\r\n+            }\r\n \r\n-                <div className='row'>\r\n-                    {currentPosts.map((post, i) => (\r\n-                        <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n-                            <div className='card mb-4'>\r\n-                                <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3> {post.title}</div>\r\n-                                <div className='card-body'>{post.body}</div>\r\n-                                <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n-                                <button onClick={() => {\r\n-                                    setForm({ title: post.title, description: post.body });\r\n-                                    setEditId(post.id);\r\n-                                    setShowForm(true);\r\n-                                }}>Edit</button>\r\n-                            </div>\r\n+            <div className='row'>\r\n+                {currentPosts.map((post, i) => (\r\n+                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n+                        <div className='card mb-4'>\r\n+                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3> {post.title}</div>\r\n+                            <div className='card-body'>{post.body}</div>\r\n+                            <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n+                            <button onClick={() => {\r\n+                                setForm({ title: post.title, description: post.body });\r\n+                                setEditId(post.id);\r\n+                                setShowForm(true);\r\n+                            }}>Edit</button>\r\n                         </div>\r\n-                    ))}\r\n-                </div>\r\n-                <div>\r\n-                    <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}>Prev</button>\r\n-                    {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n-                        <button\r\n-                            key={idx}\r\n-                            onClick={() => setPage(idx + 1)}\r\n-                            style={{\r\n-                                margin: \"5px\",\r\n-                                background: page === idx + 1 ? \"blue\" : \"white\",\r\n-                                color: page === idx + 1 ? \"white\" : \"black\",\r\n-                                border: \"1px solid black\",\r\n-                                borderRadius: \"8px\",\r\n-                                padding: \"10px\",\r\n-                            }}>\r\n-                            {idx + 1}\r\n-                        </button>\r\n-                    ))}\r\n-                    <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}>Next</button>\r\n-                </div>\r\n+                    </div>\r\n+                ))}\r\n             </div>\r\n-        )\r\n+            <div>\r\n+                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}>Prev</button>\r\n+                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n+                    <button\r\n+                        key={idx}\r\n+                        onClick={() => setPage(idx + 1)}\r\n+                        style={{\r\n+                            margin: \"5px\",\r\n+                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n+                            color: page === idx + 1 ? \"white\" : \"black\",\r\n+                            border: \"1px solid black\",\r\n+                            borderRadius: \"8px\",\r\n+                            padding: \"10px\",\r\n+                        }}>\r\n+                        {idx + 1}\r\n+                    </button>\r\n+                ))}\r\n+                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}>Next</button>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n \r\n \r\n \r\n \r\n \r\n \r\n-    }\r\n+}\r\n"
                },
                {
                    "date": 1757309586585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,14 +25,13 @@\n             fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n                 method: \"PUT\",\r\n                 headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n                 body: JSON.stringify({ ...form, id: editId })\r\n-                    .then(res => {\r\n-                        console.log(\"API called:\", res.status); // shows 200 if successful\r\n-                        return res.json();\r\n-                    })\r\n             })\r\n-                .then((res => res.json()))\r\n+                .then(res => {\r\n+                    console.log(\"PUT called:\", res.status);\r\n+                    return res.json();\r\n+                })\r\n                 .then(updated => {\r\n                     setData(data.map(data => (data.id === editId ? updated : data)))\r\n                     setForm({ title: \"\", description: \"\" });\r\n                     setEditId(null);\r\n@@ -41,13 +40,9 @@\n         else {\r\n             fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n                 method: \"POST\",\r\n                 headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify(form)\r\n-                    .then(res => {\r\n-                        console.log(\"API called:\", res.status); // shows 200 if successful\r\n-                        return res.json();\r\n-                    })\r\n+                body: JSON.stringify(form),\r\n             })\r\n             // .then(res => res.json())\r\n             // .then(newData => {\r\n             //     setData([newData, ...data]);\r\n@@ -67,16 +62,12 @@\n     const handleDelete = async (id) => {\r\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n-                    .then(res => {\r\n-                        console.log(\"API called:\", res.status); // shows 200 if successful\r\n-                        return res.json();\r\n-                    })\r\n-                });\r\n+            });\r\n \r\n-                // update local state so UI changes\r\n-                setData(data.filter(post => post.id !== id));\r\n+            // update local state so UI changes\r\n+            setData(data.filter(post => post.id !== id));\r\n         } catch (err) {\r\n             console.error(\"Delete failed:\", err);\r\n         }\r\n     };\r\n"
                },
                {
                    "date": 1757309673432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,8 +47,11 @@\n             // .then(newData => {\r\n             //     setData([newData, ...data]);\r\n             //     setForm({ title: \"\", description: \"\" });\r\n             // });\r\n+            .then(res=>{\r\n+                console.log(\"POST called:\",res.status)\r\n+            })\r\n             const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n             const newPost = { id: newId, title: form.title, body: form.body };\r\n             setData([...data, newPost]);\r\n             const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n"
                },
                {
                    "date": 1757309702714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,9 @@\n             //     setForm({ title: \"\", description: \"\" });\r\n             // });\r\n             .then(res=>{\r\n                 console.log(\"POST called:\",res.status)\r\n+                return res.JSON()\r\n             })\r\n             const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n             const newPost = { id: newId, title: form.title, body: form.body };\r\n             setData([...data, newPost]);\r\n"
                },
                {
                    "date": 1757309708566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n             //     setForm({ title: \"\", description: \"\" });\r\n             // });\r\n             .then(res=>{\r\n                 console.log(\"POST called:\",res.status)\r\n-                return res.JSON()\r\n+                return res.json()\r\n             })\r\n             const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n             const newPost = { id: newId, title: form.title, body: form.body };\r\n             setData([...data, newPost]);\r\n"
                },
                {
                    "date": 1757309796056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n             //     setForm({ title: \"\", description: \"\" });\r\n             // });\r\n             .then(res=>{\r\n                 console.log(\"POST called:\",res.status)\r\n-                return res.json()\r\n+                return res.json();\r\n             })\r\n             const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n             const newPost = { id: newId, title: form.title, body: form.body };\r\n             setData([...data, newPost]);\r\n@@ -66,9 +66,11 @@\n     const handleDelete = async (id) => {\r\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n+                console.log(\"Delete\");\r\n             });\r\n+            \r\n \r\n             // update local state so UI changes\r\n             setData(data.filter(post => post.id !== id));\r\n         } catch (err) {\r\n"
                },
                {
                    "date": 1757309803804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,10 +66,10 @@\n     const handleDelete = async (id) => {\r\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n-                console.log(\"Delete\");\r\n             });\r\n+              console.log(\"Delete\");\r\n             \r\n \r\n             // update local state so UI changes\r\n             setData(data.filter(post => post.id !== id));\r\n"
                },
                {
                    "date": 1757309822726,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,10 +67,8 @@\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n             });\r\n-              console.log(\"Delete\");\r\n-            \r\n \r\n             // update local state so UI changes\r\n             setData(data.filter(post => post.id !== id));\r\n         } catch (err) {\r\n"
                },
                {
                    "date": 1757309966381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,17 +42,12 @@\n                 method: \"POST\",\r\n                 headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n                 body: JSON.stringify(form),\r\n             })\r\n-            // .then(res => res.json())\r\n-            // .then(newData => {\r\n-            //     setData([newData, ...data]);\r\n-            //     setForm({ title: \"\", description: \"\" });\r\n-            // });\r\n-            .then(res=>{\r\n-                console.log(\"POST called:\",res.status)\r\n-                return res.json();\r\n-            })\r\n+                .then(res => {\r\n+                    console.log(\"POST called:\", res.status)\r\n+                    return res.json();\r\n+                })\r\n             const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n             const newPost = { id: newId, title: form.title, body: form.body };\r\n             setData([...data, newPost]);\r\n             const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n@@ -67,11 +62,11 @@\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n             });\r\n-\r\n             // update local state so UI changes\r\n             setData(data.filter(post => post.id !== id));\r\n+\r\n         } catch (err) {\r\n             console.error(\"Delete failed:\", err);\r\n         }\r\n     };\r\n"
                },
                {
                    "date": 1757309994341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,12 +26,13 @@\n                 method: \"PUT\",\r\n                 headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n                 body: JSON.stringify({ ...form, id: editId })\r\n             })\r\n-                .then(res => {\r\n-                    console.log(\"PUT called:\", res.status);\r\n-                    return res.json();\r\n-                })\r\n+                // .then(res => {\r\n+                //     console.log(\"PUT called:\", res.status);\r\n+                //     return res.json();\r\n+                // })\r\n+                .then(res=>res.json())\r\n                 .then(updated => {\r\n                     setData(data.map(data => (data.id === editId ? updated : data)))\r\n                     setForm({ title: \"\", description: \"\" });\r\n                     setEditId(null);\r\n"
                },
                {
                    "date": 1757310094737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,9 @@\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n+            localStorage.setItem(JSON.stringify(\"cardData\",data))\r\n     }, []);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n"
                },
                {
                    "date": 1757310209685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,10 +12,10 @@\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n-            localStorage.setItem(JSON.stringify(\"cardData\",data))\r\n     }, []);\r\n+       localStorage.setItem(JSON.stringify(\"cardData\",data))\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n"
                },
                {
                    "date": 1757310221329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n     }, []);\r\n-       localStorage.setItem(JSON.stringify(\"cardData\",data))\r\n+       //localStorage.setItem(JSON.stringify(\"cardData\",data))\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n"
                },
                {
                    "date": 1757310233289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,10 +13,9 @@\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data))\r\n     }, []);\r\n-       //localStorage.setItem(JSON.stringify(\"cardData\",data))\r\n-\r\n+    \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n     const handleSubmit = (e) => {\r\n"
                },
                {
                    "date": 1757310358116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,12 @@\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n-            .then(data => setData(data))\r\n+            .then(data => setData(data)\r\n+        localStorage.setItem(\"cardData\",JSON.stringify(data))\r\n+)\r\n+            \r\n     }, []);\r\n     \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n"
                },
                {
                    "date": 1757310381987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n \r\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n-            .then(data => setData(data)\r\n+            .then(data => setData(data),\r\n         localStorage.setItem(\"cardData\",JSON.stringify(data))\r\n )\r\n             \r\n     }, []);\r\n"
                },
                {
                    "date": 1757310398320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,13 +12,13 @@\n     useEffect(() => {\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data),\r\n-        localStorage.setItem(\"cardData\",JSON.stringify(data))\r\n-)\r\n-            \r\n+                localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n+            )\r\n+\r\n     }, []);\r\n-    \r\n+\r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n     const handleSubmit = (e) => {\r\n@@ -33,9 +33,9 @@\n                 // .then(res => {\r\n                 //     console.log(\"PUT called:\", res.status);\r\n                 //     return res.json();\r\n                 // })\r\n-                .then(res=>res.json())\r\n+                .then(res => res.json())\r\n                 .then(updated => {\r\n                     setData(data.map(data => (data.id === editId ? updated : data)))\r\n                     setForm({ title: \"\", description: \"\" });\r\n                     setEditId(null);\r\n"
                },
                {
                    "date": 1757310406073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,8 @@\n             .then(res => res.json())\r\n             .then(data => setData(data),\r\n                 localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n             )\r\n-\r\n     }, []);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n"
                },
                {
                    "date": 1757310439697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n             .then(res => res.json())\r\n             .then(data => setData(data),\r\n                 localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n             )\r\n-    }, []);\r\n+    }, [data]);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n"
                },
                {
                    "date": 1757310487210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,8 +37,9 @@\n                 .then(updated => {\r\n                     setData(data.map(data => (data.id === editId ? updated : data)))\r\n                     setForm({ title: \"\", description: \"\" });\r\n                     setEditId(null);\r\n+                    localStorage.setItem(\"cardData\",JSON.stringify(updated))\r\n                 })\r\n         }\r\n         else {\r\n             fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n"
                },
                {
                    "date": 1757310818974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,11 @@\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n     const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n+        const newPost = { id: newId, title: form.title, body: form.body };\r\n \r\n+\r\n         if (editId) {\r\n             fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n                 method: \"PUT\",\r\n                 headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n"
                },
                {
                    "date": 1757310867592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,11 +21,9 @@\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n     const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n-        const newPost = { id: newId, title: form.title, body: form.body };\r\n \r\n-\r\n         if (editId) {\r\n             fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n                 method: \"PUT\",\r\n                 headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n@@ -37,9 +35,9 @@\n                 // })\r\n                 .then(res => res.json())\r\n                 .then(updated => {\r\n                     setData(data.map(data => (data.id === editId ? updated : data)))\r\n-                    setForm({ title: \"\", description: \"\" });\r\n+                    setForm({ title: \"\", body: \"\" });\r\n                     setEditId(null);\r\n                     localStorage.setItem(\"cardData\",JSON.stringify(updated))\r\n                 })\r\n         }\r\n"
                },
                {
                    "date": 1757310888784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n             const newPost = { id: newId, title: form.title, body: form.body };\r\n             setData([...data, newPost]);\r\n             const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n             setPage(lastPage);\r\n-            setForm({ title: \"\", description: \"\" });\r\n+            setForm({ title: \"\", body: \"\" });\r\n         }\r\n     };\r\n     const indexOfLastPost = page * cardPerPage;\r\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n"
                },
                {
                    "date": 1757310941129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useState, useEffect } from 'react';\r\n \r\n export default function Crud() {\r\n     const [showForm, setShowForm] = useState(false);\r\n-    const [form, setForm] = useState({ title: \"\", description: \"\" });\r\n+    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n     const [editId, setEditId] = useState(null);\r\n     const [data, setData] = useState([]);\r\n     const cardPerPage = 10;\r\n     const [page, setPage] = useState(1);\r\n@@ -95,19 +95,19 @@\n                         value={form.title}\r\n                         className='form-control mb-2'\r\n                         required />\r\n                     <textarea\r\n-                        title='Description'\r\n+                        title='body'\r\n                         placeholder='Enter Description'\r\n-                        value={form.description}\r\n+                        value={form.body}\r\n                         onChange={(e) => {\r\n-                            setForm({ ...form, description: e.target.value })\r\n+                            setForm({ ...form, body: e.target.value })\r\n                         }}\r\n                         className='form-control mb-2'\r\n                         required />\r\n \r\n                     <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n-                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", description: \"\" }) }}>Reset</button>\r\n+                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", body: \"\" }) }}>Reset</button>\r\n                 </form>\r\n \r\n             }\r\n \r\n@@ -118,9 +118,9 @@\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3> {post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n                             <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n                             <button onClick={() => {\r\n-                                setForm({ title: post.title, description: post.body });\r\n+                                setForm({ title: post.title, body: post.body });\r\n                                 setEditId(post.id);\r\n                                 setShowForm(true);\r\n                             }}>Edit</button>\r\n                         </div>\r\n"
                },
                {
                    "date": 1757311007316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n                 .then(updated => {\r\n                     setData(data.map(data => (data.id === editId ? updated : data)))\r\n                     setForm({ title: \"\", body: \"\" });\r\n                     setEditId(null);\r\n-                    localStorage.setItem(\"cardData\",JSON.stringify(updated))\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(updated))\r\n                 })\r\n         }\r\n         else {\r\n             fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n"
                },
                {
                    "date": 1757311053884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,12 +46,13 @@\n                 method: \"POST\",\r\n                 headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n                 body: JSON.stringify(form),\r\n             })\r\n-                .then(res => {\r\n-                    console.log(\"POST called:\", res.status)\r\n-                    return res.json();\r\n-                })\r\n+            .then(res=>res.json())\r\n+                // .then(res => {\r\n+                //     console.log(\"POST called:\", res.status)\r\n+                //     return res.json();\r\n+                // })\r\n             const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n             const newPost = { id: newId, title: form.title, body: form.body };\r\n             setData([...data, newPost]);\r\n             const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n"
                },
                {
                    "date": 1757311112591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,8 @@\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n             });\r\n-            // update local state so UI changes\r\n             setData(data.filter(post => post.id !== id));\r\n \r\n         } catch (err) {\r\n             console.error(\"Delete failed:\", err);\r\n"
                },
                {
                    "date": 1757311221915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,11 @@\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n             });\r\n-            setData(data.filter(post => post.id !== id));\r\n+            const updatedData=data.filter(post => post.id !== id);\r\n+            localStorage.setItem(\"cardData\",JSON.stringify())\r\n+            setData();\r\n \r\n         } catch (err) {\r\n             console.error(\"Delete failed:\", err);\r\n         }\r\n"
                },
                {
                    "date": 1757311228810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,10 +68,10 @@\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n             });\r\n             const updatedData=data.filter(post => post.id !== id);\r\n-            localStorage.setItem(\"cardData\",JSON.stringify())\r\n-            setData();\r\n+            localStorage.setItem(\"cardData\",JSON.stringify(updatedData))\r\n+            setData(updatedData);\r\n \r\n         } catch (err) {\r\n             console.error(\"Delete failed:\", err);\r\n         }\r\n"
                },
                {
                    "date": 1757311264825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n             });\r\n             const updatedData=data.filter(post => post.id !== id);\r\n-            localStorage.setItem(\"cardData\",JSON.stringify(updatedData))\r\n+            //localStorage.setItem(\"cardData\",JSON.stringify(updatedData))\r\n             setData(updatedData);\r\n \r\n         } catch (err) {\r\n             console.error(\"Delete failed:\", err);\r\n"
                },
                {
                    "date": 1757311298688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,13 +46,13 @@\n                 method: \"POST\",\r\n                 headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n                 body: JSON.stringify(form),\r\n             })\r\n-            .then(res=>res.json())\r\n-                // .then(res => {\r\n-                //     console.log(\"POST called:\", res.status)\r\n-                //     return res.json();\r\n-                // })\r\n+                .then(res => res.json())\r\n+            // .then(res => {\r\n+            //     console.log(\"POST called:\", res.status)\r\n+            //     return res.json();\r\n+            // })\r\n             const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n             const newPost = { id: newId, title: form.title, body: form.body };\r\n             setData([...data, newPost]);\r\n             const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n@@ -67,9 +67,11 @@\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n             });\r\n-            const updatedData=data.filter(post => post.id !== id);\r\n+            const updatedData = data.filter(post => post.id !== id);\r\n+            const lastPage = Math.max(1, Math.ceil(updated.length / postsPerPage));\r\n+           if (page > lastPage) setPage(lastPage);\r\n             //localStorage.setItem(\"cardData\",JSON.stringify(updatedData))\r\n             setData(updatedData);\r\n \r\n         } catch (err) {\r\n"
                },
                {
                    "date": 1757311308592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n             });\r\n             const updatedData = data.filter(post => post.id !== id);\r\n-            const lastPage = Math.max(1, Math.ceil(updated.length / postsPerPage));\r\n+            const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n            if (page > lastPage) setPage(lastPage);\r\n             //localStorage.setItem(\"cardData\",JSON.stringify(updatedData))\r\n             setData(updatedData);\r\n \r\n"
                },
                {
                    "date": 1757311340585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n             });\r\n             const updatedData = data.filter(post => post.id !== id);\r\n             const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n            if (page > lastPage) setPage(lastPage);\r\n-            //localStorage.setItem(\"cardData\",JSON.stringify(updatedData))\r\n+            localStorage.setItem(\"cardData\",JSON.stringify(updatedData))\r\n             setData(updatedData);\r\n \r\n         } catch (err) {\r\n             console.error(\"Delete failed:\", err);\r\n"
                },
                {
                    "date": 1757311410671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,8 +118,9 @@\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n+                            localStorage.getItem(JSON.parse(cardData));\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3> {post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n                             <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n                             <button onClick={() => {\r\n"
                },
                {
                    "date": 1757311463336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,9 +118,8 @@\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n-                            localStorage.getItem(JSON.parse(cardData));\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3> {post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n                             <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n                             <button onClick={() => {\r\n"
                },
                {
                    "date": 1757311476435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,9 +113,9 @@\n                     <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", body: \"\" }) }}>Reset</button>\r\n                 </form>\r\n \r\n             }\r\n-\r\n+  const data=localStorage.getItem(JSON.parse(cardData));\r\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n"
                },
                {
                    "date": 1757311506063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n         } catch (err) {\r\n             console.error(\"Delete failed:\", err);\r\n         }\r\n     };\r\n-\r\n+  const posts=localStorage.getItem(JSON.parse(cardData));\r\n     // const handleDelete = (id) => {\r\n     //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n     //         method: \"DELETE\"\r\n     //     })\r\n@@ -113,9 +113,9 @@\n                     <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", body: \"\" }) }}>Reset</button>\r\n                 </form>\r\n \r\n             }\r\n-  const data=localStorage.getItem(JSON.parse(cardData));\r\n+\r\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n"
                },
                {
                    "date": 1757311514087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n         } catch (err) {\r\n             console.error(\"Delete failed:\", err);\r\n         }\r\n     };\r\n-  const posts=localStorage.getItem(JSON.parse(cardData));\r\n+  const posts=localStorage.getItem(JSON.parse('cardData'));\r\n     // const handleDelete = (id) => {\r\n     //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n     //         method: \"DELETE\"\r\n     //     })\r\n"
                },
                {
                    "date": 1757311531696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,9 +115,9 @@\n \r\n             }\r\n \r\n             <div className='row'>\r\n-                {currentPosts.map((post, i) => (\r\n+                {currentPosts.map((i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3> {post.title}</div>\r\n                             <div className='card-body'>{post.body}</div>\r\n"
                },
                {
                    "date": 1757311562139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,16 +116,16 @@\n             }\r\n \r\n             <div className='row'>\r\n                 {currentPosts.map((i) => (\r\n-                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n+                    <div key={posts.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n-                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3> {post.title}</div>\r\n-                            <div className='card-body'>{post.body}</div>\r\n-                            <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n+                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {posts.title}</h3> {posts.title}</div>\r\n+                            <div className='card-body'>{posts.body}</div>\r\n+                            <button onClick={() => handleDelete(posts.id)}>Delete</button>\r\n                             <button onClick={() => {\r\n-                                setForm({ title: post.title, body: post.body });\r\n-                                setEditId(post.id);\r\n+                                setForm({ title: posts.title, body: posts.body });\r\n+                                setEditId(posts.id);\r\n                                 setShowForm(true);\r\n                             }}>Edit</button>\r\n                         </div>\r\n                     </div>\r\n"
                },
                {
                    "date": 1757311598869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n         } catch (err) {\r\n             console.error(\"Delete failed:\", err);\r\n         }\r\n     };\r\n-  const posts=localStorage.getItem(JSON.parse('cardData'));\r\n+  const posts=localStorage.getItem(JSON.parse(cardData));\r\n     // const handleDelete = (id) => {\r\n     //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n     //         method: \"DELETE\"\r\n     //     })\r\n"
                },
                {
                    "date": 1757311677538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n         } catch (err) {\r\n             console.error(\"Delete failed:\", err);\r\n         }\r\n     };\r\n-  const posts=localStorage.getItem(JSON.parse(cardData));\r\n+  const posts=JSON.parse( localStorage.getItem('cardData'));\r\n     // const handleDelete = (id) => {\r\n     //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n     //         method: \"DELETE\"\r\n     //     })\r\n"
                },
                {
                    "date": 1757311734582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,8 +78,10 @@\n             console.error(\"Delete failed:\", err);\r\n         }\r\n     };\r\n   const posts=JSON.parse( localStorage.getItem('cardData'));\r\n+  console.log(posts)\r\n+\r\n     // const handleDelete = (id) => {\r\n     //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n     //         method: \"DELETE\"\r\n     //     })\r\n"
                },
                {
                    "date": 1757311745090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,8 @@\n             console.error(\"Delete failed:\", err);\r\n         }\r\n     };\r\n   const posts=JSON.parse( localStorage.getItem('cardData'));\r\n-  console.log(posts)\r\n \r\n     // const handleDelete = (id) => {\r\n     //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n     //         method: \"DELETE\"\r\n"
                },
                {
                    "date": 1757311786777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,8 +78,9 @@\n             console.error(\"Delete failed:\", err);\r\n         }\r\n     };\r\n   const posts=JSON.parse( localStorage.getItem('cardData'));\r\n+  console.log(posts.id)\r\n \r\n     // const handleDelete = (id) => {\r\n     //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n     //         method: \"DELETE\"\r\n"
                },
                {
                    "date": 1757311793427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,8 @@\n             console.error(\"Delete failed:\", err);\r\n         }\r\n     };\r\n   const posts=JSON.parse( localStorage.getItem('cardData'));\r\n-  console.log(posts.id)\r\n \r\n     // const handleDelete = (id) => {\r\n     //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n     //         method: \"DELETE\"\r\n"
                },
                {
                    "date": 1757311833608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,10 +116,10 @@\n \r\n             }\r\n \r\n             <div className='row'>\r\n-                {currentPosts.map((i) => (\r\n-                    <div key={posts.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n+                {currentPosts.map((post,i) => (\r\n+                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {posts.title}</h3> {posts.title}</div>\r\n                             <div className='card-body'>{posts.body}</div>\r\n                             <button onClick={() => handleDelete(posts.id)}>Delete</button>\r\n"
                },
                {
                    "date": 1757311846811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,9 @@\n             <div className='row'>\r\n                 {currentPosts.map((post,i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n-                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {posts.title}</h3> {posts.title}</div>\r\n+                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3> {post.title}</div>\r\n                             <div className='card-body'>{posts.body}</div>\r\n                             <button onClick={() => handleDelete(posts.id)}>Delete</button>\r\n                             <button onClick={() => {\r\n                                 setForm({ title: posts.title, body: posts.body });\r\n"
                },
                {
                    "date": 1757311872823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -120,9 +120,9 @@\n                 {currentPosts.map((post,i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3> {post.title}</div>\r\n-                            <div className='card-body'>{posts.body}</div>\r\n+                            <div className='card-body'>{post.body}</div>\r\n                             <button onClick={() => handleDelete(posts.id)}>Delete</button>\r\n                             <button onClick={() => {\r\n                                 setForm({ title: posts.title, body: posts.body });\r\n                                 setEditId(posts.id);\r\n"
                },
                {
                    "date": 1757311883452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -120,9 +120,9 @@\n                 {currentPosts.map((post,i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3> {post.title}</div>\r\n-                            <div className='card-body'>{post.body}</div>\r\n+                            <div className='card-body'>{posts.body}</div>\r\n                             <button onClick={() => handleDelete(posts.id)}>Delete</button>\r\n                             <button onClick={() => {\r\n                                 setForm({ title: posts.title, body: posts.body });\r\n                                 setEditId(posts.id);\r\n"
                },
                {
                    "date": 1757311889721,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,9 @@\n             <div className='row'>\r\n                 {currentPosts.map((post,i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n-                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3> {post.title}</div>\r\n+                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {posts.title}</h3> {posts.title}</div>\r\n                             <div className='card-body'>{posts.body}</div>\r\n                             <button onClick={() => handleDelete(posts.id)}>Delete</button>\r\n                             <button onClick={() => {\r\n                                 setForm({ title: posts.title, body: posts.body });\r\n"
                },
                {
                    "date": 1757311903271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,9 @@\n             <div className='row'>\r\n                 {currentPosts.map((post,i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n-                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {posts.title}</h3> {posts.title}</div>\r\n+                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {posts.title}</h3></div>\r\n                             <div className='card-body'>{posts.body}</div>\r\n                             <button onClick={() => handleDelete(posts.id)}>Delete</button>\r\n                             <button onClick={() => {\r\n                                 setForm({ title: posts.title, body: posts.body });\r\n"
                },
                {
                    "date": 1757311933181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,9 +121,9 @@\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {posts.title}</h3></div>\r\n                             <div className='card-body'>{posts.body}</div>\r\n-                            <button onClick={() => handleDelete(posts.id)}>Delete</button>\r\n+                            <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n                             <button onClick={() => {\r\n                                 setForm({ title: posts.title, body: posts.body });\r\n                                 setEditId(posts.id);\r\n                                 setShowForm(true);\r\n"
                },
                {
                    "date": 1757311941010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,162 @@\n+import React, { useState, useEffect } from 'react';\r\n+\r\n+export default function Crud() {\r\n+    const [showForm, setShowForm] = useState(false);\r\n+    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n+    const [editId, setEditId] = useState(null);\r\n+    const [data, setData] = useState([]);\r\n+    const cardPerPage = 10;\r\n+    const [page, setPage] = useState(1);\r\n+\r\n+\r\n+    useEffect(() => {\r\n+        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+            .then(res => res.json())\r\n+            .then(data => setData(data),\r\n+                localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n+            )\r\n+    }, [data]);\r\n+\r\n+    const handleChange = (event) => {\r\n+        setForm({ ...form, [event.target.name]: event.target.value })\r\n+    };\r\n+    const handleSubmit = (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        if (editId) {\r\n+            fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n+                method: \"PUT\",\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify({ ...form, id: editId })\r\n+            })\r\n+                // .then(res => {\r\n+                //     console.log(\"PUT called:\", res.status);\r\n+                //     return res.json();\r\n+                // })\r\n+                .then(res => res.json())\r\n+                .then(updated => {\r\n+                    setData(data.map(data => (data.id === editId ? updated : data)))\r\n+                    setForm({ title: \"\", body: \"\" });\r\n+                    setEditId(null);\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(updated))\r\n+                })\r\n+        }\r\n+        else {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+                method: \"POST\",\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify(form),\r\n+            })\r\n+                .then(res => res.json())\r\n+            // .then(res => {\r\n+            //     console.log(\"POST called:\", res.status)\r\n+            //     return res.json();\r\n+            // })\r\n+            const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n+            const newPost = { id: newId, title: form.title, body: form.body };\r\n+            setData([...data, newPost]);\r\n+            const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n+            setPage(lastPage);\r\n+            setForm({ title: \"\", body: \"\" });\r\n+        }\r\n+    };\r\n+    const indexOfLastPost = page * cardPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+    const handleDelete = async (id) => {\r\n+        try {\r\n+            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n+                method: \"DELETE\"\r\n+            });\r\n+            const updatedData = data.filter(post => post.id !== id);\r\n+            const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n+           if (page > lastPage) setPage(lastPage);\r\n+            localStorage.setItem(\"cardData\",JSON.stringify(updatedData))\r\n+            setData(updatedData);\r\n+\r\n+        } catch (err) {\r\n+            console.error(\"Delete failed:\", err);\r\n+        }\r\n+    };\r\n+  const posts=JSON.parse( localStorage.getItem('cardData'));\r\n+\r\n+    // const handleDelete = (id) => {\r\n+    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+    //         method: \"DELETE\"\r\n+    //     })\r\n+    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n+    // };\r\n+\r\n+    return (\r\n+        <div className='container'>\r\n+            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+\r\n+            {showForm &&\r\n+                <form onSubmit={handleSubmit} className='mb-4'>\r\n+                    <input type='text'\r\n+                        name='title'\r\n+                        placeholder='Enter title'\r\n+                        onChange={handleChange}\r\n+                        value={form.title}\r\n+                        className='form-control mb-2'\r\n+                        required />\r\n+                    <textarea\r\n+                        title='body'\r\n+                        placeholder='Enter Description'\r\n+                        value={form.body}\r\n+                        onChange={(e) => {\r\n+                            setForm({ ...form, body: e.target.value })\r\n+                        }}\r\n+                        className='form-control mb-2'\r\n+                        required />\r\n+\r\n+                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n+                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", body: \"\" }) }}>Reset</button>\r\n+                </form>\r\n+\r\n+            }\r\n+\r\n+            <div className='row'>\r\n+                {currentPosts.map((post,i) => (\r\n+                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n+                        <div className='card mb-4'>\r\n+                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n+                            <div className='card-body'>{post.body}</div>\r\n+                            <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n+                            <button onClick={() => {\r\n+                                setForm({ title: posts.title, body: posts.body });\r\n+                                setEditId(posts.id);\r\n+                                setShowForm(true);\r\n+                            }}>Edit</button>\r\n+                        </div>\r\n+                    </div>\r\n+                ))}\r\n+            </div>\r\n+            <div>\r\n+                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}>Prev</button>\r\n+                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n+                    <button\r\n+                        key={idx}\r\n+                        onClick={() => setPage(idx + 1)}\r\n+                        style={{\r\n+                            margin: \"5px\",\r\n+                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n+                            color: page === idx + 1 ? \"white\" : \"black\",\r\n+                            border: \"1px solid black\",\r\n+                            borderRadius: \"8px\",\r\n+                            padding: \"10px\",\r\n+                        }}>\r\n+                        {idx + 1}\r\n+                    </button>\r\n+                ))}\r\n+                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}>Next</button>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+}\r\n"
                },
                {
                    "date": 1757312326630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,12 @@\n     const [page, setPage] = useState(1);\r\n \r\n \r\n     useEffect(() => {\r\n+        const lcData=localStorage.getItem(\"cardData\");\r\n+        if(lcData){\r\n+            setData(lcData)\r\n+        }\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data),\r\n                 localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n@@ -159,166 +163,4 @@\n \r\n \r\n \r\n }\r\n-import React, { useState, useEffect } from 'react';\r\n-\r\n-export default function Crud() {\r\n-    const [showForm, setShowForm] = useState(false);\r\n-    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n-    const [editId, setEditId] = useState(null);\r\n-    const [data, setData] = useState([]);\r\n-    const cardPerPage = 10;\r\n-    const [page, setPage] = useState(1);\r\n-\r\n-\r\n-    useEffect(() => {\r\n-        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-            .then(res => res.json())\r\n-            .then(data => setData(data),\r\n-                localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n-            )\r\n-    }, [data]);\r\n-\r\n-    const handleChange = (event) => {\r\n-        setForm({ ...form, [event.target.name]: event.target.value })\r\n-    };\r\n-    const handleSubmit = (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        if (editId) {\r\n-            fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n-                method: \"PUT\",\r\n-                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify({ ...form, id: editId })\r\n-            })\r\n-                // .then(res => {\r\n-                //     console.log(\"PUT called:\", res.status);\r\n-                //     return res.json();\r\n-                // })\r\n-                .then(res => res.json())\r\n-                .then(updated => {\r\n-                    setData(data.map(data => (data.id === editId ? updated : data)))\r\n-                    setForm({ title: \"\", body: \"\" });\r\n-                    setEditId(null);\r\n-                    localStorage.setItem(\"cardData\", JSON.stringify(updated))\r\n-                })\r\n-        }\r\n-        else {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-                method: \"POST\",\r\n-                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify(form),\r\n-            })\r\n-                .then(res => res.json())\r\n-            // .then(res => {\r\n-            //     console.log(\"POST called:\", res.status)\r\n-            //     return res.json();\r\n-            // })\r\n-            const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n-            const newPost = { id: newId, title: form.title, body: form.body };\r\n-            setData([...data, newPost]);\r\n-            const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n-            setPage(lastPage);\r\n-            setForm({ title: \"\", body: \"\" });\r\n-        }\r\n-    };\r\n-    const indexOfLastPost = page * cardPerPage;\r\n-    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-    const handleDelete = async (id) => {\r\n-        try {\r\n-            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n-                method: \"DELETE\"\r\n-            });\r\n-            const updatedData = data.filter(post => post.id !== id);\r\n-            const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n-           if (page > lastPage) setPage(lastPage);\r\n-            localStorage.setItem(\"cardData\",JSON.stringify(updatedData))\r\n-            setData(updatedData);\r\n-\r\n-        } catch (err) {\r\n-            console.error(\"Delete failed:\", err);\r\n-        }\r\n-    };\r\n-  const posts=JSON.parse( localStorage.getItem('cardData'));\r\n-\r\n-    // const handleDelete = (id) => {\r\n-    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-    //         method: \"DELETE\"\r\n-    //     })\r\n-    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n-    // };\r\n-\r\n-    return (\r\n-        <div className='container'>\r\n-            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n-\r\n-            {showForm &&\r\n-                <form onSubmit={handleSubmit} className='mb-4'>\r\n-                    <input type='text'\r\n-                        name='title'\r\n-                        placeholder='Enter title'\r\n-                        onChange={handleChange}\r\n-                        value={form.title}\r\n-                        className='form-control mb-2'\r\n-                        required />\r\n-                    <textarea\r\n-                        title='body'\r\n-                        placeholder='Enter Description'\r\n-                        value={form.body}\r\n-                        onChange={(e) => {\r\n-                            setForm({ ...form, body: e.target.value })\r\n-                        }}\r\n-                        className='form-control mb-2'\r\n-                        required />\r\n-\r\n-                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n-                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", body: \"\" }) }}>Reset</button>\r\n-                </form>\r\n-\r\n-            }\r\n-\r\n-            <div className='row'>\r\n-                {currentPosts.map((post,i) => (\r\n-                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n-                        <div className='card mb-4'>\r\n-                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {posts.title}</h3></div>\r\n-                            <div className='card-body'>{posts.body}</div>\r\n-                            <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n-                            <button onClick={() => {\r\n-                                setForm({ title: posts.title, body: posts.body });\r\n-                                setEditId(posts.id);\r\n-                                setShowForm(true);\r\n-                            }}>Edit</button>\r\n-                        </div>\r\n-                    </div>\r\n-                ))}\r\n-            </div>\r\n-            <div>\r\n-                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}>Prev</button>\r\n-                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n-                    <button\r\n-                        key={idx}\r\n-                        onClick={() => setPage(idx + 1)}\r\n-                        style={{\r\n-                            margin: \"5px\",\r\n-                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n-                            color: page === idx + 1 ? \"white\" : \"black\",\r\n-                            border: \"1px solid black\",\r\n-                            borderRadius: \"8px\",\r\n-                            padding: \"10px\",\r\n-                        }}>\r\n-                        {idx + 1}\r\n-                    </button>\r\n-                ))}\r\n-                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}>Next</button>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-}\r\n"
                },
                {
                    "date": 1757312346058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,17 +11,18 @@\n \r\n     useEffect(() => {\r\n         const lcData=localStorage.getItem(\"cardData\");\r\n         if(lcData){\r\n-            setData(lcData)\r\n+            setData(lcData);\r\n         }\r\n+        else{\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data),\r\n                 localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n             )\r\n     }, [data]);\r\n-\r\n+}\r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n     const handleSubmit = (e) => {\r\n"
                },
                {
                    "date": 1757312365349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,10 +19,11 @@\n             .then(res => res.json())\r\n             .then(data => setData(data),\r\n                 localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n             )\r\n+        }\r\n     }, [data]);\r\n-}\r\n+\r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n     const handleSubmit = (e) => {\r\n"
                },
                {
                    "date": 1757312406852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,10 +129,10 @@\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <div className='card-body'>{post.body}</div>\r\n                             <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n                             <button onClick={() => {\r\n-                                setForm({ title: posts.title, body: posts.body });\r\n-                                setEditId(posts.id);\r\n+                                setForm({ title: post.title, body: post.body });\r\n+                                setEditId(post.id);\r\n                                 setShowForm(true);\r\n                             }}>Edit</button>\r\n                         </div>\r\n                     </div>\r\n"
                },
                {
                    "date": 1757312432899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,8 @@\n         } catch (err) {\r\n             console.error(\"Delete failed:\", err);\r\n         }\r\n     };\r\n-  const posts=JSON.parse( localStorage.getItem('cardData'));\r\n \r\n     // const handleDelete = (id) => {\r\n     //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n     //         method: \"DELETE\"\r\n"
                },
                {
                    "date": 1757312452316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     const [page, setPage] = useState(1);\r\n \r\n \r\n     useEffect(() => {\r\n-        const lcData=localStorage.getItem(\"cardData\");\r\n+        const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n         if(lcData){\r\n             setData(lcData);\r\n         }\r\n         else{\r\n"
                },
                {
                    "date": 1757312741628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n             .then(data => setData(data),\r\n                 localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n             )\r\n         }\r\n-    }, [data]);\r\n+    }, []);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n"
                },
                {
                    "date": 1757312817391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n             .then(data => setData(data),\r\n                 localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n             )\r\n         }\r\n-    }, []);\r\n+    }, [data]);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n@@ -121,9 +121,9 @@\n \r\n             }\r\n \r\n             <div className='row'>\r\n-                {currentPosts.map((post,i) => (\r\n+                {data.map((post,i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <div className='card-body'>{post.body}</div>\r\n"
                },
                {
                    "date": 1757312828065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n         }\r\n     };\r\n     const indexOfLastPost = page * cardPerPage;\r\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+   // const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n     const handleDelete = async (id) => {\r\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n"
                },
                {
                    "date": 1757312862598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n         }\r\n     };\r\n     const indexOfLastPost = page * cardPerPage;\r\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-   // const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n     const handleDelete = async (id) => {\r\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n@@ -121,9 +121,9 @@\n \r\n             }\r\n \r\n             <div className='row'>\r\n-                {data.map((post,i) => (\r\n+                {currentPosts.map((post,i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <div className='card-body'>{post.body}</div>\r\n"
                },
                {
                    "date": 1757312921211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n         }\r\n     };\r\n     const indexOfLastPost = page * cardPerPage;\r\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+    //const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n     const handleDelete = async (id) => {\r\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n@@ -121,9 +121,9 @@\n \r\n             }\r\n \r\n             <div className='row'>\r\n-                {currentPosts.map((post,i) => (\r\n+                {data.map((post,i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <div className='card-body'>{post.body}</div>\r\n"
                },
                {
                    "date": 1757312947185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n         }\r\n     };\r\n     const indexOfLastPost = page * cardPerPage;\r\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-    //const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n     const handleDelete = async (id) => {\r\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n@@ -121,9 +121,9 @@\n \r\n             }\r\n \r\n             <div className='row'>\r\n-                {data.map((post,i) => (\r\n+                {currentPosts.map((post,i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <div className='card-body'>{post.body}</div>\r\n"
                },
                {
                    "date": 1757313000072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n             .then(data => setData(data),\r\n                 localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n             )\r\n         }\r\n-    }, [data]);\r\n+    }, []);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n"
                },
                {
                    "date": 1757313014569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n             .then(data => setData(data),\r\n                 localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n             )\r\n         }\r\n-    }, []);\r\n+    });\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n"
                },
                {
                    "date": 1757313107156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n             .then(data => setData(data),\r\n                 localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n             )\r\n         }\r\n-    });\r\n+    },[]);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n@@ -40,9 +40,10 @@\n                 //     return res.json();\r\n                 // })\r\n                 .then(res => res.json())\r\n                 .then(updated => {\r\n-                    setData(data.map(data => (data.id === editId ? updated : data)))\r\n+                    const newData=data.map(data => (data.id === editId ? updated : data));\r\n+                    setData(newData)\r\n                     setForm({ title: \"\", body: \"\" });\r\n                     setEditId(null);\r\n                     localStorage.setItem(\"cardData\", JSON.stringify(updated))\r\n                 })\r\n"
                },
                {
                    "date": 1757313114492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n                     const newData=data.map(data => (data.id === editId ? updated : data));\r\n                     setData(newData)\r\n                     setForm({ title: \"\", body: \"\" });\r\n                     setEditId(null);\r\n-                    localStorage.setItem(\"cardData\", JSON.stringify(updated))\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(newData))\r\n                 })\r\n         }\r\n         else {\r\n             fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n"
                },
                {
                    "date": 1757313284842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,9 @@\n     useEffect(() => {\r\n         const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n         if(lcData){\r\n             setData(lcData);\r\n+            console.log(typeof(lcData))\r\n         }\r\n         else{\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n"
                },
                {
                    "date": 1757313304829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,8 @@\n     useEffect(() => {\r\n         const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n         if(lcData){\r\n             setData(lcData);\r\n-            console.log(typeof(lcData))\r\n         }\r\n         else{\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n"
                },
                {
                    "date": 1757313373607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,169 @@\n+import React, { useState, useEffect } from 'react';\r\n+\r\n+export default function Crud() {\r\n+    const [showForm, setShowForm] = useState(false);\r\n+    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n+    const [editId, setEditId] = useState(null);\r\n+    const [data, setData] = useState([]);\r\n+    const cardPerPage = 10;\r\n+    const [page, setPage] = useState(1);\r\n+\r\n+\r\n+    useEffect(() => {\r\n+        const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n+        if(lcData){\r\n+            setData(lcData);\r\n+        }\r\n+        else{\r\n+        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+            .then(res => res.json())\r\n+            .then(data => setData(data),\r\n+                localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n+            )\r\n+        }\r\n+    },[]);\r\n+\r\n+    const handleChange = (event) => {\r\n+        setForm({ ...form, [event.target.name]: event.target.value })\r\n+    };\r\n+    const handleSubmit = (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        if (editId) {\r\n+            fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n+                method: \"PUT\",\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify({ ...form, id: editId })\r\n+            })\r\n+                // .then(res => {\r\n+                //     console.log(\"PUT called:\", res.status);\r\n+                //     return res.json();\r\n+                // })\r\n+                .then(res => res.json())\r\n+                .then(updated => {\r\n+                    const newData=data.map(data => (data.id === editId ? updated : data));\r\n+                    setData(newData)\r\n+                    setForm({ title: \"\", body: \"\" });\r\n+                    setEditId(null);\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(newData))\r\n+                })\r\n+        }\r\n+        else {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+                method: \"POST\",\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify(form),\r\n+            })\r\n+                .then(res => res.json())\r\n+            // .then(res => {\r\n+            //     console.log(\"POST called:\", res.status)\r\n+            //     return res.json();\r\n+            // })\r\n+            const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n+            const newPost = { id: newId, title: form.title, body: form.body };\r\n+            setData([...data, newPost]);\r\n+            const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n+            setPage(lastPage);\r\n+            setForm({ title: \"\", body: \"\" });\r\n+            localStorage.setItem(\"cardData\",JSON.stringify(newId));\r\n+        }\r\n+    };\r\n+    const indexOfLastPost = page * cardPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+    const handleDelete = async (id) => {\r\n+        try {\r\n+            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n+                method: \"DELETE\"\r\n+            });\r\n+            const updatedData = data.filter(post => post.id !== id);\r\n+            const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n+           if (page > lastPage) setPage(lastPage);\r\n+            localStorage.setItem(\"cardData\",JSON.stringify(updatedData))\r\n+            setData(updatedData);\r\n+\r\n+        } catch (err) {\r\n+            console.error(\"Delete failed:\", err);\r\n+        }\r\n+    };\r\n+\r\n+    // const handleDelete = (id) => {\r\n+    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+    //         method: \"DELETE\"\r\n+    //     })\r\n+    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n+    // };\r\n+\r\n+    return (\r\n+        <div className='container'>\r\n+            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+\r\n+            {showForm &&\r\n+                <form onSubmit={handleSubmit} className='mb-4'>\r\n+                    <input type='text'\r\n+                        name='title'\r\n+                        placeholder='Enter title'\r\n+                        onChange={handleChange}\r\n+                        value={form.title}\r\n+                        className='form-control mb-2'\r\n+                        required />\r\n+                    <textarea\r\n+                        title='body'\r\n+                        placeholder='Enter Description'\r\n+                        value={form.body}\r\n+                        onChange={(e) => {\r\n+                            setForm({ ...form, body: e.target.value })\r\n+                        }}\r\n+                        className='form-control mb-2'\r\n+                        required />\r\n+\r\n+                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n+                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", body: \"\" }) }}>Reset</button>\r\n+                </form>\r\n+\r\n+            }\r\n+\r\n+            <div className='row'>\r\n+                {currentPosts.map((post,i) => (\r\n+                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n+                        <div className='card mb-4'>\r\n+                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n+                            <div className='card-body'>{post.body}</div>\r\n+                            <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n+                            <button onClick={() => {\r\n+                                setForm({ title: post.title, body: post.body });\r\n+                                setEditId(post.id);\r\n+                                setShowForm(true);\r\n+                            }}>Edit</button>\r\n+                        </div>\r\n+                    </div>\r\n+                ))}\r\n+            </div>\r\n+            <div>\r\n+                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}>Prev</button>\r\n+                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n+                    <button\r\n+                        key={idx}\r\n+                        onClick={() => setPage(idx + 1)}\r\n+                        style={{\r\n+                            margin: \"5px\",\r\n+                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n+                            color: page === idx + 1 ? \"white\" : \"black\",\r\n+                            border: \"1px solid black\",\r\n+                            borderRadius: \"8px\",\r\n+                            padding: \"10px\",\r\n+                        }}>\r\n+                        {idx + 1}\r\n+                    </button>\r\n+                ))}\r\n+                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}>Next</button>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+}\r\n"
                },
                {
                    "date": 1757313449493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,10 @@\n             //     return res.json();\r\n             // })\r\n             const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n             const newPost = { id: newId, title: form.title, body: form.body };\r\n-            setData([...data, newPost]);\r\n+            const newData=[...data, newPost];\r\n+            setData(newData);\r\n             const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n             setPage(lastPage);\r\n             setForm({ title: \"\", body: \"\" });\r\n             localStorage.setItem(\"cardData\",JSON.stringify(newId));\r\n@@ -166,172 +167,4 @@\n \r\n \r\n \r\n }\r\n-import React, { useState, useEffect } from 'react';\r\n-\r\n-export default function Crud() {\r\n-    const [showForm, setShowForm] = useState(false);\r\n-    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n-    const [editId, setEditId] = useState(null);\r\n-    const [data, setData] = useState([]);\r\n-    const cardPerPage = 10;\r\n-    const [page, setPage] = useState(1);\r\n-\r\n-\r\n-    useEffect(() => {\r\n-        const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        if(lcData){\r\n-            setData(lcData);\r\n-        }\r\n-        else{\r\n-        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-            .then(res => res.json())\r\n-            .then(data => setData(data),\r\n-                localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n-            )\r\n-        }\r\n-    },[]);\r\n-\r\n-    const handleChange = (event) => {\r\n-        setForm({ ...form, [event.target.name]: event.target.value })\r\n-    };\r\n-    const handleSubmit = (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        if (editId) {\r\n-            fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n-                method: \"PUT\",\r\n-                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify({ ...form, id: editId })\r\n-            })\r\n-                // .then(res => {\r\n-                //     console.log(\"PUT called:\", res.status);\r\n-                //     return res.json();\r\n-                // })\r\n-                .then(res => res.json())\r\n-                .then(updated => {\r\n-                    const newData=data.map(data => (data.id === editId ? updated : data));\r\n-                    setData(newData)\r\n-                    setForm({ title: \"\", body: \"\" });\r\n-                    setEditId(null);\r\n-                    localStorage.setItem(\"cardData\", JSON.stringify(newData))\r\n-                })\r\n-        }\r\n-        else {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-                method: \"POST\",\r\n-                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify(form),\r\n-            })\r\n-                .then(res => res.json())\r\n-            // .then(res => {\r\n-            //     console.log(\"POST called:\", res.status)\r\n-            //     return res.json();\r\n-            // })\r\n-            const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n-            const newPost = { id: newId, title: form.title, body: form.body };\r\n-            setData([...data, newPost]);\r\n-            const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n-            setPage(lastPage);\r\n-            setForm({ title: \"\", body: \"\" });\r\n-        }\r\n-    };\r\n-    const indexOfLastPost = page * cardPerPage;\r\n-    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-    const handleDelete = async (id) => {\r\n-        try {\r\n-            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n-                method: \"DELETE\"\r\n-            });\r\n-            const updatedData = data.filter(post => post.id !== id);\r\n-            const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n-           if (page > lastPage) setPage(lastPage);\r\n-            localStorage.setItem(\"cardData\",JSON.stringify(updatedData))\r\n-            setData(updatedData);\r\n-\r\n-        } catch (err) {\r\n-            console.error(\"Delete failed:\", err);\r\n-        }\r\n-    };\r\n-\r\n-    // const handleDelete = (id) => {\r\n-    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-    //         method: \"DELETE\"\r\n-    //     })\r\n-    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n-    // };\r\n-\r\n-    return (\r\n-        <div className='container'>\r\n-            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n-\r\n-            {showForm &&\r\n-                <form onSubmit={handleSubmit} className='mb-4'>\r\n-                    <input type='text'\r\n-                        name='title'\r\n-                        placeholder='Enter title'\r\n-                        onChange={handleChange}\r\n-                        value={form.title}\r\n-                        className='form-control mb-2'\r\n-                        required />\r\n-                    <textarea\r\n-                        title='body'\r\n-                        placeholder='Enter Description'\r\n-                        value={form.body}\r\n-                        onChange={(e) => {\r\n-                            setForm({ ...form, body: e.target.value })\r\n-                        }}\r\n-                        className='form-control mb-2'\r\n-                        required />\r\n-\r\n-                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n-                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", body: \"\" }) }}>Reset</button>\r\n-                </form>\r\n-\r\n-            }\r\n-\r\n-            <div className='row'>\r\n-                {currentPosts.map((post,i) => (\r\n-                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n-                        <div className='card mb-4'>\r\n-                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n-                            <div className='card-body'>{post.body}</div>\r\n-                            <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n-                            <button onClick={() => {\r\n-                                setForm({ title: post.title, body: post.body });\r\n-                                setEditId(post.id);\r\n-                                setShowForm(true);\r\n-                            }}>Edit</button>\r\n-                        </div>\r\n-                    </div>\r\n-                ))}\r\n-            </div>\r\n-            <div>\r\n-                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}>Prev</button>\r\n-                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n-                    <button\r\n-                        key={idx}\r\n-                        onClick={() => setPage(idx + 1)}\r\n-                        style={{\r\n-                            margin: \"5px\",\r\n-                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n-                            color: page === idx + 1 ? \"white\" : \"black\",\r\n-                            border: \"1px solid black\",\r\n-                            borderRadius: \"8px\",\r\n-                            padding: \"10px\",\r\n-                        }}>\r\n-                        {idx + 1}\r\n-                    </button>\r\n-                ))}\r\n-                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}>Next</button>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-}\r\n"
                },
                {
                    "date": 1757313538647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,170 @@\n+import React, { useState, useEffect } from 'react';\r\n+\r\n+export default function Crud() {\r\n+    const [showForm, setShowForm] = useState(false);\r\n+    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n+    const [editId, setEditId] = useState(null);\r\n+    const [data, setData] = useState([]);\r\n+    const cardPerPage = 10;\r\n+    const [page, setPage] = useState(1);\r\n+\r\n+console.log(typeof(data))\r\n+    useEffect(() => {\r\n+        const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n+        if(lcData){\r\n+            setData(lcData);\r\n+        }\r\n+        else{\r\n+        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+            .then(res => res.json())\r\n+            .then(data => setData(data),\r\n+                localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n+            )\r\n+        }\r\n+    },[]);\r\n+\r\n+    const handleChange = (event) => {\r\n+        setForm({ ...form, [event.target.name]: event.target.value })\r\n+    };\r\n+    const handleSubmit = (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        if (editId) {\r\n+            fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n+                method: \"PUT\",\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify({ ...form, id: editId })\r\n+            })\r\n+                // .then(res => {\r\n+                //     console.log(\"PUT called:\", res.status);\r\n+                //     return res.json();\r\n+                // })\r\n+                .then(res => res.json())\r\n+                .then(updated => {\r\n+                    const newData=data.map(data => (data.id === editId ? updated : data));\r\n+                    setData(newData)\r\n+                    setForm({ title: \"\", body: \"\" });\r\n+                    setEditId(null);\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(newData))\r\n+                })\r\n+        }\r\n+        else {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+                method: \"POST\",\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify(form),\r\n+            })\r\n+                .then(res => res.json())\r\n+            // .then(res => {\r\n+            //     console.log(\"POST called:\", res.status)\r\n+            //     return res.json();\r\n+            // })\r\n+            const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n+            const newPost = { id: newId, title: form.title, body: form.body };\r\n+            const newData=[...data, newPost];\r\n+            setData(newData);\r\n+            const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n+            setPage(lastPage);\r\n+            setForm({ title: \"\", body: \"\" });\r\n+            localStorage.setItem(\"cardData\",JSON.stringify(newId));\r\n+        }\r\n+    };\r\n+    const indexOfLastPost = page * cardPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+    const handleDelete = async (id) => {\r\n+        try {\r\n+            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n+                method: \"DELETE\"\r\n+            });\r\n+            const updatedData = data.filter(post => post.id !== id);\r\n+            const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n+           if (page > lastPage) setPage(lastPage);\r\n+            localStorage.setItem(\"cardData\",JSON.stringify(updatedData))\r\n+            setData(updatedData);\r\n+\r\n+        } catch (err) {\r\n+            console.error(\"Delete failed:\", err);\r\n+        }\r\n+    };\r\n+\r\n+    // const handleDelete = (id) => {\r\n+    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+    //         method: \"DELETE\"\r\n+    //     })\r\n+    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n+    // };\r\n+\r\n+    return (\r\n+        <div className='container'>\r\n+            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+\r\n+            {showForm &&\r\n+                <form onSubmit={handleSubmit} className='mb-4'>\r\n+                    <input type='text'\r\n+                        name='title'\r\n+                        placeholder='Enter title'\r\n+                        onChange={handleChange}\r\n+                        value={form.title}\r\n+                        className='form-control mb-2'\r\n+                        required />\r\n+                    <textarea\r\n+                        title='body'\r\n+                        placeholder='Enter Description'\r\n+                        value={form.body}\r\n+                        onChange={(e) => {\r\n+                            setForm({ ...form, body: e.target.value })\r\n+                        }}\r\n+                        className='form-control mb-2'\r\n+                        required />\r\n+\r\n+                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n+                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", body: \"\" }) }}>Reset</button>\r\n+                </form>\r\n+\r\n+            }\r\n+\r\n+            <div className='row'>\r\n+                {currentPosts.map((post,i) => (\r\n+                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n+                        <div className='card mb-4'>\r\n+                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n+                            <div className='card-body'>{post.body}</div>\r\n+                            <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n+                            <button onClick={() => {\r\n+                                setForm({ title: post.title, body: post.body });\r\n+                                setEditId(post.id);\r\n+                                setShowForm(true);\r\n+                            }}>Edit</button>\r\n+                        </div>\r\n+                    </div>\r\n+                ))}\r\n+            </div>\r\n+            <div>\r\n+                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}>Prev</button>\r\n+                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n+                    <button\r\n+                        key={idx}\r\n+                        onClick={() => setPage(idx + 1)}\r\n+                        style={{\r\n+                            margin: \"5px\",\r\n+                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n+                            color: page === idx + 1 ? \"white\" : \"black\",\r\n+                            border: \"1px solid black\",\r\n+                            borderRadius: \"8px\",\r\n+                            padding: \"10px\",\r\n+                        }}>\r\n+                        {idx + 1}\r\n+                    </button>\r\n+                ))}\r\n+                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}>Next</button>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+}\r\n"
                },
                {
                    "date": 1757313548506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,8 @@\n     const [data, setData] = useState([]);\r\n     const cardPerPage = 10;\r\n     const [page, setPage] = useState(1);\r\n \r\n-console.log(typeof(data))\r\n     useEffect(() => {\r\n         const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n         if(lcData){\r\n             setData(lcData);\r\n@@ -167,174 +166,4 @@\n \r\n \r\n \r\n }\r\n-import React, { useState, useEffect } from 'react';\r\n-\r\n-export default function Crud() {\r\n-    const [showForm, setShowForm] = useState(false);\r\n-    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n-    const [editId, setEditId] = useState(null);\r\n-    const [data, setData] = useState([]);\r\n-    const cardPerPage = 10;\r\n-    const [page, setPage] = useState(1);\r\n-\r\n-\r\n-    useEffect(() => {\r\n-        const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        if(lcData){\r\n-            setData(lcData);\r\n-        }\r\n-        else{\r\n-        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-            .then(res => res.json())\r\n-            .then(data => setData(data),\r\n-                localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n-            )\r\n-        }\r\n-    },[]);\r\n-\r\n-    const handleChange = (event) => {\r\n-        setForm({ ...form, [event.target.name]: event.target.value })\r\n-    };\r\n-    const handleSubmit = (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        if (editId) {\r\n-            fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n-                method: \"PUT\",\r\n-                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify({ ...form, id: editId })\r\n-            })\r\n-                // .then(res => {\r\n-                //     console.log(\"PUT called:\", res.status);\r\n-                //     return res.json();\r\n-                // })\r\n-                .then(res => res.json())\r\n-                .then(updated => {\r\n-                    const newData=data.map(data => (data.id === editId ? updated : data));\r\n-                    setData(newData)\r\n-                    setForm({ title: \"\", body: \"\" });\r\n-                    setEditId(null);\r\n-                    localStorage.setItem(\"cardData\", JSON.stringify(newData))\r\n-                })\r\n-        }\r\n-        else {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-                method: \"POST\",\r\n-                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify(form),\r\n-            })\r\n-                .then(res => res.json())\r\n-            // .then(res => {\r\n-            //     console.log(\"POST called:\", res.status)\r\n-            //     return res.json();\r\n-            // })\r\n-            const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n-            const newPost = { id: newId, title: form.title, body: form.body };\r\n-            const newData=[...data, newPost];\r\n-            setData(newData);\r\n-            const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n-            setPage(lastPage);\r\n-            setForm({ title: \"\", body: \"\" });\r\n-            localStorage.setItem(\"cardData\",JSON.stringify(newId));\r\n-        }\r\n-    };\r\n-    const indexOfLastPost = page * cardPerPage;\r\n-    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-    const handleDelete = async (id) => {\r\n-        try {\r\n-            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n-                method: \"DELETE\"\r\n-            });\r\n-            const updatedData = data.filter(post => post.id !== id);\r\n-            const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n-           if (page > lastPage) setPage(lastPage);\r\n-            localStorage.setItem(\"cardData\",JSON.stringify(updatedData))\r\n-            setData(updatedData);\r\n-\r\n-        } catch (err) {\r\n-            console.error(\"Delete failed:\", err);\r\n-        }\r\n-    };\r\n-\r\n-    // const handleDelete = (id) => {\r\n-    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-    //         method: \"DELETE\"\r\n-    //     })\r\n-    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n-    // };\r\n-\r\n-    return (\r\n-        <div className='container'>\r\n-            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n-\r\n-            {showForm &&\r\n-                <form onSubmit={handleSubmit} className='mb-4'>\r\n-                    <input type='text'\r\n-                        name='title'\r\n-                        placeholder='Enter title'\r\n-                        onChange={handleChange}\r\n-                        value={form.title}\r\n-                        className='form-control mb-2'\r\n-                        required />\r\n-                    <textarea\r\n-                        title='body'\r\n-                        placeholder='Enter Description'\r\n-                        value={form.body}\r\n-                        onChange={(e) => {\r\n-                            setForm({ ...form, body: e.target.value })\r\n-                        }}\r\n-                        className='form-control mb-2'\r\n-                        required />\r\n-\r\n-                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n-                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", body: \"\" }) }}>Reset</button>\r\n-                </form>\r\n-\r\n-            }\r\n-\r\n-            <div className='row'>\r\n-                {currentPosts.map((post,i) => (\r\n-                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n-                        <div className='card mb-4'>\r\n-                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n-                            <div className='card-body'>{post.body}</div>\r\n-                            <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n-                            <button onClick={() => {\r\n-                                setForm({ title: post.title, body: post.body });\r\n-                                setEditId(post.id);\r\n-                                setShowForm(true);\r\n-                            }}>Edit</button>\r\n-                        </div>\r\n-                    </div>\r\n-                ))}\r\n-            </div>\r\n-            <div>\r\n-                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}>Prev</button>\r\n-                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n-                    <button\r\n-                        key={idx}\r\n-                        onClick={() => setPage(idx + 1)}\r\n-                        style={{\r\n-                            margin: \"5px\",\r\n-                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n-                            color: page === idx + 1 ? \"white\" : \"black\",\r\n-                            border: \"1px solid black\",\r\n-                            borderRadius: \"8px\",\r\n-                            padding: \"10px\",\r\n-                        }}>\r\n-                        {idx + 1}\r\n-                    </button>\r\n-                ))}\r\n-                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}>Next</button>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-}\r\n"
                },
                {
                    "date": 1757313577295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,169 @@\n+import React, { useState, useEffect } from 'react';\r\n+\r\n+export default function Crud() {\r\n+    const [showForm, setShowForm] = useState(false);\r\n+    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n+    const [editId, setEditId] = useState(null);\r\n+    const [data, setData] = useState([]);\r\n+    const cardPerPage = 10;\r\n+    const [page, setPage] = useState(1);\r\n+\r\n+    useEffect(() => {\r\n+        const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n+        if(Array.isArray(lcData)){\r\n+            setData(lcData);\r\n+        }\r\n+        else{\r\n+        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+            .then(res => res.json())\r\n+            .then(data => setData(data),\r\n+                localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n+            )\r\n+        }\r\n+    },[]);\r\n+\r\n+    const handleChange = (event) => {\r\n+        setForm({ ...form, [event.target.name]: event.target.value })\r\n+    };\r\n+    const handleSubmit = (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        if (editId) {\r\n+            fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n+                method: \"PUT\",\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify({ ...form, id: editId })\r\n+            })\r\n+                // .then(res => {\r\n+                //     console.log(\"PUT called:\", res.status);\r\n+                //     return res.json();\r\n+                // })\r\n+                .then(res => res.json())\r\n+                .then(updated => {\r\n+                    const newData=data.map(data => (data.id === editId ? updated : data));\r\n+                    setData(newData)\r\n+                    setForm({ title: \"\", body: \"\" });\r\n+                    setEditId(null);\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(newData))\r\n+                })\r\n+        }\r\n+        else {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+                method: \"POST\",\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify(form),\r\n+            })\r\n+                .then(res => res.json())\r\n+            // .then(res => {\r\n+            //     console.log(\"POST called:\", res.status)\r\n+            //     return res.json();\r\n+            // })\r\n+            const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n+            const newPost = { id: newId, title: form.title, body: form.body };\r\n+            const newData=[...data, newPost];\r\n+            setData(newData);\r\n+            const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n+            setPage(lastPage);\r\n+            setForm({ title: \"\", body: \"\" });\r\n+            localStorage.setItem(\"cardData\",JSON.stringify(newId));\r\n+        }\r\n+    };\r\n+    const indexOfLastPost = page * cardPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+    const handleDelete = async (id) => {\r\n+        try {\r\n+            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n+                method: \"DELETE\"\r\n+            });\r\n+            const updatedData = data.filter(post => post.id !== id);\r\n+            const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n+           if (page > lastPage) setPage(lastPage);\r\n+            localStorage.setItem(\"cardData\",JSON.stringify(updatedData))\r\n+            setData(updatedData);\r\n+\r\n+        } catch (err) {\r\n+            console.error(\"Delete failed:\", err);\r\n+        }\r\n+    };\r\n+\r\n+    // const handleDelete = (id) => {\r\n+    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+    //         method: \"DELETE\"\r\n+    //     })\r\n+    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n+    // };\r\n+\r\n+    return (\r\n+        <div className='container'>\r\n+            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+\r\n+            {showForm &&\r\n+                <form onSubmit={handleSubmit} className='mb-4'>\r\n+                    <input type='text'\r\n+                        name='title'\r\n+                        placeholder='Enter title'\r\n+                        onChange={handleChange}\r\n+                        value={form.title}\r\n+                        className='form-control mb-2'\r\n+                        required />\r\n+                    <textarea\r\n+                        title='body'\r\n+                        placeholder='Enter Description'\r\n+                        value={form.body}\r\n+                        onChange={(e) => {\r\n+                            setForm({ ...form, body: e.target.value })\r\n+                        }}\r\n+                        className='form-control mb-2'\r\n+                        required />\r\n+\r\n+                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n+                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", body: \"\" }) }}>Reset</button>\r\n+                </form>\r\n+\r\n+            }\r\n+\r\n+            <div className='row'>\r\n+                {currentPosts.map((post,i) => (\r\n+                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n+                        <div className='card mb-4'>\r\n+                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n+                            <div className='card-body'>{post.body}</div>\r\n+                            <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n+                            <button onClick={() => {\r\n+                                setForm({ title: post.title, body: post.body });\r\n+                                setEditId(post.id);\r\n+                                setShowForm(true);\r\n+                            }}>Edit</button>\r\n+                        </div>\r\n+                    </div>\r\n+                ))}\r\n+            </div>\r\n+            <div>\r\n+                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}>Prev</button>\r\n+                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n+                    <button\r\n+                        key={idx}\r\n+                        onClick={() => setPage(idx + 1)}\r\n+                        style={{\r\n+                            margin: \"5px\",\r\n+                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n+                            color: page === idx + 1 ? \"white\" : \"black\",\r\n+                            border: \"1px solid black\",\r\n+                            borderRadius: \"8px\",\r\n+                            padding: \"10px\",\r\n+                        }}>\r\n+                        {idx + 1}\r\n+                    </button>\r\n+                ))}\r\n+                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}>Next</button>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+}\r\n"
                },
                {
                    "date": 1757313611123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,177 +9,8 @@\n     const [page, setPage] = useState(1);\r\n \r\n     useEffect(() => {\r\n         const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        if(Array.isArray(lcData)){\r\n-            setData(lcData);\r\n-        }\r\n-        else{\r\n-        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-            .then(res => res.json())\r\n-            .then(data => setData(data),\r\n-                localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n-            )\r\n-        }\r\n-    },[]);\r\n-\r\n-    const handleChange = (event) => {\r\n-        setForm({ ...form, [event.target.name]: event.target.value })\r\n-    };\r\n-    const handleSubmit = (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        if (editId) {\r\n-            fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n-                method: \"PUT\",\r\n-                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify({ ...form, id: editId })\r\n-            })\r\n-                // .then(res => {\r\n-                //     console.log(\"PUT called:\", res.status);\r\n-                //     return res.json();\r\n-                // })\r\n-                .then(res => res.json())\r\n-                .then(updated => {\r\n-                    const newData=data.map(data => (data.id === editId ? updated : data));\r\n-                    setData(newData)\r\n-                    setForm({ title: \"\", body: \"\" });\r\n-                    setEditId(null);\r\n-                    localStorage.setItem(\"cardData\", JSON.stringify(newData))\r\n-                })\r\n-        }\r\n-        else {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-                method: \"POST\",\r\n-                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify(form),\r\n-            })\r\n-                .then(res => res.json())\r\n-            // .then(res => {\r\n-            //     console.log(\"POST called:\", res.status)\r\n-            //     return res.json();\r\n-            // })\r\n-            const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n-            const newPost = { id: newId, title: form.title, body: form.body };\r\n-            const newData=[...data, newPost];\r\n-            setData(newData);\r\n-            const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n-            setPage(lastPage);\r\n-            setForm({ title: \"\", body: \"\" });\r\n-            localStorage.setItem(\"cardData\",JSON.stringify(newId));\r\n-        }\r\n-    };\r\n-    const indexOfLastPost = page * cardPerPage;\r\n-    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-    const handleDelete = async (id) => {\r\n-        try {\r\n-            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n-                method: \"DELETE\"\r\n-            });\r\n-            const updatedData = data.filter(post => post.id !== id);\r\n-            const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n-           if (page > lastPage) setPage(lastPage);\r\n-            localStorage.setItem(\"cardData\",JSON.stringify(updatedData))\r\n-            setData(updatedData);\r\n-\r\n-        } catch (err) {\r\n-            console.error(\"Delete failed:\", err);\r\n-        }\r\n-    };\r\n-\r\n-    // const handleDelete = (id) => {\r\n-    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-    //         method: \"DELETE\"\r\n-    //     })\r\n-    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n-    // };\r\n-\r\n-    return (\r\n-        <div className='container'>\r\n-            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n-\r\n-            {showForm &&\r\n-                <form onSubmit={handleSubmit} className='mb-4'>\r\n-                    <input type='text'\r\n-                        name='title'\r\n-                        placeholder='Enter title'\r\n-                        onChange={handleChange}\r\n-                        value={form.title}\r\n-                        className='form-control mb-2'\r\n-                        required />\r\n-                    <textarea\r\n-                        title='body'\r\n-                        placeholder='Enter Description'\r\n-                        value={form.body}\r\n-                        onChange={(e) => {\r\n-                            setForm({ ...form, body: e.target.value })\r\n-                        }}\r\n-                        className='form-control mb-2'\r\n-                        required />\r\n-\r\n-                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n-                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", body: \"\" }) }}>Reset</button>\r\n-                </form>\r\n-\r\n-            }\r\n-\r\n-            <div className='row'>\r\n-                {currentPosts.map((post,i) => (\r\n-                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n-                        <div className='card mb-4'>\r\n-                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n-                            <div className='card-body'>{post.body}</div>\r\n-                            <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n-                            <button onClick={() => {\r\n-                                setForm({ title: post.title, body: post.body });\r\n-                                setEditId(post.id);\r\n-                                setShowForm(true);\r\n-                            }}>Edit</button>\r\n-                        </div>\r\n-                    </div>\r\n-                ))}\r\n-            </div>\r\n-            <div>\r\n-                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}>Prev</button>\r\n-                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n-                    <button\r\n-                        key={idx}\r\n-                        onClick={() => setPage(idx + 1)}\r\n-                        style={{\r\n-                            margin: \"5px\",\r\n-                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n-                            color: page === idx + 1 ? \"white\" : \"black\",\r\n-                            border: \"1px solid black\",\r\n-                            borderRadius: \"8px\",\r\n-                            padding: \"10px\",\r\n-                        }}>\r\n-                        {idx + 1}\r\n-                    </button>\r\n-                ))}\r\n-                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}>Next</button>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-}\r\n-import React, { useState, useEffect } from 'react';\r\n-\r\n-export default function Crud() {\r\n-    const [showForm, setShowForm] = useState(false);\r\n-    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n-    const [editId, setEditId] = useState(null);\r\n-    const [data, setData] = useState([]);\r\n-    const cardPerPage = 10;\r\n-    const [page, setPage] = useState(1);\r\n-\r\n-    useEffect(() => {\r\n-        const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n         if(lcData){\r\n             setData(lcData);\r\n         }\r\n         else{\r\n"
                },
                {
                    "date": 1757313641008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     const [page, setPage] = useState(1);\r\n \r\n     useEffect(() => {\r\n         const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        if(lcData){\r\n+        if(lcData)){\r\n             setData(lcData);\r\n         }\r\n         else{\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n"
                },
                {
                    "date": 1757313666435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     const [page, setPage] = useState(1);\r\n \r\n     useEffect(() => {\r\n         const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        if(lcData)){\r\n+        if(lcData){\r\n             setData(lcData);\r\n         }\r\n         else{\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n"
                },
                {
                    "date": 1757313697832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     const [page, setPage] = useState(1);\r\n \r\n     useEffect(() => {\r\n         const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        if(lcData){\r\n+        if(Array.isArray(lcData)){\r\n             setData(lcData);\r\n         }\r\n         else{\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n"
                },
                {
                    "date": 1757313722896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,19 +8,19 @@\n     const cardPerPage = 10;\r\n     const [page, setPage] = useState(1);\r\n \r\n     useEffect(() => {\r\n-        const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        if(Array.isArray(lcData)){\r\n-            setData(lcData);\r\n-        }\r\n-        else{\r\n+        // const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n+        // if(Array.isArray(lcData)){\r\n+        //     setData(lcData);\r\n+        // }\r\n+        // else{\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data),\r\n                 localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n             )\r\n-        }\r\n+        \r\n     },[]);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n"
                },
                {
                    "date": 1757313734520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,19 +8,19 @@\n     const cardPerPage = 10;\r\n     const [page, setPage] = useState(1);\r\n \r\n     useEffect(() => {\r\n-        // const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        // if(Array.isArray(lcData)){\r\n-        //     setData(lcData);\r\n-        // }\r\n-        // else{\r\n+        const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n+        if(Array.isArray(lcData)){\r\n+            setData(lcData);\r\n+        }\r\n+        else{\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data),\r\n                 localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n             )\r\n-        \r\n+        }\r\n     },[]);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n"
                },
                {
                    "date": 1757313765316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,18 +9,18 @@\n     const [page, setPage] = useState(1);\r\n \r\n     useEffect(() => {\r\n         const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        if(Array.isArray(lcData)){\r\n-            setData(lcData);\r\n-        }\r\n-        else{\r\n+        // if(Array.isArray(lcData)){\r\n+        //     setData(lcData);\r\n+        // }\r\n+        // else{\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data),\r\n                 localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n             )\r\n-        }\r\n+        \r\n     },[]);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n"
                },
                {
                    "date": 1757313816127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,18 +9,18 @@\n     const [page, setPage] = useState(1);\r\n \r\n     useEffect(() => {\r\n         const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        // if(Array.isArray(lcData)){\r\n-        //     setData(lcData);\r\n-        // }\r\n-        // else{\r\n+        if(Array.isArray(lcData)){\r\n+            setData(lcData);\r\n+        }\r\n+        else{\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data),\r\n                 localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n             )\r\n-        \r\n+        }\r\n     },[]);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n"
                },
                {
                    "date": 1757313859856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,18 +9,18 @@\n     const [page, setPage] = useState(1);\r\n \r\n     useEffect(() => {\r\n         const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        if(Array.isArray(lcData)){\r\n-            setData(lcData);\r\n-        }\r\n-        else{\r\n+        // if(Array.isArray(lcData)){\r\n+        //     setData(lcData);\r\n+        // }\r\n+        // else{\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data),\r\n                 localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n             )\r\n-        }\r\n+        //}\r\n     },[]);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n"
                },
                {
                    "date": 1757313898300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,18 +9,18 @@\n     const [page, setPage] = useState(1);\r\n \r\n     useEffect(() => {\r\n         const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        // if(Array.isArray(lcData)){\r\n-        //     setData(lcData);\r\n-        // }\r\n-        // else{\r\n+        if(Array.isArray(lcData)){\r\n+            setData(lcData);\r\n+        }\r\n+        else{\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n             .then(data => setData(data),\r\n                 localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n             )\r\n-        //}\r\n+        }\r\n     },[]);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n"
                },
                {
                    "date": 1757313908753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     const [page, setPage] = useState(1);\r\n \r\n     useEffect(() => {\r\n         const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        if(Array.isArray(lcData)){\r\n+        if(lcData){\r\n             setData(lcData);\r\n         }\r\n         else{\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n"
                },
                {
                    "date": 1757314009606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,21 +7,38 @@\n     const [data, setData] = useState([]);\r\n     const cardPerPage = 10;\r\n     const [page, setPage] = useState(1);\r\n \r\n+    // useEffect(() => {\r\n+    //     const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n+    //     if(lcData){\r\n+    //         setData(lcData);\r\n+    //     }\r\n+    //     else{\r\n+    //     fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+    //         .then(res => res.json())\r\n+    //         .then(data => setData(data),\r\n+    //             localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n+    //         )\r\n+    //     }\r\n+    // },[]);\r\n     useEffect(() => {\r\n-        const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        if(lcData){\r\n+        const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n+\r\n+        if (Array.isArray(lcData) && lcData.length > 0) {\r\n+            // ✅ Use existing localStorage data\r\n             setData(lcData);\r\n+        } else {\r\n+            // ✅ First-time load: fetch from API and save\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+                .then(res => res.json())\r\n+                .then(apiData => {\r\n+                    setData(apiData);\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(apiData));\r\n+                })\r\n+                .catch(err => console.error(\"API fetch failed:\", err));\r\n         }\r\n-        else{\r\n-        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-            .then(res => res.json())\r\n-            .then(data => setData(data),\r\n-                localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n-            )\r\n-        }\r\n-    },[]);\r\n+    }, []);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n@@ -39,9 +56,9 @@\n                 //     return res.json();\r\n                 // })\r\n                 .then(res => res.json())\r\n                 .then(updated => {\r\n-                    const newData=data.map(data => (data.id === editId ? updated : data));\r\n+                    const newData = data.map(data => (data.id === editId ? updated : data));\r\n                     setData(newData)\r\n                     setForm({ title: \"\", body: \"\" });\r\n                     setEditId(null);\r\n                     localStorage.setItem(\"cardData\", JSON.stringify(newData))\r\n@@ -59,14 +76,14 @@\n             //     return res.json();\r\n             // })\r\n             const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n             const newPost = { id: newId, title: form.title, body: form.body };\r\n-            const newData=[...data, newPost];\r\n+            const newData = [...data, newPost];\r\n             setData(newData);\r\n             const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n             setPage(lastPage);\r\n             setForm({ title: \"\", body: \"\" });\r\n-            localStorage.setItem(\"cardData\",JSON.stringify(newId));\r\n+            localStorage.setItem(\"cardData\", JSON.stringify(newId));\r\n         }\r\n     };\r\n     const indexOfLastPost = page * cardPerPage;\r\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n@@ -77,10 +94,10 @@\n                 method: \"DELETE\"\r\n             });\r\n             const updatedData = data.filter(post => post.id !== id);\r\n             const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n-           if (page > lastPage) setPage(lastPage);\r\n-            localStorage.setItem(\"cardData\",JSON.stringify(updatedData))\r\n+            if (page > lastPage) setPage(lastPage);\r\n+            localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n             setData(updatedData);\r\n \r\n         } catch (err) {\r\n             console.error(\"Delete failed:\", err);\r\n@@ -123,9 +140,9 @@\n \r\n             }\r\n \r\n             <div className='row'>\r\n-                {currentPosts.map((post,i) => (\r\n+                {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <div className='card-body'>{post.body}</div>\r\n"
                },
                {
                    "date": 1757314095341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,39 +7,39 @@\n     const [data, setData] = useState([]);\r\n     const cardPerPage = 10;\r\n     const [page, setPage] = useState(1);\r\n \r\n-    // useEffect(() => {\r\n-    //     const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n-    //     if(lcData){\r\n-    //         setData(lcData);\r\n-    //     }\r\n-    //     else{\r\n-    //     fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-    //         .then(res => res.json())\r\n-    //         .then(data => setData(data),\r\n-    //             localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n-    //         )\r\n-    //     }\r\n-    // },[]);\r\n     useEffect(() => {\r\n-        const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n-\r\n-        if (Array.isArray(lcData) && lcData.length > 0) {\r\n-            // ✅ Use existing localStorage data\r\n+        const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n+        if(lcData){\r\n             setData(lcData);\r\n-        } else {\r\n-            // ✅ First-time load: fetch from API and save\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-                .then(res => res.json())\r\n-                .then(apiData => {\r\n-                    setData(apiData);\r\n-                    localStorage.setItem(\"cardData\", JSON.stringify(apiData));\r\n-                })\r\n-                .catch(err => console.error(\"API fetch failed:\", err));\r\n         }\r\n-    }, []);\r\n+        else{\r\n+        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+            .then(res => res.json())\r\n+            .then(data => setData(data);\r\n+                localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n+            )\r\n+        }\r\n+    },[]);\r\n+// useEffect(() => {\r\n+//   const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n \r\n+//   if (Array.isArray(lcData) && lcData.length > 0) {\r\n+//     // ✅ Use existing localStorage data\r\n+//     setData(lcData);\r\n+//   } else {\r\n+//     // ✅ First-time load: fetch from API and save\r\n+//     fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+//       .then(res => res.json())\r\n+//       .then(apiData => {\r\n+//         setData(apiData);\r\n+//         localStorage.setItem(\"cardData\", JSON.stringify(apiData));\r\n+//       })\r\n+//       .catch(err => console.error(\"API fetch failed:\", err));\r\n+//   }\r\n+// }, []);\r\n+\r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n     const handleSubmit = (e) => {\r\n@@ -56,9 +56,9 @@\n                 //     return res.json();\r\n                 // })\r\n                 .then(res => res.json())\r\n                 .then(updated => {\r\n-                    const newData = data.map(data => (data.id === editId ? updated : data));\r\n+                    const newData=data.map(data => (data.id === editId ? updated : data));\r\n                     setData(newData)\r\n                     setForm({ title: \"\", body: \"\" });\r\n                     setEditId(null);\r\n                     localStorage.setItem(\"cardData\", JSON.stringify(newData))\r\n@@ -76,14 +76,14 @@\n             //     return res.json();\r\n             // })\r\n             const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n             const newPost = { id: newId, title: form.title, body: form.body };\r\n-            const newData = [...data, newPost];\r\n+            const newData=[...data, newPost];\r\n             setData(newData);\r\n             const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n             setPage(lastPage);\r\n             setForm({ title: \"\", body: \"\" });\r\n-            localStorage.setItem(\"cardData\", JSON.stringify(newId));\r\n+            localStorage.setItem(\"cardData\",JSON.stringify(newId));\r\n         }\r\n     };\r\n     const indexOfLastPost = page * cardPerPage;\r\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n@@ -94,10 +94,10 @@\n                 method: \"DELETE\"\r\n             });\r\n             const updatedData = data.filter(post => post.id !== id);\r\n             const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n-            if (page > lastPage) setPage(lastPage);\r\n-            localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n+           if (page > lastPage) setPage(lastPage);\r\n+            localStorage.setItem(\"cardData\",JSON.stringify(updatedData))\r\n             setData(updatedData);\r\n \r\n         } catch (err) {\r\n             console.error(\"Delete failed:\", err);\r\n@@ -140,9 +140,9 @@\n \r\n             }\r\n \r\n             <div className='row'>\r\n-                {currentPosts.map((post, i) => (\r\n+                {currentPosts.map((post,i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <div className='card-body'>{post.body}</div>\r\n"
                },
                {
                    "date": 1757314127877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,10 +15,10 @@\n         }\r\n         else{\r\n         fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n             .then(res => res.json())\r\n-            .then(data => setData(data);\r\n-                localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n+            .then(data => {setData(data);\r\n+                localStorage.setItem(\"cardData\", JSON.stringify(data))}\r\n             )\r\n         }\r\n     },[]);\r\n // useEffect(() => {\r\n"
                },
                {
                    "date": 1757314146782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,26 +20,9 @@\n                 localStorage.setItem(\"cardData\", JSON.stringify(data))}\r\n             )\r\n         }\r\n     },[]);\r\n-// useEffect(() => {\r\n-//   const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n-\r\n-//   if (Array.isArray(lcData) && lcData.length > 0) {\r\n-//     // ✅ Use existing localStorage data\r\n-//     setData(lcData);\r\n-//   } else {\r\n-//     // ✅ First-time load: fetch from API and save\r\n-//     fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-//       .then(res => res.json())\r\n-//       .then(apiData => {\r\n-//         setData(apiData);\r\n-//         localStorage.setItem(\"cardData\", JSON.stringify(apiData));\r\n-//       })\r\n-//       .catch(err => console.error(\"API fetch failed:\", err));\r\n-//   }\r\n-// }, []);\r\n-\r\n+    \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n     const handleSubmit = (e) => {\r\n"
                },
                {
                    "date": 1757314286030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import React, { useState, useEffect } from 'react';\r\n+import './App.css'\r\n \r\n export default function Crud() {\r\n     const [showForm, setShowForm] = useState(false);\r\n     const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n@@ -20,9 +21,9 @@\n                 localStorage.setItem(\"cardData\", JSON.stringify(data))}\r\n             )\r\n         }\r\n     },[]);\r\n-    \r\n+\r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n     const handleSubmit = (e) => {\r\n"
                },
                {
                    "date": 1757314296060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useState, useEffect } from 'react';\r\n-import './App.css'\r\n+import '../App.css'\r\n \r\n export default function Crud() {\r\n     const [showForm, setShowForm] = useState(false);\r\n     const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n"
                },
                {
                    "date": 1757314347701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,14 +129,16 @@\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <div className='card-body'>{post.body}</div>\r\n+                            <div className='d-flex flex-row'>\r\n                             <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n                             <button onClick={() => {\r\n                                 setForm({ title: post.title, body: post.body });\r\n                                 setEditId(post.id);\r\n                                 setShowForm(true);\r\n                             }}>Edit</button>\r\n+                            </div>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n"
                },
                {
                    "date": 1757314485832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,9 @@\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <div className='card-body'>{post.body}</div>\r\n                             <div className='d-flex flex-row'>\r\n-                            <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n+                            <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n                             <button onClick={() => {\r\n                                 setForm({ title: post.title, body: post.body });\r\n                                 setEditId(post.id);\r\n                                 setShowForm(true);\r\n"
                },
                {
                    "date": 1757314502573,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,9 @@\n                             <button onClick={() => {\r\n                                 setForm({ title: post.title, body: post.body });\r\n                                 setEditId(post.id);\r\n                                 setShowForm(true);\r\n-                            }}>Edit</button>\r\n+                            }} className='btn btn-warning'>Edit</button>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n"
                },
                {
                    "date": 1757314546953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,8 +128,9 @@\n                 {currentPosts.map((post,i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n+                            <hr>\r\n                             <div className='card-body'>{post.body}</div>\r\n                             <div className='d-flex flex-row'>\r\n                             <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n                             <button onClick={() => {\r\n"
                },
                {
                    "date": 1757315515684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,9 +128,9 @@\n                 {currentPosts.map((post,i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n-                            <hr>\r\n+                            <hr></hr>\r\n                             <div className='card-body'>{post.body}</div>\r\n                             <div className='d-flex flex-row'>\r\n                             <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n                             <button onClick={() => {\r\n@@ -143,9 +143,13 @@\n                     </div>\r\n                 ))}\r\n             </div>\r\n             <div>\r\n-                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}>Prev</button>\r\n+                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}\r\n+                    style={{\r\n+                        padding:'5px',\r\n+                        border-radiud:\"8px\"\r\n+                    }}>Prev</button>\r\n                 {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n                     <button\r\n                         key={idx}\r\n                         onClick={() => setPage(idx + 1)}\r\n"
                },
                {
                    "date": 1757315523353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,9 +146,9 @@\n             <div>\r\n                 <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}\r\n                     style={{\r\n                         padding:'5px',\r\n-                        border-radiud:\"8px\"\r\n+                        border-radiud:\"8px\",\r\n                     }}>Prev</button>\r\n                 {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n                     <button\r\n                         key={idx}\r\n"
                },
                {
                    "date": 1757315528869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,9 +146,9 @@\n             <div>\r\n                 <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}\r\n                     style={{\r\n                         padding:'5px',\r\n-                        border-radiud:\"8px\",\r\n+                        border-radius:\"8px\",\r\n                     }}>Prev</button>\r\n                 {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n                     <button\r\n                         key={idx}\r\n"
                },
                {
                    "date": 1757315536004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,9 +146,9 @@\n             <div>\r\n                 <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}\r\n                     style={{\r\n                         padding:'5px',\r\n-                        border-radius:\"8px\",\r\n+                        borderRadius:\"8px\",\r\n                     }}>Prev</button>\r\n                 {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n                     <button\r\n                         key={idx}\r\n"
                },
                {
                    "date": 1757315583707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -147,9 +147,11 @@\n                 <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}\r\n                     style={{\r\n                         padding:'5px',\r\n                         borderRadius:\"8px\",\r\n-                    }}>Prev</button>\r\n+                        border:\"none\"\r\n+                    }}\r\n+                    >Prev</button>\r\n                 {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n                     <button\r\n                         key={idx}\r\n                         onClick={() => setPage(idx + 1)}\r\n"
                },
                {
                    "date": 1757315598337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,20 +9,22 @@\n     const cardPerPage = 10;\r\n     const [page, setPage] = useState(1);\r\n \r\n     useEffect(() => {\r\n-        const lcData=JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        if(lcData){\r\n+        const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n+        if (lcData) {\r\n             setData(lcData);\r\n         }\r\n-        else{\r\n-        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-            .then(res => res.json())\r\n-            .then(data => {setData(data);\r\n-                localStorage.setItem(\"cardData\", JSON.stringify(data))}\r\n-            )\r\n+        else {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+                .then(res => res.json())\r\n+                .then(data => {\r\n+                    setData(data);\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n+                }\r\n+                )\r\n         }\r\n-    },[]);\r\n+    }, []);\r\n \r\n     const handleChange = (event) => {\r\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n@@ -40,9 +42,9 @@\n                 //     return res.json();\r\n                 // })\r\n                 .then(res => res.json())\r\n                 .then(updated => {\r\n-                    const newData=data.map(data => (data.id === editId ? updated : data));\r\n+                    const newData = data.map(data => (data.id === editId ? updated : data));\r\n                     setData(newData)\r\n                     setForm({ title: \"\", body: \"\" });\r\n                     setEditId(null);\r\n                     localStorage.setItem(\"cardData\", JSON.stringify(newData))\r\n@@ -60,14 +62,14 @@\n             //     return res.json();\r\n             // })\r\n             const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n             const newPost = { id: newId, title: form.title, body: form.body };\r\n-            const newData=[...data, newPost];\r\n+            const newData = [...data, newPost];\r\n             setData(newData);\r\n             const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n             setPage(lastPage);\r\n             setForm({ title: \"\", body: \"\" });\r\n-            localStorage.setItem(\"cardData\",JSON.stringify(newId));\r\n+            localStorage.setItem(\"cardData\", JSON.stringify(newId));\r\n         }\r\n     };\r\n     const indexOfLastPost = page * cardPerPage;\r\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n@@ -78,10 +80,10 @@\n                 method: \"DELETE\"\r\n             });\r\n             const updatedData = data.filter(post => post.id !== id);\r\n             const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n-           if (page > lastPage) setPage(lastPage);\r\n-            localStorage.setItem(\"cardData\",JSON.stringify(updatedData))\r\n+            if (page > lastPage) setPage(lastPage);\r\n+            localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n             setData(updatedData);\r\n \r\n         } catch (err) {\r\n             console.error(\"Delete failed:\", err);\r\n@@ -124,34 +126,34 @@\n \r\n             }\r\n \r\n             <div className='row'>\r\n-                {currentPosts.map((post,i) => (\r\n+                {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body'>{post.body}</div>\r\n                             <div className='d-flex flex-row'>\r\n-                            <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n-                            <button onClick={() => {\r\n-                                setForm({ title: post.title, body: post.body });\r\n-                                setEditId(post.id);\r\n-                                setShowForm(true);\r\n-                            }} className='btn btn-warning'>Edit</button>\r\n+                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n+                                <button onClick={() => {\r\n+                                    setForm({ title: post.title, body: post.body });\r\n+                                    setEditId(post.id);\r\n+                                    setShowForm(true);\r\n+                                }} className='btn btn-warning'>Edit</button>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n             <div>\r\n                 <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}\r\n                     style={{\r\n-                        padding:'5px',\r\n-                        borderRadius:\"8px\",\r\n-                        border:\"none\"\r\n+                        padding: '5px',\r\n+                        borderRadius: \"8px\",\r\n+                        border: \"none\"\r\n                     }}\r\n-                    >Prev</button>\r\n+                >Prev</button>\r\n                 {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n                     <button\r\n                         key={idx}\r\n                         onClick={() => setPage(idx + 1)}\r\n@@ -165,9 +167,14 @@\n                         }}>\r\n                         {idx + 1}\r\n                     </button>\r\n                 ))}\r\n-                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}>Next</button>\r\n+                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}\r\n+                    style={{\r\n+                        padding: '5px',\r\n+                        borderRadius: \"8px\",\r\n+                        border: \"none\"\r\n+                    }}>Next</button>\r\n             </div>\r\n         </div>\r\n     )\r\n \r\n"
                },
                {
                    "date": 1757315878645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         }\r\n     };\r\n     const indexOfLastPost = page * cardPerPage;\r\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+    const currentPosts = Array.isArray(data).slice(indexOfFirstPost, indexOfLastPost);\r\n     const handleDelete = async (id) => {\r\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n"
                },
                {
                    "date": 1757315891530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         }\r\n     };\r\n     const indexOfLastPost = page * cardPerPage;\r\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-    const currentPosts = Array.isArray(data).slice(indexOfFirstPost, indexOfLastPost);\r\n+    const currentPosts = Array.isArray(data.slice(indexOfFirstPost, indexOfLastPost));\r\n     const handleDelete = async (id) => {\r\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n"
                },
                {
                    "date": 1757315924006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,9 +126,9 @@\n \r\n             }\r\n \r\n             <div className='row'>\r\n-                {currentPosts.map((post, i) => (\r\n+                {Array.isArray(currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <hr></hr>\r\n@@ -142,9 +142,9 @@\n                                 }} className='btn btn-warning'>Edit</button>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n-                ))}\r\n+                )))}\r\n             </div>\r\n             <div>\r\n                 <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}\r\n                     style={{\r\n"
                },
                {
                    "date": 1757315961611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,186 @@\n+import React, { useState, useEffect } from 'react';\r\n+import '../App.css'\r\n+\r\n+export default function Crud() {\r\n+    const [showForm, setShowForm] = useState(false);\r\n+    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n+    const [editId, setEditId] = useState(null);\r\n+    const [data, setData] = useState([]);\r\n+    const cardPerPage = 10;\r\n+    const [page, setPage] = useState(1);\r\n+\r\n+    useEffect(() => {\r\n+        const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n+        if (lcData) {\r\n+            setData(lcData);\r\n+        }\r\n+        else {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+                .then(res => res.json())\r\n+                .then(data => {\r\n+                    setData(data);\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n+                }\r\n+                )\r\n+        }\r\n+    }, []);\r\n+\r\n+    const handleChange = (event) => {\r\n+        setForm({ ...form, [event.target.name]: event.target.value })\r\n+    };\r\n+    const handleSubmit = (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        if (editId) {\r\n+            fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n+                method: \"PUT\",\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify({ ...form, id: editId })\r\n+            })\r\n+                // .then(res => {\r\n+                //     console.log(\"PUT called:\", res.status);\r\n+                //     return res.json();\r\n+                // })\r\n+                .then(res => res.json())\r\n+                .then(updated => {\r\n+                    const newData = data.map(data => (data.id === editId ? updated : data));\r\n+                    setData(newData)\r\n+                    setForm({ title: \"\", body: \"\" });\r\n+                    setEditId(null);\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(newData))\r\n+                })\r\n+        }\r\n+        else {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+                method: \"POST\",\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify(form),\r\n+            })\r\n+                .then(res => res.json())\r\n+            // .then(res => {\r\n+            //     console.log(\"POST called:\", res.status)\r\n+            //     return res.json();\r\n+            // })\r\n+            const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n+            const newPost = { id: newId, title: form.title, body: form.body };\r\n+            const newData = [...data, newPost];\r\n+            setData(newData);\r\n+            const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n+            setPage(lastPage);\r\n+            setForm({ title: \"\", body: \"\" });\r\n+            localStorage.setItem(\"cardData\", JSON.stringify(newId));\r\n+        }\r\n+    };\r\n+    const indexOfLastPost = page * cardPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+    const currentPosts = Array.isArray(data.slice(indexOfFirstPost, indexOfLastPost));\r\n+    const handleDelete = async (id) => {\r\n+        try {\r\n+            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n+                method: \"DELETE\"\r\n+            });\r\n+            const updatedData = data.filter(post => post.id !== id);\r\n+            const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n+            if (page > lastPage) setPage(lastPage);\r\n+            localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n+            setData(updatedData);\r\n+\r\n+        } catch (err) {\r\n+            console.error(\"Delete failed:\", err);\r\n+        }\r\n+    };\r\n+\r\n+    // const handleDelete = (id) => {\r\n+    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+    //         method: \"DELETE\"\r\n+    //     })\r\n+    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n+    // };\r\n+\r\n+    return (\r\n+        <div className='container'>\r\n+            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+\r\n+            {showForm &&\r\n+                <form onSubmit={handleSubmit} className='mb-4'>\r\n+                    <input type='text'\r\n+                        name='title'\r\n+                        placeholder='Enter title'\r\n+                        onChange={handleChange}\r\n+                        value={form.title}\r\n+                        className='form-control mb-2'\r\n+                        required />\r\n+                    <textarea\r\n+                        title='body'\r\n+                        placeholder='Enter Description'\r\n+                        value={form.body}\r\n+                        onChange={(e) => {\r\n+                            setForm({ ...form, body: e.target.value })\r\n+                        }}\r\n+                        className='form-control mb-2'\r\n+                        required />\r\n+\r\n+                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n+                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", body: \"\" }) }}>Reset</button>\r\n+                </form>\r\n+\r\n+            }\r\n+\r\n+            <div className='row'>\r\n+                {Array.isArray(currentPosts.map((post, i) => (\r\n+                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n+                        <div className='card mb-4'>\r\n+                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n+                            <hr></hr>\r\n+                            <div className='card-body'>{post.body}</div>\r\n+                            <div className='d-flex flex-row'>\r\n+                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n+                                <button onClick={() => {\r\n+                                    setForm({ title: post.title, body: post.body });\r\n+                                    setEditId(post.id);\r\n+                                    setShowForm(true);\r\n+                                }} className='btn btn-warning'>Edit</button>\r\n+                            </div>\r\n+                        </div>\r\n+                    </div>\r\n+                )))}\r\n+            </div>\r\n+            <div>\r\n+                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}\r\n+                    style={{\r\n+                        padding: '5px',\r\n+                        borderRadius: \"8px\",\r\n+                        border: \"none\"\r\n+                    }}\r\n+                >Prev</button>\r\n+                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n+                    <button\r\n+                        key={idx}\r\n+                        onClick={() => setPage(idx + 1)}\r\n+                        style={{\r\n+                            margin: \"5px\",\r\n+                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n+                            color: page === idx + 1 ? \"white\" : \"black\",\r\n+                            border: \"1px solid black\",\r\n+                            borderRadius: \"8px\",\r\n+                            padding: \"10px\",\r\n+                        }}>\r\n+                        {idx + 1}\r\n+                    </button>\r\n+                ))}\r\n+                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}\r\n+                    style={{\r\n+                        padding: '5px',\r\n+                        borderRadius: \"8px\",\r\n+                        border: \"none\"\r\n+                    }}>Next</button>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+}\r\n"
                },
                {
                    "date": 1757315992030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,9 +126,9 @@\n \r\n             }\r\n \r\n             <div className='row'>\r\n-                {Array.isArray(currentPosts.map((post, i) => (\r\n+                {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <hr></hr>\r\n@@ -142,9 +142,9 @@\n                                 }} className='btn btn-warning'>Edit</button>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n-                )))}\r\n+                ))}\r\n             </div>\r\n             <div>\r\n                 <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}\r\n                     style={{\r\n"
                },
                {
                    "date": 1757316060008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,8 +126,10 @@\n \r\n             }\r\n \r\n             <div className='row'>\r\n+                console.log(typeof(currentPosts));\r\n+                console.log(typeof(Array.isArray(currentPosts)))\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n@@ -183,190 +185,4 @@\n \r\n \r\n \r\n }\r\n-import React, { useState, useEffect } from 'react';\r\n-import '../App.css'\r\n-\r\n-export default function Crud() {\r\n-    const [showForm, setShowForm] = useState(false);\r\n-    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n-    const [editId, setEditId] = useState(null);\r\n-    const [data, setData] = useState([]);\r\n-    const cardPerPage = 10;\r\n-    const [page, setPage] = useState(1);\r\n-\r\n-    useEffect(() => {\r\n-        const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        if (lcData) {\r\n-            setData(lcData);\r\n-        }\r\n-        else {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-                .then(res => res.json())\r\n-                .then(data => {\r\n-                    setData(data);\r\n-                    localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n-                }\r\n-                )\r\n-        }\r\n-    }, []);\r\n-\r\n-    const handleChange = (event) => {\r\n-        setForm({ ...form, [event.target.name]: event.target.value })\r\n-    };\r\n-    const handleSubmit = (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        if (editId) {\r\n-            fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n-                method: \"PUT\",\r\n-                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify({ ...form, id: editId })\r\n-            })\r\n-                // .then(res => {\r\n-                //     console.log(\"PUT called:\", res.status);\r\n-                //     return res.json();\r\n-                // })\r\n-                .then(res => res.json())\r\n-                .then(updated => {\r\n-                    const newData = data.map(data => (data.id === editId ? updated : data));\r\n-                    setData(newData)\r\n-                    setForm({ title: \"\", body: \"\" });\r\n-                    setEditId(null);\r\n-                    localStorage.setItem(\"cardData\", JSON.stringify(newData))\r\n-                })\r\n-        }\r\n-        else {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-                method: \"POST\",\r\n-                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify(form),\r\n-            })\r\n-                .then(res => res.json())\r\n-            // .then(res => {\r\n-            //     console.log(\"POST called:\", res.status)\r\n-            //     return res.json();\r\n-            // })\r\n-            const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n-            const newPost = { id: newId, title: form.title, body: form.body };\r\n-            const newData = [...data, newPost];\r\n-            setData(newData);\r\n-            const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n-            setPage(lastPage);\r\n-            setForm({ title: \"\", body: \"\" });\r\n-            localStorage.setItem(\"cardData\", JSON.stringify(newId));\r\n-        }\r\n-    };\r\n-    const indexOfLastPost = page * cardPerPage;\r\n-    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-    const currentPosts = Array.isArray(data.slice(indexOfFirstPost, indexOfLastPost));\r\n-    const handleDelete = async (id) => {\r\n-        try {\r\n-            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n-                method: \"DELETE\"\r\n-            });\r\n-            const updatedData = data.filter(post => post.id !== id);\r\n-            const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n-            if (page > lastPage) setPage(lastPage);\r\n-            localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n-            setData(updatedData);\r\n-\r\n-        } catch (err) {\r\n-            console.error(\"Delete failed:\", err);\r\n-        }\r\n-    };\r\n-\r\n-    // const handleDelete = (id) => {\r\n-    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-    //         method: \"DELETE\"\r\n-    //     })\r\n-    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n-    // };\r\n-\r\n-    return (\r\n-        <div className='container'>\r\n-            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n-\r\n-            {showForm &&\r\n-                <form onSubmit={handleSubmit} className='mb-4'>\r\n-                    <input type='text'\r\n-                        name='title'\r\n-                        placeholder='Enter title'\r\n-                        onChange={handleChange}\r\n-                        value={form.title}\r\n-                        className='form-control mb-2'\r\n-                        required />\r\n-                    <textarea\r\n-                        title='body'\r\n-                        placeholder='Enter Description'\r\n-                        value={form.body}\r\n-                        onChange={(e) => {\r\n-                            setForm({ ...form, body: e.target.value })\r\n-                        }}\r\n-                        className='form-control mb-2'\r\n-                        required />\r\n-\r\n-                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n-                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", body: \"\" }) }}>Reset</button>\r\n-                </form>\r\n-\r\n-            }\r\n-\r\n-            <div className='row'>\r\n-                {Array.isArray(currentPosts.map((post, i) => (\r\n-                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n-                        <div className='card mb-4'>\r\n-                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n-                            <hr></hr>\r\n-                            <div className='card-body'>{post.body}</div>\r\n-                            <div className='d-flex flex-row'>\r\n-                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n-                                <button onClick={() => {\r\n-                                    setForm({ title: post.title, body: post.body });\r\n-                                    setEditId(post.id);\r\n-                                    setShowForm(true);\r\n-                                }} className='btn btn-warning'>Edit</button>\r\n-                            </div>\r\n-                        </div>\r\n-                    </div>\r\n-                )))}\r\n-            </div>\r\n-            <div>\r\n-                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}\r\n-                    style={{\r\n-                        padding: '5px',\r\n-                        borderRadius: \"8px\",\r\n-                        border: \"none\"\r\n-                    }}\r\n-                >Prev</button>\r\n-                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n-                    <button\r\n-                        key={idx}\r\n-                        onClick={() => setPage(idx + 1)}\r\n-                        style={{\r\n-                            margin: \"5px\",\r\n-                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n-                            color: page === idx + 1 ? \"white\" : \"black\",\r\n-                            border: \"1px solid black\",\r\n-                            borderRadius: \"8px\",\r\n-                            padding: \"10px\",\r\n-                        }}>\r\n-                        {idx + 1}\r\n-                    </button>\r\n-                ))}\r\n-                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}\r\n-                    style={{\r\n-                        padding: '5px',\r\n-                        borderRadius: \"8px\",\r\n-                        border: \"none\"\r\n-                    }}>Next</button>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-}\r\n"
                },
                {
                    "date": 1757316076489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,11 +125,13 @@\n                 </form>\r\n \r\n             }\r\n \r\n-            <div className='row'>\r\n+            \r\n                 console.log(typeof(currentPosts));\r\n                 console.log(typeof(Array.isArray(currentPosts)))\r\n+\r\n+            <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n"
                },
                {
                    "date": 1757316095401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,8 +73,11 @@\n     };\r\n     const indexOfLastPost = page * cardPerPage;\r\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n     const currentPosts = Array.isArray(data.slice(indexOfFirstPost, indexOfLastPost));\r\n+    \r\n+                console.log(typeof(currentPosts));\r\n+                console.log(typeof(Array.isArray(currentPosts)))\r\n     const handleDelete = async (id) => {\r\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n@@ -125,12 +128,8 @@\n                 </form>\r\n \r\n             }\r\n \r\n-            \r\n-                console.log(typeof(currentPosts));\r\n-                console.log(typeof(Array.isArray(currentPosts)))\r\n-\r\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n                         <div className='card mb-4'>\r\n"
                },
                {
                    "date": 1757316103699,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,8 @@\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n     const currentPosts = Array.isArray(data.slice(indexOfFirstPost, indexOfLastPost));\r\n     \r\n                 console.log(typeof(currentPosts));\r\n-                console.log(typeof(Array.isArray(currentPosts)))\r\n     const handleDelete = async (id) => {\r\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n"
                },
                {
                    "date": 1757316115759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,186 @@\n+import React, { useState, useEffect } from 'react';\r\n+import '../App.css'\r\n+\r\n+export default function Crud() {\r\n+    const [showForm, setShowForm] = useState(false);\r\n+    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n+    const [editId, setEditId] = useState(null);\r\n+    const [data, setData] = useState([]);\r\n+    const cardPerPage = 10;\r\n+    const [page, setPage] = useState(1);\r\n+\r\n+    useEffect(() => {\r\n+        const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n+        if (lcData) {\r\n+            setData(lcData);\r\n+        }\r\n+        else {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+                .then(res => res.json())\r\n+                .then(data => {\r\n+                    setData(data);\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n+                }\r\n+                )\r\n+        }\r\n+    }, []);\r\n+\r\n+    const handleChange = (event) => {\r\n+        setForm({ ...form, [event.target.name]: event.target.value })\r\n+    };\r\n+    const handleSubmit = (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        if (editId) {\r\n+            fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n+                method: \"PUT\",\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify({ ...form, id: editId })\r\n+            })\r\n+                // .then(res => {\r\n+                //     console.log(\"PUT called:\", res.status);\r\n+                //     return res.json();\r\n+                // })\r\n+                .then(res => res.json())\r\n+                .then(updated => {\r\n+                    const newData = data.map(data => (data.id === editId ? updated : data));\r\n+                    setData(newData)\r\n+                    setForm({ title: \"\", body: \"\" });\r\n+                    setEditId(null);\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(newData))\r\n+                })\r\n+        }\r\n+        else {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+                method: \"POST\",\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify(form),\r\n+            })\r\n+                .then(res => res.json())\r\n+            // .then(res => {\r\n+            //     console.log(\"POST called:\", res.status)\r\n+            //     return res.json();\r\n+            // })\r\n+            const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n+            const newPost = { id: newId, title: form.title, body: form.body };\r\n+            const newData = [...data, newPost];\r\n+            setData(newData);\r\n+            const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n+            setPage(lastPage);\r\n+            setForm({ title: \"\", body: \"\" });\r\n+            localStorage.setItem(\"cardData\", JSON.stringify(newId));\r\n+        }\r\n+    };\r\n+    const indexOfLastPost = page * cardPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+    const currentPosts = Array.isArray(data.slice(indexOfFirstPost, indexOfLastPost));\r\n+    const handleDelete = async (id) => {\r\n+        try {\r\n+            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n+                method: \"DELETE\"\r\n+            });\r\n+            const updatedData = data.filter(post => post.id !== id);\r\n+            const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n+            if (page > lastPage) setPage(lastPage);\r\n+            localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n+            setData(updatedData);\r\n+\r\n+        } catch (err) {\r\n+            console.error(\"Delete failed:\", err);\r\n+        }\r\n+    };\r\n+\r\n+    // const handleDelete = (id) => {\r\n+    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+    //         method: \"DELETE\"\r\n+    //     })\r\n+    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n+    // };\r\n+\r\n+    return (\r\n+        <div className='container'>\r\n+            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+\r\n+            {showForm &&\r\n+                <form onSubmit={handleSubmit} className='mb-4'>\r\n+                    <input type='text'\r\n+                        name='title'\r\n+                        placeholder='Enter title'\r\n+                        onChange={handleChange}\r\n+                        value={form.title}\r\n+                        className='form-control mb-2'\r\n+                        required />\r\n+                    <textarea\r\n+                        title='body'\r\n+                        placeholder='Enter Description'\r\n+                        value={form.body}\r\n+                        onChange={(e) => {\r\n+                            setForm({ ...form, body: e.target.value })\r\n+                        }}\r\n+                        className='form-control mb-2'\r\n+                        required />\r\n+\r\n+                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n+                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", body: \"\" }) }}>Reset</button>\r\n+                </form>\r\n+\r\n+            }\r\n+\r\n+            <div className='row'>\r\n+                {currentPosts.map((post, i) => (\r\n+                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n+                        <div className='card mb-4'>\r\n+                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n+                            <hr></hr>\r\n+                            <div className='card-body'>{post.body}</div>\r\n+                            <div className='d-flex flex-row'>\r\n+                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n+                                <button onClick={() => {\r\n+                                    setForm({ title: post.title, body: post.body });\r\n+                                    setEditId(post.id);\r\n+                                    setShowForm(true);\r\n+                                }} className='btn btn-warning'>Edit</button>\r\n+                            </div>\r\n+                        </div>\r\n+                    </div>\r\n+                ))}\r\n+            </div>\r\n+            <div>\r\n+                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}\r\n+                    style={{\r\n+                        padding: '5px',\r\n+                        borderRadius: \"8px\",\r\n+                        border: \"none\"\r\n+                    }}\r\n+                >Prev</button>\r\n+                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n+                    <button\r\n+                        key={idx}\r\n+                        onClick={() => setPage(idx + 1)}\r\n+                        style={{\r\n+                            margin: \"5px\",\r\n+                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n+                            color: page === idx + 1 ? \"white\" : \"black\",\r\n+                            border: \"1px solid black\",\r\n+                            borderRadius: \"8px\",\r\n+                            padding: \"10px\",\r\n+                        }}>\r\n+                        {idx + 1}\r\n+                    </button>\r\n+                ))}\r\n+                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}\r\n+                    style={{\r\n+                        padding: '5px',\r\n+                        borderRadius: \"8px\",\r\n+                        border: \"none\"\r\n+                    }}>Next</button>\r\n+            </div>\r\n+        </div>\r\n+    )\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+}\r\n"
                },
                {
                    "date": 1757316122152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         }\r\n     };\r\n     const indexOfLastPost = page * cardPerPage;\r\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-    const currentPosts = Array.isArray(data.slice(indexOfFirstPost, indexOfLastPost));\r\n+    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n     const handleDelete = async (id) => {\r\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n@@ -183,192 +183,4 @@\n \r\n \r\n \r\n }\r\n-import React, { useState, useEffect } from 'react';\r\n-import '../App.css'\r\n-\r\n-export default function Crud() {\r\n-    const [showForm, setShowForm] = useState(false);\r\n-    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n-    const [editId, setEditId] = useState(null);\r\n-    const [data, setData] = useState([]);\r\n-    const cardPerPage = 10;\r\n-    const [page, setPage] = useState(1);\r\n-\r\n-    useEffect(() => {\r\n-        const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        if (lcData) {\r\n-            setData(lcData);\r\n-        }\r\n-        else {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-                .then(res => res.json())\r\n-                .then(data => {\r\n-                    setData(data);\r\n-                    localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n-                }\r\n-                )\r\n-        }\r\n-    }, []);\r\n-\r\n-    const handleChange = (event) => {\r\n-        setForm({ ...form, [event.target.name]: event.target.value })\r\n-    };\r\n-    const handleSubmit = (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        if (editId) {\r\n-            fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n-                method: \"PUT\",\r\n-                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify({ ...form, id: editId })\r\n-            })\r\n-                // .then(res => {\r\n-                //     console.log(\"PUT called:\", res.status);\r\n-                //     return res.json();\r\n-                // })\r\n-                .then(res => res.json())\r\n-                .then(updated => {\r\n-                    const newData = data.map(data => (data.id === editId ? updated : data));\r\n-                    setData(newData)\r\n-                    setForm({ title: \"\", body: \"\" });\r\n-                    setEditId(null);\r\n-                    localStorage.setItem(\"cardData\", JSON.stringify(newData))\r\n-                })\r\n-        }\r\n-        else {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-                method: \"POST\",\r\n-                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify(form),\r\n-            })\r\n-                .then(res => res.json())\r\n-            // .then(res => {\r\n-            //     console.log(\"POST called:\", res.status)\r\n-            //     return res.json();\r\n-            // })\r\n-            const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n-            const newPost = { id: newId, title: form.title, body: form.body };\r\n-            const newData = [...data, newPost];\r\n-            setData(newData);\r\n-            const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n-            setPage(lastPage);\r\n-            setForm({ title: \"\", body: \"\" });\r\n-            localStorage.setItem(\"cardData\", JSON.stringify(newId));\r\n-        }\r\n-    };\r\n-    const indexOfLastPost = page * cardPerPage;\r\n-    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-    const currentPosts = Array.isArray(data.slice(indexOfFirstPost, indexOfLastPost));\r\n-    \r\n-                console.log(typeof(currentPosts));\r\n-    const handleDelete = async (id) => {\r\n-        try {\r\n-            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n-                method: \"DELETE\"\r\n-            });\r\n-            const updatedData = data.filter(post => post.id !== id);\r\n-            const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n-            if (page > lastPage) setPage(lastPage);\r\n-            localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n-            setData(updatedData);\r\n-\r\n-        } catch (err) {\r\n-            console.error(\"Delete failed:\", err);\r\n-        }\r\n-    };\r\n-\r\n-    // const handleDelete = (id) => {\r\n-    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-    //         method: \"DELETE\"\r\n-    //     })\r\n-    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n-    // };\r\n-\r\n-    return (\r\n-        <div className='container'>\r\n-            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n-\r\n-            {showForm &&\r\n-                <form onSubmit={handleSubmit} className='mb-4'>\r\n-                    <input type='text'\r\n-                        name='title'\r\n-                        placeholder='Enter title'\r\n-                        onChange={handleChange}\r\n-                        value={form.title}\r\n-                        className='form-control mb-2'\r\n-                        required />\r\n-                    <textarea\r\n-                        title='body'\r\n-                        placeholder='Enter Description'\r\n-                        value={form.body}\r\n-                        onChange={(e) => {\r\n-                            setForm({ ...form, body: e.target.value })\r\n-                        }}\r\n-                        className='form-control mb-2'\r\n-                        required />\r\n-\r\n-                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n-                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", body: \"\" }) }}>Reset</button>\r\n-                </form>\r\n-\r\n-            }\r\n-\r\n-            <div className='row'>\r\n-                {currentPosts.map((post, i) => (\r\n-                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n-                        <div className='card mb-4'>\r\n-                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n-                            <hr></hr>\r\n-                            <div className='card-body'>{post.body}</div>\r\n-                            <div className='d-flex flex-row'>\r\n-                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n-                                <button onClick={() => {\r\n-                                    setForm({ title: post.title, body: post.body });\r\n-                                    setEditId(post.id);\r\n-                                    setShowForm(true);\r\n-                                }} className='btn btn-warning'>Edit</button>\r\n-                            </div>\r\n-                        </div>\r\n-                    </div>\r\n-                ))}\r\n-            </div>\r\n-            <div>\r\n-                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}\r\n-                    style={{\r\n-                        padding: '5px',\r\n-                        borderRadius: \"8px\",\r\n-                        border: \"none\"\r\n-                    }}\r\n-                >Prev</button>\r\n-                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n-                    <button\r\n-                        key={idx}\r\n-                        onClick={() => setPage(idx + 1)}\r\n-                        style={{\r\n-                            margin: \"5px\",\r\n-                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n-                            color: page === idx + 1 ? \"white\" : \"black\",\r\n-                            border: \"1px solid black\",\r\n-                            borderRadius: \"8px\",\r\n-                            padding: \"10px\",\r\n-                        }}>\r\n-                        {idx + 1}\r\n-                    </button>\r\n-                ))}\r\n-                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}\r\n-                    style={{\r\n-                        padding: '5px',\r\n-                        borderRadius: \"8px\",\r\n-                        border: \"none\"\r\n-                    }}>Next</button>\r\n-            </div>\r\n-        </div>\r\n-    )\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-}\r\n"
                },
                {
                    "date": 1757316144984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,8 +73,9 @@\n     };\r\n     const indexOfLastPost = page * cardPerPage;\r\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n     const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+    console.log(typeof(currentPosts))\r\n     const handleDelete = async (id) => {\r\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n"
                },
                {
                    "date": 1757316161756,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,8 @@\n     };\r\n     const indexOfLastPost = page * cardPerPage;\r\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n     const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-    console.log(typeof(currentPosts))\r\n     const handleDelete = async (id) => {\r\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n"
                },
                {
                    "date": 1757316248807,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n             setData(newData);\r\n             const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n             setPage(lastPage);\r\n             setForm({ title: \"\", body: \"\" });\r\n-            localStorage.setItem(\"cardData\", JSON.stringify(newId));\r\n+            localStorage.setItem(\"cardData\", JSON.stringify(newData));\r\n         }\r\n     };\r\n     const indexOfLastPost = page * cardPerPage;\r\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n"
                },
                {
                    "date": 1757316334921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     const [page, setPage] = useState(1);\r\n \r\n     useEffect(() => {\r\n         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        if (lcData) {\r\n+        if (Array.isArray(lcData)) {\r\n             setData(lcData);\r\n         }\r\n         else {\r\n             fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n"
                },
                {
                    "date": 1757316410112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     const [page, setPage] = useState(1);\r\n \r\n     useEffect(() => {\r\n         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        if (Array.isArray(lcData)) {\r\n+        if (Array.isArray(lcData) && lcData.length>0) {\r\n             setData(lcData);\r\n         }\r\n         else {\r\n             fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n"
                },
                {
                    "date": 1757317095860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,9 @@\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n     const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n+        if({title:\"\",body:\"\"}) return;\r\n \r\n         if (editId) {\r\n             fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n                 method: \"PUT\",\r\n"
                },
                {
                    "date": 1757317158867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n     const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n-        if({title:\"\",body:\"\"}) return;\r\n+        //if({title:\"\",body:\"\"}) return;\r\n \r\n         if (editId) {\r\n             fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n                 method: \"PUT\",\r\n"
                },
                {
                    "date": 1757317174028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n     const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n-        //if({title:\"\",body:\"\"}) return;\r\n+        if({title:\"\",body:\"\"}) return;\r\n \r\n         if (editId) {\r\n             fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n                 method: \"PUT\",\r\n"
                },
                {
                    "date": 1757317179243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,8 @@\n         setForm({ ...form, [event.target.name]: event.target.value })\r\n     };\r\n     const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n-        if({title:\"\",body:\"\"}) return;\r\n \r\n         if (editId) {\r\n             fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n                 method: \"PUT\",\r\n"
                },
                {
                    "date": 1757317278474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,16 +132,14 @@\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body'>{post.body}</div>\r\n-                            <div className='d-flex flex-row'>\r\n                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n                                     setEditId(post.id);\r\n                                     setShowForm(true);\r\n                                 }} className='btn btn-warning'>Edit</button>\r\n-                            </div>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n"
                },
                {
                    "date": 1757317311049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,9 @@\n     };\r\n     const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n \r\n+\r\n         if (editId) {\r\n             fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n                 method: \"PUT\",\r\n                 headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n@@ -132,14 +133,16 @@\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body'>{post.body}</div>\r\n+                            <div className='d-flex flex-row'>\r\n                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n                                     setEditId(post.id);\r\n                                     setShowForm(true);\r\n                                 }} className='btn btn-warning'>Edit</button>\r\n+                            </div>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n"
                },
                {
                    "date": 1757317351558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,8 @@\n \r\n     return (\r\n         <div className='container'>\r\n             <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n-\r\n             {showForm &&\r\n                 <form onSubmit={handleSubmit} className='mb-4'>\r\n                     <input type='text'\r\n                         name='title'\r\n"
                },
                {
                    "date": 1757317378288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,9 +127,9 @@\n             }\r\n \r\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n-                    <div key={post.id} className='col-md-4 col-sm-12' style={{ gap: \"20px\" }}>\r\n+                    <div key={post.id} className='col-md-4 col-sm-12' >\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body'>{post.body}</div>\r\n"
                },
                {
                    "date": 1757317733963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,9 +127,9 @@\n             }\r\n \r\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n-                    <div key={post.id} className='col-md-4 col-sm-12' >\r\n+                    <div key={post.id} className='col-md-4 col-sm-12'>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body'>{post.body}</div>\r\n"
                },
                {
                    "date": 1757317991298,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,9 +125,9 @@\n                 </form>\r\n \r\n             }\r\n \r\n-            <div className='row'>\r\n+            <div className='grid'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n"
                },
                {
                    "date": 1757318001500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,9 +127,9 @@\n             }\r\n \r\n             <div className='grid'>\r\n                 {currentPosts.map((post, i) => (\r\n-                    <div key={post.id} className='col-md-4 col-sm-12'>\r\n+                    <div key={post.id} >\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body'>{post.body}</div>\r\n"
                },
                {
                    "date": 1757318011410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,9 +127,9 @@\n             }\r\n \r\n             <div className='grid'>\r\n                 {currentPosts.map((post, i) => (\r\n-                    <div key={post.id} >\r\n+                    <div key={post.id} className='col-md-4 col-sm-12'>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body'>{post.body}</div>\r\n"
                },
                {
                    "date": 1757318017186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,9 +125,9 @@\n                 </form>\r\n \r\n             }\r\n \r\n-            <div className='grid'>\r\n+            <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n"
                },
                {
                    "date": 1757318111292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <hr></hr>\r\n-                            <div className='card-body'>{post.body}</div>\r\n+                            <div className='card-body' title='{post.body}'>{post.body}</div>\r\n                             <div className='d-flex flex-row'>\r\n                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n"
                },
                {
                    "date": 1757318129484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <hr></hr>\r\n-                            <div className='card-body' title='{post.body}'>{post.body}</div>\r\n+                            <div className='card-body' title=`${post.body}`>{post.body}</div>\r\n                             <div className='d-flex flex-row'>\r\n                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n"
                },
                {
                    "date": 1757318142977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n                         <div className='card mb-4'>\r\n                             <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <hr></hr>\r\n-                            <div className='card-body' title=`${post.body}`>{post.body}</div>\r\n+                            <div className='card-body' title={post.body}>{post.body}</div>\r\n                             <div className='d-flex flex-row'>\r\n                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n"
                },
                {
                    "date": 1757318173398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,9 +129,9 @@\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n                         <div className='card mb-4'>\r\n-                            <div className='card-title'><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n+                            <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body' title={post.body}>{post.body}</div>\r\n                             <div className='d-flex flex-row'>\r\n                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n"
                },
                {
                    "date": 1757318345178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,9 +149,10 @@\n                 <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}\r\n                     style={{\r\n                         padding: '5px',\r\n                         borderRadius: \"8px\",\r\n-                        border: \"none\"\r\n+                        border: \"none\",\r\n+                        color:\"white\",\r\n                     }}\r\n                 >Prev</button>\r\n                 {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n                     <button\r\n"
                },
                {
                    "date": 1757318380373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,9 +172,10 @@\n                 <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}\r\n                     style={{\r\n                         padding: '5px',\r\n                         borderRadius: \"8px\",\r\n-                        border: \"none\"\r\n+                        border: \"none\",\r\n+                        color:\"white\",\r\n                     }}>Next</button>\r\n             </div>\r\n         </div>\r\n     )\r\n"
                },
                {
                    "date": 1757318399430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -150,9 +150,8 @@\n                     style={{\r\n                         padding: '5px',\r\n                         borderRadius: \"8px\",\r\n                         border: \"none\",\r\n-                        color:\"white\",\r\n                     }}\r\n                 >Prev</button>\r\n                 {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n                     <button\r\n@@ -172,10 +171,9 @@\n                 <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}\r\n                     style={{\r\n                         padding: '5px',\r\n                         borderRadius: \"8px\",\r\n-                        border: \"none\",\r\n-                        color:\"white\",\r\n+                        border: \"none\"\r\n                     }}>Next</button>\r\n             </div>\r\n         </div>\r\n     )\r\n"
                },
                {
                    "date": 1757319228710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,12 +7,13 @@\n     const [editId, setEditId] = useState(null);\r\n     const [data, setData] = useState([]);\r\n     const cardPerPage = 10;\r\n     const [page, setPage] = useState(1);\r\n+    const [modal,showModal]=useState(null)\r\n \r\n     useEffect(() => {\r\n         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        if (Array.isArray(lcData) && lcData.length>0) {\r\n+        if (Array.isArray(lcData) && lcData.length > 0) {\r\n             setData(lcData);\r\n         }\r\n         else {\r\n             fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n@@ -128,9 +129,9 @@\n \r\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n-                        <div className='card mb-4'>\r\n+                        <div className='card mb-4' onClick={showModal(post)}>\r\n                             <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body' title={post.body}>{post.body}</div>\r\n                             <div className='d-flex flex-row'>\r\n"
                },
                {
                    "date": 1757319314266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     const [editId, setEditId] = useState(null);\r\n     const [data, setData] = useState([]);\r\n     const cardPerPage = 10;\r\n     const [page, setPage] = useState(1);\r\n-    const [modal,showModal]=useState(null)\r\n+    const [modal,showModal]=useState(null);\r\n \r\n     useEffect(() => {\r\n         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n         if (Array.isArray(lcData) && lcData.length > 0) {\r\n"
                },
                {
                    "date": 1757319364933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,9 +129,9 @@\n \r\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n-                        <div className='card mb-4' onClick={showModal(post)}>\r\n+                        <div className='card mb-4' onClick={()=>{showModal(post)}}>\r\n                             <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body' title={post.body}>{post.body}</div>\r\n                             <div className='d-flex flex-row'>\r\n"
                },
                {
                    "date": 1757319441631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     const [editId, setEditId] = useState(null);\r\n     const [data, setData] = useState([]);\r\n     const cardPerPage = 10;\r\n     const [page, setPage] = useState(1);\r\n-    const [modal,showModal]=useState(null);\r\n+    const [modal, showModal] = useState(null);\r\n \r\n     useEffect(() => {\r\n         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n         if (Array.isArray(lcData) && lcData.length > 0) {\r\n@@ -129,9 +129,9 @@\n \r\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n-                        <div className='card mb-4' onClick={()=>{showModal(post)}}>\r\n+                        <div className='card mb-4' onClick={() => { showModal(post) }}>\r\n                             <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body' title={post.body}>{post.body}</div>\r\n                             <div className='d-flex flex-row'>\r\n@@ -176,9 +176,20 @@\n                         border: \"none\"\r\n                     }}>Next</button>\r\n             </div>\r\n         </div>\r\n-    )\r\n+        {\r\n+        modalContent && (\r\n+            <div className=\"modal-backdrop\" onClick={() => setModalContent(null)}>\r\n+                <div className=\"modal\" onClick={e => e.stopPropagation()}>\r\n+                    <h2>{modalContent.title}</h2>\r\n+                    <p>{modalContent.body}</p>\r\n+                    <button onClick={() => setModalContent(null)}>Close</button>\r\n+                </div>\r\n+            </div>\r\n+        )\r\n+    }\r\n+    \r\n \r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1757319463936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     const [editId, setEditId] = useState(null);\r\n     const [data, setData] = useState([]);\r\n     const cardPerPage = 10;\r\n     const [page, setPage] = useState(1);\r\n-    const [modal, showModal] = useState(null);\r\n+    const [modal,showModal]=useState(null);\r\n \r\n     useEffect(() => {\r\n         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n         if (Array.isArray(lcData) && lcData.length > 0) {\r\n@@ -129,9 +129,9 @@\n \r\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n-                        <div className='card mb-4' onClick={() => { showModal(post) }}>\r\n+                        <div className='card mb-4' onClick={()=>{showModal(post)}}>\r\n                             <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body' title={post.body}>{post.body}</div>\r\n                             <div className='d-flex flex-row'>\r\n@@ -176,20 +176,10 @@\n                         border: \"none\"\r\n                     }}>Next</button>\r\n             </div>\r\n         </div>\r\n-        {\r\n-        modalContent && (\r\n-            <div className=\"modal-backdrop\" onClick={() => setModalContent(null)}>\r\n-                <div className=\"modal\" onClick={e => e.stopPropagation()}>\r\n-                    <h2>{modalContent.title}</h2>\r\n-                    <p>{modalContent.body}</p>\r\n-                    <button onClick={() => setModalContent(null)}>Close</button>\r\n-                </div>\r\n-            </div>\r\n-        )\r\n-    }\r\n-    \r\n+        \r\n+    )\r\n \r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1757319500604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     const [editId, setEditId] = useState(null);\r\n     const [data, setData] = useState([]);\r\n     const cardPerPage = 10;\r\n     const [page, setPage] = useState(1);\r\n-    const [modal,showModal]=useState(null);\r\n+    const [modal, showModal] = useState(null);\r\n \r\n     useEffect(() => {\r\n         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n         if (Array.isArray(lcData) && lcData.length > 0) {\r\n@@ -129,9 +129,9 @@\n \r\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n-                        <div className='card mb-4' onClick={()=>{showModal(post)}}>\r\n+                        <div className='card mb-4' onClick={() => { showModal(post) }}>\r\n                             <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body' title={post.body}>{post.body}</div>\r\n                             <div className='d-flex flex-row'>\r\n@@ -175,10 +175,19 @@\n                         borderRadius: \"8px\",\r\n                         border: \"none\"\r\n                     }}>Next</button>\r\n             </div>\r\n+            {modal && (\r\n+                <div className=\"modal-backdrop\" onClick={() => setmodal(null)}>\r\n+                    <div className=\"modal\" onClick={e => e.stopPropagation()}>\r\n+                        <h2>{modal.title}</h2>\r\n+                        <p>{modal.body}</p>\r\n+                        <button onClick={() => setmodal(null)}>Close</button>\r\n+                    </div>\r\n+                </div>\r\n+            )}\r\n         </div>\r\n-        \r\n+\r\n     )\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1757319542286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,13 +176,13 @@\n                         border: \"none\"\r\n                     }}>Next</button>\r\n             </div>\r\n             {modal && (\r\n-                <div className=\"modal-backdrop\" onClick={() => setmodal(null)}>\r\n+                <div className=\"modal-backdrop\" onClick={() => showModal(null)}>\r\n                     <div className=\"modal\" onClick={e => e.stopPropagation()}>\r\n                         <h2>{modal.title}</h2>\r\n                         <p>{modal.body}</p>\r\n-                        <button onClick={() => setmodal(null)}>Close</button>\r\n+                        <button onClick={() => showModal(null)}>Close</button>\r\n                     </div>\r\n                 </div>\r\n             )}\r\n         </div>\r\n"
                },
                {
                    "date": 1757319581215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,9 @@\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n                         <div className='card mb-4' onClick={() => { showModal(post) }}>\r\n-                            <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {post.title}</h3></div>\r\n+                            <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} trunacate{post.title}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body' title={post.body}>{post.body}</div>\r\n                             <div className='d-flex flex-row'>\r\n                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n"
                },
                {
                    "date": 1757319628620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,9 @@\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n                         <div className='card mb-4' onClick={() => { showModal(post) }}>\r\n-                            <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} trunacate{post.title}</h3></div>\r\n+                            <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {truncate(post.title , 50)}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body' title={post.body}>{post.body}</div>\r\n                             <div className='d-flex flex-row'>\r\n                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n"
                },
                {
                    "date": 1757319646289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,8 +91,12 @@\n             console.error(\"Delete failed:\", err);\r\n         }\r\n     };\r\n \r\n+    const truncate = (text, maxChars) => {\r\n+  if (text.length <= maxChars) return text;\r\n+  return text.slice(0, maxChars) + \"...\";\r\n+};\r\n     // const handleDelete = (id) => {\r\n     //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n     //         method: \"DELETE\"\r\n     //     })\r\n"
                },
                {
                    "date": 1757319666678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -134,9 +134,9 @@\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n                         <div className='card mb-4' onClick={() => { showModal(post) }}>\r\n-                            <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {truncate(post.title , 50)}</h3></div>\r\n+                            <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {truncate(post.title , 16)}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body' title={post.body}>{post.body}</div>\r\n                             <div className='d-flex flex-row'>\r\n                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n"
                },
                {
                    "date": 1757319710923,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,9 +136,9 @@\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n                         <div className='card mb-4' onClick={() => { showModal(post) }}>\r\n                             <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {truncate(post.title , 16)}</h3></div>\r\n                             <hr></hr>\r\n-                            <div className='card-body' title={post.body}>{post.body}</div>\r\n+                            <div className='card-body' title={post.body}>{truncate(post.body,300)}</div>\r\n                             <div className='d-flex flex-row'>\r\n                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n"
                },
                {
                    "date": 1757319721503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,9 +136,9 @@\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n                         <div className='card mb-4' onClick={() => { showModal(post) }}>\r\n                             <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {truncate(post.title , 16)}</h3></div>\r\n                             <hr></hr>\r\n-                            <div className='card-body' title={post.body}>{truncate(post.body,300)}</div>\r\n+                            <div className='card-body' title={post.body}>{truncate(post.body,100)}</div>\r\n                             <div className='d-flex flex-row'>\r\n                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n"
                },
                {
                    "date": 1757320727873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,9 +136,9 @@\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n                         <div className='card mb-4' onClick={() => { showModal(post) }}>\r\n                             <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {truncate(post.title , 16)}</h3></div>\r\n                             <hr></hr>\r\n-                            <div className='card-body' title={post.body}>{truncate(post.body,100)}</div>\r\n+                            <div className='card-body' title={post.body}>{truncate(post.body,200)}</div>\r\n                             <div className='d-flex flex-row'>\r\n                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n"
                },
                {
                    "date": 1757320749267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,9 +136,9 @@\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n                         <div className='card mb-4' onClick={() => { showModal(post) }}>\r\n                             <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {truncate(post.title , 16)}</h3></div>\r\n                             <hr></hr>\r\n-                            <div className='card-body' title={post.body}>{truncate(post.body,200)}</div>\r\n+                            <div className='card-body' title={post.body}>{truncate(post.body,150)}</div>\r\n                             <div className='d-flex flex-row'>\r\n                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n"
                },
                {
                    "date": 1757320760367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,9 +136,9 @@\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n                         <div className='card mb-4' onClick={() => { showModal(post) }}>\r\n                             <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {truncate(post.title , 16)}</h3></div>\r\n                             <hr></hr>\r\n-                            <div className='card-body' title={post.body}>{truncate(post.body,150)}</div>\r\n+                            <div className='card-body' title={post.body}>{truncate(post.body,100)}</div>\r\n                             <div className='d-flex flex-row'>\r\n                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n"
                },
                {
                    "date": 1757320775884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,9 +136,9 @@\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n                         <div className='card mb-4' onClick={() => { showModal(post) }}>\r\n                             <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {truncate(post.title , 16)}</h3></div>\r\n                             <hr></hr>\r\n-                            <div className='card-body' title={post.body}>{truncate(post.body,100)}</div>\r\n+                            <div className='card-body' title={post.body}>{truncate(post.body,120)}</div>\r\n                             <div className='d-flex flex-row'>\r\n                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n"
                },
                {
                    "date": 1757320783845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,9 +136,9 @@\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n                         <div className='card mb-4' onClick={() => { showModal(post) }}>\r\n                             <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {truncate(post.title , 16)}</h3></div>\r\n                             <hr></hr>\r\n-                            <div className='card-body' title={post.body}>{truncate(post.body,120)}</div>\r\n+                            <div className='card-body' title={post.body}>{truncate(post.body,100)}</div>\r\n                             <div className='d-flex flex-row'>\r\n                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n"
                },
                {
                    "date": 1757321178998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,9 +133,9 @@\n \r\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n-                        <div className='card mb-4' onClick={() => { showModal(post) }}>\r\n+                        <div className='card mb-4' onClick={() => { showModal(post) }} style={{width:\"20rem\"}}>\r\n                             <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {truncate(post.title , 16)}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body' title={post.body}>{truncate(post.body,100)}</div>\r\n                             <div className='d-flex flex-row'>\r\n"
                },
                {
                    "date": 1757321206561,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,201 @@\n+import React, { useState, useEffect } from 'react';\r\n+import '../App.css'\r\n+\r\n+export default function Crud() {\r\n+    const [showForm, setShowForm] = useState(false);\r\n+    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n+    const [editId, setEditId] = useState(null);\r\n+    const [data, setData] = useState([]);\r\n+    const cardPerPage = 10;\r\n+    const [page, setPage] = useState(1);\r\n+    const [modal, showModal] = useState(null);\r\n+\r\n+    useEffect(() => {\r\n+        const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n+        if (Array.isArray(lcData) && lcData.length > 0) {\r\n+            setData(lcData);\r\n+        }\r\n+        else {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+                .then(res => res.json())\r\n+                .then(data => {\r\n+                    setData(data);\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n+                }\r\n+                )\r\n+        }\r\n+    }, []);\r\n+\r\n+    const handleChange = (event) => {\r\n+        setForm({ ...form, [event.target.name]: event.target.value })\r\n+    };\r\n+    const handleSubmit = (e) => {\r\n+        e.preventDefault();\r\n+\r\n+\r\n+        if (editId) {\r\n+            fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n+                method: \"PUT\",\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify({ ...form, id: editId })\r\n+            })\r\n+                // .then(res => {\r\n+                //     console.log(\"PUT called:\", res.status);\r\n+                //     return res.json();\r\n+                // })\r\n+                .then(res => res.json())\r\n+                .then(updated => {\r\n+                    const newData = data.map(data => (data.id === editId ? updated : data));\r\n+                    setData(newData)\r\n+                    setForm({ title: \"\", body: \"\" });\r\n+                    setEditId(null);\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(newData))\r\n+                })\r\n+        }\r\n+        else {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+                method: \"POST\",\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify(form),\r\n+            })\r\n+                .then(res => res.json())\r\n+            // .then(res => {\r\n+            //     console.log(\"POST called:\", res.status)\r\n+            //     return res.json();\r\n+            // })\r\n+            const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n+            const newPost = { id: newId, title: form.title, body: form.body };\r\n+            const newData = [...data, newPost];\r\n+            setData(newData);\r\n+            const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n+            setPage(lastPage);\r\n+            setForm({ title: \"\", body: \"\" });\r\n+            localStorage.setItem(\"cardData\", JSON.stringify(newData));\r\n+        }\r\n+    };\r\n+    const indexOfLastPost = page * cardPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+    const handleDelete = async (id) => {\r\n+        try {\r\n+            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n+                method: \"DELETE\"\r\n+            });\r\n+            const updatedData = data.filter(post => post.id !== id);\r\n+            const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n+            if (page > lastPage) setPage(lastPage);\r\n+            localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n+            setData(updatedData);\r\n+\r\n+        } catch (err) {\r\n+            console.error(\"Delete failed:\", err);\r\n+        }\r\n+    };\r\n+\r\n+    const truncate = (text, maxChars) => {\r\n+  if (text.length <= maxChars) return text;\r\n+  return text.slice(0, maxChars) + \"...\";\r\n+};\r\n+    // const handleDelete = (id) => {\r\n+    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+    //         method: \"DELETE\"\r\n+    //     })\r\n+    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n+    // };\r\n+\r\n+    return (\r\n+        <div className='container'>\r\n+            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+            {showForm &&\r\n+                <form onSubmit={handleSubmit} className='mb-4'>\r\n+                    <input type='text'\r\n+                        name='title'\r\n+                        placeholder='Enter title'\r\n+                        onChange={handleChange}\r\n+                        value={form.title}\r\n+                        className='form-control mb-2'\r\n+                        required />\r\n+                    <textarea\r\n+                        title='body'\r\n+                        placeholder='Enter Description'\r\n+                        value={form.body}\r\n+                        onChange={(e) => {\r\n+                            setForm({ ...form, body: e.target.value })\r\n+                        }}\r\n+                        className='form-control mb-2'\r\n+                        required />\r\n+\r\n+                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n+                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", body: \"\" }) }}>Reset</button>\r\n+                </form>\r\n+\r\n+            }\r\n+\r\n+            <div className='row'>\r\n+                {currentPosts.map((post, i) => (\r\n+                    <div key={post.id} className='col-md-4 col-sm-12'>\r\n+                        <div className='card mb-4' onClick={() => { showModal(post) }} >\r\n+                            <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {truncate(post.title , 16)}</h3></div>\r\n+                            <hr></hr>\r\n+                            <div className='card-body' title={post.body}>{truncate(post.body,100)}</div>\r\n+                            <div className='d-flex flex-row'>\r\n+                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n+                                <button onClick={() => {\r\n+                                    setForm({ title: post.title, body: post.body });\r\n+                                    setEditId(post.id);\r\n+                                    setShowForm(true);\r\n+                                }} className='btn btn-warning'>Edit</button>\r\n+                            </div>\r\n+                        </div>\r\n+                    </div>\r\n+                ))}\r\n+            </div>\r\n+            <div>\r\n+                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}\r\n+                    style={{\r\n+                        padding: '5px',\r\n+                        borderRadius: \"8px\",\r\n+                        border: \"none\",\r\n+                    }}\r\n+                >Prev</button>\r\n+                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n+                    <button\r\n+                        key={idx}\r\n+                        onClick={() => setPage(idx + 1)}\r\n+                        style={{\r\n+                            margin: \"5px\",\r\n+                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n+                            color: page === idx + 1 ? \"white\" : \"black\",\r\n+                            border: \"1px solid black\",\r\n+                            borderRadius: \"8px\",\r\n+                            padding: \"10px\",\r\n+                        }}>\r\n+                        {idx + 1}\r\n+                    </button>\r\n+                ))}\r\n+                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}\r\n+                    style={{\r\n+                        padding: '5px',\r\n+                        borderRadius: \"8px\",\r\n+                        border: \"none\"\r\n+                    }}>Next</button>\r\n+            </div>\r\n+            {modal && (\r\n+                <div className=\"modal-backdrop\" onClick={() => showModal(null)}>\r\n+                    <div className=\"modal\" onClick={e => e.stopPropagation()}>\r\n+                        <h2>{modal.title}</h2>\r\n+                        <p>{modal.body}</p>\r\n+                        <button onClick={() => showModal(null)}>Close</button>\r\n+                    </div>\r\n+                </div>\r\n+            )}\r\n+        </div>\r\n+\r\n+    )\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+}\r\n"
                },
                {
                    "date": 1757321306532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,8 @@\n                         className='form-control mb-2'\r\n                         required />\r\n                     <textarea\r\n                         title='body'\r\n-                        placeholder='Enter Description'\r\n                         value={form.body}\r\n                         onChange={(e) => {\r\n                             setForm({ ...form, body: e.target.value })\r\n                         }}\r\n"
                },
                {
                    "date": 1757321345890,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,8 +116,9 @@\n                         className='form-control mb-2'\r\n                         required />\r\n                     <textarea\r\n                         title='body'\r\n+                        placeholder='Enter Description'\r\n                         value={form.body}\r\n                         onChange={(e) => {\r\n                             setForm({ ...form, body: e.target.value })\r\n                         }}\r\n@@ -197,205 +198,4 @@\n \r\n \r\n \r\n }\r\n-import React, { useState, useEffect } from 'react';\r\n-import '../App.css'\r\n-\r\n-export default function Crud() {\r\n-    const [showForm, setShowForm] = useState(false);\r\n-    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n-    const [editId, setEditId] = useState(null);\r\n-    const [data, setData] = useState([]);\r\n-    const cardPerPage = 10;\r\n-    const [page, setPage] = useState(1);\r\n-    const [modal, showModal] = useState(null);\r\n-\r\n-    useEffect(() => {\r\n-        const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        if (Array.isArray(lcData) && lcData.length > 0) {\r\n-            setData(lcData);\r\n-        }\r\n-        else {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-                .then(res => res.json())\r\n-                .then(data => {\r\n-                    setData(data);\r\n-                    localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n-                }\r\n-                )\r\n-        }\r\n-    }, []);\r\n-\r\n-    const handleChange = (event) => {\r\n-        setForm({ ...form, [event.target.name]: event.target.value })\r\n-    };\r\n-    const handleSubmit = (e) => {\r\n-        e.preventDefault();\r\n-\r\n-\r\n-        if (editId) {\r\n-            fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n-                method: \"PUT\",\r\n-                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify({ ...form, id: editId })\r\n-            })\r\n-                // .then(res => {\r\n-                //     console.log(\"PUT called:\", res.status);\r\n-                //     return res.json();\r\n-                // })\r\n-                .then(res => res.json())\r\n-                .then(updated => {\r\n-                    const newData = data.map(data => (data.id === editId ? updated : data));\r\n-                    setData(newData)\r\n-                    setForm({ title: \"\", body: \"\" });\r\n-                    setEditId(null);\r\n-                    localStorage.setItem(\"cardData\", JSON.stringify(newData))\r\n-                })\r\n-        }\r\n-        else {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-                method: \"POST\",\r\n-                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify(form),\r\n-            })\r\n-                .then(res => res.json())\r\n-            // .then(res => {\r\n-            //     console.log(\"POST called:\", res.status)\r\n-            //     return res.json();\r\n-            // })\r\n-            const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n-            const newPost = { id: newId, title: form.title, body: form.body };\r\n-            const newData = [...data, newPost];\r\n-            setData(newData);\r\n-            const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n-            setPage(lastPage);\r\n-            setForm({ title: \"\", body: \"\" });\r\n-            localStorage.setItem(\"cardData\", JSON.stringify(newData));\r\n-        }\r\n-    };\r\n-    const indexOfLastPost = page * cardPerPage;\r\n-    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-    const handleDelete = async (id) => {\r\n-        try {\r\n-            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n-                method: \"DELETE\"\r\n-            });\r\n-            const updatedData = data.filter(post => post.id !== id);\r\n-            const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n-            if (page > lastPage) setPage(lastPage);\r\n-            localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n-            setData(updatedData);\r\n-\r\n-        } catch (err) {\r\n-            console.error(\"Delete failed:\", err);\r\n-        }\r\n-    };\r\n-\r\n-    const truncate = (text, maxChars) => {\r\n-  if (text.length <= maxChars) return text;\r\n-  return text.slice(0, maxChars) + \"...\";\r\n-};\r\n-    // const handleDelete = (id) => {\r\n-    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-    //         method: \"DELETE\"\r\n-    //     })\r\n-    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n-    // };\r\n-\r\n-    return (\r\n-        <div className='container'>\r\n-            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n-            {showForm &&\r\n-                <form onSubmit={handleSubmit} className='mb-4'>\r\n-                    <input type='text'\r\n-                        name='title'\r\n-                        placeholder='Enter title'\r\n-                        onChange={handleChange}\r\n-                        value={form.title}\r\n-                        className='form-control mb-2'\r\n-                        required />\r\n-                    <textarea\r\n-                        title='body'\r\n-                        placeholder='Enter Description'\r\n-                        value={form.body}\r\n-                        onChange={(e) => {\r\n-                            setForm({ ...form, body: e.target.value })\r\n-                        }}\r\n-                        className='form-control mb-2'\r\n-                        required />\r\n-\r\n-                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n-                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", body: \"\" }) }}>Reset</button>\r\n-                </form>\r\n-\r\n-            }\r\n-\r\n-            <div className='row'>\r\n-                {currentPosts.map((post, i) => (\r\n-                    <div key={post.id} className='col-md-4 col-sm-12'>\r\n-                        <div className='card mb-4' onClick={() => { showModal(post) }} style={{width:\"20rem\"}}>\r\n-                            <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {truncate(post.title , 16)}</h3></div>\r\n-                            <hr></hr>\r\n-                            <div className='card-body' title={post.body}>{truncate(post.body,100)}</div>\r\n-                            <div className='d-flex flex-row'>\r\n-                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n-                                <button onClick={() => {\r\n-                                    setForm({ title: post.title, body: post.body });\r\n-                                    setEditId(post.id);\r\n-                                    setShowForm(true);\r\n-                                }} className='btn btn-warning'>Edit</button>\r\n-                            </div>\r\n-                        </div>\r\n-                    </div>\r\n-                ))}\r\n-            </div>\r\n-            <div>\r\n-                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}\r\n-                    style={{\r\n-                        padding: '5px',\r\n-                        borderRadius: \"8px\",\r\n-                        border: \"none\",\r\n-                    }}\r\n-                >Prev</button>\r\n-                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n-                    <button\r\n-                        key={idx}\r\n-                        onClick={() => setPage(idx + 1)}\r\n-                        style={{\r\n-                            margin: \"5px\",\r\n-                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n-                            color: page === idx + 1 ? \"white\" : \"black\",\r\n-                            border: \"1px solid black\",\r\n-                            borderRadius: \"8px\",\r\n-                            padding: \"10px\",\r\n-                        }}>\r\n-                        {idx + 1}\r\n-                    </button>\r\n-                ))}\r\n-                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}\r\n-                    style={{\r\n-                        padding: '5px',\r\n-                        borderRadius: \"8px\",\r\n-                        border: \"none\"\r\n-                    }}>Next</button>\r\n-            </div>\r\n-            {modal && (\r\n-                <div className=\"modal-backdrop\" onClick={() => showModal(null)}>\r\n-                    <div className=\"modal\" onClick={e => e.stopPropagation()}>\r\n-                        <h2>{modal.title}</h2>\r\n-                        <p>{modal.body}</p>\r\n-                        <button onClick={() => showModal(null)}>Close</button>\r\n-                    </div>\r\n-                </div>\r\n-            )}\r\n-        </div>\r\n-\r\n-    )\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-}\r\n"
                },
                {
                    "date": 1757321614355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,9 +182,9 @@\n             </div>\r\n             {modal && (\r\n                 <div className=\"modal-backdrop\" onClick={() => showModal(null)}>\r\n                     <div className=\"modal\" onClick={e => e.stopPropagation()}>\r\n-                        <h2>{modal.title}</h2>\r\n+                        <h3>{modal.title}</h3>\r\n                         <p>{modal.body}</p>\r\n                         <button onClick={() => showModal(null)}>Close</button>\r\n                     </div>\r\n                 </div>\r\n"
                },
                {
                    "date": 1757321755703,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     const [editId, setEditId] = useState(null);\r\n     const [data, setData] = useState([]);\r\n     const cardPerPage = 10;\r\n     const [page, setPage] = useState(1);\r\n-    const [modal, showModal] = useState(null);\r\n+    const [modal, setShowModal] = useState(null);\r\n \r\n     useEffect(() => {\r\n         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n         if (Array.isArray(lcData) && lcData.length > 0) {\r\n@@ -133,9 +133,9 @@\n \r\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n-                        <div className='card mb-4' onClick={() => { showModal(post) }} >\r\n+                        <div className='card mb-4' onClick={() => { setShowModal(post) }} >\r\n                             <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {truncate(post.title , 16)}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body' title={post.body}>{truncate(post.body,100)}</div>\r\n                             <div className='d-flex flex-row'>\r\n@@ -180,13 +180,13 @@\n                         border: \"none\"\r\n                     }}>Next</button>\r\n             </div>\r\n             {modal && (\r\n-                <div className=\"modal-backdrop\" onClick={() => showModal(null)}>\r\n+                <div className=\"modal-backdrop\" onClick={() => setShowModal(null)}>\r\n                     <div className=\"modal\" onClick={e => e.stopPropagation()}>\r\n                         <h3>{modal.title}</h3>\r\n                         <p>{modal.body}</p>\r\n-                        <button onClick={() => showModal(null)}>Close</button>\r\n+                        <button onClick={() => setShowModal(null)}>Close</button>\r\n                     </div>\r\n                 </div>\r\n             )}\r\n         </div>\r\n"
                },
                {
                    "date": 1757322158915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,8 @@\n import React, { useState, useEffect } from 'react';\r\n+import Button from 'react-bootstrap/Button';\r\n+import Modal from 'react-bootstrap/Modal';\r\n+\r\n import '../App.css'\r\n \r\n export default function Crud() {\r\n     const [showForm, setShowForm] = useState(false);\r\n@@ -92,11 +95,11 @@\n         }\r\n     };\r\n \r\n     const truncate = (text, maxChars) => {\r\n-  if (text.length <= maxChars) return text;\r\n-  return text.slice(0, maxChars) + \"...\";\r\n-};\r\n+        if (text.length <= maxChars) return text;\r\n+        return text.slice(0, maxChars) + \"...\";\r\n+    };\r\n     // const handleDelete = (id) => {\r\n     //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n     //         method: \"DELETE\"\r\n     //     })\r\n@@ -134,11 +137,11 @@\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n                         <div className='card mb-4' onClick={() => { setShowModal(post) }} >\r\n-                            <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {truncate(post.title , 16)}</h3></div>\r\n+                            <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n                             <hr></hr>\r\n-                            <div className='card-body' title={post.body}>{truncate(post.body,100)}</div>\r\n+                            <div className='card-body' title={post.body}>{truncate(post.body, 100)}</div>\r\n                             <div className='d-flex flex-row'>\r\n                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n@@ -179,17 +182,23 @@\n                         borderRadius: \"8px\",\r\n                         border: \"none\"\r\n                     }}>Next</button>\r\n             </div>\r\n-            {modal && (\r\n-                <div className=\"modal-backdrop\" onClick={() => setShowModal(null)}>\r\n-                    <div className=\"modal\" onClick={e => e.stopPropagation()}>\r\n-                        <h3>{modal.title}</h3>\r\n-                        <p>{modal.body}</p>\r\n-                        <button onClick={() => setShowModal(null)}>Close</button>\r\n-                    </div>\r\n-                </div>\r\n-            )}\r\n+            <Modal show={show} onHide={handleClose} animation={false}>\r\n+                <Modal.Header closeButton>\r\n+                    <Modal.Title>Modal heading</Modal.Title>\r\n+                </Modal.Header>\r\n+                <Modal.Body>Woohoo, you are reading this text in a modal!</Modal.Body>\r\n+                <Modal.Footer>\r\n+                    <Button variant=\"secondary\" onClick={handleClose}>\r\n+                        Close\r\n+                    </Button>\r\n+                    <Button variant=\"primary\" onClick={handleClose}>\r\n+                        Save Changes\r\n+                    </Button>\r\n+                </Modal.Footer>\r\n+            </Modal>\r\n+\r\n         </div>\r\n \r\n     )\r\n \r\n"
                },
                {
                    "date": 1757322181457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,9 +182,9 @@\n                         borderRadius: \"8px\",\r\n                         border: \"none\"\r\n                     }}>Next</button>\r\n             </div>\r\n-            <Modal show={show} onHide={handleClose} animation={false}>\r\n+            <Modal show={modal} onHide={handleClose} animation={false}>\r\n                 <Modal.Header closeButton>\r\n                     <Modal.Title>Modal heading</Modal.Title>\r\n                 </Modal.Header>\r\n                 <Modal.Body>Woohoo, you are reading this text in a modal!</Modal.Body>\r\n"
                },
                {
                    "date": 1757322225348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,10 +10,13 @@\n     const [editId, setEditId] = useState(null);\r\n     const [data, setData] = useState([]);\r\n     const cardPerPage = 10;\r\n     const [page, setPage] = useState(1);\r\n-    const [modal, setShowModal] = useState(null);\r\n+    const [modal, setShowModal] = useState(false);\r\n+    const handleClose = () => setShowModal(false);\r\n+    const handleShow = () => setShowModal(true);\r\n \r\n+\r\n     useEffect(() => {\r\n         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n         if (Array.isArray(lcData) && lcData.length > 0) {\r\n             setData(lcData);\r\n"
                },
                {
                    "date": 1757322285696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,9 +139,9 @@\n \r\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n-                        <div className='card mb-4' onClick={() => { setShowModal(post) }} >\r\n+                        <div className='card mb-4' onClick={() => { handleShow }} >\r\n                             <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body' title={post.body}>{truncate(post.body, 100)}</div>\r\n                             <div className='d-flex flex-row'>\r\n"
                },
                {
                    "date": 1757322304643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,9 +139,9 @@\n \r\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n-                        <div className='card mb-4' onClick={() => { handleShow }} >\r\n+                        <div className='card mb-4' onClick={ handleShow } >\r\n                             <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body' title={post.body}>{truncate(post.body, 100)}</div>\r\n                             <div className='d-flex flex-row'>\r\n"
                },
                {
                    "date": 1757322350612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,11 +187,11 @@\n                     }}>Next</button>\r\n             </div>\r\n             <Modal show={modal} onHide={handleClose} animation={false}>\r\n                 <Modal.Header closeButton>\r\n-                    <Modal.Title>Modal heading</Modal.Title>\r\n+                    <Modal.Title>{post.title}</Modal.Title>\r\n                 </Modal.Header>\r\n-                <Modal.Body>Woohoo, you are reading this text in a modal!</Modal.Body>\r\n+                <Modal.Body></Modal.Body>\r\n                 <Modal.Footer>\r\n                     <Button variant=\"secondary\" onClick={handleClose}>\r\n                         Close\r\n                     </Button>\r\n"
                },
                {
                    "date": 1757322356586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,9 +187,9 @@\n                     }}>Next</button>\r\n             </div>\r\n             <Modal show={modal} onHide={handleClose} animation={false}>\r\n                 <Modal.Header closeButton>\r\n-                    <Modal.Title>{post.title}</Modal.Title>\r\n+                    <Modal.Title></Modal.Title>\r\n                 </Modal.Header>\r\n                 <Modal.Body></Modal.Body>\r\n                 <Modal.Footer>\r\n                     <Button variant=\"secondary\" onClick={handleClose}>\r\n"
                },
                {
                    "date": 1757322368945,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,5 @@\n import React, { useState, useEffect } from 'react';\r\n-import Button from 'react-bootstrap/Button';\r\n-import Modal from 'react-bootstrap/Modal';\r\n-\r\n import '../App.css'\r\n \r\n export default function Crud() {\r\n     const [showForm, setShowForm] = useState(false);\r\n@@ -10,13 +7,10 @@\n     const [editId, setEditId] = useState(null);\r\n     const [data, setData] = useState([]);\r\n     const cardPerPage = 10;\r\n     const [page, setPage] = useState(1);\r\n-    const [modal, setShowModal] = useState(false);\r\n-    const handleClose = () => setShowModal(false);\r\n-    const handleShow = () => setShowModal(true);\r\n+    const [modal, showModal] = useState(null);\r\n \r\n-\r\n     useEffect(() => {\r\n         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n         if (Array.isArray(lcData) && lcData.length > 0) {\r\n             setData(lcData);\r\n@@ -98,11 +92,11 @@\n         }\r\n     };\r\n \r\n     const truncate = (text, maxChars) => {\r\n-        if (text.length <= maxChars) return text;\r\n-        return text.slice(0, maxChars) + \"...\";\r\n-    };\r\n+  if (text.length <= maxChars) return text;\r\n+  return text.slice(0, maxChars) + \"...\";\r\n+};\r\n     // const handleDelete = (id) => {\r\n     //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n     //         method: \"DELETE\"\r\n     //     })\r\n@@ -139,12 +133,12 @@\n \r\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n-                        <div className='card mb-4' onClick={ handleShow } >\r\n-                            <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n+                        <div className='card mb-4' onClick={() => { showModal(post) }} >\r\n+                            <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {truncate(post.title , 16)}</h3></div>\r\n                             <hr></hr>\r\n-                            <div className='card-body' title={post.body}>{truncate(post.body, 100)}</div>\r\n+                            <div className='card-body' title={post.body}>{truncate(post.body,100)}</div>\r\n                             <div className='d-flex flex-row'>\r\n                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n@@ -185,23 +179,17 @@\n                         borderRadius: \"8px\",\r\n                         border: \"none\"\r\n                     }}>Next</button>\r\n             </div>\r\n-            <Modal show={modal} onHide={handleClose} animation={false}>\r\n-                <Modal.Header closeButton>\r\n-                    <Modal.Title></Modal.Title>\r\n-                </Modal.Header>\r\n-                <Modal.Body></Modal.Body>\r\n-                <Modal.Footer>\r\n-                    <Button variant=\"secondary\" onClick={handleClose}>\r\n-                        Close\r\n-                    </Button>\r\n-                    <Button variant=\"primary\" onClick={handleClose}>\r\n-                        Save Changes\r\n-                    </Button>\r\n-                </Modal.Footer>\r\n-            </Modal>\r\n-\r\n+            {modal && (\r\n+                <div className=\"modal-backdrop\" onClick={() => showModal(null)}>\r\n+                    <div className=\"modal\" onClick={e => e.stopPropagation()}>\r\n+                        <h2>{modal.title}</h2>\r\n+                        <p>{modal.body}</p>\r\n+                        <button onClick={() => showModal(null)}>Close</button>\r\n+                    </div>\r\n+                </div>\r\n+            )}\r\n         </div>\r\n \r\n     )\r\n \r\n"
                },
                {
                    "date": 1757322510938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,11 +92,11 @@\n         }\r\n     };\r\n \r\n     const truncate = (text, maxChars) => {\r\n-  if (text.length <= maxChars) return text;\r\n-  return text.slice(0, maxChars) + \"...\";\r\n-};\r\n+        if (text.length <= maxChars) return text;\r\n+        return text.slice(0, maxChars) + \"...\";\r\n+    };\r\n     // const handleDelete = (id) => {\r\n     //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n     //         method: \"DELETE\"\r\n     //     })\r\n@@ -134,11 +134,11 @@\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n                         <div className='card mb-4' onClick={() => { showModal(post) }} >\r\n-                            <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {truncate(post.title , 16)}</h3></div>\r\n+                            <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n                             <hr></hr>\r\n-                            <div className='card-body' title={post.body}>{truncate(post.body,100)}</div>\r\n+                            <div className='card-body' title={post.body}>{truncate(post.body, 100)}</div>\r\n                             <div className='d-flex flex-row'>\r\n                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n@@ -181,9 +181,18 @@\n                     }}>Next</button>\r\n             </div>\r\n             {modal && (\r\n                 <div className=\"modal-backdrop\" onClick={() => showModal(null)}>\r\n-                    <div className=\"modal\" onClick={e => e.stopPropagation()}>\r\n+                    <div className=\"modal\" onClick={e => e.stopPropagation()} style={{\r\n+                        background: \"#fff\",\r\n+                        padding: \"24px\",\r\n+                        borderRadius: \"8px\",\r\n+                        maxWidth: \"500px\",\r\n+                        margin: \"auto\",\r\n+                        top: \"50%\",\r\n+                        transform: \"translateY(50%)\",\r\n+                        position: \"relative\"\r\n+                    }}>\r\n                         <h2>{modal.title}</h2>\r\n                         <p>{modal.body}</p>\r\n                         <button onClick={() => showModal(null)}>Close</button>\r\n                     </div>\r\n"
                },
                {
                    "date": 1757322605868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -189,9 +189,9 @@\n                         maxWidth: \"500px\",\r\n                         margin: \"auto\",\r\n                         top: \"50%\",\r\n                         transform: \"translateY(50%)\",\r\n-                        position: \"relative\"\r\n+                        position: \"fixed\"\r\n                     }}>\r\n                         <h2>{modal.title}</h2>\r\n                         <p>{modal.body}</p>\r\n                         <button onClick={() => showModal(null)}>Close</button>\r\n"
                },
                {
                    "date": 1757322619187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,8 @@\n                         background: \"#fff\",\r\n                         padding: \"24px\",\r\n                         borderRadius: \"8px\",\r\n                         maxWidth: \"500px\",\r\n-                        margin: \"auto\",\r\n                         top: \"50%\",\r\n                         transform: \"translateY(50%)\",\r\n                         position: \"fixed\"\r\n                     }}>\r\n"
                },
                {
                    "date": 1757322635362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,15 +182,15 @@\n             </div>\r\n             {modal && (\r\n                 <div className=\"modal-backdrop\" onClick={() => showModal(null)}>\r\n                     <div className=\"modal\" onClick={e => e.stopPropagation()} style={{\r\n-                        background: \"#fff\",\r\n-                        padding: \"24px\",\r\n-                        borderRadius: \"8px\",\r\n-                        maxWidth: \"500px\",\r\n-                        top: \"50%\",\r\n-                        transform: \"translateY(50%)\",\r\n-                        position: \"fixed\"\r\n+                         background: \"#fff\",\r\n+            padding: \"24px\",\r\n+            borderRadius: \"8px\",\r\n+            maxWidth: \"500px\",\r\n+            width: \"90%\",\r\n+            boxShadow: \"0 5px 15px rgba(0,0,0,0.3)\",\r\n+            zIndex: 1001,\r\n                     }}>\r\n                         <h2>{modal.title}</h2>\r\n                         <p>{modal.body}</p>\r\n                         <button onClick={() => showModal(null)}>Close</button>\r\n"
                },
                {
                    "date": 1757322793810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     const [editId, setEditId] = useState(null);\r\n     const [data, setData] = useState([]);\r\n     const cardPerPage = 10;\r\n     const [page, setPage] = useState(1);\r\n-    const [modal, showModal] = useState(null);\r\n+    const [modal, setShowModal] = useState(null);\r\n \r\n     useEffect(() => {\r\n         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n         if (Array.isArray(lcData) && lcData.length > 0) {\r\n@@ -192,9 +192,9 @@\n             zIndex: 1001,\r\n                     }}>\r\n                         <h2>{modal.title}</h2>\r\n                         <p>{modal.body}</p>\r\n-                        <button onClick={() => showModal(null)}>Close</button>\r\n+                        <button onClick={() => (null)}>Close</button>\r\n                     </div>\r\n                 </div>\r\n             )}\r\n         </div>\r\n"
                },
                {
                    "date": 1757322806102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -180,9 +180,9 @@\n                         border: \"none\"\r\n                     }}>Next</button>\r\n             </div>\r\n             {modal && (\r\n-                <div className=\"modal-backdrop\" onClick={() => showModal(null)}>\r\n+                <div className=\"modal-backdrop\" onClick={() => setShowModal(null)}>\r\n                     <div className=\"modal\" onClick={e => e.stopPropagation()} style={{\r\n                          background: \"#fff\",\r\n             padding: \"24px\",\r\n             borderRadius: \"8px\",\r\n"
                },
                {
                    "date": 1757322847698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,9 +133,9 @@\n \r\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n-                        <div className='card mb-4' onClick={() => { showModal(post) }} >\r\n+                        <div className='card mb-4' onClick={() => { setShowModal(post) }} >\r\n                             <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body' title={post.body}>{truncate(post.body, 100)}</div>\r\n                             <div className='d-flex flex-row'>\r\n"
                },
                {
                    "date": 1757322999061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import React, { useState, useEffect } from 'react';\r\n+import {Modal,Button} from react-bootstrap;\r\n import '../App.css'\r\n \r\n export default function Crud() {\r\n     const [showForm, setShowForm] = useState(false);\r\n@@ -179,25 +180,19 @@\n                         borderRadius: \"8px\",\r\n                         border: \"none\"\r\n                     }}>Next</button>\r\n             </div>\r\n-            {modal && (\r\n-                <div className=\"modal-backdrop\" onClick={() => setShowModal(null)}>\r\n-                    <div className=\"modal\" onClick={e => e.stopPropagation()} style={{\r\n-                         background: \"#fff\",\r\n-            padding: \"24px\",\r\n-            borderRadius: \"8px\",\r\n-            maxWidth: \"500px\",\r\n-            width: \"90%\",\r\n-            boxShadow: \"0 5px 15px rgba(0,0,0,0.3)\",\r\n-            zIndex: 1001,\r\n-                    }}>\r\n-                        <h2>{modal.title}</h2>\r\n-                        <p>{modal.body}</p>\r\n-                        <button onClick={() => (null)}>Close</button>\r\n-                    </div>\r\n-                </div>\r\n-            )}\r\n+            <Modal show={!!selectedPost} onHide={() => setSelectedPost(null)}>\r\n+                <Modal.Header closeButton>\r\n+                    <Modal.Title>{selectedPost?.title}</Modal.Title>\r\n+                </Modal.Header>\r\n+                <Modal.Body>\r\n+                    <p>{selectedPost?.body}</p>\r\n+                </Modal.Body>\r\n+                <Modal.Footer>\r\n+                    <Button variant=\"secondary\" onClick={() => setSelectedPost(null)}>Close</Button>\r\n+                </Modal.Footer>\r\n+            </Modal>\r\n         </div>\r\n \r\n     )\r\n \r\n"
                },
                {
                    "date": 1757323010874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useState, useEffect } from 'react';\r\n-import {Modal,Button} from react-bootstrap;\r\n+import {Modal,Button} from 'react-bootstrap';\r\n import '../App.css'\r\n \r\n export default function Crud() {\r\n     const [showForm, setShowForm] = useState(false);\r\n"
                },
                {
                    "date": 1757323048494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n import React, { useState, useEffect } from 'react';\r\n-import {Modal,Button} from 'react-bootstrap';\r\n import '../App.css'\r\n \r\n export default function Crud() {\r\n     const [showForm, setShowForm] = useState(false);\r\n@@ -180,19 +179,25 @@\n                         borderRadius: \"8px\",\r\n                         border: \"none\"\r\n                     }}>Next</button>\r\n             </div>\r\n-            <Modal show={!!selectedPost} onHide={() => setSelectedPost(null)}>\r\n-                <Modal.Header closeButton>\r\n-                    <Modal.Title>{selectedPost?.title}</Modal.Title>\r\n-                </Modal.Header>\r\n-                <Modal.Body>\r\n-                    <p>{selectedPost?.body}</p>\r\n-                </Modal.Body>\r\n-                <Modal.Footer>\r\n-                    <Button variant=\"secondary\" onClick={() => setSelectedPost(null)}>Close</Button>\r\n-                </Modal.Footer>\r\n-            </Modal>\r\n+            {modal && (\r\n+                <div className=\"modal-backdrop\" onClick={() => setShowModal(null)}>\r\n+                    <div className=\"modal\" onClick={e => e.stopPropagation()} style={{\r\n+                        background: \"#fff\",\r\n+                        padding: \"24px\",\r\n+                        borderRadius: \"8px\",\r\n+                        maxWidth: \"500px\",\r\n+                        width: \"90%\",   \r\n+                        boxShadow: \"0 5px 15px rgba(0,0,0,0.3)\",\r\n+                        zIndex: 1001,\r\n+                    }}>\r\n+                        <h2>{modal.title}</h2>\r\n+                        <p>{modal.body}</p>\r\n+                        <button onClick={() => (null)}>Close</button>\r\n+                    </div>\r\n+                </div>\r\n+            )}\r\n         </div>\r\n \r\n     )\r\n \r\n"
                },
                {
                    "date": 1757323078266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     const [editId, setEditId] = useState(null);\r\n     const [data, setData] = useState([]);\r\n     const cardPerPage = 10;\r\n     const [page, setPage] = useState(1);\r\n-    const [modal, setShowModal] = useState(null);\r\n+    const [modalContent, setModalContent] = useState(null);\r\n \r\n     useEffect(() => {\r\n         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n         if (Array.isArray(lcData) && lcData.length > 0) {\r\n"
                },
                {
                    "date": 1757323210559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,8 @@\n     const [editId, setEditId] = useState(null);\r\n     const [data, setData] = useState([]);\r\n     const cardPerPage = 10;\r\n     const [page, setPage] = useState(1);\r\n-    const [modalContent, setModalContent] = useState(null);\r\n \r\n     useEffect(() => {\r\n         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n         if (Array.isArray(lcData) && lcData.length > 0) {\r\n"
                },
                {
                    "date": 1757323223756,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -178,25 +178,8 @@\n                         borderRadius: \"8px\",\r\n                         border: \"none\"\r\n                     }}>Next</button>\r\n             </div>\r\n-            {modal && (\r\n-                <div className=\"modal-backdrop\" onClick={() => setShowModal(null)}>\r\n-                    <div className=\"modal\" onClick={e => e.stopPropagation()} style={{\r\n-                        background: \"#fff\",\r\n-                        padding: \"24px\",\r\n-                        borderRadius: \"8px\",\r\n-                        maxWidth: \"500px\",\r\n-                        width: \"90%\",   \r\n-                        boxShadow: \"0 5px 15px rgba(0,0,0,0.3)\",\r\n-                        zIndex: 1001,\r\n-                    }}>\r\n-                        <h2>{modal.title}</h2>\r\n-                        <p>{modal.body}</p>\r\n-                        <button onClick={() => (null)}>Close</button>\r\n-                    </div>\r\n-                </div>\r\n-            )}\r\n         </div>\r\n \r\n     )\r\n \r\n"
                },
                {
                    "date": 1757323280377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n     const [editId, setEditId] = useState(null);\r\n     const [data, setData] = useState([]);\r\n     const cardPerPage = 10;\r\n     const [page, setPage] = useState(1);\r\n+    const [showModal,setShowModal]=useState(null);\r\n \r\n     useEffect(() => {\r\n         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n         if (Array.isArray(lcData) && lcData.length > 0) {\r\n"
                },
                {
                    "date": 1757323337833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     const [editId, setEditId] = useState(null);\r\n     const [data, setData] = useState([]);\r\n     const cardPerPage = 10;\r\n     const [page, setPage] = useState(1);\r\n-    const [showModal,setShowModal]=useState(null);\r\n+    const [showModal, setShowModal] = useState(null);\r\n \r\n     useEffect(() => {\r\n         const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n         if (Array.isArray(lcData) && lcData.length > 0) {\r\n@@ -179,10 +179,32 @@\n                         borderRadius: \"8px\",\r\n                         border: \"none\"\r\n                     }}>Next</button>\r\n             </div>\r\n+            {showModal && (\r\n+                <div\r\n+                    className=\"modal fade show\"\r\n+                    style={{ display: \"block\", backgroundColor: \"rgba(0,0,0,0.5)\" }}\r\n+                    onClick={() => setShowModal(null)}\r\n+                >\r\n+                    <div className=\"modal-dialog\" onClick={e => e.stopPropagation()}>\r\n+                        <div className=\"modal-content\">\r\n+                            <div className=\"modal-header\">\r\n+                                <h5 className=\"modal-title\">{showModal.title}</h5>\r\n+                                <button type=\"button\" className=\"btn-close\" onClick={() => setShowModal(null)}></button>\r\n+                            </div>\r\n+                            <div className=\"modal-body\">\r\n+                                <p>{showModal.body}</p>\r\n+                            </div>\r\n+                            <div className=\"modal-footer\">\r\n+                                <button className=\"btn btn-secondary\" onClick={() => setShowModal(null)}>Close</button>\r\n+                            </div>\r\n+                        </div>\r\n+                    </div>\r\n+                </div>\r\n+            )}\r\n+\r\n         </div>\r\n-\r\n     )\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1757323478682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -189,9 +189,9 @@\n                     <div className=\"modal-dialog\" onClick={e => e.stopPropagation()}>\r\n                         <div className=\"modal-content\">\r\n                             <div className=\"modal-header\">\r\n                                 <h5 className=\"modal-title\">{showModal.title}</h5>\r\n-                                <button type=\"button\" className=\"btn-close\" onClick={() => setShowModal(null)}></button>\r\n+                                <button type=\"button\" className=\"btn-close\" onClick={() => setShowModal(null)} style={{colorwhite}}></button>\r\n                             </div>\r\n                             <div className=\"modal-body\">\r\n                                 <p>{showModal.body}</p>\r\n                             </div>\r\n"
                },
                {
                    "date": 1757323486298,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -189,9 +189,9 @@\n                     <div className=\"modal-dialog\" onClick={e => e.stopPropagation()}>\r\n                         <div className=\"modal-content\">\r\n                             <div className=\"modal-header\">\r\n                                 <h5 className=\"modal-title\">{showModal.title}</h5>\r\n-                                <button type=\"button\" className=\"btn-close\" onClick={() => setShowModal(null)} style={{colorwhite}}></button>\r\n+                                <button type=\"button\" className=\"btn-close\" onClick={() => setShowModal(null)} style={{color:'white'}}></button>\r\n                             </div>\r\n                             <div className=\"modal-body\">\r\n                                 <p>{showModal.body}</p>\r\n                             </div>\r\n"
                },
                {
                    "date": 1757323500472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -189,9 +189,9 @@\n                     <div className=\"modal-dialog\" onClick={e => e.stopPropagation()}>\r\n                         <div className=\"modal-content\">\r\n                             <div className=\"modal-header\">\r\n                                 <h5 className=\"modal-title\">{showModal.title}</h5>\r\n-                                <button type=\"button\" className=\"btn-close\" onClick={() => setShowModal(null)} style={{color:'white'}}></button>\r\n+                                <button type=\"button\" className=\"btn-close\" onClick={() => setShowModal(null)} ></button>\r\n                             </div>\r\n                             <div className=\"modal-body\">\r\n                                 <p>{showModal.body}</p>\r\n                             </div>\r\n"
                },
                {
                    "date": 1757323729263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,9 +124,9 @@\n                         }}\r\n                         className='form-control mb-2'\r\n                         required />\r\n \r\n-                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n+                    <button className='btn-submit' onClick={handleSubmit}>Submit</button>\r\n                     <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", body: \"\" }) }}>Reset</button>\r\n                 </form>\r\n \r\n             }\r\n"
                },
                {
                    "date": 1757323793018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,12 +133,12 @@\n \r\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n-                        <div className='card mb-4' onClick={() => { setShowModal(post) }} >\r\n-                            <div className='card-title' title={post.title}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n+                        <div className='card mb-4' >\r\n+                            <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n                             <hr></hr>\r\n-                            <div className='card-body' title={post.body}>{truncate(post.body, 100)}</div>\r\n+                            <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n                             <div className='d-flex flex-row'>\r\n                                 <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n"
                },
                {
                    "date": 1757323854415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,9 +124,9 @@\n                         }}\r\n                         className='form-control mb-2'\r\n                         required />\r\n \r\n-                    <button className='btn-submit' onClick={handleSubmit}>Submit</button>\r\n+                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n                     <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", body: \"\" }) }}>Reset</button>\r\n                 </form>\r\n \r\n             }\r\n"
                },
                {
                    "date": 1757323939046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,9 +124,9 @@\n                         }}\r\n                         className='form-control mb-2'\r\n                         required />\r\n \r\n-                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n+                    <button className='btn btn-primary' onClick={handleSubmit}>Submit</button>\r\n                     <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", body: \"\" }) }}>Reset</button>\r\n                 </form>\r\n \r\n             }\r\n"
                },
                {
                    "date": 1757323994532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,9 +124,9 @@\n                         }}\r\n                         className='form-control mb-2'\r\n                         required />\r\n \r\n-                    <button className='btn btn-primary' onClick={handleSubmit}>Submit</button>\r\n+                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n                     <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", body: \"\" }) }}>Reset</button>\r\n                 </form>\r\n \r\n             }\r\n"
                },
                {
                    "date": 1757324165386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,10 +124,10 @@\n                         }}\r\n                         className='form-control mb-2'\r\n                         required />\r\n \r\n-                    <button className='btn btn-success' onClick={handleSubmit}>Submit</button>\r\n-                    <button className='btn btn-warning' type='button' onClick={() => { setForm({ title: \"\", body: \"\" }) }}>Reset</button>\r\n+                    <button className='btn-submit' onClick={handleSubmit}>Submit</button>\r\n+                    <button className='btn-reset' type='button' onClick={() => { setForm({ title: \"\", body: \"\" }) }}>Reset</button>\r\n                 </form>\r\n \r\n             }\r\n \r\n"
                },
                {
                    "date": 1757324190611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,14 +138,14 @@\n                             <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n                             <div className='d-flex flex-row'>\r\n-                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n+                                <button onClick={() => handleDelete(post.id)} className='btn-delete'>Delete</button>\r\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n                                     setEditId(post.id);\r\n                                     setShowForm(true);\r\n-                                }} className='btn btn-warning'>Edit</button>\r\n+                                }} className='btn-edit'>Edit</button>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n"
                },
                {
                    "date": 1757324607878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,8 +80,9 @@\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n             });\r\n+            alert(\"Are you sure you want to delete this??\")\r\n             const updatedData = data.filter(post => post.id !== id);\r\n             const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n             if (page > lastPage) setPage(lastPage);\r\n             localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n"
                },
                {
                    "date": 1757324627842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n             });\r\n-            alert(\"Are you sure you want to delete this??\")\r\n+            alert(\"Are you sure you want to delete this??\");\r\n             const updatedData = data.filter(post => post.id !== id);\r\n             const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n             if (page > lastPage) setPage(lastPage);\r\n             localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n"
                },
                {
                    "date": 1757324673157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n             });\r\n-            alert(\"Are you sure you want to delete this??\");\r\n+            confirm(\"Are you sure you want to delete this??\");\r\n             const updatedData = data.filter(post => post.id !== id);\r\n             const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n             if (page > lastPage) setPage(lastPage);\r\n             localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n"
                },
                {
                    "date": 1757324680786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n             });\r\n-            confirm(\"Are you sure you want to delete this??\");\r\n+            alert(\"Are you sure you want to delete this??\");\r\n             const updatedData = data.filter(post => post.id !== id);\r\n             const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n             if (page > lastPage) setPage(lastPage);\r\n             localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n"
                },
                {
                    "date": 1757324711758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n             });\r\n-            alert(\"Are you sure you want to delete this??\");\r\n+            confirm(\"Are you sure you want to delete this??\");\r\n             const updatedData = data.filter(post => post.id !== id);\r\n             const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n             if (page > lastPage) setPage(lastPage);\r\n             localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n"
                },
                {
                    "date": 1757324775344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,15 +80,20 @@\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n             });\r\n-            confirm(\"Are you sure you want to delete this??\");\r\n-            const updatedData = data.filter(post => post.id !== id);\r\n-            const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n-            if (page > lastPage) setPage(lastPage);\r\n-            localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n-            setData(updatedData);\r\n+            if (confirm(\"Are you sure you want to delete this??\")) {\r\n+                const updatedData = data.filter(post => post.id !== id);\r\n+                const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n+                if (page > lastPage) setPage(lastPage);\r\n+                localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n+                setData(updatedData);\r\n+            }\r\n+            else{\r\n+                return;\r\n+            }\r\n \r\n+\r\n         } catch (err) {\r\n             console.error(\"Delete failed:\", err);\r\n         }\r\n     };\r\n"
                },
                {
                    "date": 1757324814522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,8 @@\n             else{\r\n                 return;\r\n             }\r\n \r\n-\r\n         } catch (err) {\r\n             console.error(\"Delete failed:\", err);\r\n         }\r\n     };\r\n"
                },
                {
                    "date": 1757324908613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,18 +80,26 @@\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n             });\r\n-            if (confirm(\"Are you sure you want to delete this??\")) {\r\n+            const confirmed = alert(\"Are you sure you want to delete this??\")\r\n+            if (confirmed) {\r\n                 const updatedData = data.filter(post => post.id !== id);\r\n-                const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n-                if (page > lastPage) setPage(lastPage);\r\n-                localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n-                setData(updatedData);\r\n+                    const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n+                    if (page > lastPage) setPage(lastPage);\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n+                    setData(updatedData);\r\n             }\r\n-            else{\r\n-                return;\r\n-            }\r\n+            // if (confirm(\"Are you sure you want to delete this??\")) {\r\n+            //     const updatedData = data.filter(post => post.id !== id);\r\n+            //     const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n+            //     if (page > lastPage) setPage(lastPage);\r\n+            //     localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n+            //     setData(updatedData);\r\n+            // }\r\n+            // else{\r\n+            //     return;\r\n+            // }\r\n \r\n         } catch (err) {\r\n             console.error(\"Delete failed:\", err);\r\n         }\r\n"
                },
                {
                    "date": 1757324937267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n             });\r\n-            const confirmed = alert(\"Are you sure you want to delete this??\")\r\n+            const confirmed = confirm(\"Are you sure you want to delete this??\")\r\n             if (confirmed) {\r\n                 const updatedData = data.filter(post => post.id !== id);\r\n                     const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n                     if (page > lastPage) setPage(lastPage);\r\n"
                },
                {
                    "date": 1757324946357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n         try {\r\n             await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                 method: \"DELETE\"\r\n             });\r\n-            const confirmed = confirm(\"Are you sure you want to delete this??\")\r\n+            const confirmed = window.confirm(\"Are you sure you want to delete this??\")\r\n             if (confirmed) {\r\n                 const updatedData = data.filter(post => post.id !== id);\r\n                     const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n                     if (page > lastPage) setPage(lastPage);\r\n"
                },
                {
                    "date": 1757324969694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,18 +88,8 @@\n                     if (page > lastPage) setPage(lastPage);\r\n                     localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n                     setData(updatedData);\r\n             }\r\n-            // if (confirm(\"Are you sure you want to delete this??\")) {\r\n-            //     const updatedData = data.filter(post => post.id !== id);\r\n-            //     const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n-            //     if (page > lastPage) setPage(lastPage);\r\n-            //     localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n-            //     setData(updatedData);\r\n-            // }\r\n-            // else{\r\n-            //     return;\r\n-            // }\r\n \r\n         } catch (err) {\r\n             console.error(\"Delete failed:\", err);\r\n         }\r\n"
                },
                {
                    "date": 1757325741583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,9 +141,9 @@\n                             <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n                             <div className='d-flex flex-row'>\r\n-                                <button onClick={() => handleDelete(post.id)} className='btn-delete'>Delete</button>\r\n+                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n                                     setEditId(post.id);\r\n                                     setShowForm(true);\r\n"
                },
                {
                    "date": 1757325753160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,9 +146,9 @@\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n                                     setEditId(post.id);\r\n                                     setShowForm(true);\r\n-                                }} className='btn-edit'>Edit</button>\r\n+                                }} className='btn btn-warning'>Edit</button>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n"
                },
                {
                    "date": 1757325887255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n     // };\r\n \r\n     return (\r\n         <div className='container'>\r\n-            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>{showForm ? \"Hide\" : \"Show\"}</button>\r\n+            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>Add Post</button>\r\n             {showForm &&\r\n                 <form onSubmit={handleSubmit} className='mb-4'>\r\n                     <input type='text'\r\n                         name='title'\r\n"
                },
                {
                    "date": 1757326060765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import React, { useState, useEffect } from 'react';\r\n-import '../App.css'\r\n+import '../App.css';\r\n+import PostForm from './form';\r\n \r\n export default function Crud() {\r\n     const [showForm, setShowForm] = useState(false);\r\n     const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n@@ -83,12 +84,12 @@\n             });\r\n             const confirmed = window.confirm(\"Are you sure you want to delete this??\")\r\n             if (confirmed) {\r\n                 const updatedData = data.filter(post => post.id !== id);\r\n-                    const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n-                    if (page > lastPage) setPage(lastPage);\r\n-                    localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n-                    setData(updatedData);\r\n+                const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n+                if (page > lastPage) setPage(lastPage);\r\n+                localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n+                setData(updatedData);\r\n             }\r\n \r\n         } catch (err) {\r\n             console.error(\"Delete failed:\", err);\r\n@@ -108,33 +109,10 @@\n \r\n     return (\r\n         <div className='container'>\r\n             <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>Add Post</button>\r\n-            {showForm &&\r\n-                <form onSubmit={handleSubmit} className='mb-4'>\r\n-                    <input type='text'\r\n-                        name='title'\r\n-                        placeholder='Enter title'\r\n-                        onChange={handleChange}\r\n-                        value={form.title}\r\n-                        className='form-control mb-2'\r\n-                        required />\r\n-                    <textarea\r\n-                        title='body'\r\n-                        placeholder='Enter Description'\r\n-                        value={form.body}\r\n-                        onChange={(e) => {\r\n-                            setForm({ ...form, body: e.target.value })\r\n-                        }}\r\n-                        className='form-control mb-2'\r\n-                        required />\r\n+            <PostForm form={form} setForm={setForm} handleSubmit={handleSubmit} />\r\n \r\n-                    <button className='btn-submit' onClick={handleSubmit}>Submit</button>\r\n-                    <button className='btn-reset' type='button' onClick={() => { setForm({ title: \"\", body: \"\" }) }}>Reset</button>\r\n-                </form>\r\n-\r\n-            }\r\n-\r\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n                         <div className='card mb-4' >\r\n"
                },
                {
                    "date": 1757326116618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState, useEffect } from 'react';\r\n import '../App.css';\r\n-import PostForm from './form';\r\n+import PostForm from './addPost';\r\n \r\n export default function Crud() {\r\n     const [showForm, setShowForm] = useState(false);\r\n     const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n"
                },
                {
                    "date": 1757326386111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState, useEffect } from 'react';\r\n import '../App.css';\r\n-import PostForm from './addPost';\r\n+import PostModal from './addPost';\r\n \r\n export default function Crud() {\r\n     const [showForm, setShowForm] = useState(false);\r\n     const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n"
                },
                {
                    "date": 1757326419645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n \r\n     return (\r\n         <div className='container'>\r\n             <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>Add Post</button>\r\n-            <PostForm form={form} setForm={setForm} handleSubmit={handleSubmit} />\r\n+            <PostModal form={form} setForm={setForm} handleSubmit={handleSubmit} />\r\n \r\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n"
                },
                {
                    "date": 1757326588250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,195 @@\n+import React, { useState, useEffect } from 'react';\r\n+import '../App.css';\r\n+import PostModal from './addPost';\r\n+\r\n+export default function Crud() {\r\n+    const [showForm, setShowForm] = useState(false);\r\n+    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n+    const [editId, setEditId] = useState(null);\r\n+    const [data, setData] = useState([]);\r\n+    const cardPerPage = 10;\r\n+    const [page, setPage] = useState(1);\r\n+    const [showModal, setShowModal] = useState(null);\r\n+\r\n+    useEffect(() => {\r\n+        const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n+        if (Array.isArray(lcData) && lcData.length > 0) {\r\n+            setData(lcData);\r\n+        }\r\n+        else {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+                .then(res => res.json())\r\n+                .then(data => {\r\n+                    setData(data);\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n+                }\r\n+                )\r\n+        }\r\n+    }, []);\r\n+\r\n+    const handleChange = (event) => {\r\n+        setForm({ ...form, [event.target.name]: event.target.value })\r\n+    };\r\n+    const handleSubmit = (e) => {\r\n+        e.preventDefault();\r\n+\r\n+\r\n+        if (editId) {\r\n+            fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n+                method: \"PUT\",\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify({ ...form, id: editId })\r\n+            })\r\n+                // .then(res => {\r\n+                //     console.log(\"PUT called:\", res.status);\r\n+                //     return res.json();\r\n+                // })\r\n+                .then(res => res.json())\r\n+                .then(updated => {\r\n+                    const newData = data.map(data => (data.id === editId ? updated : data));\r\n+                    setData(newData)\r\n+                    setForm({ title: \"\", body: \"\" });\r\n+                    setEditId(null);\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(newData))\r\n+                })\r\n+        }\r\n+        else {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+                method: \"POST\",\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify(form),\r\n+            })\r\n+                .then(res => res.json())\r\n+            // .then(res => {\r\n+            //     console.log(\"POST called:\", res.status)\r\n+            //     return res.json();\r\n+            // })\r\n+            const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n+            const newPost = { id: newId, title: form.title, body: form.body };\r\n+            const newData = [...data, newPost];\r\n+            setData(newData);\r\n+            const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n+            setPage(lastPage);\r\n+            setForm({ title: \"\", body: \"\" });\r\n+            localStorage.setItem(\"cardData\", JSON.stringify(newData));\r\n+        }\r\n+    };\r\n+    const indexOfLastPost = page * cardPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+    const handleDelete = async (id) => {\r\n+        try {\r\n+            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n+                method: \"DELETE\"\r\n+            });\r\n+            const confirmed = window.confirm(\"Are you sure you want to delete this??\")\r\n+            if (confirmed) {\r\n+                const updatedData = data.filter(post => post.id !== id);\r\n+                const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n+                if (page > lastPage) setPage(lastPage);\r\n+                localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n+                setData(updatedData);\r\n+            }\r\n+\r\n+        } catch (err) {\r\n+            console.error(\"Delete failed:\", err);\r\n+        }\r\n+    };\r\n+\r\n+    const truncate = (text, maxChars) => {\r\n+        if (text.length <= maxChars) return text;\r\n+        return text.slice(0, maxChars) + \"...\";\r\n+    };\r\n+    // const handleDelete = (id) => {\r\n+    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+    //         method: \"DELETE\"\r\n+    //     })\r\n+    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n+    // };\r\n+\r\n+    return (\r\n+        <div className='container'>\r\n+            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>Add Post</button>\r\n+            <PostModal  />\r\n+\r\n+            <div className='row'>\r\n+                {currentPosts.map((post, i) => (\r\n+                    <div key={post.id} className='col-md-4 col-sm-12'>\r\n+                        <div className='card mb-4' >\r\n+                            <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n+                            <hr></hr>\r\n+                            <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n+                            <div className='d-flex flex-row'>\r\n+                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n+                                <button onClick={() => {\r\n+                                    setForm({ title: post.title, body: post.body });\r\n+                                    setEditId(post.id);\r\n+                                    setShowForm(true);\r\n+                                }} className='btn btn-warning'>Edit</button>\r\n+                            </div>\r\n+                        </div>\r\n+                    </div>\r\n+                ))}\r\n+            </div>\r\n+            <div>\r\n+                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}\r\n+                    style={{\r\n+                        padding: '5px',\r\n+                        borderRadius: \"8px\",\r\n+                        border: \"none\",\r\n+                    }}\r\n+                >Prev</button>\r\n+                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n+                    <button\r\n+                        key={idx}\r\n+                        onClick={() => setPage(idx + 1)}\r\n+                        style={{\r\n+                            margin: \"5px\",\r\n+                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n+                            color: page === idx + 1 ? \"white\" : \"black\",\r\n+                            border: \"1px solid black\",\r\n+                            borderRadius: \"8px\",\r\n+                            padding: \"10px\",\r\n+                        }}>\r\n+                        {idx + 1}\r\n+                    </button>\r\n+                ))}\r\n+                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}\r\n+                    style={{\r\n+                        padding: '5px',\r\n+                        borderRadius: \"8px\",\r\n+                        border: \"none\"\r\n+                    }}>Next</button>\r\n+            </div>\r\n+            {showModal && (\r\n+                <div\r\n+                    className=\"modal fade show\"\r\n+                    style={{ display: \"block\", backgroundColor: \"rgba(0,0,0,0.5)\" }}\r\n+                    onClick={() => setShowModal(null)}\r\n+                >\r\n+                    <div className=\"modal-dialog\" onClick={e => e.stopPropagation()}>\r\n+                        <div className=\"modal-content\">\r\n+                            <div className=\"modal-header\">\r\n+                                <h5 className=\"modal-title\">{showModal.title}</h5>\r\n+                                <button type=\"button\" className=\"btn-close\" onClick={() => setShowModal(null)} ></button>\r\n+                            </div>\r\n+                            <div className=\"modal-body\">\r\n+                                <p>{showModal.body}</p>\r\n+                            </div>\r\n+                            <div className=\"modal-footer\">\r\n+                                <button className=\"btn btn-secondary\" onClick={() => setShowModal(null)}>Close</button>\r\n+                            </div>\r\n+                        </div>\r\n+                    </div>\r\n+                </div>\r\n+            )}\r\n+\r\n+        </div>\r\n+    )\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+}\r\n"
                },
                {
                    "date": 1757326597861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n \r\n     return (\r\n         <div className='container'>\r\n             <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>Add Post</button>\r\n-            <PostModal  />\r\n+            <PostModal />\r\n \r\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n@@ -192,199 +192,4 @@\n \r\n \r\n \r\n }\r\n-import React, { useState, useEffect } from 'react';\r\n-import '../App.css';\r\n-import PostModal from './addPost';\r\n-\r\n-export default function Crud() {\r\n-    const [showForm, setShowForm] = useState(false);\r\n-    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n-    const [editId, setEditId] = useState(null);\r\n-    const [data, setData] = useState([]);\r\n-    const cardPerPage = 10;\r\n-    const [page, setPage] = useState(1);\r\n-    const [showModal, setShowModal] = useState(null);\r\n-\r\n-    useEffect(() => {\r\n-        const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n-        if (Array.isArray(lcData) && lcData.length > 0) {\r\n-            setData(lcData);\r\n-        }\r\n-        else {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n-                .then(res => res.json())\r\n-                .then(data => {\r\n-                    setData(data);\r\n-                    localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n-                }\r\n-                )\r\n-        }\r\n-    }, []);\r\n-\r\n-    const handleChange = (event) => {\r\n-        setForm({ ...form, [event.target.name]: event.target.value })\r\n-    };\r\n-    const handleSubmit = (e) => {\r\n-        e.preventDefault();\r\n-\r\n-\r\n-        if (editId) {\r\n-            fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n-                method: \"PUT\",\r\n-                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify({ ...form, id: editId })\r\n-            })\r\n-                // .then(res => {\r\n-                //     console.log(\"PUT called:\", res.status);\r\n-                //     return res.json();\r\n-                // })\r\n-                .then(res => res.json())\r\n-                .then(updated => {\r\n-                    const newData = data.map(data => (data.id === editId ? updated : data));\r\n-                    setData(newData)\r\n-                    setForm({ title: \"\", body: \"\" });\r\n-                    setEditId(null);\r\n-                    localStorage.setItem(\"cardData\", JSON.stringify(newData))\r\n-                })\r\n-        }\r\n-        else {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-                method: \"POST\",\r\n-                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify(form),\r\n-            })\r\n-                .then(res => res.json())\r\n-            // .then(res => {\r\n-            //     console.log(\"POST called:\", res.status)\r\n-            //     return res.json();\r\n-            // })\r\n-            const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n-            const newPost = { id: newId, title: form.title, body: form.body };\r\n-            const newData = [...data, newPost];\r\n-            setData(newData);\r\n-            const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n-            setPage(lastPage);\r\n-            setForm({ title: \"\", body: \"\" });\r\n-            localStorage.setItem(\"cardData\", JSON.stringify(newData));\r\n-        }\r\n-    };\r\n-    const indexOfLastPost = page * cardPerPage;\r\n-    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-    const handleDelete = async (id) => {\r\n-        try {\r\n-            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n-                method: \"DELETE\"\r\n-            });\r\n-            const confirmed = window.confirm(\"Are you sure you want to delete this??\")\r\n-            if (confirmed) {\r\n-                const updatedData = data.filter(post => post.id !== id);\r\n-                const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n-                if (page > lastPage) setPage(lastPage);\r\n-                localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n-                setData(updatedData);\r\n-            }\r\n-\r\n-        } catch (err) {\r\n-            console.error(\"Delete failed:\", err);\r\n-        }\r\n-    };\r\n-\r\n-    const truncate = (text, maxChars) => {\r\n-        if (text.length <= maxChars) return text;\r\n-        return text.slice(0, maxChars) + \"...\";\r\n-    };\r\n-    // const handleDelete = (id) => {\r\n-    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-    //         method: \"DELETE\"\r\n-    //     })\r\n-    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n-    // };\r\n-\r\n-    return (\r\n-        <div className='container'>\r\n-            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>Add Post</button>\r\n-            <PostModal form={form} setForm={setForm} handleSubmit={handleSubmit} />\r\n-\r\n-            <div className='row'>\r\n-                {currentPosts.map((post, i) => (\r\n-                    <div key={post.id} className='col-md-4 col-sm-12'>\r\n-                        <div className='card mb-4' >\r\n-                            <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n-                            <hr></hr>\r\n-                            <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n-                            <div className='d-flex flex-row'>\r\n-                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n-                                <button onClick={() => {\r\n-                                    setForm({ title: post.title, body: post.body });\r\n-                                    setEditId(post.id);\r\n-                                    setShowForm(true);\r\n-                                }} className='btn btn-warning'>Edit</button>\r\n-                            </div>\r\n-                        </div>\r\n-                    </div>\r\n-                ))}\r\n-            </div>\r\n-            <div>\r\n-                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}\r\n-                    style={{\r\n-                        padding: '5px',\r\n-                        borderRadius: \"8px\",\r\n-                        border: \"none\",\r\n-                    }}\r\n-                >Prev</button>\r\n-                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n-                    <button\r\n-                        key={idx}\r\n-                        onClick={() => setPage(idx + 1)}\r\n-                        style={{\r\n-                            margin: \"5px\",\r\n-                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n-                            color: page === idx + 1 ? \"white\" : \"black\",\r\n-                            border: \"1px solid black\",\r\n-                            borderRadius: \"8px\",\r\n-                            padding: \"10px\",\r\n-                        }}>\r\n-                        {idx + 1}\r\n-                    </button>\r\n-                ))}\r\n-                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}\r\n-                    style={{\r\n-                        padding: '5px',\r\n-                        borderRadius: \"8px\",\r\n-                        border: \"none\"\r\n-                    }}>Next</button>\r\n-            </div>\r\n-            {showModal && (\r\n-                <div\r\n-                    className=\"modal fade show\"\r\n-                    style={{ display: \"block\", backgroundColor: \"rgba(0,0,0,0.5)\" }}\r\n-                    onClick={() => setShowModal(null)}\r\n-                >\r\n-                    <div className=\"modal-dialog\" onClick={e => e.stopPropagation()}>\r\n-                        <div className=\"modal-content\">\r\n-                            <div className=\"modal-header\">\r\n-                                <h5 className=\"modal-title\">{showModal.title}</h5>\r\n-                                <button type=\"button\" className=\"btn-close\" onClick={() => setShowModal(null)} ></button>\r\n-                            </div>\r\n-                            <div className=\"modal-body\">\r\n-                                <p>{showModal.body}</p>\r\n-                            </div>\r\n-                            <div className=\"modal-footer\">\r\n-                                <button className=\"btn btn-secondary\" onClick={() => setShowModal(null)}>Close</button>\r\n-                            </div>\r\n-                        </div>\r\n-                    </div>\r\n-                </div>\r\n-            )}\r\n-\r\n-        </div>\r\n-    )\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-}\r\n"
                },
                {
                    "date": 1757326669941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState, useEffect } from 'react';\r\n import '../App.css';\r\n-import PostModal from './addPost';\r\n+import PostModal from './Addpost';\r\n \r\n export default function Crud() {\r\n     const [showForm, setShowForm] = useState(false);\r\n     const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n"
                },
                {
                    "date": 1757327240217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n \r\n     return (\r\n         <div className='container'>\r\n             <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>Add Post</button>\r\n-            <PostModal />\r\n+            <PostModal onAdd={handleSubmit}/>\r\n \r\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n"
                },
                {
                    "date": 1757327779499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,8 @@\n     };\r\n     const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n \r\n-\r\n         if (editId) {\r\n             fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n                 method: \"PUT\",\r\n                 headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n"
                },
                {
                    "date": 1757327883915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,28 +52,32 @@\n                     localStorage.setItem(\"cardData\", JSON.stringify(newData))\r\n                 })\r\n         }\r\n         else {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-                method: \"POST\",\r\n-                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify(form),\r\n-            })\r\n-                .then(res => res.json())\r\n-            // .then(res => {\r\n-            //     console.log(\"POST called:\", res.status)\r\n-            //     return res.json();\r\n-            // })\r\n-            const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n-            const newPost = { id: newId, title: form.title, body: form.body };\r\n-            const newData = [...data, newPost];\r\n-            setData(newData);\r\n-            const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n-            setPage(lastPage);\r\n-            setForm({ title: \"\", body: \"\" });\r\n-            localStorage.setItem(\"cardData\", JSON.stringify(newData));\r\n-        }\r\n-    };\r\n+\r\n+        };\r\n+\r\n+        const addCard = (newcard=>{\r\n+        fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+            method: \"POST\",\r\n+            headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+            body: JSON.stringify(form),\r\n+        })\r\n+            .then(res => res.json())\r\n+        // .then(res => {\r\n+        //     console.log(\"POST called:\", res.status)\r\n+        //     return res.json();\r\n+        // })\r\n+        const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n+        const newPost = { id: newId, title: form.title, body: form.body };\r\n+        const newData = [...data, newPost];\r\n+        setData(newData);\r\n+        const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n+        setPage(lastPage);\r\n+        setForm({ title: \"\", body: \"\" });\r\n+        localStorage.setItem(\"cardData\", JSON.stringify(newData));\r\n+    }\r\n+    )\r\n     const indexOfLastPost = page * cardPerPage;\r\n     const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n     const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n     const handleDelete = async (id) => {\r\n@@ -108,9 +112,9 @@\n \r\n     return (\r\n         <div className='container'>\r\n             <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>Add Post</button>\r\n-            <PostModal onAdd={handleSubmit}/>\r\n+            <PostModal onAdd={handleSubmit} />\r\n \r\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n"
                },
                {
                    "date": 1757327892924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,144 +55,144 @@\n         else {\r\n \r\n         };\r\n \r\n-        const addCard = (newcard=>{\r\n-        fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-            method: \"POST\",\r\n-            headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-            body: JSON.stringify(form),\r\n-        })\r\n-            .then(res => res.json())\r\n-        // .then(res => {\r\n-        //     console.log(\"POST called:\", res.status)\r\n-        //     return res.json();\r\n-        // })\r\n-        const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n-        const newPost = { id: newId, title: form.title, body: form.body };\r\n-        const newData = [...data, newPost];\r\n-        setData(newData);\r\n-        const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n-        setPage(lastPage);\r\n-        setForm({ title: \"\", body: \"\" });\r\n-        localStorage.setItem(\"cardData\", JSON.stringify(newData));\r\n-    }\r\n-    )\r\n-    const indexOfLastPost = page * cardPerPage;\r\n-    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-    const handleDelete = async (id) => {\r\n-        try {\r\n-            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n-                method: \"DELETE\"\r\n-            });\r\n-            const confirmed = window.confirm(\"Are you sure you want to delete this??\")\r\n-            if (confirmed) {\r\n-                const updatedData = data.filter(post => post.id !== id);\r\n-                const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n-                if (page > lastPage) setPage(lastPage);\r\n-                localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n-                setData(updatedData);\r\n+        const addCard = (newcard => {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+                method: \"POST\",\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify(form),\r\n+            })\r\n+                .then(res => res.json())\r\n+            // .then(res => {\r\n+            //     console.log(\"POST called:\", res.status)\r\n+            //     return res.json();\r\n+            // })\r\n+            const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n+            const newPost = { id: newId, title: form.title, body: form.body };\r\n+            const newData = [...data, newPost];\r\n+            setData(newData);\r\n+            const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n+            setPage(lastPage);\r\n+            setForm({ title: \"\", body: \"\" });\r\n+            localStorage.setItem(\"cardData\", JSON.stringify(newData));\r\n+        }\r\n+        )\r\n+        const indexOfLastPost = page * cardPerPage;\r\n+        const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+        const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+        const handleDelete = async (id) => {\r\n+            try {\r\n+                await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n+                    method: \"DELETE\"\r\n+                });\r\n+                const confirmed = window.confirm(\"Are you sure you want to delete this??\")\r\n+                if (confirmed) {\r\n+                    const updatedData = data.filter(post => post.id !== id);\r\n+                    const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n+                    if (page > lastPage) setPage(lastPage);\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n+                    setData(updatedData);\r\n+                }\r\n+\r\n+            } catch (err) {\r\n+                console.error(\"Delete failed:\", err);\r\n             }\r\n+        };\r\n \r\n-        } catch (err) {\r\n-            console.error(\"Delete failed:\", err);\r\n-        }\r\n-    };\r\n+        const truncate = (text, maxChars) => {\r\n+            if (text.length <= maxChars) return text;\r\n+            return text.slice(0, maxChars) + \"...\";\r\n+        };\r\n+        // const handleDelete = (id) => {\r\n+        //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+        //         method: \"DELETE\"\r\n+        //     })\r\n+        //         .then(() => setData(data.filter(data => data.id !== id)));\r\n+        // };\r\n \r\n-    const truncate = (text, maxChars) => {\r\n-        if (text.length <= maxChars) return text;\r\n-        return text.slice(0, maxChars) + \"...\";\r\n-    };\r\n-    // const handleDelete = (id) => {\r\n-    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-    //         method: \"DELETE\"\r\n-    //     })\r\n-    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n-    // };\r\n+        return (\r\n+            <div className='container'>\r\n+                <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>Add Post</button>\r\n+                <PostModal onAdd={handleSubmit} />\r\n \r\n-    return (\r\n-        <div className='container'>\r\n-            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>Add Post</button>\r\n-            <PostModal onAdd={handleSubmit} />\r\n-\r\n-            <div className='row'>\r\n-                {currentPosts.map((post, i) => (\r\n-                    <div key={post.id} className='col-md-4 col-sm-12'>\r\n-                        <div className='card mb-4' >\r\n-                            <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n-                            <hr></hr>\r\n-                            <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n-                            <div className='d-flex flex-row'>\r\n-                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n-                                <button onClick={() => {\r\n-                                    setForm({ title: post.title, body: post.body });\r\n-                                    setEditId(post.id);\r\n-                                    setShowForm(true);\r\n-                                }} className='btn btn-warning'>Edit</button>\r\n+                <div className='row'>\r\n+                    {currentPosts.map((post, i) => (\r\n+                        <div key={post.id} className='col-md-4 col-sm-12'>\r\n+                            <div className='card mb-4' >\r\n+                                <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n+                                <hr></hr>\r\n+                                <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n+                                <div className='d-flex flex-row'>\r\n+                                    <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n+                                    <button onClick={() => {\r\n+                                        setForm({ title: post.title, body: post.body });\r\n+                                        setEditId(post.id);\r\n+                                        setShowForm(true);\r\n+                                    }} className='btn btn-warning'>Edit</button>\r\n+                                </div>\r\n                             </div>\r\n                         </div>\r\n-                    </div>\r\n-                ))}\r\n-            </div>\r\n-            <div>\r\n-                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}\r\n-                    style={{\r\n-                        padding: '5px',\r\n-                        borderRadius: \"8px\",\r\n-                        border: \"none\",\r\n-                    }}\r\n-                >Prev</button>\r\n-                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n-                    <button\r\n-                        key={idx}\r\n-                        onClick={() => setPage(idx + 1)}\r\n+                    ))}\r\n+                </div>\r\n+                <div>\r\n+                    <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}\r\n                         style={{\r\n-                            margin: \"5px\",\r\n-                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n-                            color: page === idx + 1 ? \"white\" : \"black\",\r\n-                            border: \"1px solid black\",\r\n+                            padding: '5px',\r\n                             borderRadius: \"8px\",\r\n-                            padding: \"10px\",\r\n-                        }}>\r\n-                        {idx + 1}\r\n-                    </button>\r\n-                ))}\r\n-                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}\r\n-                    style={{\r\n-                        padding: '5px',\r\n-                        borderRadius: \"8px\",\r\n-                        border: \"none\"\r\n-                    }}>Next</button>\r\n-            </div>\r\n-            {showModal && (\r\n-                <div\r\n-                    className=\"modal fade show\"\r\n-                    style={{ display: \"block\", backgroundColor: \"rgba(0,0,0,0.5)\" }}\r\n-                    onClick={() => setShowModal(null)}\r\n-                >\r\n-                    <div className=\"modal-dialog\" onClick={e => e.stopPropagation()}>\r\n-                        <div className=\"modal-content\">\r\n-                            <div className=\"modal-header\">\r\n-                                <h5 className=\"modal-title\">{showModal.title}</h5>\r\n-                                <button type=\"button\" className=\"btn-close\" onClick={() => setShowModal(null)} ></button>\r\n+                            border: \"none\",\r\n+                        }}\r\n+                    >Prev</button>\r\n+                    {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n+                        <button\r\n+                            key={idx}\r\n+                            onClick={() => setPage(idx + 1)}\r\n+                            style={{\r\n+                                margin: \"5px\",\r\n+                                background: page === idx + 1 ? \"blue\" : \"white\",\r\n+                                color: page === idx + 1 ? \"white\" : \"black\",\r\n+                                border: \"1px solid black\",\r\n+                                borderRadius: \"8px\",\r\n+                                padding: \"10px\",\r\n+                            }}>\r\n+                            {idx + 1}\r\n+                        </button>\r\n+                    ))}\r\n+                    <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}\r\n+                        style={{\r\n+                            padding: '5px',\r\n+                            borderRadius: \"8px\",\r\n+                            border: \"none\"\r\n+                        }}>Next</button>\r\n+                </div>\r\n+                {showModal && (\r\n+                    <div\r\n+                        className=\"modal fade show\"\r\n+                        style={{ display: \"block\", backgroundColor: \"rgba(0,0,0,0.5)\" }}\r\n+                        onClick={() => setShowModal(null)}\r\n+                    >\r\n+                        <div className=\"modal-dialog\" onClick={e => e.stopPropagation()}>\r\n+                            <div className=\"modal-content\">\r\n+                                <div className=\"modal-header\">\r\n+                                    <h5 className=\"modal-title\">{showModal.title}</h5>\r\n+                                    <button type=\"button\" className=\"btn-close\" onClick={() => setShowModal(null)} ></button>\r\n+                                </div>\r\n+                                <div className=\"modal-body\">\r\n+                                    <p>{showModal.body}</p>\r\n+                                </div>\r\n+                                <div className=\"modal-footer\">\r\n+                                    <button className=\"btn btn-secondary\" onClick={() => setShowModal(null)}>Close</button>\r\n+                                </div>\r\n                             </div>\r\n-                            <div className=\"modal-body\">\r\n-                                <p>{showModal.body}</p>\r\n-                            </div>\r\n-                            <div className=\"modal-footer\">\r\n-                                <button className=\"btn btn-secondary\" onClick={() => setShowModal(null)}>Close</button>\r\n-                            </div>\r\n                         </div>\r\n                     </div>\r\n-                </div>\r\n-            )}\r\n+                )}\r\n \r\n-        </div>\r\n-    )\r\n+            </div>\r\n+        )\r\n \r\n \r\n \r\n \r\n \r\n \r\n-}\r\n+    }\r\n"
                },
                {
                    "date": 1757327899849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n             setPage(lastPage);\r\n             setForm({ title: \"\", body: \"\" });\r\n             localStorage.setItem(\"cardData\", JSON.stringify(newData));\r\n         }\r\n-        )\r\n+    )\r\n         const indexOfLastPost = page * cardPerPage;\r\n         const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n         const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n         const handleDelete = async (id) => {\r\n"
                },
                {
                    "date": 1757327906589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,10 +74,9 @@\n             const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n             setPage(lastPage);\r\n             setForm({ title: \"\", body: \"\" });\r\n             localStorage.setItem(\"cardData\", JSON.stringify(newData));\r\n-        }\r\n-    )\r\n+        });\r\n         const indexOfLastPost = page * cardPerPage;\r\n         const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n         const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n         const handleDelete = async (id) => {\r\n"
                },
                {
                    "date": 1757328055174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -188,10 +188,6 @@\n \r\n             </div>\r\n         )\r\n \r\n-\r\n-\r\n-\r\n-\r\n-\r\n-    }\r\n+    })\r\n+})\r\n"
                },
                {
                    "date": 1757328086464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,8 +54,9 @@\n         }\r\n         else {\r\n \r\n         };\r\n+    }\r\n \r\n         const addCard = (newcard => {\r\n             fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n                 method: \"POST\",\r\n"
                },
                {
                    "date": 1757328092786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -189,6 +189,5 @@\n \r\n             </div>\r\n         )\r\n \r\n-    })\r\n-})\r\n+    }\r\n"
                },
                {
                    "date": 1757328112949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,9 +112,9 @@\n \r\n         return (\r\n             <div className='container'>\r\n                 <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>Add Post</button>\r\n-                <PostModal onAdd={handleSubmit} />\r\n+                <PostModal onAdd={addCard} />\r\n \r\n                 <div className='row'>\r\n                     {currentPosts.map((post, i) => (\r\n                         <div key={post.id} className='col-md-4 col-sm-12'>\r\n"
                },
                {
                    "date": 1757328351593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,12 +63,8 @@\n                 headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n                 body: JSON.stringify(form),\r\n             })\r\n                 .then(res => res.json())\r\n-            // .then(res => {\r\n-            //     console.log(\"POST called:\", res.status)\r\n-            //     return res.json();\r\n-            // })\r\n             const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n             const newPost = { id: newId, title: form.title, body: form.body };\r\n             const newData = [...data, newPost];\r\n             setData(newData);\r\n"
                },
                {
                    "date": 1757328371707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,134 +56,144 @@\n \r\n         };\r\n     }\r\n \r\n-        const addCard = (newcard => {\r\n-            fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-                method: \"POST\",\r\n-                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n-                body: JSON.stringify(form),\r\n-            })\r\n-                .then(res => res.json())\r\n-            const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n-            const newPost = { id: newId, title: form.title, body: form.body };\r\n-            const newData = [...data, newPost];\r\n-            setData(newData);\r\n-            const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n-            setPage(lastPage);\r\n-            setForm({ title: \"\", body: \"\" });\r\n-            localStorage.setItem(\"cardData\", JSON.stringify(newData));\r\n-        });\r\n-        const indexOfLastPost = page * cardPerPage;\r\n-        const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n-        const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n-        const handleDelete = async (id) => {\r\n-            try {\r\n-                await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n-                    method: \"DELETE\"\r\n-                });\r\n-                const confirmed = window.confirm(\"Are you sure you want to delete this??\")\r\n-                if (confirmed) {\r\n-                    const updatedData = data.filter(post => post.id !== id);\r\n-                    const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n-                    if (page > lastPage) setPage(lastPage);\r\n-                    localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n-                    setData(updatedData);\r\n-                }\r\n+    const addPost = (newPost) => {\r\n+        const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n+        const postWithId = { id: newId, ...newPost };\r\n+        const newData = [...data, postWithId];\r\n+        setData(newData);\r\n+        localStorage.setItem(\"cardData\", JSON.stringify(newData));\r\n+        const lastPage = Math.ceil(newData.length / cardPerPage);\r\n+        setPage(lastPage);\r\n+    };\r\n \r\n-            } catch (err) {\r\n-                console.error(\"Delete failed:\", err);\r\n+    // const addCard = (newcard => {\r\n+    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+    //         method: \"POST\",\r\n+    //         headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+    //         body: JSON.stringify(form),\r\n+    //     })\r\n+    //         .then(res => res.json())\r\n+    //     const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n+    //     const newPost = { id: newId, title: form.title, body: form.body };\r\n+    //     const newData = [...data, newPost];\r\n+    //     setData(newData);\r\n+    //     const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n+    //     setPage(lastPage);\r\n+    //     setForm({ title: \"\", body: \"\" });\r\n+    //     localStorage.setItem(\"cardData\", JSON.stringify(newData));\r\n+    // });\r\n+    const indexOfLastPost = page * cardPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+    const handleDelete = async (id) => {\r\n+        try {\r\n+            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n+                method: \"DELETE\"\r\n+            });\r\n+            const confirmed = window.confirm(\"Are you sure you want to delete this??\")\r\n+            if (confirmed) {\r\n+                const updatedData = data.filter(post => post.id !== id);\r\n+                const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n+                if (page > lastPage) setPage(lastPage);\r\n+                localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n+                setData(updatedData);\r\n             }\r\n-        };\r\n \r\n-        const truncate = (text, maxChars) => {\r\n-            if (text.length <= maxChars) return text;\r\n-            return text.slice(0, maxChars) + \"...\";\r\n-        };\r\n-        // const handleDelete = (id) => {\r\n-        //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n-        //         method: \"DELETE\"\r\n-        //     })\r\n-        //         .then(() => setData(data.filter(data => data.id !== id)));\r\n-        // };\r\n+        } catch (err) {\r\n+            console.error(\"Delete failed:\", err);\r\n+        }\r\n+    };\r\n \r\n-        return (\r\n-            <div className='container'>\r\n-                <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>Add Post</button>\r\n-                <PostModal onAdd={addCard} />\r\n+    const truncate = (text, maxChars) => {\r\n+        if (text.length <= maxChars) return text;\r\n+        return text.slice(0, maxChars) + \"...\";\r\n+    };\r\n+    // const handleDelete = (id) => {\r\n+    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+    //         method: \"DELETE\"\r\n+    //     })\r\n+    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n+    // };\r\n \r\n-                <div className='row'>\r\n-                    {currentPosts.map((post, i) => (\r\n-                        <div key={post.id} className='col-md-4 col-sm-12'>\r\n-                            <div className='card mb-4' >\r\n-                                <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n-                                <hr></hr>\r\n-                                <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n-                                <div className='d-flex flex-row'>\r\n-                                    <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n-                                    <button onClick={() => {\r\n-                                        setForm({ title: post.title, body: post.body });\r\n-                                        setEditId(post.id);\r\n-                                        setShowForm(true);\r\n-                                    }} className='btn btn-warning'>Edit</button>\r\n-                                </div>\r\n+    return (\r\n+        <div className='container'>\r\n+            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>Add Post</button>\r\n+            <PostModal onAdd={addCard} />\r\n+\r\n+            <div className='row'>\r\n+                {currentPosts.map((post, i) => (\r\n+                    <div key={post.id} className='col-md-4 col-sm-12'>\r\n+                        <div className='card mb-4' >\r\n+                            <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n+                            <hr></hr>\r\n+                            <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n+                            <div className='d-flex flex-row'>\r\n+                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n+                                <button onClick={() => {\r\n+                                    setForm({ title: post.title, body: post.body });\r\n+                                    setEditId(post.id);\r\n+                                    setShowForm(true);\r\n+                                }} className='btn btn-warning'>Edit</button>\r\n                             </div>\r\n                         </div>\r\n-                    ))}\r\n-                </div>\r\n-                <div>\r\n-                    <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}\r\n+                    </div>\r\n+                ))}\r\n+            </div>\r\n+            <div>\r\n+                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}\r\n+                    style={{\r\n+                        padding: '5px',\r\n+                        borderRadius: \"8px\",\r\n+                        border: \"none\",\r\n+                    }}\r\n+                >Prev</button>\r\n+                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n+                    <button\r\n+                        key={idx}\r\n+                        onClick={() => setPage(idx + 1)}\r\n                         style={{\r\n-                            padding: '5px',\r\n+                            margin: \"5px\",\r\n+                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n+                            color: page === idx + 1 ? \"white\" : \"black\",\r\n+                            border: \"1px solid black\",\r\n                             borderRadius: \"8px\",\r\n-                            border: \"none\",\r\n-                        }}\r\n-                    >Prev</button>\r\n-                    {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n-                        <button\r\n-                            key={idx}\r\n-                            onClick={() => setPage(idx + 1)}\r\n-                            style={{\r\n-                                margin: \"5px\",\r\n-                                background: page === idx + 1 ? \"blue\" : \"white\",\r\n-                                color: page === idx + 1 ? \"white\" : \"black\",\r\n-                                border: \"1px solid black\",\r\n-                                borderRadius: \"8px\",\r\n-                                padding: \"10px\",\r\n-                            }}>\r\n-                            {idx + 1}\r\n-                        </button>\r\n-                    ))}\r\n-                    <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}\r\n-                        style={{\r\n-                            padding: '5px',\r\n-                            borderRadius: \"8px\",\r\n-                            border: \"none\"\r\n-                        }}>Next</button>\r\n-                </div>\r\n-                {showModal && (\r\n-                    <div\r\n-                        className=\"modal fade show\"\r\n-                        style={{ display: \"block\", backgroundColor: \"rgba(0,0,0,0.5)\" }}\r\n-                        onClick={() => setShowModal(null)}\r\n-                    >\r\n-                        <div className=\"modal-dialog\" onClick={e => e.stopPropagation()}>\r\n-                            <div className=\"modal-content\">\r\n-                                <div className=\"modal-header\">\r\n-                                    <h5 className=\"modal-title\">{showModal.title}</h5>\r\n-                                    <button type=\"button\" className=\"btn-close\" onClick={() => setShowModal(null)} ></button>\r\n-                                </div>\r\n-                                <div className=\"modal-body\">\r\n-                                    <p>{showModal.body}</p>\r\n-                                </div>\r\n-                                <div className=\"modal-footer\">\r\n-                                    <button className=\"btn btn-secondary\" onClick={() => setShowModal(null)}>Close</button>\r\n-                                </div>\r\n+                            padding: \"10px\",\r\n+                        }}>\r\n+                        {idx + 1}\r\n+                    </button>\r\n+                ))}\r\n+                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}\r\n+                    style={{\r\n+                        padding: '5px',\r\n+                        borderRadius: \"8px\",\r\n+                        border: \"none\"\r\n+                    }}>Next</button>\r\n+            </div>\r\n+            {showModal && (\r\n+                <div\r\n+                    className=\"modal fade show\"\r\n+                    style={{ display: \"block\", backgroundColor: \"rgba(0,0,0,0.5)\" }}\r\n+                    onClick={() => setShowModal(null)}\r\n+                >\r\n+                    <div className=\"modal-dialog\" onClick={e => e.stopPropagation()}>\r\n+                        <div className=\"modal-content\">\r\n+                            <div className=\"modal-header\">\r\n+                                <h5 className=\"modal-title\">{showModal.title}</h5>\r\n+                                <button type=\"button\" className=\"btn-close\" onClick={() => setShowModal(null)} ></button>\r\n                             </div>\r\n+                            <div className=\"modal-body\">\r\n+                                <p>{showModal.body}</p>\r\n+                            </div>\r\n+                            <div className=\"modal-footer\">\r\n+                                <button className=\"btn btn-secondary\" onClick={() => setShowModal(null)}>Close</button>\r\n+                            </div>\r\n                         </div>\r\n                     </div>\r\n-                )}\r\n+                </div>\r\n+            )}\r\n \r\n-            </div>\r\n-        )\r\n+        </div>\r\n+    )\r\n \r\n-    }\r\n+}\r\n"
                },
                {
                    "date": 1757328379909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,9 +118,9 @@\n \r\n     return (\r\n         <div className='container'>\r\n             <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>Add Post</button>\r\n-            <PostModal onAdd={addCard} />\r\n+            <PostModal onAdd={addPost} />\r\n \r\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n                     <div key={post.id} className='col-md-4 col-sm-12'>\r\n"
                },
                {
                    "date": 1757328856326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,8 @@\n     // };\r\n \r\n     return (\r\n         <div className='container'>\r\n-            <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => setShowForm(!showForm)}>Add Post</button>\r\n             <PostModal onAdd={addPost} />\r\n \r\n             <div className='row'>\r\n                 {currentPosts.map((post, i) => (\r\n"
                },
                {
                    "date": 1757329652223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,14 +127,14 @@\n                             <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n                             <div className='d-flex flex-row'>\r\n-                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>Delete</button>\r\n+                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>🗑️</button>\r\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n                                     setEditId(post.id);\r\n                                     setShowForm(true);\r\n-                                }} className='btn btn-warning'>Edit</button>\r\n+                                }} className='btn btn-warning'>✏️</button>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n"
                },
                {
                    "date": 1757329804855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,9 +127,9 @@\n                             <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n                             <div className='d-flex flex-row'>\r\n-                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'>🗑️</button>\r\n+                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"#black\"><path d=\"M280-120q-33 0-56.5-23.5T200-200v-520h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM360-280h80v-360h-80v360Zm160 0h80v-360h-80v360ZM280-720v520-520Z\" /></svg></button>\r\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n                                     setEditId(post.id);\r\n                                     setShowForm(true);\r\n"
                },
                {
                    "date": 1757329837315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,9 +127,9 @@\n                             <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n                             <div className='d-flex flex-row'>\r\n-                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"#black\"><path d=\"M280-120q-33 0-56.5-23.5T200-200v-520h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM360-280h80v-360h-80v360Zm160 0h80v-360h-80v360ZM280-720v520-520Z\" /></svg></button>\r\n+                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"#white\"><path d=\"M280-120q-33 0-56.5-23.5T200-200v-520h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM360-280h80v-360h-80v360Zm160 0h80v-360h-80v360ZM280-720v520-520Z\"/></svg></button>\r\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n                                     setEditId(post.id);\r\n                                     setShowForm(true);\r\n"
                },
                {
                    "date": 1757329844152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,9 +127,9 @@\n                             <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n                             <div className='d-flex flex-row'>\r\n-                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"#white\"><path d=\"M280-120q-33 0-56.5-23.5T200-200v-520h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM360-280h80v-360h-80v360Zm160 0h80v-360h-80v360ZM280-720v520-520Z\"/></svg></button>\r\n+                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'></button>\r\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n                                     setEditId(post.id);\r\n                                     setShowForm(true);\r\n"
                },
                {
                    "date": 1757329931970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,9 +127,9 @@\n                             <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n                             <div className='d-flex flex-row'>\r\n-                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'></button>\r\n+                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><i class=\"bi bi-trash3-fill\"></i></button>\r\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n                                     setEditId(post.id);\r\n                                     setShowForm(true);\r\n"
                },
                {
                    "date": 1757330136517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,9 +127,9 @@\n                             <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n                             <hr></hr>\r\n                             <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n                             <div className='d-flex flex-row'>\r\n-                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><i class=\"bi bi-trash3-fill\"></i></button>\r\n+                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><i className=\"bi bi-trash3-fill\"></i></button>\r\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n                                     setEditId(post.id);\r\n                                     setShowForm(true);\r\n"
                },
                {
                    "date": 1757330270651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,9 +132,9 @@\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n                                     setEditId(post.id);\r\n                                     setShowForm(true);\r\n-                                }} className='btn btn-warning'>✏️</button>\r\n+                                }} className='btn btn-warning'><i className=\"bi bi-pencil-fill\"></i></button>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n"
                },
                {
                    "date": 1757330306815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,9 +132,9 @@\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n                                     setEditId(post.id);\r\n                                     setShowForm(true);\r\n-                                }} className='btn btn-warning'><i className=\"bi bi-pencil-fill\"></i></button>\r\n+                                }} className='btn btn-warning'><i className=\"bi bi-pencil\"></i></button>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n"
                },
                {
                    "date": 1757330333135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,9 +132,9 @@\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n                                     setEditId(post.id);\r\n                                     setShowForm(true);\r\n-                                }} className='btn btn-warning'><i className=\"bi bi-pencil\"></i></button>\r\n+                                }} className='btn btn-warning'><i className=\"bi bi-pencil-fill mt-2\"></i></button>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n"
                },
                {
                    "date": 1757330344176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,9 +132,9 @@\n                                 <button onClick={() => {\r\n                                     setForm({ title: post.title, body: post.body });\r\n                                     setEditId(post.id);\r\n                                     setShowForm(true);\r\n-                                }} className='btn btn-warning'><i className=\"bi bi-pencil-fill mt-5\"></i></button>\r\n+                                }} className='btn btn-warning'><i className=\"bi bi-pencil-fill mt-2\"></i></button>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n"
                },
                {
                    "date": 1757330380752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,198 @@\n+import React, { useState, useEffect } from 'react';\r\n+import '../App.css';\r\n+import PostModal from './Addpost';\r\n+\r\n+export default function Crud() {\r\n+    const [showForm, setShowForm] = useState(false);\r\n+    const [form, setForm] = useState({ title: \"\", body: \"\" });\r\n+    const [editId, setEditId] = useState(null);\r\n+    const [data, setData] = useState([]);\r\n+    const cardPerPage = 10;\r\n+    const [page, setPage] = useState(1);\r\n+    const [showModal, setShowModal] = useState(null);\r\n+\r\n+    useEffect(() => {\r\n+        const lcData = JSON.parse(localStorage.getItem(\"cardData\"));\r\n+        if (Array.isArray(lcData) && lcData.length > 0) {\r\n+            setData(lcData);\r\n+        }\r\n+        else {\r\n+            fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n+                .then(res => res.json())\r\n+                .then(data => {\r\n+                    setData(data);\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(data))\r\n+                }\r\n+                )\r\n+        }\r\n+    }, []);\r\n+\r\n+    const handleChange = (event) => {\r\n+        setForm({ ...form, [event.target.name]: event.target.value })\r\n+    };\r\n+    const handleSubmit = (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        if (editId) {\r\n+            fetch(`https://jsonplaceholder.typicode.com/posts/${editId}`, {\r\n+                method: \"PUT\",\r\n+                headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+                body: JSON.stringify({ ...form, id: editId })\r\n+            })\r\n+                // .then(res => {\r\n+                //     console.log(\"PUT called:\", res.status);\r\n+                //     return res.json();\r\n+                // })\r\n+                .then(res => res.json())\r\n+                .then(updated => {\r\n+                    const newData = data.map(data => (data.id === editId ? updated : data));\r\n+                    setData(newData)\r\n+                    setForm({ title: \"\", body: \"\" });\r\n+                    setEditId(null);\r\n+                    localStorage.setItem(\"cardData\", JSON.stringify(newData))\r\n+                })\r\n+        }\r\n+        else {\r\n+\r\n+        };\r\n+    }\r\n+\r\n+    const addPost = (newPost) => {\r\n+        const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n+        const postWithId = { id: newId, ...newPost };\r\n+        const newData = [...data, postWithId];\r\n+        setData(newData);\r\n+        localStorage.setItem(\"cardData\", JSON.stringify(newData));\r\n+        const lastPage = Math.ceil(newData.length / cardPerPage);\r\n+        setPage(lastPage);\r\n+    };\r\n+\r\n+    // const addCard = (newcard => {\r\n+    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+    //         method: \"POST\",\r\n+    //         headers: { 'Content-type': 'application/json; charset=UTF-8', },\r\n+    //         body: JSON.stringify(form),\r\n+    //     })\r\n+    //         .then(res => res.json())\r\n+    //     const newId = data.length > 0 ? Math.max(...data.map(p => p.id)) + 1 : 1;\r\n+    //     const newPost = { id: newId, title: form.title, body: form.body };\r\n+    //     const newData = [...data, newPost];\r\n+    //     setData(newData);\r\n+    //     const lastPage = Math.ceil((data.length + 1) / cardPerPage);\r\n+    //     setPage(lastPage);\r\n+    //     setForm({ title: \"\", body: \"\" });\r\n+    //     localStorage.setItem(\"cardData\", JSON.stringify(newData));\r\n+    // });\r\n+    const indexOfLastPost = page * cardPerPage;\r\n+    const indexOfFirstPost = indexOfLastPost - cardPerPage;\r\n+    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n+    const handleDelete = async (id) => {\r\n+        try {\r\n+            await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n+                method: \"DELETE\"\r\n+            });\r\n+            const confirmed = window.confirm(\"Are you sure you want to delete this??\")\r\n+            if (confirmed) {\r\n+                const updatedData = data.filter(post => post.id !== id);\r\n+                const lastPage = Math.max(1, Math.ceil(updatedData.length / cardPerPage));\r\n+                if (page > lastPage) setPage(lastPage);\r\n+                localStorage.setItem(\"cardData\", JSON.stringify(updatedData))\r\n+                setData(updatedData);\r\n+            }\r\n+\r\n+        } catch (err) {\r\n+            console.error(\"Delete failed:\", err);\r\n+        }\r\n+    };\r\n+\r\n+    const truncate = (text, maxChars) => {\r\n+        if (text.length <= maxChars) return text;\r\n+        return text.slice(0, maxChars) + \"...\";\r\n+    };\r\n+    // const handleDelete = (id) => {\r\n+    //     fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n+    //         method: \"DELETE\"\r\n+    //     })\r\n+    //         .then(() => setData(data.filter(data => data.id !== id)));\r\n+    // };\r\n+\r\n+    return (\r\n+        <div className='container'>\r\n+            <PostModal onAdd={addPost} />\r\n+\r\n+            <div className='row'>\r\n+                {currentPosts.map((post, i) => (\r\n+                    <div key={post.id} className='col-md-4 col-sm-12'>\r\n+                        <div className='card mb-4' >\r\n+                            <div className='card-title' title={post.title} onClick={() => { setShowModal(post) }}><h3>{indexOfFirstPost + i + 1} {truncate(post.title, 16)}</h3></div>\r\n+                            <hr></hr>\r\n+                            <div className='card-body' title={post.body} onClick={() => { setShowModal(post) }}>{truncate(post.body, 100)}</div>\r\n+                            <div className='d-flex flex-row'>\r\n+                                <button onClick={() => handleDelete(post.id)} className='btn btn-danger'><i className=\"bi bi-trash3-fill\"></i></button>\r\n+                                <button onClick={() => {\r\n+                                    setForm({ title: post.title, body: post.body });\r\n+                                    setEditId(post.id);\r\n+                                    setShowForm(true);\r\n+                                }} className='btn btn-warning'><i className=\"bi bi-pencil-fill mt-2\"></i></button>\r\n+                            </div>\r\n+                        </div>\r\n+                    </div>\r\n+                ))}\r\n+            </div>\r\n+            <div>\r\n+                <button onClick={() => { setPage(prev => prev - 1) }} disabled={page === 1}\r\n+                    style={{\r\n+                        padding: '5px',\r\n+                        borderRadius: \"8px\",\r\n+                        border: \"none\",\r\n+                    }}\r\n+                >Prev</button>\r\n+                {Array.from({ length: Math.ceil(data.length / cardPerPage) }, (_, idx) => (\r\n+                    <button\r\n+                        key={idx}\r\n+                        onClick={() => setPage(idx + 1)}\r\n+                        style={{\r\n+                            margin: \"5px\",\r\n+                            background: page === idx + 1 ? \"blue\" : \"white\",\r\n+                            color: page === idx + 1 ? \"white\" : \"black\",\r\n+                            border: \"1px solid black\",\r\n+                            borderRadius: \"8px\",\r\n+                            padding: \"10px\",\r\n+                        }}>\r\n+                        {idx + 1}\r\n+                    </button>\r\n+                ))}\r\n+                <button onClick={() => { setPage(prev => prev + 1) }} disabled={page === Math.ceil(data.length / cardPerPage)}\r\n+                    style={{\r\n+                        padding: '5px',\r\n+                        borderRadius: \"8px\",\r\n+                        border: \"none\"\r\n+                    }}>Next</button>\r\n+            </div>\r\n+            {showModal && (\r\n+                <div\r\n+                    className=\"modal fade show\"\r\n+                    style={{ display: \"block\", backgroundColor: \"rgba(0,0,0,0.5)\" }}\r\n+                    onClick={() => setShowModal(null)}\r\n+                >\r\n+                    <div className=\"modal-dialog\" onClick={e => e.stopPropagation()}>\r\n+                        <div className=\"modal-content\">\r\n+                            <div className=\"modal-header\">\r\n+                                <h5 className=\"modal-title\">{showModal.title}</h5>\r\n+                                <button type=\"button\" className=\"btn-close\" onClick={() => setShowModal(null)} ></button>\r\n+                            </div>\r\n+                            <div className=\"modal-body\">\r\n+                                <p>{showModal.body}</p>\r\n+                            </div>\r\n+                            <div className=\"modal-footer\">\r\n+                                <button className=\"btn btn-secondary\" onClick={() => setShowModal(null)}>Close</button>\r\n+                            </div>\r\n+                        </div>\r\n+                    </div>\r\n+                </div>\r\n+            )}\r\n+\r\n+        </div>\r\n+    )\r\n+\r\n+}\r\n"
                }
            ],
            "date": 1757075677649,
            "name": "Commit-0",
            "content": "import React from 'react'\r\n\r\nexport const crud = () => {\r\n  return (\r\n    <div>crud</div>\r\n  )\r\n}\r\n"
        }
    ]
}